if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var COMPILED = !0, goog = goog || {};
goog.global = this;
goog.isDef = function(a) {
  return void 0 !== a;
};
goog.exportPath_ = function(a, b, c) {
  a = a.split(".");
  c = c || goog.global;
  a[0] in c || !c.execScript || c.execScript("var " + a[0]);
  for (var d;a.length && (d = a.shift());) {
    !a.length && goog.isDef(b) ? c[d] = b : c = c[d] ? c[d] : c[d] = {};
  }
};
goog.define = function(a, b) {
  var c = b;
  COMPILED || (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, a) ? c = goog.global.CLOSURE_UNCOMPILED_DEFINES[a] : goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, a) && (c = goog.global.CLOSURE_DEFINES[a]));
  goog.exportPath_(a, c);
};
goog.DEBUG = !0;
goog.LOCALE = "en";
goog.TRUSTED_SITE = !0;
goog.STRICT_MODE_COMPATIBLE = !1;
goog.DISALLOW_TEST_ONLY_CODE = COMPILED && !goog.DEBUG;
goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = !1;
goog.provide = function(a) {
  if (!COMPILED && goog.isProvided_(a)) {
    throw Error('Namespace "' + a + '" already declared.');
  }
  goog.constructNamespace_(a);
};
goog.constructNamespace_ = function(a, b) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[a];
    for (var c = a;(c = c.substring(0, c.lastIndexOf("."))) && !goog.getObjectByName(c);) {
      goog.implicitNamespaces_[c] = !0;
    }
  }
  goog.exportPath_(a, b);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(a) {
  if (!goog.isString(a) || !a || -1 == a.search(goog.VALID_MODULE_RE_)) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + a + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = a;
  if (!COMPILED) {
    if (goog.isProvided_(a)) {
      throw Error('Namespace "' + a + '" already declared.');
    }
    delete goog.implicitNamespaces_[a];
  }
};
goog.module.get = function(a) {
  return goog.module.getInternal_(a);
};
goog.module.getInternal_ = function(a) {
  if (!COMPILED) {
    return goog.isProvided_(a) ? a in goog.loadedModules_ ? goog.loadedModules_[a] : goog.getObjectByName(a) : null;
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return null != goog.moduleLoaderState_;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = !0;
};
goog.setTestOnly = function(a) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    throw a = a || "", Error("Importing test-only code into non-debug environment" + (a ? ": " + a : "."));
  }
};
goog.forwardDeclare = function(a) {
};
COMPILED || (goog.isProvided_ = function(a) {
  return a in goog.loadedModules_ || !goog.implicitNamespaces_[a] && goog.isDefAndNotNull(goog.getObjectByName(a));
}, goog.implicitNamespaces_ = {"goog.module":!0});
goog.getObjectByName = function(a, b) {
  for (var c = a.split("."), d = b || goog.global, e;e = c.shift();) {
    if (goog.isDefAndNotNull(d[e])) {
      d = d[e];
    } else {
      return null;
    }
  }
  return d;
};
goog.globalize = function(a, b) {
  var c = b || goog.global, d;
  for (d in a) {
    c[d] = a[d];
  }
};
goog.addDependency = function(a, b, c, d) {
  if (goog.DEPENDENCIES_ENABLED) {
    var e;
    a = a.replace(/\\/g, "/");
    for (var f = goog.dependencies_, g = 0;e = b[g];g++) {
      f.nameToPath[e] = a, f.pathIsModule[a] = !!d;
    }
    for (d = 0;b = c[d];d++) {
      a in f.requires || (f.requires[a] = {}), f.requires[a][b] = !0;
    }
  }
};
goog.ENABLE_DEBUG_LOADER = !0;
goog.logToConsole_ = function(a) {
  goog.global.console && goog.global.console.error(a);
};
goog.require = function(a) {
  if (!COMPILED) {
    goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_ && goog.maybeProcessDeferredDep_(a);
    if (goog.isProvided_(a)) {
      return goog.isInModuleLoader_() ? goog.module.getInternal_(a) : null;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var b = goog.getPathFromDeps_(a);
      if (b) {
        return goog.writeScripts_(b), null;
      }
    }
    a = "goog.require could not find: " + a;
    goog.logToConsole_(a);
    throw Error(a);
  }
};
goog.basePath = "";
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(a) {
  a.getInstance = function() {
    if (a.instance_) {
      return a.instance_;
    }
    goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = a);
    return a.instance_ = new a;
  };
};
goog.instantiatedSingletons_ = [];
goog.LOAD_MODULE_USING_EVAL = !0;
goog.SEAL_MODULE_EXPORTS = goog.DEBUG;
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.DEPENDENCIES_ENABLED && (goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}}, goog.inHtmlDocument_ = function() {
  var a = goog.global.document;
  return null != a && "write" in a;
}, goog.findBasePath_ = function() {
  if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
    goog.basePath = goog.global.CLOSURE_BASE_PATH;
  } else {
    if (goog.inHtmlDocument_()) {
      for (var a = goog.global.document.getElementsByTagName("SCRIPT"), b = a.length - 1;0 <= b;--b) {
        var c = a[b].src, d = c.lastIndexOf("?"), d = -1 == d ? c.length : d;
        if ("base.js" == c.substr(d - 7, 7)) {
          goog.basePath = c.substr(0, d - 7);
          break;
        }
      }
    }
  }
}, goog.importScript_ = function(a, b) {
  (goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_)(a, b) && (goog.dependencies_.written[a] = !0);
}, goog.IS_OLD_IE_ = !(goog.global.atob || !goog.global.document || !goog.global.document.all), goog.importModule_ = function(a) {
  goog.importScript_("", 'goog.retrieveAndExecModule_("' + a + '");') && (goog.dependencies_.written[a] = !0);
}, goog.queuedModules_ = [], goog.wrapModule_ = function(a, b) {
  return goog.LOAD_MODULE_USING_EVAL && goog.isDef(goog.global.JSON) ? "goog.loadModule(" + goog.global.JSON.stringify(b + "\n//# sourceURL\x3d" + a + "\n") + ");" : 'goog.loadModule(function(exports) {"use strict";' + b + "\n;return exports});\n//# sourceURL\x3d" + a + "\n";
}, goog.loadQueuedModules_ = function() {
  var a = goog.queuedModules_.length;
  if (0 < a) {
    var b = goog.queuedModules_;
    goog.queuedModules_ = [];
    for (var c = 0;c < a;c++) {
      goog.maybeProcessDeferredPath_(b[c]);
    }
  }
}, goog.maybeProcessDeferredDep_ = function(a) {
  goog.isDeferredModule_(a) && goog.allDepsAreAvailable_(a) && (a = goog.getPathFromDeps_(a), goog.maybeProcessDeferredPath_(goog.basePath + a));
}, goog.isDeferredModule_ = function(a) {
  return (a = goog.getPathFromDeps_(a)) && goog.dependencies_.pathIsModule[a] ? goog.basePath + a in goog.dependencies_.deferred : !1;
}, goog.allDepsAreAvailable_ = function(a) {
  if ((a = goog.getPathFromDeps_(a)) && a in goog.dependencies_.requires) {
    for (var b in goog.dependencies_.requires[a]) {
      if (!goog.isProvided_(b) && !goog.isDeferredModule_(b)) {
        return !1;
      }
    }
  }
  return !0;
}, goog.maybeProcessDeferredPath_ = function(a) {
  if (a in goog.dependencies_.deferred) {
    var b = goog.dependencies_.deferred[a];
    delete goog.dependencies_.deferred[a];
    goog.globalEval(b);
  }
}, goog.loadModuleFromUrl = function(a) {
  goog.retrieveAndExecModule_(a);
}, goog.loadModule = function(a) {
  var b = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:void 0, declareLegacyNamespace:!1};
    var c;
    if (goog.isFunction(a)) {
      c = a.call(goog.global, {});
    } else {
      if (goog.isString(a)) {
        c = goog.loadModuleFromSource_.call(goog.global, a);
      } else {
        throw Error("Invalid module definition");
      }
    }
    var d = goog.moduleLoaderState_.moduleName;
    if (!goog.isString(d) || !d) {
      throw Error('Invalid module name "' + d + '"');
    }
    goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(d, c) : goog.SEAL_MODULE_EXPORTS && Object.seal && Object.seal(c);
    goog.loadedModules_[d] = c;
  } finally {
    goog.moduleLoaderState_ = b;
  }
}, goog.loadModuleFromSource_ = function(a) {
  eval(a);
  return {};
}, goog.writeScriptSrcNode_ = function(a) {
  goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + a + '"\x3e\x3c/script\x3e');
}, goog.appendScriptSrcNode_ = function(a) {
  var b = goog.global.document, c = b.createElement("script");
  c.type = "text/javascript";
  c.src = a;
  c.defer = !1;
  c.async = !1;
  b.head.appendChild(c);
}, goog.writeScriptTag_ = function(a, b) {
  if (goog.inHtmlDocument_()) {
    var c = goog.global.document;
    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && "complete" == c.readyState) {
      if (/\bdeps.js$/.test(a)) {
        return !1;
      }
      throw Error('Cannot write "' + a + '" after document load');
    }
    var d = goog.IS_OLD_IE_;
    void 0 === b ? d ? (d = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ", c.write('\x3cscript type\x3d"text/javascript" src\x3d"' + a + '"' + d + "\x3e\x3c/script\x3e")) : goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING ? goog.appendScriptSrcNode_(a) : goog.writeScriptSrcNode_(a) : c.write('\x3cscript type\x3d"text/javascript"\x3e' + b + "\x3c/script\x3e");
    return !0;
  }
  return !1;
}, goog.lastNonModuleScriptIndex_ = 0, goog.onScriptLoad_ = function(a, b) {
  "complete" == a.readyState && goog.lastNonModuleScriptIndex_ == b && goog.loadQueuedModules_();
  return !0;
}, goog.writeScripts_ = function(a) {
  function b(a) {
    if (!(a in e.written || a in e.visited)) {
      e.visited[a] = !0;
      if (a in e.requires) {
        for (var f in e.requires[a]) {
          if (!goog.isProvided_(f)) {
            if (f in e.nameToPath) {
              b(e.nameToPath[f]);
            } else {
              throw Error("Undefined nameToPath for " + f);
            }
          }
        }
      }
      a in d || (d[a] = !0, c.push(a));
    }
  }
  var c = [], d = {}, e = goog.dependencies_;
  b(a);
  for (a = 0;a < c.length;a++) {
    var f = c[a];
    goog.dependencies_.written[f] = !0;
  }
  var g = goog.moduleLoaderState_;
  goog.moduleLoaderState_ = null;
  for (a = 0;a < c.length;a++) {
    if (f = c[a]) {
      e.pathIsModule[f] ? goog.importModule_(goog.basePath + f) : goog.importScript_(goog.basePath + f);
    } else {
      throw goog.moduleLoaderState_ = g, Error("Undefined script input");
    }
  }
  goog.moduleLoaderState_ = g;
}, goog.getPathFromDeps_ = function(a) {
  return a in goog.dependencies_.nameToPath ? goog.dependencies_.nameToPath[a] : null;
}, goog.findBasePath_(), goog.global.CLOSURE_NO_DEPS || goog.importScript_(goog.basePath + "deps.js"));
goog.normalizePath_ = function(a) {
  a = a.split("/");
  for (var b = 0;b < a.length;) {
    "." == a[b] ? a.splice(b, 1) : b && ".." == a[b] && a[b - 1] && ".." != a[b - 1] ? a.splice(--b, 2) : b++;
  }
  return a.join("/");
};
goog.loadFileSync_ = function(a) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(a);
  }
  var b = new goog.global.XMLHttpRequest;
  b.open("get", a, !1);
  b.send();
  return b.responseText;
};
goog.retrieveAndExecModule_ = function(a) {
  if (!COMPILED) {
    var b = a;
    a = goog.normalizePath_(a);
    var c = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_, d = goog.loadFileSync_(a);
    if (null != d) {
      d = goog.wrapModule_(a, d), goog.IS_OLD_IE_ ? (goog.dependencies_.deferred[b] = d, goog.queuedModules_.push(b)) : c(a, d);
    } else {
      throw Error("load of " + a + "failed");
    }
  }
};
goog.typeOf = function(a) {
  var b = typeof a;
  if ("object" == b) {
    if (a) {
      if (a instanceof Array) {
        return "array";
      }
      if (a instanceof Object) {
        return b;
      }
      var c = Object.prototype.toString.call(a);
      if ("[object Window]" == c) {
        return "object";
      }
      if ("[object Array]" == c || "number" == typeof a.length && "undefined" != typeof a.splice && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("splice")) {
        return "array";
      }
      if ("[object Function]" == c || "undefined" != typeof a.call && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if ("function" == b && "undefined" == typeof a.call) {
      return "object";
    }
  }
  return b;
};
goog.isNull = function(a) {
  return null === a;
};
goog.isDefAndNotNull = function(a) {
  return null != a;
};
goog.isArray = function(a) {
  return "array" == goog.typeOf(a);
};
goog.isArrayLike = function(a) {
  var b = goog.typeOf(a);
  return "array" == b || "object" == b && "number" == typeof a.length;
};
goog.isDateLike = function(a) {
  return goog.isObject(a) && "function" == typeof a.getFullYear;
};
goog.isString = function(a) {
  return "string" == typeof a;
};
goog.isBoolean = function(a) {
  return "boolean" == typeof a;
};
goog.isNumber = function(a) {
  return "number" == typeof a;
};
goog.isFunction = function(a) {
  return "function" == goog.typeOf(a);
};
goog.isObject = function(a) {
  var b = typeof a;
  return "object" == b && null != a || "function" == b;
};
goog.getUid = function(a) {
  return a[goog.UID_PROPERTY_] || (a[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(a) {
  return !!a[goog.UID_PROPERTY_];
};
goog.removeUid = function(a) {
  "removeAttribute" in a && a.removeAttribute(goog.UID_PROPERTY_);
  try {
    delete a[goog.UID_PROPERTY_];
  } catch (b) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (1E9 * Math.random() >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(a) {
  var b = goog.typeOf(a);
  if ("object" == b || "array" == b) {
    if (a.clone) {
      return a.clone();
    }
    var b = "array" == b ? [] : {}, c;
    for (c in a) {
      b[c] = goog.cloneObject(a[c]);
    }
    return b;
  }
  return a;
};
goog.bindNative_ = function(a, b, c) {
  return a.call.apply(a.bind, arguments);
};
goog.bindJs_ = function(a, b, c) {
  if (!a) {
    throw Error();
  }
  if (2 < arguments.length) {
    var d = Array.prototype.slice.call(arguments, 2);
    return function() {
      var c = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(c, d);
      return a.apply(b, c);
    };
  }
  return function() {
    return a.apply(b, arguments);
  };
};
goog.bind = function(a, b, c) {
  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;
  return goog.bind.apply(null, arguments);
};
goog.partial = function(a, b) {
  var c = Array.prototype.slice.call(arguments, 1);
  return function() {
    var b = c.slice();
    b.push.apply(b, arguments);
    return a.apply(this, b);
  };
};
goog.mixin = function(a, b) {
  for (var c in b) {
    a[c] = b[c];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(a) {
  if (goog.global.execScript) {
    goog.global.execScript(a, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (null == goog.evalWorksForGlobals_) {
        if (goog.global.eval("var _evalTest_ \x3d 1;"), "undefined" != typeof goog.global._evalTest_) {
          try {
            delete goog.global._evalTest_;
          } catch (d) {
          }
          goog.evalWorksForGlobals_ = !0;
        } else {
          goog.evalWorksForGlobals_ = !1;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(a);
      } else {
        var b = goog.global.document, c = b.createElement("SCRIPT");
        c.type = "text/javascript";
        c.defer = !1;
        c.appendChild(b.createTextNode(a));
        b.body.appendChild(c);
        b.body.removeChild(c);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.getCssName = function(a, b) {
  var c = function(a) {
    return goog.cssNameMapping_[a] || a;
  }, d = function(a) {
    a = a.split("-");
    for (var b = [], d = 0;d < a.length;d++) {
      b.push(c(a[d]));
    }
    return b.join("-");
  }, d = goog.cssNameMapping_ ? "BY_WHOLE" == goog.cssNameMappingStyle_ ? c : d : function(a) {
    return a;
  };
  return b ? a + "-" + d(b) : d(a);
};
goog.setCssNameMapping = function(a, b) {
  goog.cssNameMapping_ = a;
  goog.cssNameMappingStyle_ = b;
};
!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING && (goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING);
goog.getMsg = function(a, b) {
  b && (a = a.replace(/\{\$([^}]+)}/g, function(a, d) {
    return null != b && d in b ? b[d] : a;
  }));
  return a;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(a, b, c) {
  goog.exportPath_(a, b, c);
};
goog.exportProperty = function(a, b, c) {
  a[b] = c;
};
goog.inherits = function(a, b) {
  function c() {
  }
  c.prototype = b.prototype;
  a.superClass_ = b.prototype;
  a.prototype = new c;
  a.prototype.constructor = a;
  a.base = function(a, c, f) {
    for (var g = Array(arguments.length - 2), h = 2;h < arguments.length;h++) {
      g[h - 2] = arguments[h];
    }
    return b.prototype[c].apply(a, g);
  };
};
goog.base = function(a, b, c) {
  var d = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !d) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (d.superClass_) {
    for (var e = Array(arguments.length - 1), f = 1;f < arguments.length;f++) {
      e[f - 1] = arguments[f];
    }
    return d.superClass_.constructor.apply(a, e);
  }
  e = Array(arguments.length - 2);
  for (f = 2;f < arguments.length;f++) {
    e[f - 2] = arguments[f];
  }
  for (var f = !1, g = a.constructor;g;g = g.superClass_ && g.superClass_.constructor) {
    if (g.prototype[b] === d) {
      f = !0;
    } else {
      if (f) {
        return g.prototype[b].apply(a, e);
      }
    }
  }
  if (a[b] === d) {
    return a.constructor.prototype[b].apply(a, e);
  }
  throw Error("goog.base called from a method of one name to a method of a different name");
};
goog.scope = function(a) {
  a.call(goog.global);
};
COMPILED || (goog.global.COMPILED = COMPILED);
goog.defineClass = function(a, b) {
  var c = b.constructor, d = b.statics;
  c && c != Object.prototype.constructor || (c = function() {
    throw Error("cannot instantiate an interface (no constructor defined).");
  });
  c = goog.defineClass.createSealingConstructor_(c, a);
  a && goog.inherits(c, a);
  delete b.constructor;
  delete b.statics;
  goog.defineClass.applyProperties_(c.prototype, b);
  null != d && (d instanceof Function ? d(c) : goog.defineClass.applyProperties_(c, d));
  return c;
};
goog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;
goog.defineClass.createSealingConstructor_ = function(a, b) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (b && b.prototype && b.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return a;
    }
    var c = function() {
      var b = a.apply(this, arguments) || this;
      b[goog.UID_PROPERTY_] = b[goog.UID_PROPERTY_];
      this.constructor === c && Object.seal(b);
      return b;
    };
    return c;
  }
  return a;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.defineClass.applyProperties_ = function(a, b) {
  for (var c in b) {
    Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);
  }
  for (var d = 0;d < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++) {
    c = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d], Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);
  }
};
goog.tagUnsealableClass = function(a) {
  !COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES && (a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = !0);
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.debug = {};
goog.debug.Error = function(a) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var b = Error().stack;
    b && (this.stack = b);
  }
  a && (this.message = String(a));
  this.reportErrorToServer = !0;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.dom = {};
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.string = {};
goog.string.DETECT_DOUBLE_ESCAPING = !1;
goog.string.FORCE_NON_DOM_HTML_UNESCAPING = !1;
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(a, b) {
  return 0 == a.lastIndexOf(b, 0);
};
goog.string.endsWith = function(a, b) {
  var c = a.length - b.length;
  return 0 <= c && a.indexOf(b, c) == c;
};
goog.string.caseInsensitiveStartsWith = function(a, b) {
  return 0 == goog.string.caseInsensitiveCompare(b, a.substr(0, b.length));
};
goog.string.caseInsensitiveEndsWith = function(a, b) {
  return 0 == goog.string.caseInsensitiveCompare(b, a.substr(a.length - b.length, b.length));
};
goog.string.caseInsensitiveEquals = function(a, b) {
  return a.toLowerCase() == b.toLowerCase();
};
goog.string.subs = function(a, b) {
  for (var c = a.split("%s"), d = "", e = Array.prototype.slice.call(arguments, 1);e.length && 1 < c.length;) {
    d += c.shift() + e.shift();
  }
  return d + c.join("%s");
};
goog.string.collapseWhitespace = function(a) {
  return a.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(a) {
  return /^[\s\xa0]*$/.test(a);
};
goog.string.isEmptyString = function(a) {
  return 0 == a.length;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(a) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(a) {
  return !/[^\t\n\r ]/.test(a);
};
goog.string.isAlpha = function(a) {
  return !/[^a-zA-Z]/.test(a);
};
goog.string.isNumeric = function(a) {
  return !/[^0-9]/.test(a);
};
goog.string.isAlphaNumeric = function(a) {
  return !/[^a-zA-Z0-9]/.test(a);
};
goog.string.isSpace = function(a) {
  return " " == a;
};
goog.string.isUnicodeChar = function(a) {
  return 1 == a.length && " " <= a && "~" >= a || "\u0080" <= a && "\ufffd" >= a;
};
goog.string.stripNewlines = function(a) {
  return a.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(a) {
  return a.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(a) {
  return a.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(a) {
  return a.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(a) {
  return a.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(a) {
  return a.trim();
} : function(a) {
  return a.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(a) {
  return a.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(a) {
  return a.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(a, b) {
  var c = String(a).toLowerCase(), d = String(b).toLowerCase();
  return c < d ? -1 : c == d ? 0 : 1;
};
goog.string.numberAwareCompare_ = function(a, b, c) {
  if (a == b) {
    return 0;
  }
  if (!a) {
    return -1;
  }
  if (!b) {
    return 1;
  }
  for (var d = a.toLowerCase().match(c), e = b.toLowerCase().match(c), f = Math.min(d.length, e.length), g = 0;g < f;g++) {
    c = d[g];
    var h = e[g];
    if (c != h) {
      return a = parseInt(c, 10), !isNaN(a) && (b = parseInt(h, 10), !isNaN(b) && a - b) ? a - b : c < h ? -1 : 1;
    }
  }
  return d.length != e.length ? d.length - e.length : a < b ? -1 : 1;
};
goog.string.intAwareCompare = function(a, b) {
  return goog.string.numberAwareCompare_(a, b, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(a, b) {
  return goog.string.numberAwareCompare_(a, b, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(a) {
  return encodeURIComponent(String(a));
};
goog.string.urlDecode = function(a) {
  return decodeURIComponent(a.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(a, b) {
  return a.replace(/(\r\n|\r|\n)/g, b ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(a, b) {
  if (b) {
    a = a.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;"), goog.string.DETECT_DOUBLE_ESCAPING && (a = a.replace(goog.string.E_RE_, "\x26#101;"));
  } else {
    if (!goog.string.ALL_RE_.test(a)) {
      return a;
    }
    -1 != a.indexOf("\x26") && (a = a.replace(goog.string.AMP_RE_, "\x26amp;"));
    -1 != a.indexOf("\x3c") && (a = a.replace(goog.string.LT_RE_, "\x26lt;"));
    -1 != a.indexOf("\x3e") && (a = a.replace(goog.string.GT_RE_, "\x26gt;"));
    -1 != a.indexOf('"') && (a = a.replace(goog.string.QUOT_RE_, "\x26quot;"));
    -1 != a.indexOf("'") && (a = a.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;"));
    -1 != a.indexOf("\x00") && (a = a.replace(goog.string.NULL_RE_, "\x26#0;"));
    goog.string.DETECT_DOUBLE_ESCAPING && -1 != a.indexOf("e") && (a = a.replace(goog.string.E_RE_, "\x26#101;"));
  }
  return a;
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(a) {
  return goog.string.contains(a, "\x26") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global ? goog.string.unescapeEntitiesUsingDom_(a) : goog.string.unescapePureXmlEntities_(a) : a;
};
goog.string.unescapeEntitiesWithDocument = function(a, b) {
  return goog.string.contains(a, "\x26") ? goog.string.unescapeEntitiesUsingDom_(a, b) : a;
};
goog.string.unescapeEntitiesUsingDom_ = function(a, b) {
  var c = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'}, d;
  d = b ? b.createElement("div") : goog.global.document.createElement("div");
  return a.replace(goog.string.HTML_ENTITY_PATTERN_, function(a, b) {
    var g = c[a];
    if (g) {
      return g;
    }
    if ("#" == b.charAt(0)) {
      var h = Number("0" + b.substr(1));
      isNaN(h) || (g = String.fromCharCode(h));
    }
    g || (d.innerHTML = a + " ", g = d.firstChild.nodeValue.slice(0, -1));
    return c[a] = g;
  });
};
goog.string.unescapePureXmlEntities_ = function(a) {
  return a.replace(/&([^;]+);/g, function(a, c) {
    switch(c) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if ("#" == c.charAt(0)) {
          var d = Number("0" + c.substr(1));
          if (!isNaN(d)) {
            return String.fromCharCode(d);
          }
        }
        return a;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(a, b) {
  return goog.string.newLineToBr(a.replace(/  /g, " \x26#160;"), b);
};
goog.string.preserveSpaces = function(a) {
  return a.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(a, b) {
  for (var c = b.length, d = 0;d < c;d++) {
    var e = 1 == c ? b : b.charAt(d);
    if (a.charAt(0) == e && a.charAt(a.length - 1) == e) {
      return a.substring(1, a.length - 1);
    }
  }
  return a;
};
goog.string.truncate = function(a, b, c) {
  c && (a = goog.string.unescapeEntities(a));
  a.length > b && (a = a.substring(0, b - 3) + "...");
  c && (a = goog.string.htmlEscape(a));
  return a;
};
goog.string.truncateMiddle = function(a, b, c, d) {
  c && (a = goog.string.unescapeEntities(a));
  if (d && a.length > b) {
    d > b && (d = b);
    var e = a.length - d;
    a = a.substring(0, b - d) + "..." + a.substring(e);
  } else {
    a.length > b && (d = Math.floor(b / 2), e = a.length - d, a = a.substring(0, d + b % 2) + "..." + a.substring(e));
  }
  c && (a = goog.string.htmlEscape(a));
  return a;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(a) {
  a = String(a);
  for (var b = ['"'], c = 0;c < a.length;c++) {
    var d = a.charAt(c), e = d.charCodeAt(0);
    b[c + 1] = goog.string.specialEscapeChars_[d] || (31 < e && 127 > e ? d : goog.string.escapeChar(d));
  }
  b.push('"');
  return b.join("");
};
goog.string.escapeString = function(a) {
  for (var b = [], c = 0;c < a.length;c++) {
    b[c] = goog.string.escapeChar(a.charAt(c));
  }
  return b.join("");
};
goog.string.escapeChar = function(a) {
  if (a in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[a];
  }
  if (a in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[a] = goog.string.specialEscapeChars_[a];
  }
  var b = a, c = a.charCodeAt(0);
  if (31 < c && 127 > c) {
    b = a;
  } else {
    if (256 > c) {
      if (b = "\\x", 16 > c || 256 < c) {
        b += "0";
      }
    } else {
      b = "\\u", 4096 > c && (b += "0");
    }
    b += c.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[a] = b;
};
goog.string.contains = function(a, b) {
  return -1 != a.indexOf(b);
};
goog.string.caseInsensitiveContains = function(a, b) {
  return goog.string.contains(a.toLowerCase(), b.toLowerCase());
};
goog.string.countOf = function(a, b) {
  return a && b ? a.split(b).length - 1 : 0;
};
goog.string.removeAt = function(a, b, c) {
  var d = a;
  0 <= b && b < a.length && 0 < c && (d = a.substr(0, b) + a.substr(b + c, a.length - b - c));
  return d;
};
goog.string.remove = function(a, b) {
  var c = new RegExp(goog.string.regExpEscape(b), "");
  return a.replace(c, "");
};
goog.string.removeAll = function(a, b) {
  var c = new RegExp(goog.string.regExpEscape(b), "g");
  return a.replace(c, "");
};
goog.string.regExpEscape = function(a) {
  return String(a).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(a, b) {
  return a.repeat(b);
} : function(a, b) {
  return Array(b + 1).join(a);
};
goog.string.padNumber = function(a, b, c) {
  a = goog.isDef(c) ? a.toFixed(c) : String(a);
  c = a.indexOf(".");
  -1 == c && (c = a.length);
  return goog.string.repeat("0", Math.max(0, b - c)) + a;
};
goog.string.makeSafe = function(a) {
  return null == a ? "" : String(a);
};
goog.string.buildString = function(a) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(a, b) {
  for (var c = 0, d = goog.string.trim(String(a)).split("."), e = goog.string.trim(String(b)).split("."), f = Math.max(d.length, e.length), g = 0;0 == c && g < f;g++) {
    var h = d[g] || "", k = e[g] || "", m = RegExp("(\\d*)(\\D*)", "g"), l = RegExp("(\\d*)(\\D*)", "g");
    do {
      var n = m.exec(h) || ["", "", ""], p = l.exec(k) || ["", "", ""];
      if (0 == n[0].length && 0 == p[0].length) {
        break;
      }
      var c = 0 == n[1].length ? 0 : parseInt(n[1], 10), q = 0 == p[1].length ? 0 : parseInt(p[1], 10), c = goog.string.compareElements_(c, q) || goog.string.compareElements_(0 == n[2].length, 0 == p[2].length) || goog.string.compareElements_(n[2], p[2]);
    } while (0 == c);
  }
  return c;
};
goog.string.compareElements_ = function(a, b) {
  return a < b ? -1 : a > b ? 1 : 0;
};
goog.string.hashCode = function(a) {
  for (var b = 0, c = 0;c < a.length;++c) {
    b = 31 * b + a.charCodeAt(c) >>> 0;
  }
  return b;
};
goog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(a) {
  var b = Number(a);
  return 0 == b && goog.string.isEmptyOrWhitespace(a) ? NaN : b;
};
goog.string.isLowerCamelCase = function(a) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(a);
};
goog.string.isUpperCamelCase = function(a) {
  return /^([A-Z][a-z]*)+$/.test(a);
};
goog.string.toCamelCase = function(a) {
  return String(a).replace(/\-([a-z])/g, function(a, c) {
    return c.toUpperCase();
  });
};
goog.string.toSelectorCase = function(a) {
  return String(a).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(a, b) {
  var c = goog.isString(b) ? goog.string.regExpEscape(b) : "\\s";
  return a.replace(new RegExp("(^" + (c ? "|[" + c + "]+" : "") + ")([a-z])", "g"), function(a, b, c) {
    return b + c.toUpperCase();
  });
};
goog.string.capitalize = function(a) {
  return String(a.charAt(0)).toUpperCase() + String(a.substr(1)).toLowerCase();
};
goog.string.parseInt = function(a) {
  isFinite(a) && (a = String(a));
  return goog.isString(a) ? /^\s*-?0x/i.test(a) ? parseInt(a, 16) : parseInt(a, 10) : NaN;
};
goog.string.splitLimit = function(a, b, c) {
  a = a.split(b);
  for (var d = [];0 < c && a.length;) {
    d.push(a.shift()), c--;
  }
  a.length && d.push(a.join(b));
  return d;
};
goog.string.editDistance = function(a, b) {
  var c = [], d = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var e = 0;e < b.length + 1;e++) {
    c[e] = e;
  }
  for (e = 0;e < a.length;e++) {
    d[0] = e + 1;
    for (var f = 0;f < b.length;f++) {
      d[f + 1] = Math.min(d[f] + 1, c[f + 1] + 1, c[f] + (a[e] != b[f]));
    }
    for (f = 0;f < c.length;f++) {
      c[f] = d[f];
    }
  }
  return d[b.length];
};
goog.asserts = {};
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(a, b) {
  b.unshift(a);
  goog.debug.Error.call(this, goog.string.subs.apply(null, b));
  b.shift();
  this.messagePattern = a;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(a) {
  throw a;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(a, b, c, d) {
  var e = "Assertion failed";
  if (c) {
    var e = e + (": " + c), f = d
  } else {
    a && (e += ": " + a, f = b);
  }
  a = new goog.asserts.AssertionError("" + e, f || []);
  goog.asserts.errorHandler_(a);
};
goog.asserts.setErrorHandler = function(a) {
  goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = a);
};
goog.asserts.assert = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !a && goog.asserts.doAssertFailure_("", null, b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.fail = function(a, b) {
  goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (a ? ": " + a : ""), Array.prototype.slice.call(arguments, 1)));
};
goog.asserts.assertNumber = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isNumber(a) && goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertString = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isString(a) && goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertFunction = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isFunction(a) && goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertObject = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isObject(a) && goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertArray = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isArray(a) && goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertBoolean = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(a) && goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertElement = function(a, b, c) {
  !goog.asserts.ENABLE_ASSERTS || goog.isObject(a) && a.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertInstanceof = function(a, b, c, d) {
  !goog.asserts.ENABLE_ASSERTS || a instanceof b || goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(b), goog.asserts.getType_(a)], c, Array.prototype.slice.call(arguments, 3));
  return a;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var a in Object.prototype) {
    goog.asserts.fail(a + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(a) {
  return a instanceof Function ? a.displayName || a.name || "unknown type name" : a instanceof Object ? a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a) : null === a ? "null" : typeof a;
};
goog.array = {};
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ASSUME_NATIVE_FUNCTIONS = !1;
goog.array.peek = function(a) {
  return a[a.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(a, b, c);
} : function(a, b, c) {
  c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c;
  if (goog.isString(a)) {
    return goog.isString(b) && 1 == b.length ? a.indexOf(b, c) : -1;
  }
  for (;c < a.length;c++) {
    if (c in a && a[c] === b) {
      return c;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(a, b, null == c ? a.length - 1 : c);
} : function(a, b, c) {
  c = null == c ? a.length - 1 : c;
  0 > c && (c = Math.max(0, a.length + c));
  if (goog.isString(a)) {
    return goog.isString(b) && 1 == b.length ? a.lastIndexOf(b, c) : -1;
  }
  for (;0 <= c;c--) {
    if (c in a && a[c] === b) {
      return c;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, f = 0;f < d;f++) {
    f in e && b.call(c, e[f], f, a);
  }
};
goog.array.forEachRight = function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, d = d - 1;0 <= d;--d) {
    d in e && b.call(c, e[d], d, a);
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = [], f = 0, g = goog.isString(a) ? a.split("") : a, h = 0;h < d;h++) {
    if (h in g) {
      var k = g[h];
      b.call(c, k, h, a) && (e[f++] = k);
    }
  }
  return e;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return goog.array.ARRAY_PROTOTYPE_.map.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = Array(d), f = goog.isString(a) ? a.split("") : a, g = 0;g < d;g++) {
    g in f && (e[g] = b.call(c, f[g], g, a));
  }
  return e;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(a, b, c, d) {
  goog.asserts.assert(null != a.length);
  d && (b = goog.bind(b, d));
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(a, b, c);
} : function(a, b, c, d) {
  var e = c;
  goog.array.forEach(a, function(c, g) {
    e = b.call(d, e, c, g, a);
  });
  return e;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(a, b, c, d) {
  goog.asserts.assert(null != a.length);
  d && (b = goog.bind(b, d));
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(a, b, c);
} : function(a, b, c, d) {
  var e = c;
  goog.array.forEachRight(a, function(c, g) {
    e = b.call(d, e, c, g, a);
  });
  return e;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return goog.array.ARRAY_PROTOTYPE_.some.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, f = 0;f < d;f++) {
    if (f in e && b.call(c, e[f], f, a)) {
      return !0;
    }
  }
  return !1;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return goog.array.ARRAY_PROTOTYPE_.every.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, f = 0;f < d;f++) {
    if (f in e && !b.call(c, e[f], f, a)) {
      return !1;
    }
  }
  return !0;
};
goog.array.count = function(a, b, c) {
  var d = 0;
  goog.array.forEach(a, function(a, f, g) {
    b.call(c, a, f, g) && ++d;
  }, c);
  return d;
};
goog.array.find = function(a, b, c) {
  b = goog.array.findIndex(a, b, c);
  return 0 > b ? null : goog.isString(a) ? a.charAt(b) : a[b];
};
goog.array.findIndex = function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, f = 0;f < d;f++) {
    if (f in e && b.call(c, e[f], f, a)) {
      return f;
    }
  }
  return -1;
};
goog.array.findRight = function(a, b, c) {
  b = goog.array.findIndexRight(a, b, c);
  return 0 > b ? null : goog.isString(a) ? a.charAt(b) : a[b];
};
goog.array.findIndexRight = function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, d = d - 1;0 <= d;d--) {
    if (d in e && b.call(c, e[d], d, a)) {
      return d;
    }
  }
  return -1;
};
goog.array.contains = function(a, b) {
  return 0 <= goog.array.indexOf(a, b);
};
goog.array.isEmpty = function(a) {
  return 0 == a.length;
};
goog.array.clear = function(a) {
  if (!goog.isArray(a)) {
    for (var b = a.length - 1;0 <= b;b--) {
      delete a[b];
    }
  }
  a.length = 0;
};
goog.array.insert = function(a, b) {
  goog.array.contains(a, b) || a.push(b);
};
goog.array.insertAt = function(a, b, c) {
  goog.array.splice(a, c, 0, b);
};
goog.array.insertArrayAt = function(a, b, c) {
  goog.partial(goog.array.splice, a, c, 0).apply(null, b);
};
goog.array.insertBefore = function(a, b, c) {
  var d;
  2 == arguments.length || 0 > (d = goog.array.indexOf(a, c)) ? a.push(b) : goog.array.insertAt(a, b, d);
};
goog.array.remove = function(a, b) {
  var c = goog.array.indexOf(a, b), d;
  (d = 0 <= c) && goog.array.removeAt(a, c);
  return d;
};
goog.array.removeAt = function(a, b) {
  goog.asserts.assert(null != a.length);
  return 1 == goog.array.ARRAY_PROTOTYPE_.splice.call(a, b, 1).length;
};
goog.array.removeIf = function(a, b, c) {
  b = goog.array.findIndex(a, b, c);
  return 0 <= b ? (goog.array.removeAt(a, b), !0) : !1;
};
goog.array.removeAllIf = function(a, b, c) {
  var d = 0;
  goog.array.forEachRight(a, function(e, f) {
    b.call(c, e, f, a) && goog.array.removeAt(a, f) && d++;
  });
  return d;
};
goog.array.concat = function(a) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(a) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(a) {
  var b = a.length;
  if (0 < b) {
    for (var c = Array(b), d = 0;d < b;d++) {
      c[d] = a[d];
    }
    return c;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(a, b) {
  for (var c = 1;c < arguments.length;c++) {
    var d = arguments[c];
    if (goog.isArrayLike(d)) {
      var e = a.length || 0, f = d.length || 0;
      a.length = e + f;
      for (var g = 0;g < f;g++) {
        a[e + g] = d[g];
      }
    } else {
      a.push(d);
    }
  }
};
goog.array.splice = function(a, b, c, d) {
  goog.asserts.assert(null != a.length);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(a, goog.array.slice(arguments, 1));
};
goog.array.slice = function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return 2 >= arguments.length ? goog.array.ARRAY_PROTOTYPE_.slice.call(a, b) : goog.array.ARRAY_PROTOTYPE_.slice.call(a, b, c);
};
goog.array.removeDuplicates = function(a, b, c) {
  b = b || a;
  var d = function(a) {
    return goog.isObject(a) ? "o" + goog.getUid(a) : (typeof a).charAt(0) + a;
  };
  c = c || d;
  for (var d = {}, e = 0, f = 0;f < a.length;) {
    var g = a[f++], h = c(g);
    Object.prototype.hasOwnProperty.call(d, h) || (d[h] = !0, b[e++] = g);
  }
  b.length = e;
};
goog.array.binarySearch = function(a, b, c) {
  return goog.array.binarySearch_(a, c || goog.array.defaultCompare, !1, b);
};
goog.array.binarySelect = function(a, b, c) {
  return goog.array.binarySearch_(a, b, !0, void 0, c);
};
goog.array.binarySearch_ = function(a, b, c, d, e) {
  for (var f = 0, g = a.length, h;f < g;) {
    var k = f + g >> 1, m;
    m = c ? b.call(e, a[k], k, a) : b(d, a[k]);
    0 < m ? f = k + 1 : (g = k, h = !m);
  }
  return h ? f : ~f;
};
goog.array.sort = function(a, b) {
  a.sort(b || goog.array.defaultCompare);
};
goog.array.stableSort = function(a, b) {
  for (var c = 0;c < a.length;c++) {
    a[c] = {index:c, value:a[c]};
  }
  var d = b || goog.array.defaultCompare;
  goog.array.sort(a, function(a, b) {
    return d(a.value, b.value) || a.index - b.index;
  });
  for (c = 0;c < a.length;c++) {
    a[c] = a[c].value;
  }
};
goog.array.sortByKey = function(a, b, c) {
  var d = c || goog.array.defaultCompare;
  goog.array.sort(a, function(a, c) {
    return d(b(a), b(c));
  });
};
goog.array.sortObjectsByKey = function(a, b, c) {
  goog.array.sortByKey(a, function(a) {
    return a[b];
  }, c);
};
goog.array.isSorted = function(a, b, c) {
  b = b || goog.array.defaultCompare;
  for (var d = 1;d < a.length;d++) {
    var e = b(a[d - 1], a[d]);
    if (0 < e || 0 == e && c) {
      return !1;
    }
  }
  return !0;
};
goog.array.equals = function(a, b, c) {
  if (!goog.isArrayLike(a) || !goog.isArrayLike(b) || a.length != b.length) {
    return !1;
  }
  var d = a.length;
  c = c || goog.array.defaultCompareEquality;
  for (var e = 0;e < d;e++) {
    if (!c(a[e], b[e])) {
      return !1;
    }
  }
  return !0;
};
goog.array.compare3 = function(a, b, c) {
  c = c || goog.array.defaultCompare;
  for (var d = Math.min(a.length, b.length), e = 0;e < d;e++) {
    var f = c(a[e], b[e]);
    if (0 != f) {
      return f;
    }
  }
  return goog.array.defaultCompare(a.length, b.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(a, b, c) {
  c = goog.array.binarySearch(a, b, c);
  return 0 > c ? (goog.array.insertAt(a, b, -(c + 1)), !0) : !1;
};
goog.array.binaryRemove = function(a, b, c) {
  b = goog.array.binarySearch(a, b, c);
  return 0 <= b ? goog.array.removeAt(a, b) : !1;
};
goog.array.bucket = function(a, b, c) {
  for (var d = {}, e = 0;e < a.length;e++) {
    var f = a[e], g = b.call(c, f, e, a);
    goog.isDef(g) && (d[g] || (d[g] = [])).push(f);
  }
  return d;
};
goog.array.toObject = function(a, b, c) {
  var d = {};
  goog.array.forEach(a, function(e, f) {
    d[b.call(c, e, f, a)] = e;
  });
  return d;
};
goog.array.range = function(a, b, c) {
  var d = [], e = 0, f = a;
  c = c || 1;
  void 0 !== b && (e = a, f = b);
  if (0 > c * (f - e)) {
    return [];
  }
  if (0 < c) {
    for (a = e;a < f;a += c) {
      d.push(a);
    }
  } else {
    for (a = e;a > f;a += c) {
      d.push(a);
    }
  }
  return d;
};
goog.array.repeat = function(a, b) {
  for (var c = [], d = 0;d < b;d++) {
    c[d] = a;
  }
  return c;
};
goog.array.flatten = function(a) {
  for (var b = [], c = 0;c < arguments.length;c++) {
    var d = arguments[c];
    if (goog.isArray(d)) {
      for (var e = 0;e < d.length;e += 8192) {
        for (var f = goog.array.slice(d, e, e + 8192), f = goog.array.flatten.apply(null, f), g = 0;g < f.length;g++) {
          b.push(f[g]);
        }
      }
    } else {
      b.push(d);
    }
  }
  return b;
};
goog.array.rotate = function(a, b) {
  goog.asserts.assert(null != a.length);
  a.length && (b %= a.length, 0 < b ? goog.array.ARRAY_PROTOTYPE_.unshift.apply(a, a.splice(-b, b)) : 0 > b && goog.array.ARRAY_PROTOTYPE_.push.apply(a, a.splice(0, -b)));
  return a;
};
goog.array.moveItem = function(a, b, c) {
  goog.asserts.assert(0 <= b && b < a.length);
  goog.asserts.assert(0 <= c && c < a.length);
  b = goog.array.ARRAY_PROTOTYPE_.splice.call(a, b, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(a, c, 0, b[0]);
};
goog.array.zip = function(a) {
  if (!arguments.length) {
    return [];
  }
  for (var b = [], c = arguments[0].length, d = 1;d < arguments.length;d++) {
    arguments[d].length < c && (c = arguments[d].length);
  }
  for (d = 0;d < c;d++) {
    for (var e = [], f = 0;f < arguments.length;f++) {
      e.push(arguments[f][d]);
    }
    b.push(e);
  }
  return b;
};
goog.array.shuffle = function(a, b) {
  for (var c = b || Math.random, d = a.length - 1;0 < d;d--) {
    var e = Math.floor(c() * (d + 1)), f = a[d];
    a[d] = a[e];
    a[e] = f;
  }
};
goog.array.copyByIndex = function(a, b) {
  var c = [];
  goog.array.forEach(b, function(b) {
    c.push(a[b]);
  });
  return c;
};
goog.labs = {};
goog.labs.userAgent = {};
goog.labs.userAgent.util = {};
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var a = goog.labs.userAgent.util.getNavigator_();
  return a && (a = a.userAgent) ? a : "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(a) {
  goog.labs.userAgent.util.userAgent_ = a || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(a) {
  var b = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(b, a);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(a) {
  var b = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(b, a);
};
goog.labs.userAgent.util.extractVersionTuples = function(a) {
  for (var b = RegExp("(\\w[\\w ]+)/([^\\s]+)\\s*(?:\\((.*?)\\))?", "g"), c = [], d;d = b.exec(a);) {
    c.push([d[1], d[2], d[3] || void 0]);
  }
  return c;
};
goog.object = {};
goog.object.forEach = function(a, b, c) {
  for (var d in a) {
    b.call(c, a[d], d, a);
  }
};
goog.object.filter = function(a, b, c) {
  var d = {}, e;
  for (e in a) {
    b.call(c, a[e], e, a) && (d[e] = a[e]);
  }
  return d;
};
goog.object.map = function(a, b, c) {
  var d = {}, e;
  for (e in a) {
    d[e] = b.call(c, a[e], e, a);
  }
  return d;
};
goog.object.some = function(a, b, c) {
  for (var d in a) {
    if (b.call(c, a[d], d, a)) {
      return !0;
    }
  }
  return !1;
};
goog.object.every = function(a, b, c) {
  for (var d in a) {
    if (!b.call(c, a[d], d, a)) {
      return !1;
    }
  }
  return !0;
};
goog.object.getCount = function(a) {
  var b = 0, c;
  for (c in a) {
    b++;
  }
  return b;
};
goog.object.getAnyKey = function(a) {
  for (var b in a) {
    return b;
  }
};
goog.object.getAnyValue = function(a) {
  for (var b in a) {
    return a[b];
  }
};
goog.object.contains = function(a, b) {
  return goog.object.containsValue(a, b);
};
goog.object.getValues = function(a) {
  var b = [], c = 0, d;
  for (d in a) {
    b[c++] = a[d];
  }
  return b;
};
goog.object.getKeys = function(a) {
  var b = [], c = 0, d;
  for (d in a) {
    b[c++] = d;
  }
  return b;
};
goog.object.getValueByKeys = function(a, b) {
  for (var c = goog.isArrayLike(b), d = c ? b : arguments, c = c ? 0 : 1;c < d.length && (a = a[d[c]], goog.isDef(a));c++) {
  }
  return a;
};
goog.object.containsKey = function(a, b) {
  return null !== a && b in a;
};
goog.object.containsValue = function(a, b) {
  for (var c in a) {
    if (a[c] == b) {
      return !0;
    }
  }
  return !1;
};
goog.object.findKey = function(a, b, c) {
  for (var d in a) {
    if (b.call(c, a[d], d, a)) {
      return d;
    }
  }
};
goog.object.findValue = function(a, b, c) {
  return (b = goog.object.findKey(a, b, c)) && a[b];
};
goog.object.isEmpty = function(a) {
  for (var b in a) {
    return !1;
  }
  return !0;
};
goog.object.clear = function(a) {
  for (var b in a) {
    delete a[b];
  }
};
goog.object.remove = function(a, b) {
  var c;
  (c = b in a) && delete a[b];
  return c;
};
goog.object.add = function(a, b, c) {
  if (null !== a && b in a) {
    throw Error('The object already contains the key "' + b + '"');
  }
  goog.object.set(a, b, c);
};
goog.object.get = function(a, b, c) {
  return null !== a && b in a ? a[b] : c;
};
goog.object.set = function(a, b, c) {
  a[b] = c;
};
goog.object.setIfUndefined = function(a, b, c) {
  return b in a ? a[b] : a[b] = c;
};
goog.object.setWithReturnValueIfNotSet = function(a, b, c) {
  if (b in a) {
    return a[b];
  }
  c = c();
  return a[b] = c;
};
goog.object.equals = function(a, b) {
  for (var c in a) {
    if (!(c in b) || a[c] !== b[c]) {
      return !1;
    }
  }
  for (c in b) {
    if (!(c in a)) {
      return !1;
    }
  }
  return !0;
};
goog.object.clone = function(a) {
  var b = {}, c;
  for (c in a) {
    b[c] = a[c];
  }
  return b;
};
goog.object.unsafeClone = function(a) {
  var b = goog.typeOf(a);
  if ("object" == b || "array" == b) {
    if (goog.isFunction(a.clone)) {
      return a.clone();
    }
    var b = "array" == b ? [] : {}, c;
    for (c in a) {
      b[c] = goog.object.unsafeClone(a[c]);
    }
    return b;
  }
  return a;
};
goog.object.transpose = function(a) {
  var b = {}, c;
  for (c in a) {
    b[a[c]] = c;
  }
  return b;
};
goog.object.PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.object.extend = function(a, b) {
  for (var c, d, e = 1;e < arguments.length;e++) {
    d = arguments[e];
    for (c in d) {
      a[c] = d[c];
    }
    for (var f = 0;f < goog.object.PROTOTYPE_FIELDS_.length;f++) {
      c = goog.object.PROTOTYPE_FIELDS_[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
    }
  }
};
goog.object.create = function(a) {
  var b = arguments.length;
  if (1 == b && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (b % 2) {
    throw Error("Uneven number of arguments");
  }
  for (var c = {}, d = 0;d < b;d += 2) {
    c[arguments[d]] = arguments[d + 1];
  }
  return c;
};
goog.object.createSet = function(a) {
  var b = arguments.length;
  if (1 == b && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  for (var c = {}, d = 0;d < b;d++) {
    c[arguments[d]] = !0;
  }
  return c;
};
goog.object.createImmutableView = function(a) {
  var b = a;
  Object.isFrozen && !Object.isFrozen(a) && (b = Object.create(a), Object.freeze(b));
  return b;
};
goog.object.isImmutableView = function(a) {
  return !!Object.isFrozen && Object.isFrozen(a);
};
goog.labs.userAgent.browser = {};
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdge_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchOpera_() && !goog.labs.userAgent.browser.matchEdge_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  function a(a) {
    a = goog.array.find(a, d);
    return c[a] || "";
  }
  var b = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(b);
  }
  var b = goog.labs.userAgent.util.extractVersionTuples(b), c = {};
  goog.array.forEach(b, function(a) {
    c[a[0]] = a[1];
  });
  var d = goog.partial(goog.object.containsKey, c);
  return goog.labs.userAgent.browser.isOpera() ? a(["Version", "Opera", "OPR"]) : goog.labs.userAgent.browser.isEdge() ? a(["Edge"]) : goog.labs.userAgent.browser.isChrome() ? a(["Chrome", "CriOS"]) : (b = b[2]) && b[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(a) {
  return 0 <= goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), a);
};
goog.labs.userAgent.browser.getIEVersion_ = function(a) {
  var b = /rv: *([\d\.]*)/.exec(a);
  if (b && b[1]) {
    return b[1];
  }
  var b = "", c = /MSIE +([\d\.]+)/.exec(a);
  if (c && c[1]) {
    if (a = /Trident\/(\d.\d)/.exec(a), "7.0" == c[1]) {
      if (a && a[1]) {
        switch(a[1]) {
          case "4.0":
            b = "8.0";
            break;
          case "5.0":
            b = "9.0";
            break;
          case "6.0":
            b = "10.0";
            break;
          case "7.0":
            b = "11.0";
        }
      } else {
        b = "7.0";
      }
    } else {
      b = c[1];
    }
  }
  return b;
};
goog.labs.userAgent.engine = {};
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var a = goog.labs.userAgent.util.getUserAgent();
  if (a) {
    var a = goog.labs.userAgent.util.extractVersionTuples(a), b = goog.labs.userAgent.engine.getEngineTuple_(a);
    if (b) {
      return "Gecko" == b[0] ? goog.labs.userAgent.engine.getVersionForKey_(a, "Firefox") : b[1];
    }
    var a = a[0], c;
    if (a && (c = a[2]) && (c = /Trident\/([^\s;]+)/.exec(c))) {
      return c[1];
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(a) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return a[1];
  }
  for (var b = 0;b < a.length;b++) {
    var c = a[b];
    if ("Edge" == c[0]) {
      return c;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(a) {
  return 0 <= goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), a);
};
goog.labs.userAgent.engine.getVersionForKey_ = function(a, b) {
  var c = goog.array.find(a, function(a) {
    return b == a[0];
  });
  return c && c[1] || "";
};
goog.labs.userAgent.platform = {};
goog.labs.userAgent.platform.isAndroid = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.platform.isIpod = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPod");
};
goog.labs.userAgent.platform.isIphone = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIpad = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIos = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
};
goog.labs.userAgent.platform.isMacintosh = function() {
  return goog.labs.userAgent.util.matchUserAgent("Macintosh");
};
goog.labs.userAgent.platform.isLinux = function() {
  return goog.labs.userAgent.util.matchUserAgent("Linux");
};
goog.labs.userAgent.platform.isWindows = function() {
  return goog.labs.userAgent.util.matchUserAgent("Windows");
};
goog.labs.userAgent.platform.isChromeOS = function() {
  return goog.labs.userAgent.util.matchUserAgent("CrOS");
};
goog.labs.userAgent.platform.getVersion = function() {
  var a = goog.labs.userAgent.util.getUserAgent(), b = "";
  goog.labs.userAgent.platform.isWindows() ? (b = /Windows (?:NT|Phone) ([0-9.]+)/, b = (a = b.exec(a)) ? a[1] : "0.0") : goog.labs.userAgent.platform.isIos() ? (b = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/, b = (a = b.exec(a)) && a[1].replace(/_/g, ".")) : goog.labs.userAgent.platform.isMacintosh() ? (b = /Mac OS X ([0-9_.]+)/, b = (a = b.exec(a)) ? a[1].replace(/_/g, ".") : "10") : goog.labs.userAgent.platform.isAndroid() ? (b = /Android\s+([^\);]+)(\)|;)/, b = (a = b.exec(a)) && a[1]) : goog.labs.userAgent.platform.isChromeOS() && 
  (b = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/, b = (a = b.exec(a)) && a[1]);
  return b || "";
};
goog.labs.userAgent.platform.isVersionOrHigher = function(a) {
  return 0 <= goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), a);
};
goog.userAgent = {};
goog.userAgent.ASSUME_IE = !1;
goog.userAgent.ASSUME_EDGE = !1;
goog.userAgent.ASSUME_GECKO = !1;
goog.userAgent.ASSUME_WEBKIT = !1;
goog.userAgent.ASSUME_MOBILE_WEBKIT = !1;
goog.userAgent.ASSUME_OPERA = !1;
goog.userAgent.ASSUME_ANY_VERSION = !1;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global.navigator || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var a = goog.userAgent.getNavigator();
  return a && a.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = !1;
goog.userAgent.ASSUME_WINDOWS = !1;
goog.userAgent.ASSUME_LINUX = !1;
goog.userAgent.ASSUME_X11 = !1;
goog.userAgent.ASSUME_ANDROID = !1;
goog.userAgent.ASSUME_IPHONE = !1;
goog.userAgent.ASSUME_IPAD = !1;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_ = function() {
  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
};
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
goog.userAgent.isX11_ = function() {
  var a = goog.userAgent.getNavigator();
  return !!a && goog.string.contains(a.appVersion || "", "X11");
};
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.operaVersion_ = function() {
  var a = goog.global.opera.version;
  try {
    return a();
  } catch (b) {
    return a;
  }
};
goog.userAgent.determineVersion_ = function() {
  if (goog.userAgent.OPERA && goog.global.opera) {
    return goog.userAgent.operaVersion_();
  }
  var a = "", b = goog.userAgent.getVersionRegexResult_();
  b && (a = b ? b[1] : "");
  return goog.userAgent.IE && (b = goog.userAgent.getDocumentMode_(), b > parseFloat(a)) ? String(b) : a;
};
goog.userAgent.getVersionRegexResult_ = function() {
  var a = goog.userAgent.getUserAgentString();
  if (goog.userAgent.GECKO) {
    return /rv\:([^\);]+)(\)|;)/.exec(a);
  }
  if (goog.userAgent.EDGE) {
    return /Edge\/([\d\.]+)/.exec(a);
  }
  if (goog.userAgent.IE) {
    return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);
  }
  if (goog.userAgent.WEBKIT) {
    return /WebKit\/(\S+)/.exec(a);
  }
};
goog.userAgent.getDocumentMode_ = function() {
  var a = goog.global.document;
  return a ? a.documentMode : void 0;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(a, b) {
  return goog.string.compareVersions(a, b);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(a) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[a] || (goog.userAgent.isVersionOrHigherCache_[a] = 0 <= goog.string.compareVersions(goog.userAgent.VERSION, a));
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(a) {
  return goog.userAgent.DOCUMENT_MODE >= a;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var a = goog.global.document, b = goog.userAgent.getDocumentMode_();
  return a && goog.userAgent.IE ? b || ("CSS1Compat" == a.compatMode ? parseInt(goog.userAgent.VERSION, 10) : 5) : void 0;
}();
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEMPLATE:"TEMPLATE", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.dom.tags = {};
goog.dom.tags.VOID_TAGS_ = {area:!0, base:!0, br:!0, col:!0, command:!0, embed:!0, hr:!0, img:!0, input:!0, keygen:!0, link:!0, meta:!0, param:!0, source:!0, track:!0, wbr:!0};
goog.dom.tags.isVoidTag = function(a) {
  return !0 === goog.dom.tags.VOID_TAGS_[a];
};
goog.string.TypedString = function() {
};
goog.string.Const = function() {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = !0;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
};
goog.string.Const.unwrap = function(a) {
  if (a instanceof goog.string.Const && a.constructor === goog.string.Const && a.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return a.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  }
  goog.asserts.fail("expected object of type Const, got '" + a + "'");
  return "type_error:Const";
};
goog.string.Const.from = function(a) {
  return goog.string.Const.create__googStringSecurityPrivate_(a);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.create__googStringSecurityPrivate_ = function(a) {
  var b = new goog.string.Const;
  b.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = a;
  return b;
};
goog.html = {};
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = !0;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(a) {
  a = goog.string.Const.unwrap(a);
  if (0 === a.length) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(a);
  goog.asserts.assert(goog.string.endsWith(a, ";"), "Last character of style string is not ';': " + a);
  goog.asserts.assert(goog.string.contains(a, ":"), "Style string must contain at least one ':', to specify a \"name: value\" pair: " + a);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(a);
};
goog.html.SafeStyle.checkStyle_ = function(a) {
  goog.asserts.assert(!/[<>]/.test(a), "Forbidden characters in style string: " + a);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
goog.DEBUG && (goog.html.SafeStyle.prototype.toString = function() {
  return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
});
goog.html.SafeStyle.unwrap = function(a) {
  if (a instanceof goog.html.SafeStyle && a.constructor === goog.html.SafeStyle && a.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return a.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  }
  goog.asserts.fail("expected object of type SafeStyle, got '" + a + "'");
  return "type_error:SafeStyle";
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(a) {
  return (new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(a);
};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(a) {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = a;
  return this;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.create = function(a) {
  var b = "", c;
  for (c in a) {
    if (!/^[-_a-zA-Z0-9]+$/.test(c)) {
      throw Error("Name allows only [-_a-zA-Z0-9], got: " + c);
    }
    var d = a[c];
    null != d && (d instanceof goog.string.Const ? (d = goog.string.Const.unwrap(d), goog.asserts.assert(!/[{;}]/.test(d), "Value does not allow [{;}].")) : goog.html.SafeStyle.VALUE_RE_.test(d) ? goog.html.SafeStyle.hasBalancedQuotes_(d) || (goog.asserts.fail("String value requires balanced quotes, got: " + d), d = goog.html.SafeStyle.INNOCUOUS_STRING) : (goog.asserts.fail("String value allows only [-,.\"'%_!# a-zA-Z0-9], got: " + d), d = goog.html.SafeStyle.INNOCUOUS_STRING), b += c + ":" + d + 
    ";");
  }
  if (!b) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(b);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b);
};
goog.html.SafeStyle.hasBalancedQuotes_ = function(a) {
  for (var b = !0, c = !0, d = 0;d < a.length;d++) {
    var e = a.charAt(d);
    "'" == e && c ? b = !b : '"' == e && b && (c = !c);
  }
  return b && c;
};
goog.html.SafeStyle.VALUE_RE_ = /^[-,."'%_!# a-zA-Z0-9]+$/;
goog.html.SafeStyle.concat = function(a) {
  var b = "", c = function(a) {
    goog.isArray(a) ? goog.array.forEach(a, c) : b += goog.html.SafeStyle.unwrap(a);
  };
  goog.array.forEach(arguments, c);
  return b ? goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b) : goog.html.SafeStyle.EMPTY;
};
goog.html.SafeStyleSheet = function() {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "";
  this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = !0;
goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyleSheet.concat = function(a) {
  var b = "", c = function(a) {
    goog.isArray(a) ? goog.array.forEach(a, c) : b += goog.html.SafeStyleSheet.unwrap(a);
  };
  goog.array.forEach(arguments, c);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b);
};
goog.html.SafeStyleSheet.fromConstant = function(a) {
  a = goog.string.Const.unwrap(a);
  if (0 === a.length) {
    return goog.html.SafeStyleSheet.EMPTY;
  }
  goog.asserts.assert(!goog.string.contains(a, "\x3c"), "Forbidden '\x3c' character in style sheet string: " + a);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a);
};
goog.html.SafeStyleSheet.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
};
goog.DEBUG && (goog.html.SafeStyleSheet.prototype.toString = function() {
  return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
});
goog.html.SafeStyleSheet.unwrap = function(a) {
  if (a instanceof goog.html.SafeStyleSheet && a.constructor === goog.html.SafeStyleSheet && a.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return a.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
  }
  goog.asserts.fail("expected object of type SafeStyleSheet, got '" + a + "'");
  return "type_error:SafeStyleSheet";
};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(a) {
  return (new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(a);
};
goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(a) {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = a;
  return this;
};
goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
goog.fs = {};
goog.fs.url = {};
goog.fs.url.createObjectUrl = function(a) {
  return goog.fs.url.getUrlObject_().createObjectURL(a);
};
goog.fs.url.revokeObjectUrl = function(a) {
  goog.fs.url.getUrlObject_().revokeObjectURL(a);
};
goog.fs.url.getUrlObject_ = function() {
  var a = goog.fs.url.findUrlObject_();
  if (null != a) {
    return a;
  }
  throw Error("This browser doesn't seem to support blob URLs");
};
goog.fs.url.findUrlObject_ = function() {
  return goog.isDef(goog.global.URL) && goog.isDef(goog.global.URL.createObjectURL) ? goog.global.URL : goog.isDef(goog.global.webkitURL) && goog.isDef(goog.global.webkitURL.createObjectURL) ? goog.global.webkitURL : goog.isDef(goog.global.createObjectURL) ? goog.global : null;
};
goog.fs.url.browserSupportsObjectUrls = function() {
  return null != goog.fs.url.findUrlObject_();
};
goog.i18n = {};
goog.i18n.bidi = {};
goog.i18n.bidi.FORCE_RTL = !1;
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || ("ar" == goog.LOCALE.substring(0, 2).toLowerCase() || "fa" == goog.LOCALE.substring(0, 2).toLowerCase() || "he" == goog.LOCALE.substring(0, 2).toLowerCase() || "iw" == goog.LOCALE.substring(0, 2).toLowerCase() || "ps" == goog.LOCALE.substring(0, 2).toLowerCase() || "sd" == goog.LOCALE.substring(0, 2).toLowerCase() || "ug" == goog.LOCALE.substring(0, 2).toLowerCase() || "ur" == goog.LOCALE.substring(0, 2).toLowerCase() || "yi" == goog.LOCALE.substring(0, 
2).toLowerCase()) && (2 == goog.LOCALE.length || "-" == goog.LOCALE.substring(2, 3) || "_" == goog.LOCALE.substring(2, 3)) || 3 <= goog.LOCALE.length && "ckb" == goog.LOCALE.substring(0, 3).toLowerCase() && (3 == goog.LOCALE.length || "-" == goog.LOCALE.substring(3, 4) || "_" == goog.LOCALE.substring(3, 4));
goog.i18n.bidi.Format = {LRE:"\u202a", RLE:"\u202b", PDF:"\u202c", LRM:"\u200e", RLM:"\u200f"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(a, b) {
  return "number" == typeof a ? 0 < a ? goog.i18n.bidi.Dir.LTR : 0 > a ? goog.i18n.bidi.Dir.RTL : b ? null : goog.i18n.bidi.Dir.NEUTRAL : null == a ? null : a ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.ltrChars_ = "A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0800-\u1fff\u200e\u2c00-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";
goog.i18n.bidi.rtlChars_ = "\u0591-\u06ef\u06fa-\u07ff\u200f\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(a, b) {
  return b ? a.replace(goog.i18n.bidi.htmlSkipReg_, "") : a;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(a, b) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(a, b) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(a) {
  return goog.i18n.bidi.rtlRe_.test(a);
};
goog.i18n.bidi.isLtrChar = function(a) {
  return goog.i18n.bidi.ltrRe_.test(a);
};
goog.i18n.bidi.isNeutralChar = function(a) {
  return !goog.i18n.bidi.isLtrChar(a) && !goog.i18n.bidi.isRtlChar(a);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(a, b) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(a, b) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(a, b) {
  a = goog.i18n.bidi.stripHtmlIfNeeded_(a, b);
  return goog.i18n.bidi.isRequiredLtrRe_.test(a) || !goog.i18n.bidi.hasAnyLtr(a) && !goog.i18n.bidi.hasAnyRtl(a);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(a, b) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(a, b) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
goog.i18n.bidi.isRtlLanguage = function(a) {
  return goog.i18n.bidi.rtlLocalesRe_.test(a);
};
goog.i18n.bidi.bracketGuardHtmlRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(&lt;.*?(&gt;)+)/g;
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInHtml = function(a, b) {
  return (void 0 === b ? goog.i18n.bidi.hasAnyRtl(a) : b) ? a.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3drtl\x3e$\x26\x3c/span\x3e") : a.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3dltr\x3e$\x26\x3c/span\x3e");
};
goog.i18n.bidi.guardBracketInText = function(a, b) {
  var c = (void 0 === b ? goog.i18n.bidi.hasAnyRtl(a) : b) ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return a.replace(goog.i18n.bidi.bracketGuardTextRe_, c + "$\x26" + c);
};
goog.i18n.bidi.enforceRtlInHtml = function(a) {
  return "\x3c" == a.charAt(0) ? a.replace(/<\w+/, "$\x26 dir\x3drtl") : "\n\x3cspan dir\x3drtl\x3e" + a + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(a) {
  return goog.i18n.bidi.Format.RLE + a + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(a) {
  return "\x3c" == a.charAt(0) ? a.replace(/<\w+/, "$\x26 dir\x3dltr") : "\n\x3cspan dir\x3dltr\x3e" + a + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(a) {
  return goog.i18n.bidi.Format.LRE + a + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(a) {
  return a.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(a) {
  return a.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05f3");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
goog.i18n.bidi.rtlDetectionThreshold_ = .4;
goog.i18n.bidi.estimateDirection = function(a, b) {
  for (var c = 0, d = 0, e = !1, f = goog.i18n.bidi.stripHtmlIfNeeded_(a, b).split(goog.i18n.bidi.wordSeparatorRe_), g = 0;g < f.length;g++) {
    var h = f[g];
    goog.i18n.bidi.startsWithRtl(h) ? (c++, d++) : goog.i18n.bidi.isRequiredLtrRe_.test(h) ? e = !0 : goog.i18n.bidi.hasAnyLtr(h) ? d++ : goog.i18n.bidi.hasNumeralsRe_.test(h) && (e = !0);
  }
  return 0 == d ? e ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : c / d > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(a, b) {
  return goog.i18n.bidi.estimateDirection(a, b) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(a, b) {
  a && (b = goog.i18n.bidi.toDir(b)) && (a.style.textAlign = b == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT, a.dir = b == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr");
};
goog.i18n.bidi.setElementDirByTextDirectionality = function(a, b) {
  switch(goog.i18n.bidi.estimateDirection(b)) {
    case goog.i18n.bidi.Dir.LTR:
      a.dir = "ltr";
      break;
    case goog.i18n.bidi.Dir.RTL:
      a.dir = "rtl";
      break;
    default:
      a.removeAttribute("dir");
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.html.SafeUrl = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = !0;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = !0;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
goog.DEBUG && (goog.html.SafeUrl.prototype.toString = function() {
  return "SafeUrl{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
});
goog.html.SafeUrl.unwrap = function(a) {
  if (a instanceof goog.html.SafeUrl && a.constructor === goog.html.SafeUrl && a.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return a.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  }
  goog.asserts.fail("expected object of type SafeUrl, got '" + a + "'");
  return "type_error:SafeUrl";
};
goog.html.SafeUrl.fromConstant = function(a) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a));
};
goog.html.SAFE_MIME_TYPE_PATTERN_ = /^(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm))$/i;
goog.html.SafeUrl.fromBlob = function(a) {
  a = goog.html.SAFE_MIME_TYPE_PATTERN_.test(a.type) ? goog.fs.url.createObjectUrl(a) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
};
goog.html.DATA_URL_PATTERN_ = /^data:([^;,]*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.fromDataUrl = function(a) {
  var b = a.match(goog.html.DATA_URL_PATTERN_), b = b && goog.html.SAFE_MIME_TYPE_PATTERN_.test(b[1]);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b ? a : goog.html.SafeUrl.INNOCUOUS_STRING);
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^&:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.sanitize = function(a) {
  if (a instanceof goog.html.SafeUrl) {
    return a;
  }
  a = a.implementsGoogStringTypedString ? a.getTypedStringValue() : String(a);
  goog.html.SAFE_URL_PATTERN_.test(a) || (a = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(a) {
  var b = new goog.html.SafeUrl;
  b.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = a;
  return b;
};
goog.html.TrustedResourceUrl = function() {
  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = "";
  this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = !0;
goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = !0;
goog.html.TrustedResourceUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
goog.DEBUG && (goog.html.TrustedResourceUrl.prototype.toString = function() {
  return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
});
goog.html.TrustedResourceUrl.unwrap = function(a) {
  if (a instanceof goog.html.TrustedResourceUrl && a.constructor === goog.html.TrustedResourceUrl && a.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return a.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
  }
  goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + a + "'");
  return "type_error:TrustedResourceUrl";
};
goog.html.TrustedResourceUrl.fromConstant = function(a) {
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a));
};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(a) {
  var b = new goog.html.TrustedResourceUrl;
  b.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = a;
  return b;
};
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = !0;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = !0;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.DEBUG && (goog.html.SafeHtml.prototype.toString = function() {
  return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
});
goog.html.SafeHtml.unwrap = function(a) {
  if (a instanceof goog.html.SafeHtml && a.constructor === goog.html.SafeHtml && a.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return a.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  }
  goog.asserts.fail("expected object of type SafeHtml, got '" + a + "'");
  return "type_error:SafeHtml";
};
goog.html.SafeHtml.htmlEscape = function(a) {
  if (a instanceof goog.html.SafeHtml) {
    return a;
  }
  var b = null;
  a.implementsGoogI18nBidiDirectionalString && (b = a.getDirection());
  a = a.implementsGoogStringTypedString ? a.getTypedStringValue() : String(a);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(a), b);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(a) {
  if (a instanceof goog.html.SafeHtml) {
    return a;
  }
  a = goog.html.SafeHtml.htmlEscape(a);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(a)), a.getDirection());
};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(a) {
  if (a instanceof goog.html.SafeHtml) {
    return a;
  }
  a = goog.html.SafeHtml.htmlEscape(a);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.whitespaceEscape(goog.html.SafeHtml.unwrap(a)), a.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = {action:!0, cite:!0, data:!0, formaction:!0, href:!0, manifest:!0, poster:!0, src:!0};
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(goog.dom.TagName.EMBED, goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT, goog.dom.TagName.STYLE, goog.dom.TagName.TEMPLATE);
goog.html.SafeHtml.create = function(a, b, c) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(a)) {
    throw Error("Invalid tag name \x3c" + a + "\x3e.");
  }
  if (a.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw Error("Tag name \x3c" + a + "\x3e is not allowed for SafeHtml.");
  }
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(a, b, c);
};
goog.html.SafeHtml.createIframe = function(a, b, c, d) {
  var e = {};
  e.src = a || null;
  e.srcdoc = b || null;
  a = goog.html.SafeHtml.combineAttributes(e, {sandbox:""}, c);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", a, d);
};
goog.html.SafeHtml.createStyle = function(a, b) {
  var c = goog.html.SafeHtml.combineAttributes({type:"text/css"}, {}, b), d = "";
  a = goog.array.concat(a);
  for (var e = 0;e < a.length;e++) {
    d += goog.html.SafeStyleSheet.unwrap(a[e]);
  }
  d = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(d, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", c, d);
};
goog.html.SafeHtml.getAttrNameAndValue_ = function(a, b, c) {
  if (c instanceof goog.string.Const) {
    c = goog.string.Const.unwrap(c);
  } else {
    if ("style" == b.toLowerCase()) {
      c = goog.html.SafeHtml.getStyleValue_(c);
    } else {
      if (/^on/i.test(b)) {
        throw Error('Attribute "' + b + '" requires goog.string.Const value, "' + c + '" given.');
      }
      if (b.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
        if (c instanceof goog.html.TrustedResourceUrl) {
          c = goog.html.TrustedResourceUrl.unwrap(c);
        } else {
          if (c instanceof goog.html.SafeUrl) {
            c = goog.html.SafeUrl.unwrap(c);
          } else {
            if (goog.isString(c)) {
              c = goog.html.SafeUrl.sanitize(c).getTypedStringValue();
            } else {
              throw Error('Attribute "' + b + '" on tag "' + a + '" requires goog.html.SafeUrl, goog.string.Const, or string, value "' + c + '" given.');
            }
          }
        }
      }
    }
  }
  c.implementsGoogStringTypedString && (c = c.getTypedStringValue());
  goog.asserts.assert(goog.isString(c) || goog.isNumber(c), "String or number value expected, got " + typeof c + " with value: " + c);
  return b + '\x3d"' + goog.string.htmlEscape(String(c)) + '"';
};
goog.html.SafeHtml.getStyleValue_ = function(a) {
  if (!goog.isObject(a)) {
    throw Error('The "style" attribute requires goog.html.SafeStyle or map of style properties, ' + typeof a + " given: " + a);
  }
  a instanceof goog.html.SafeStyle || (a = goog.html.SafeStyle.create(a));
  return goog.html.SafeStyle.unwrap(a);
};
goog.html.SafeHtml.createWithDir = function(a, b, c, d) {
  b = goog.html.SafeHtml.create(b, c, d);
  b.dir_ = a;
  return b;
};
goog.html.SafeHtml.concat = function(a) {
  var b = goog.i18n.bidi.Dir.NEUTRAL, c = "", d = function(a) {
    goog.isArray(a) ? goog.array.forEach(a, d) : (a = goog.html.SafeHtml.htmlEscape(a), c += goog.html.SafeHtml.unwrap(a), a = a.getDirection(), b == goog.i18n.bidi.Dir.NEUTRAL ? b = a : a != goog.i18n.bidi.Dir.NEUTRAL && b != a && (b = null));
  };
  goog.array.forEach(arguments, d);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c, b);
};
goog.html.SafeHtml.concatWithDir = function(a, b) {
  var c = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  c.dir_ = a;
  return c;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(a, b) {
  return (new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(a, b);
};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(a, b) {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = a;
  this.dir_ = b;
  return this;
};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(a, b, c) {
  var d = null, e = "\x3c" + a;
  if (b) {
    for (var f in b) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(f)) {
        throw Error('Invalid attribute name "' + f + '".');
      }
      var g = b[f];
      goog.isDefAndNotNull(g) && (e += " " + goog.html.SafeHtml.getAttrNameAndValue_(a, f, g));
    }
  }
  goog.isDefAndNotNull(c) ? goog.isArray(c) || (c = [c]) : c = [];
  goog.dom.tags.isVoidTag(a.toLowerCase()) ? (goog.asserts.assert(!c.length, "Void tag \x3c" + a + "\x3e does not allow content."), e += "\x3e") : (d = goog.html.SafeHtml.concat(c), e += "\x3e" + goog.html.SafeHtml.unwrap(d) + "\x3c/" + a + "\x3e", d = d.getDirection());
  (a = b && b.dir) && (d = /^(ltr|rtl|auto)$/i.test(a) ? goog.i18n.bidi.Dir.NEUTRAL : null);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(e, d);
};
goog.html.SafeHtml.combineAttributes = function(a, b, c) {
  var d = {}, e;
  for (e in a) {
    goog.asserts.assert(e.toLowerCase() == e, "Must be lower case"), d[e] = a[e];
  }
  for (e in b) {
    goog.asserts.assert(e.toLowerCase() == e, "Must be lower case"), d[e] = b[e];
  }
  for (e in c) {
    var f = e.toLowerCase();
    if (f in a) {
      throw Error('Cannot override "' + f + '" attribute, got "' + e + '" with value "' + c[e] + '"');
    }
    f in b && delete d[f];
    d[e] = c[e];
  }
  return d;
};
goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!DOCTYPE html\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.dom.safe = {};
goog.dom.safe.InsertAdjacentHtmlPosition = {AFTERBEGIN:"afterbegin", AFTEREND:"afterend", BEFOREBEGIN:"beforebegin", BEFOREEND:"beforeend"};
goog.dom.safe.insertAdjacentHtml = function(a, b, c) {
  a.insertAdjacentHTML(b, goog.html.SafeHtml.unwrap(c));
};
goog.dom.safe.setInnerHtml = function(a, b) {
  a.innerHTML = goog.html.SafeHtml.unwrap(b);
};
goog.dom.safe.setOuterHtml = function(a, b) {
  a.outerHTML = goog.html.SafeHtml.unwrap(b);
};
goog.dom.safe.documentWrite = function(a, b) {
  a.write(goog.html.SafeHtml.unwrap(b));
};
goog.dom.safe.setAnchorHref = function(a, b) {
  var c;
  c = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitize(b);
  a.href = goog.html.SafeUrl.unwrap(c);
};
goog.dom.safe.setEmbedSrc = function(a, b) {
  a.src = goog.html.TrustedResourceUrl.unwrap(b);
};
goog.dom.safe.setFrameSrc = function(a, b) {
  a.src = goog.html.TrustedResourceUrl.unwrap(b);
};
goog.dom.safe.setIframeSrc = function(a, b) {
  a.src = goog.html.TrustedResourceUrl.unwrap(b);
};
goog.dom.safe.setLinkHrefAndRel = function(a, b, c) {
  a.rel = c;
  goog.string.caseInsensitiveContains(c, "stylesheet") ? (goog.asserts.assert(b instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'), a.href = goog.html.TrustedResourceUrl.unwrap(b)) : a.href = b instanceof goog.html.TrustedResourceUrl ? goog.html.TrustedResourceUrl.unwrap(b) : b instanceof goog.html.SafeUrl ? goog.html.SafeUrl.unwrap(b) : goog.html.SafeUrl.sanitize(b).getTypedStringValue();
};
goog.dom.safe.setObjectData = function(a, b) {
  a.data = goog.html.TrustedResourceUrl.unwrap(b);
};
goog.dom.safe.setScriptSrc = function(a, b) {
  a.src = goog.html.TrustedResourceUrl.unwrap(b);
};
goog.dom.safe.setLocationHref = function(a, b) {
  var c;
  c = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitize(b);
  a.href = goog.html.SafeUrl.unwrap(c);
};
goog.dom.safe.openInWindow = function(a, b, c, d, e) {
  a = a instanceof goog.html.SafeUrl ? a : goog.html.SafeUrl.sanitize(a);
  return (b || window).open(goog.html.SafeUrl.unwrap(a), c ? goog.string.Const.unwrap(c) : "", d, e);
};
goog.math = {};
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(a, b, c) {
  return Math.min(Math.max(a, b), c);
};
goog.math.modulo = function(a, b) {
  var c = a % b;
  return 0 > c * b ? c + b : c;
};
goog.math.lerp = function(a, b, c) {
  return a + c * (b - a);
};
goog.math.nearlyEquals = function(a, b, c) {
  return Math.abs(a - b) <= (c || 1E-6);
};
goog.math.standardAngle = function(a) {
  return goog.math.modulo(a, 360);
};
goog.math.standardAngleInRadians = function(a) {
  return goog.math.modulo(a, 2 * Math.PI);
};
goog.math.toRadians = function(a) {
  return a * Math.PI / 180;
};
goog.math.toDegrees = function(a) {
  return 180 * a / Math.PI;
};
goog.math.angleDx = function(a, b) {
  return b * Math.cos(goog.math.toRadians(a));
};
goog.math.angleDy = function(a, b) {
  return b * Math.sin(goog.math.toRadians(a));
};
goog.math.angle = function(a, b, c, d) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(d - b, c - a)));
};
goog.math.angleDifference = function(a, b) {
  var c = goog.math.standardAngle(b) - goog.math.standardAngle(a);
  180 < c ? c -= 360 : -180 >= c && (c = 360 + c);
  return c;
};
goog.math.sign = Math.sign || function(a) {
  return 0 < a ? 1 : 0 > a ? -1 : a;
};
goog.math.longestCommonSubsequence = function(a, b, c, d) {
  c = c || function(a, b) {
    return a == b;
  };
  d = d || function(b, c) {
    return a[b];
  };
  for (var e = a.length, f = b.length, g = [], h = 0;h < e + 1;h++) {
    g[h] = [], g[h][0] = 0;
  }
  for (var k = 0;k < f + 1;k++) {
    g[0][k] = 0;
  }
  for (h = 1;h <= e;h++) {
    for (k = 1;k <= f;k++) {
      c(a[h - 1], b[k - 1]) ? g[h][k] = g[h - 1][k - 1] + 1 : g[h][k] = Math.max(g[h - 1][k], g[h][k - 1]);
    }
  }
  for (var m = [], h = e, k = f;0 < h && 0 < k;) {
    c(a[h - 1], b[k - 1]) ? (m.unshift(d(h - 1, k - 1)), h--, k--) : g[h - 1][k] > g[h][k - 1] ? h-- : k--;
  }
  return m;
};
goog.math.sum = function(a) {
  return goog.array.reduce(arguments, function(a, c) {
    return a + c;
  }, 0);
};
goog.math.average = function(a) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(a) {
  var b = arguments.length;
  if (2 > b) {
    return 0;
  }
  var c = goog.math.average.apply(null, arguments);
  return goog.math.sum.apply(null, goog.array.map(arguments, function(a) {
    return Math.pow(a - c, 2);
  })) / (b - 1);
};
goog.math.standardDeviation = function(a) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(a) {
  return isFinite(a) && 0 == a % 1;
};
goog.math.isFiniteNumber = function(a) {
  return isFinite(a) && !isNaN(a);
};
goog.math.isNegativeZero = function(a) {
  return 0 == a && 0 > 1 / a;
};
goog.math.log10Floor = function(a) {
  if (0 < a) {
    var b = Math.round(Math.log(a) * Math.LOG10E);
    return b - (parseFloat("1e" + b) > a ? 1 : 0);
  }
  return 0 == a ? -Infinity : NaN;
};
goog.math.safeFloor = function(a, b) {
  goog.asserts.assert(!goog.isDef(b) || 0 < b);
  return Math.floor(a + (b || 2E-15));
};
goog.math.safeCeil = function(a, b) {
  goog.asserts.assert(!goog.isDef(b) || 0 < b);
  return Math.ceil(a - (b || 2E-15));
};
goog.math.Coordinate = function(a, b) {
  this.x = goog.isDef(a) ? a : 0;
  this.y = goog.isDef(b) ? b : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
goog.DEBUG && (goog.math.Coordinate.prototype.toString = function() {
  return "(" + this.x + ", " + this.y + ")";
});
goog.math.Coordinate.equals = function(a, b) {
  return a == b ? !0 : a && b ? a.x == b.x && a.y == b.y : !1;
};
goog.math.Coordinate.distance = function(a, b) {
  var c = a.x - b.x, d = a.y - b.y;
  return Math.sqrt(c * c + d * d);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var c = a.x - b.x, d = a.y - b.y;
  return c * c + d * d;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(a, b) {
  a instanceof goog.math.Coordinate ? (this.x += a.x, this.y += a.y) : (this.x += a, goog.isNumber(b) && (this.y += b));
  return this;
};
goog.math.Coordinate.prototype.scale = function(a, b) {
  var c = goog.isNumber(b) ? b : a;
  this.x *= a;
  this.y *= c;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(a, b) {
  var c = b || new goog.math.Coordinate(0, 0), d = this.x, e = this.y, f = Math.cos(a), g = Math.sin(a);
  this.x = (d - c.x) * f - (e - c.y) * g + c.x;
  this.y = (d - c.x) * g + (e - c.y) * f + c.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(a, b) {
  this.rotateRadians(goog.math.toRadians(a), b);
};
goog.math.Size = function(a, b) {
  this.width = a;
  this.height = b;
};
goog.math.Size.equals = function(a, b) {
  return a == b ? !0 : a && b ? a.width == b.width && a.height == b.height : !1;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
goog.DEBUG && (goog.math.Size.prototype.toString = function() {
  return "(" + this.width + " x " + this.height + ")";
});
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return 2 * (this.width + this.height);
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return !this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(a) {
  return this.width <= a.width && this.height <= a.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(a, b) {
  var c = goog.isNumber(b) ? b : a;
  this.width *= a;
  this.height *= c;
  return this;
};
goog.math.Size.prototype.scaleToCover = function(a) {
  a = this.aspectRatio() <= a.aspectRatio() ? a.width / this.width : a.height / this.height;
  return this.scale(a);
};
goog.math.Size.prototype.scaleToFit = function(a) {
  a = this.aspectRatio() > a.aspectRatio() ? a.width / this.width : a.height / this.height;
  return this.scale(a);
};
goog.dom.ASSUME_QUIRKS_MODE = !1;
goog.dom.ASSUME_STANDARDS_MODE = !1;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(a) {
  return a ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(a)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(a) {
  return goog.dom.getElementHelper_(document, a);
};
goog.dom.getElementHelper_ = function(a, b) {
  return goog.isString(b) ? a.getElementById(b) : b;
};
goog.dom.getRequiredElement = function(a) {
  return goog.dom.getRequiredElementHelper_(document, a);
};
goog.dom.getRequiredElementHelper_ = function(a, b) {
  goog.asserts.assertString(b);
  var c = goog.dom.getElementHelper_(a, b);
  return c = goog.asserts.assertElement(c, "No element found with id: " + b);
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(a, b, c) {
  return goog.dom.getElementsByTagNameAndClass_(document, a, b, c);
};
goog.dom.getElementsByClass = function(a, b) {
  var c = b || document;
  return goog.dom.canUseQuerySelector_(c) ? c.querySelectorAll("." + a) : goog.dom.getElementsByTagNameAndClass_(document, "*", a, b);
};
goog.dom.getElementByClass = function(a, b) {
  var c = b || document, d = null;
  return (d = c.getElementsByClassName ? c.getElementsByClassName(a)[0] : goog.dom.canUseQuerySelector_(c) ? c.querySelector("." + a) : goog.dom.getElementsByTagNameAndClass_(document, "*", a, b)[0]) || null;
};
goog.dom.getRequiredElementByClass = function(a, b) {
  var c = goog.dom.getElementByClass(a, b);
  return goog.asserts.assert(c, "No element found with className: " + a);
};
goog.dom.canUseQuerySelector_ = function(a) {
  return !(!a.querySelectorAll || !a.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(a, b, c, d) {
  a = d || a;
  b = b && "*" != b ? b.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(a) && (b || c)) {
    return a.querySelectorAll(b + (c ? "." + c : ""));
  }
  if (c && a.getElementsByClassName) {
    a = a.getElementsByClassName(c);
    if (b) {
      d = {};
      for (var e = 0, f = 0, g;g = a[f];f++) {
        b == g.nodeName && (d[e++] = g);
      }
      d.length = e;
      return d;
    }
    return a;
  }
  a = a.getElementsByTagName(b || "*");
  if (c) {
    d = {};
    for (f = e = 0;g = a[f];f++) {
      b = g.className, "function" == typeof b.split && goog.array.contains(b.split(/\s+/), c) && (d[e++] = g);
    }
    d.length = e;
    return d;
  }
  return a;
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(a, b) {
  goog.object.forEach(b, function(b, d) {
    "style" == d ? a.style.cssText = b : "class" == d ? a.className = b : "for" == d ? a.htmlFor = b : goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(d) ? a.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[d], b) : goog.string.startsWith(d, "aria-") || goog.string.startsWith(d, "data-") ? a.setAttribute(d, b) : a[d] = b;
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {cellpadding:"cellPadding", cellspacing:"cellSpacing", colspan:"colSpan", frameborder:"frameBorder", height:"height", maxlength:"maxLength", role:"role", rowspan:"rowSpan", type:"type", usemap:"useMap", valign:"vAlign", width:"width"};
goog.dom.getViewportSize = function(a) {
  return goog.dom.getViewportSize_(a || window);
};
goog.dom.getViewportSize_ = function(a) {
  a = a.document;
  a = goog.dom.isCss1CompatMode_(a) ? a.documentElement : a.body;
  return new goog.math.Size(a.clientWidth, a.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(a) {
  var b = a.document, c = 0;
  if (b) {
    var c = b.body, d = b.documentElement;
    if (!d || !c) {
      return 0;
    }
    a = goog.dom.getViewportSize_(a).height;
    if (goog.dom.isCss1CompatMode_(b) && d.scrollHeight) {
      c = d.scrollHeight != a ? d.scrollHeight : d.offsetHeight;
    } else {
      var b = d.scrollHeight, e = d.offsetHeight;
      d.clientHeight != e && (b = c.scrollHeight, e = c.offsetHeight);
      c = b > a ? b > e ? b : e : b < e ? b : e;
    }
  }
  return c;
};
goog.dom.getPageScroll = function(a) {
  return goog.dom.getDomHelper((a || goog.global || window).document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(a) {
  var b = goog.dom.getDocumentScrollElement_(a);
  a = goog.dom.getWindow_(a);
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && a.pageYOffset != b.scrollTop ? new goog.math.Coordinate(b.scrollLeft, b.scrollTop) : new goog.math.Coordinate(a.pageXOffset || b.scrollLeft, a.pageYOffset || b.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(a) {
  return a.scrollingElement ? a.scrollingElement : !goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(a) ? a.documentElement : a.body || a.documentElement;
};
goog.dom.getWindow = function(a) {
  return a ? goog.dom.getWindow_(a) : window;
};
goog.dom.getWindow_ = function(a) {
  return a.parentWindow || a.defaultView;
};
goog.dom.createDom = function(a, b, c) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(a, b) {
  var c = b[0], d = b[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && d && (d.name || d.type)) {
    c = ["\x3c", c];
    d.name && c.push(' name\x3d"', goog.string.htmlEscape(d.name), '"');
    if (d.type) {
      c.push(' type\x3d"', goog.string.htmlEscape(d.type), '"');
      var e = {};
      goog.object.extend(e, d);
      delete e.type;
      d = e;
    }
    c.push("\x3e");
    c = c.join("");
  }
  c = a.createElement(c);
  d && (goog.isString(d) ? c.className = d : goog.isArray(d) ? c.className = d.join(" ") : goog.dom.setProperties(c, d));
  2 < b.length && goog.dom.append_(a, c, b, 2);
  return c;
};
goog.dom.append_ = function(a, b, c, d) {
  function e(c) {
    c && b.appendChild(goog.isString(c) ? a.createTextNode(c) : c);
  }
  for (;d < c.length;d++) {
    var f = c[d];
    goog.isArrayLike(f) && !goog.dom.isNodeLike(f) ? goog.array.forEach(goog.dom.isNodeList(f) ? goog.array.toArray(f) : f, e) : e(f);
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(a) {
  return document.createElement(a);
};
goog.dom.createTextNode = function(a) {
  return document.createTextNode(String(a));
};
goog.dom.createTable = function(a, b, c) {
  return goog.dom.createTable_(document, a, b, !!c);
};
goog.dom.createTable_ = function(a, b, c, d) {
  for (var e = a.createElement(goog.dom.TagName.TABLE), f = e.appendChild(a.createElement(goog.dom.TagName.TBODY)), g = 0;g < b;g++) {
    for (var h = a.createElement(goog.dom.TagName.TR), k = 0;k < c;k++) {
      var m = a.createElement(goog.dom.TagName.TD);
      d && goog.dom.setTextContent(m, goog.string.Unicode.NBSP);
      h.appendChild(m);
    }
    f.appendChild(h);
  }
  return e;
};
goog.dom.safeHtmlToNode = function(a) {
  return goog.dom.safeHtmlToNode_(document, a);
};
goog.dom.safeHtmlToNode_ = function(a, b) {
  var c = a.createElement(goog.dom.TagName.DIV);
  goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT ? (goog.dom.safe.setInnerHtml(c, goog.html.SafeHtml.concat(goog.html.SafeHtml.create("br"), b)), c.removeChild(c.firstChild)) : goog.dom.safe.setInnerHtml(c, b);
  return goog.dom.childrenToNode_(a, c);
};
goog.dom.htmlToDocumentFragment = function(a) {
  return goog.dom.htmlToDocumentFragment_(document, a);
};
goog.dom.htmlToDocumentFragment_ = function(a, b) {
  var c = a.createElement(goog.dom.TagName.DIV);
  goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT ? (c.innerHTML = "\x3cbr\x3e" + b, c.removeChild(c.firstChild)) : c.innerHTML = b;
  return goog.dom.childrenToNode_(a, c);
};
goog.dom.childrenToNode_ = function(a, b) {
  if (1 == b.childNodes.length) {
    return b.removeChild(b.firstChild);
  }
  for (var c = a.createDocumentFragment();b.firstChild;) {
    c.appendChild(b.firstChild);
  }
  return c;
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(a) {
  return goog.dom.COMPAT_MODE_KNOWN_ ? goog.dom.ASSUME_STANDARDS_MODE : "CSS1Compat" == a.compatMode;
};
goog.dom.canHaveChildren = function(a) {
  if (a.nodeType != goog.dom.NodeType.ELEMENT) {
    return !1;
  }
  switch(a.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return !1;
  }
  return !0;
};
goog.dom.appendChild = function(a, b) {
  a.appendChild(b);
};
goog.dom.append = function(a, b) {
  goog.dom.append_(goog.dom.getOwnerDocument(a), a, arguments, 1);
};
goog.dom.removeChildren = function(a) {
  for (var b;b = a.firstChild;) {
    a.removeChild(b);
  }
};
goog.dom.insertSiblingBefore = function(a, b) {
  b.parentNode && b.parentNode.insertBefore(a, b);
};
goog.dom.insertSiblingAfter = function(a, b) {
  b.parentNode && b.parentNode.insertBefore(a, b.nextSibling);
};
goog.dom.insertChildAt = function(a, b, c) {
  a.insertBefore(b, a.childNodes[c] || null);
};
goog.dom.removeNode = function(a) {
  return a && a.parentNode ? a.parentNode.removeChild(a) : null;
};
goog.dom.replaceNode = function(a, b) {
  var c = b.parentNode;
  c && c.replaceChild(a, b);
};
goog.dom.flattenElement = function(a) {
  var b, c = a.parentNode;
  if (c && c.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (a.removeNode) {
      return a.removeNode(!1);
    }
    for (;b = a.firstChild;) {
      c.insertBefore(b, a);
    }
    return goog.dom.removeNode(a);
  }
};
goog.dom.getChildren = function(a) {
  return goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && void 0 != a.children ? a.children : goog.array.filter(a.childNodes, function(a) {
    return a.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(a) {
  return goog.isDef(a.firstElementChild) ? a.firstElementChild : goog.dom.getNextElementNode_(a.firstChild, !0);
};
goog.dom.getLastElementChild = function(a) {
  return goog.isDef(a.lastElementChild) ? a.lastElementChild : goog.dom.getNextElementNode_(a.lastChild, !1);
};
goog.dom.getNextElementSibling = function(a) {
  return goog.isDef(a.nextElementSibling) ? a.nextElementSibling : goog.dom.getNextElementNode_(a.nextSibling, !0);
};
goog.dom.getPreviousElementSibling = function(a) {
  return goog.isDef(a.previousElementSibling) ? a.previousElementSibling : goog.dom.getNextElementNode_(a.previousSibling, !1);
};
goog.dom.getNextElementNode_ = function(a, b) {
  for (;a && a.nodeType != goog.dom.NodeType.ELEMENT;) {
    a = b ? a.nextSibling : a.previousSibling;
  }
  return a;
};
goog.dom.getNextNode = function(a) {
  if (!a) {
    return null;
  }
  if (a.firstChild) {
    return a.firstChild;
  }
  for (;a && !a.nextSibling;) {
    a = a.parentNode;
  }
  return a ? a.nextSibling : null;
};
goog.dom.getPreviousNode = function(a) {
  if (!a) {
    return null;
  }
  if (!a.previousSibling) {
    return a.parentNode;
  }
  for (a = a.previousSibling;a && a.lastChild;) {
    a = a.lastChild;
  }
  return a;
};
goog.dom.isNodeLike = function(a) {
  return goog.isObject(a) && 0 < a.nodeType;
};
goog.dom.isElement = function(a) {
  return goog.isObject(a) && a.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(a) {
  return goog.isObject(a) && a.window == a;
};
goog.dom.getParentElement = function(a) {
  var b;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY && !(goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10") && goog.global.SVGElement && a instanceof goog.global.SVGElement) && (b = a.parentElement)) {
    return b;
  }
  b = a.parentNode;
  return goog.dom.isElement(b) ? b : null;
};
goog.dom.contains = function(a, b) {
  if (a.contains && b.nodeType == goog.dom.NodeType.ELEMENT) {
    return a == b || a.contains(b);
  }
  if ("undefined" != typeof a.compareDocumentPosition) {
    return a == b || Boolean(a.compareDocumentPosition(b) & 16);
  }
  for (;b && a != b;) {
    b = b.parentNode;
  }
  return b == a;
};
goog.dom.compareNodeOrder = function(a, b) {
  if (a == b) {
    return 0;
  }
  if (a.compareDocumentPosition) {
    return a.compareDocumentPosition(b) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (a.nodeType == goog.dom.NodeType.DOCUMENT) {
      return -1;
    }
    if (b.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in a || a.parentNode && "sourceIndex" in a.parentNode) {
    var c = a.nodeType == goog.dom.NodeType.ELEMENT, d = b.nodeType == goog.dom.NodeType.ELEMENT;
    if (c && d) {
      return a.sourceIndex - b.sourceIndex;
    }
    var e = a.parentNode, f = b.parentNode;
    return e == f ? goog.dom.compareSiblingOrder_(a, b) : !c && goog.dom.contains(e, b) ? -1 * goog.dom.compareParentsDescendantNodeIe_(a, b) : !d && goog.dom.contains(f, a) ? goog.dom.compareParentsDescendantNodeIe_(b, a) : (c ? a.sourceIndex : e.sourceIndex) - (d ? b.sourceIndex : f.sourceIndex);
  }
  d = goog.dom.getOwnerDocument(a);
  c = d.createRange();
  c.selectNode(a);
  c.collapse(!0);
  d = d.createRange();
  d.selectNode(b);
  d.collapse(!0);
  return c.compareBoundaryPoints(goog.global.Range.START_TO_END, d);
};
goog.dom.compareParentsDescendantNodeIe_ = function(a, b) {
  var c = a.parentNode;
  if (c == b) {
    return -1;
  }
  for (var d = b;d.parentNode != c;) {
    d = d.parentNode;
  }
  return goog.dom.compareSiblingOrder_(d, a);
};
goog.dom.compareSiblingOrder_ = function(a, b) {
  for (var c = b;c = c.previousSibling;) {
    if (c == a) {
      return -1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(a) {
  var b, c = arguments.length;
  if (!c) {
    return null;
  }
  if (1 == c) {
    return arguments[0];
  }
  var d = [], e = Infinity;
  for (b = 0;b < c;b++) {
    for (var f = [], g = arguments[b];g;) {
      f.unshift(g), g = g.parentNode;
    }
    d.push(f);
    e = Math.min(e, f.length);
  }
  f = null;
  for (b = 0;b < e;b++) {
    for (var g = d[0][b], h = 1;h < c;h++) {
      if (g != d[h][b]) {
        return f;
      }
    }
    f = g;
  }
  return f;
};
goog.dom.getOwnerDocument = function(a) {
  goog.asserts.assert(a, "Node cannot be null or undefined.");
  return a.nodeType == goog.dom.NodeType.DOCUMENT ? a : a.ownerDocument || a.document;
};
goog.dom.getFrameContentDocument = function(a) {
  return a.contentDocument || a.contentWindow.document;
};
goog.dom.getFrameContentWindow = function(a) {
  return a.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(a));
};
goog.dom.setTextContent = function(a, b) {
  goog.asserts.assert(null != a, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in a) {
    a.textContent = b;
  } else {
    if (a.nodeType == goog.dom.NodeType.TEXT) {
      a.data = b;
    } else {
      if (a.firstChild && a.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        for (;a.lastChild != a.firstChild;) {
          a.removeChild(a.lastChild);
        }
        a.firstChild.data = b;
      } else {
        goog.dom.removeChildren(a);
        var c = goog.dom.getOwnerDocument(a);
        a.appendChild(c.createTextNode(String(b)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(a) {
  if ("outerHTML" in a) {
    return a.outerHTML;
  }
  var b = goog.dom.getOwnerDocument(a).createElement(goog.dom.TagName.DIV);
  b.appendChild(a.cloneNode(!0));
  return b.innerHTML;
};
goog.dom.findNode = function(a, b) {
  var c = [];
  return goog.dom.findNodes_(a, b, c, !0) ? c[0] : void 0;
};
goog.dom.findNodes = function(a, b) {
  var c = [];
  goog.dom.findNodes_(a, b, c, !1);
  return c;
};
goog.dom.findNodes_ = function(a, b, c, d) {
  if (null != a) {
    for (a = a.firstChild;a;) {
      if (b(a) && (c.push(a), d) || goog.dom.findNodes_(a, b, c, d)) {
        return !0;
      }
      a = a.nextSibling;
    }
  }
  return !1;
};
goog.dom.TAGS_TO_IGNORE_ = {SCRIPT:1, STYLE:1, HEAD:1, IFRAME:1, OBJECT:1};
goog.dom.PREDEFINED_TAG_VALUES_ = {IMG:" ", BR:"\n"};
goog.dom.isFocusableTabIndex = function(a) {
  return goog.dom.hasSpecifiedTabIndex_(a) && goog.dom.isTabIndexFocusable_(a);
};
goog.dom.setFocusableTabIndex = function(a, b) {
  b ? a.tabIndex = 0 : (a.tabIndex = -1, a.removeAttribute("tabIndex"));
};
goog.dom.isFocusable = function(a) {
  var b;
  return (b = goog.dom.nativelySupportsFocus_(a) ? !a.disabled && (!goog.dom.hasSpecifiedTabIndex_(a) || goog.dom.isTabIndexFocusable_(a)) : goog.dom.isFocusableTabIndex(a)) && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(a) : b;
};
goog.dom.hasSpecifiedTabIndex_ = function(a) {
  a = a.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(a) && a.specified;
};
goog.dom.isTabIndexFocusable_ = function(a) {
  a = a.tabIndex;
  return goog.isNumber(a) && 0 <= a && 32768 > a;
};
goog.dom.nativelySupportsFocus_ = function(a) {
  return a.tagName == goog.dom.TagName.A || a.tagName == goog.dom.TagName.INPUT || a.tagName == goog.dom.TagName.TEXTAREA || a.tagName == goog.dom.TagName.SELECT || a.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(a) {
  a = goog.isFunction(a.getBoundingClientRect) ? a.getBoundingClientRect() : {height:a.offsetHeight, width:a.offsetWidth};
  return goog.isDefAndNotNull(a) && 0 < a.height && 0 < a.width;
};
goog.dom.getTextContent = function(a) {
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in a) {
    a = goog.string.canonicalizeNewlines(a.innerText);
  } else {
    var b = [];
    goog.dom.getTextContent_(a, b, !0);
    a = b.join("");
  }
  a = a.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  a = a.replace(/\u200B/g, "");
  goog.dom.BrowserFeature.CAN_USE_INNER_TEXT || (a = a.replace(/ +/g, " "));
  " " != a && (a = a.replace(/^\s*/, ""));
  return a;
};
goog.dom.getRawTextContent = function(a) {
  var b = [];
  goog.dom.getTextContent_(a, b, !1);
  return b.join("");
};
goog.dom.getTextContent_ = function(a, b, c) {
  if (!(a.nodeName in goog.dom.TAGS_TO_IGNORE_)) {
    if (a.nodeType == goog.dom.NodeType.TEXT) {
      c ? b.push(String(a.nodeValue).replace(/(\r\n|\r|\n)/g, "")) : b.push(a.nodeValue);
    } else {
      if (a.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        b.push(goog.dom.PREDEFINED_TAG_VALUES_[a.nodeName]);
      } else {
        for (a = a.firstChild;a;) {
          goog.dom.getTextContent_(a, b, c), a = a.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(a) {
  return goog.dom.getTextContent(a).length;
};
goog.dom.getNodeTextOffset = function(a, b) {
  for (var c = b || goog.dom.getOwnerDocument(a).body, d = [];a && a != c;) {
    for (var e = a;e = e.previousSibling;) {
      d.unshift(goog.dom.getTextContent(e));
    }
    a = a.parentNode;
  }
  return goog.string.trimLeft(d.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(a, b, c) {
  a = [a];
  for (var d = 0, e = null;0 < a.length && d < b;) {
    if (e = a.pop(), !(e.nodeName in goog.dom.TAGS_TO_IGNORE_)) {
      if (e.nodeType == goog.dom.NodeType.TEXT) {
        var f = e.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " "), d = d + f.length
      } else {
        if (e.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          d += goog.dom.PREDEFINED_TAG_VALUES_[e.nodeName].length;
        } else {
          for (f = e.childNodes.length - 1;0 <= f;f--) {
            a.push(e.childNodes[f]);
          }
        }
      }
    }
  }
  goog.isObject(c) && (c.remainder = e ? e.nodeValue.length + b - d - 1 : 0, c.node = e);
  return e;
};
goog.dom.isNodeList = function(a) {
  if (a && "number" == typeof a.length) {
    if (goog.isObject(a)) {
      return "function" == typeof a.item || "string" == typeof a.item;
    }
    if (goog.isFunction(a)) {
      return "function" == typeof a.item;
    }
  }
  return !1;
};
goog.dom.getAncestorByTagNameAndClass = function(a, b, c, d) {
  if (!b && !c) {
    return null;
  }
  var e = b ? b.toUpperCase() : null;
  return goog.dom.getAncestor(a, function(a) {
    return (!e || a.nodeName == e) && (!c || goog.isString(a.className) && goog.array.contains(a.className.split(/\s+/), c));
  }, !0, d);
};
goog.dom.getAncestorByClass = function(a, b, c) {
  return goog.dom.getAncestorByTagNameAndClass(a, null, b, c);
};
goog.dom.getAncestor = function(a, b, c, d) {
  c || (a = a.parentNode);
  c = null == d;
  for (var e = 0;a && (c || e <= d);) {
    goog.asserts.assert("parentNode" != a.name);
    if (b(a)) {
      return a;
    }
    a = a.parentNode;
    e++;
  }
  return null;
};
goog.dom.getActiveElement = function(a) {
  try {
    return a && a.activeElement;
  } catch (b) {
  }
  return null;
};
goog.dom.getPixelRatio = function() {
  var a = goog.dom.getWindow();
  return goog.isDef(a.devicePixelRatio) ? a.devicePixelRatio : a.matchMedia ? goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1 : 1;
};
goog.dom.matchesPixelRatio_ = function(a) {
  return goog.dom.getWindow().matchMedia("(-webkit-min-device-pixel-ratio: " + a + "),(min--moz-device-pixel-ratio: " + a + "),(min-resolution: " + a + "dppx)").matches ? a : 0;
};
goog.dom.DomHelper = function(a) {
  this.document_ = a || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(a) {
  this.document_ = a;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(a) {
  return goog.dom.getElementHelper_(this.document_, a);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(a) {
  return goog.dom.getRequiredElementHelper_(this.document_, a);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(a, b, c) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, a, b, c);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(a, b) {
  return goog.dom.getElementsByClass(a, b || this.document_);
};
goog.dom.DomHelper.prototype.getElementByClass = function(a, b) {
  return goog.dom.getElementByClass(a, b || this.document_);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(a, b) {
  return goog.dom.getRequiredElementByClass(a, b || this.document_);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(a) {
  return goog.dom.getViewportSize(a || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.DomHelper.prototype.createDom = function(a, b, c) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(a) {
  return this.document_.createElement(a);
};
goog.dom.DomHelper.prototype.createTextNode = function(a) {
  return this.document_.createTextNode(String(a));
};
goog.dom.DomHelper.prototype.createTable = function(a, b, c) {
  return goog.dom.createTable_(this.document_, a, b, !!c);
};
goog.dom.DomHelper.prototype.safeHtmlToNode = function(a) {
  return goog.dom.safeHtmlToNode_(this.document_, a);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(a) {
  return goog.dom.htmlToDocumentFragment_(this.document_, a);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(a) {
  return goog.dom.getActiveElement(a || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.userAgent.product = {};
goog.userAgent.product.ASSUME_FIREFOX = !1;
goog.userAgent.product.ASSUME_IPHONE = !1;
goog.userAgent.product.ASSUME_IPAD = !1;
goog.userAgent.product.ASSUME_ANDROID = !1;
goog.userAgent.product.ASSUME_CHROME = !1;
goog.userAgent.product.ASSUME_SAFARI = !1;
goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;
goog.userAgent.product.OPERA = goog.userAgent.OPERA;
goog.userAgent.product.IE = goog.userAgent.IE;
goog.userAgent.product.EDGE = goog.userAgent.EDGE;
goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.labs.userAgent.browser.isFirefox();
goog.userAgent.product.isIphoneOrIpod_ = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpod();
};
goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.isIphoneOrIpod_();
goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.labs.userAgent.browser.isAndroidBrowser();
goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.labs.userAgent.browser.isChrome();
goog.userAgent.product.isSafariDesktop_ = function() {
  return goog.labs.userAgent.browser.isSafari() && !goog.labs.userAgent.platform.isIos();
};
goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.isSafariDesktop_();
goog.string.StringBuffer = function(a, b) {
  null != a && this.append.apply(this, arguments);
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(a) {
  this.buffer_ = "" + a;
};
goog.string.StringBuffer.prototype.append = function(a, b, c) {
  this.buffer_ += a;
  if (null != b) {
    for (var d = 1;d < arguments.length;d++) {
      this.buffer_ += arguments[d];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
var cljs = {core:{}};
cljs.core._STAR_clojurescript_version_STAR_ = "1.7.170";
cljs.core._STAR_unchecked_if_STAR_ = !1;
cljs.core._STAR_target_STAR_ = "default";
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = !0;
"undefined" === typeof cljs.core._STAR_print_fn_STAR_ && (cljs.core._STAR_print_fn_STAR_ = function(a) {
  throw Error("No *print-fn* fn set for evaluation environment");
});
"undefined" === typeof cljs.core._STAR_print_err_fn_STAR_ && (cljs.core._STAR_print_err_fn_STAR_ = function(a) {
  throw Error("No *print-err-fn* fn set for evaluation environment");
});
cljs.core.set_print_fn_BANG_ = function(a) {
  return cljs.core._STAR_print_fn_STAR_ = a;
};
cljs.core.set_print_err_fn_BANG_ = function(a) {
  return cljs.core._STAR_print_err_fn_STAR_ = a;
};
cljs.core._STAR_flush_on_newline_STAR_ = !0;
cljs.core._STAR_print_newline_STAR_ = !0;
cljs.core._STAR_print_readably_STAR_ = !0;
cljs.core._STAR_print_meta_STAR_ = !1;
cljs.core._STAR_print_dup_STAR_ = !1;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
"undefined" === typeof cljs.core._STAR_loaded_libs_STAR_ && (cljs.core._STAR_loaded_libs_STAR_ = null);
cljs.core.pr_opts = function() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.into_array;
cljs.core.enable_console_print_BANG_ = function() {
  cljs.core._STAR_print_newline_STAR_ = !1;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var a = function(a) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.into_array.call(null, a));
    }, b = function(b) {
      var d = null;
      if (0 < arguments.length) {
        for (var d = 0, e = Array(arguments.length - 0);d < e.length;) {
          e[d] = arguments[d + 0], ++d;
        }
        d = new cljs.core.IndexedSeq(e, 0);
      }
      return a.call(this, d);
    };
    b.cljs$lang$maxFixedArity = 0;
    b.cljs$lang$applyTo = function(b) {
      b = cljs.core.seq(b);
      return a(b);
    };
    b.cljs$core$IFn$_invoke$arity$variadic = a;
    return b;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var a = function(a) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.into_array.call(null, a));
    }, b = function(b) {
      var d = null;
      if (0 < arguments.length) {
        for (var d = 0, e = Array(arguments.length - 0);d < e.length;) {
          e[d] = arguments[d + 0], ++d;
        }
        d = new cljs.core.IndexedSeq(e, 0);
      }
      return a.call(this, d);
    };
    b.cljs$lang$maxFixedArity = 0;
    b.cljs$lang$applyTo = function(b) {
      b = cljs.core.seq(b);
      return a(b);
    };
    b.cljs$core$IFn$_invoke$arity$variadic = a;
    return b;
  }();
  return null;
};
cljs.core.truth_ = function(a) {
  return null != a && !1 !== a;
};
cljs.core.not_native = null;
cljs.core.instance_QMARK_;
cljs.core.Keyword;
cljs.core.identical_QMARK_ = function(a, b) {
  return a === b;
};
cljs.core.nil_QMARK_ = function(a) {
  return null == a;
};
cljs.core.array_QMARK_ = function(a) {
  return "nodejs" === cljs.core._STAR_target_STAR_ ? Array.isArray(a) : a instanceof Array;
};
cljs.core.number_QMARK_ = function(a) {
  return "number" === typeof a;
};
cljs.core.not = function(a) {
  return null == a ? !0 : !1 === a ? !0 : !1;
};
cljs.core.some_QMARK_ = function(a) {
  return null != a;
};
cljs.core.object_QMARK_ = function(a) {
  return null != a ? a.constructor === Object : !1;
};
cljs.core.string_QMARK_ = function(a) {
  return goog.isString(a);
};
cljs.core.char_QMARK_ = function(a) {
  return goog.string.isUnicodeChar(a);
};
cljs.core.native_satisfies_QMARK_ = function(a, b) {
  return a[goog.typeOf(null == b ? null : b)] ? !0 : a._ ? !0 : !1;
};
cljs.core.is_proto_ = function(a) {
  return a.constructor.prototype === a;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function(a) {
  return null == a ? null : a.constructor;
};
cljs.core.missing_protocol = function(a, b) {
  var c = cljs.core.type(b), c = cljs.core.truth_(cljs.core.truth_(c) ? c.cljs$lang$type : c) ? c.cljs$lang$ctorStr : goog.typeOf(b);
  return Error(["No protocol method ", a, " defined for type ", c, ": ", b].join(""));
};
cljs.core.type__GT_str = function(a) {
  var b = a.cljs$lang$ctorStr;
  return cljs.core.truth_(b) ? b : "" + cljs.core.str(a);
};
cljs.core.load_file = function(a) {
  return cljs.core.truth_(COMPILED) ? null : goog.nodeGlobalRequire(a);
};
"undefined" !== typeof Symbol && "function" === goog.typeOf(Symbol) ? cljs.core.ITER_SYMBOL = Symbol.iterator : cljs.core.ITER_SYMBOL = "@@iterator";
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {_RBRACE_:"}", _COLON_:":", _BANG_:"!", _QMARK_:"?", _BSLASH_:"\\\\", _SLASH_:"/", _PERCENT_:"%", _PLUS_:"+", _SHARP_:"#", _LBRACE_:"{", _BAR_:"|", _LBRACK_:"[", _EQ_:"\x3d", _:"-", _TILDE_:"~", _RBRACK_:"]", _GT_:"\x3e", _SINGLEQUOTE_:"'", _CIRCA_:"@", _AMPERSAND_:"\x26", _DOUBLEQUOTE_:'\\"', _CARET_:"^", _LT_:"\x3c", _STAR_:"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function() {
  if ("undefined" !== typeof performance && null != performance.now) {
    return performance.now();
  }
  if ("undefined" !== typeof process && null != process.hrtime) {
    var a = process.hrtime();
    return (1E9 * a[0] + a[1]) / 1E6;
  }
  return (new Date).getTime();
};
cljs.core.make_array = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return Array(a);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return Array(b);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function(a) {
  for (var b = a.length, c = Array(b), d = 0;;) {
    if (d < b) {
      c[d] = a[d], d += 1;
    } else {
      break;
    }
  }
  return c;
};
cljs.core.array = function(a) {
  for (var b = Array(arguments.length), c = 0;;) {
    if (c < b.length) {
      b[c] = arguments[c], c += 1;
    } else {
      return b;
    }
  }
};
cljs.core.apply;
cljs.core.aget = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a[b];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  var d = cljs.core.aget;
  a = a[b];
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(d, a, c) : cljs.core.apply.call(null, d, a, c);
};
cljs.core.aget.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(3), 0), cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a[b] = c;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  var e = cljs.core.aset;
  a = a[b];
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(e, a, c, d) : cljs.core.apply.call(null, e, a, c, d);
};
cljs.core.aset.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), d = cljs.core.next(d);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function(a) {
  return a.length;
};
cljs.core.reduce;
cljs.core.into_array = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, a);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = function(a, b) {
    a.push(b);
    return a;
  }, d = [];
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(c, d, b) : cljs.core.reduce.call(null, c, d, b);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return a[b].apply(a, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(c));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$1) {
    return a.cljs$core$IFn$_invoke$arity$1(a);
  }
  var b = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._invoke._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$2) {
    return a.cljs$core$IFn$_invoke$arity$2(a, b);
  }
  var c = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._invoke._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$3) {
    return a.cljs$core$IFn$_invoke$arity$3(a, b, c);
  }
  var d = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._invoke._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$4) {
    return a.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
  }
  var e = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != e) {
    return e.cljs$core$IFn$_invoke$arity$4 ? e.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : e.call(null, a, b, c, d);
  }
  e = cljs.core._invoke._;
  if (null != e) {
    return e.cljs$core$IFn$_invoke$arity$4 ? e.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : e.call(null, a, b, c, d);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$5) {
    return a.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
  }
  var f = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != f) {
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : f.call(null, a, b, c, d, e);
  }
  f = cljs.core._invoke._;
  if (null != f) {
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : f.call(null, a, b, c, d, e);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$6) {
    return a.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f);
  }
  var g = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != g) {
    return g.cljs$core$IFn$_invoke$arity$6 ? g.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : g.call(null, a, b, c, d, e, f);
  }
  g = cljs.core._invoke._;
  if (null != g) {
    return g.cljs$core$IFn$_invoke$arity$6 ? g.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : g.call(null, a, b, c, d, e, f);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$7) {
    return a.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g);
  }
  var h = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != h) {
    return h.cljs$core$IFn$_invoke$arity$7 ? h.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : h.call(null, a, b, c, d, e, f, g);
  }
  h = cljs.core._invoke._;
  if (null != h) {
    return h.cljs$core$IFn$_invoke$arity$7 ? h.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : h.call(null, a, b, c, d, e, f, g);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$8) {
    return a.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h);
  }
  var k = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != k) {
    return k.cljs$core$IFn$_invoke$arity$8 ? k.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : k.call(null, a, b, c, d, e, f, g, h);
  }
  k = cljs.core._invoke._;
  if (null != k) {
    return k.cljs$core$IFn$_invoke$arity$8 ? k.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : k.call(null, a, b, c, d, e, f, g, h);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, k) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$9) {
    return a.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k);
  }
  var m = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != m) {
    return m.cljs$core$IFn$_invoke$arity$9 ? m.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : m.call(null, a, b, c, d, e, f, g, h, k);
  }
  m = cljs.core._invoke._;
  if (null != m) {
    return m.cljs$core$IFn$_invoke$arity$9 ? m.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : m.call(null, a, b, c, d, e, f, g, h, k);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, k, m) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$10) {
    return a.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, m);
  }
  var l = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != l) {
    return l.cljs$core$IFn$_invoke$arity$10 ? l.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, m) : l.call(null, a, b, c, d, e, f, g, h, k, m);
  }
  l = cljs.core._invoke._;
  if (null != l) {
    return l.cljs$core$IFn$_invoke$arity$10 ? l.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, m) : l.call(null, a, b, c, d, e, f, g, h, k, m);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, k, m, l) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$11) {
    return a.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, m, l);
  }
  var n = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != n) {
    return n.cljs$core$IFn$_invoke$arity$11 ? n.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, m, l) : n.call(null, a, b, c, d, e, f, g, h, k, m, l);
  }
  n = cljs.core._invoke._;
  if (null != n) {
    return n.cljs$core$IFn$_invoke$arity$11 ? n.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, m, l) : n.call(null, a, b, c, d, e, f, g, h, k, m, l);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, k, m, l, n) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$12) {
    return a.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, m, l, n);
  }
  var p = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != p) {
    return p.cljs$core$IFn$_invoke$arity$12 ? p.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, m, l, n) : p.call(null, a, b, c, d, e, f, g, h, k, m, l, n);
  }
  p = cljs.core._invoke._;
  if (null != p) {
    return p.cljs$core$IFn$_invoke$arity$12 ? p.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, m, l, n) : p.call(null, a, b, c, d, e, f, g, h, k, m, l, n);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, k, m, l, n, p) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$13) {
    return a.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, m, l, n, p);
  }
  var q = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != q) {
    return q.cljs$core$IFn$_invoke$arity$13 ? q.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, m, l, n, p) : q.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p);
  }
  q = cljs.core._invoke._;
  if (null != q) {
    return q.cljs$core$IFn$_invoke$arity$13 ? q.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, m, l, n, p) : q.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$14) {
    return a.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, m, l, n, p, q);
  }
  var r = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != r) {
    return r.cljs$core$IFn$_invoke$arity$14 ? r.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, m, l, n, p, q) : r.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q);
  }
  r = cljs.core._invoke._;
  if (null != r) {
    return r.cljs$core$IFn$_invoke$arity$14 ? r.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, m, l, n, p, q) : r.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$15) {
    return a.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r);
  }
  var t = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != t) {
    return t.cljs$core$IFn$_invoke$arity$15 ? t.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r) : t.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r);
  }
  t = cljs.core._invoke._;
  if (null != t) {
    return t.cljs$core$IFn$_invoke$arity$15 ? t.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r) : t.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$16) {
    return a.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t);
  }
  var u = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != u) {
    return u.cljs$core$IFn$_invoke$arity$16 ? u.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t) : u.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t);
  }
  u = cljs.core._invoke._;
  if (null != u) {
    return u.cljs$core$IFn$_invoke$arity$16 ? u.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t) : u.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$17) {
    return a.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u);
  }
  var v = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != v) {
    return v.cljs$core$IFn$_invoke$arity$17 ? v.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u) : v.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u);
  }
  v = cljs.core._invoke._;
  if (null != v) {
    return v.cljs$core$IFn$_invoke$arity$17 ? v.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u) : v.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$18) {
    return a.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v);
  }
  var w = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != w) {
    return w.cljs$core$IFn$_invoke$arity$18 ? w.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v) : w.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v);
  }
  w = cljs.core._invoke._;
  if (null != w) {
    return w.cljs$core$IFn$_invoke$arity$18 ? w.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v) : w.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$19) {
    return a.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w);
  }
  var x = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != x) {
    return x.cljs$core$IFn$_invoke$arity$19 ? x.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w) : x.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w);
  }
  x = cljs.core._invoke._;
  if (null != x) {
    return x.cljs$core$IFn$_invoke$arity$19 ? x.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w) : x.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$20) {
    return a.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x);
  }
  var y = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != y) {
    return y.cljs$core$IFn$_invoke$arity$20 ? y.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x) : y.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x);
  }
  y = cljs.core._invoke._;
  if (null != y) {
    return y.cljs$core$IFn$_invoke$arity$20 ? y.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x) : y.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$21) {
    return a.cljs$core$IFn$_invoke$arity$21(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y);
  }
  var z = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != z) {
    return z.cljs$core$IFn$_invoke$arity$21 ? z.cljs$core$IFn$_invoke$arity$21(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y) : z.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y);
  }
  z = cljs.core._invoke._;
  if (null != z) {
    return z.cljs$core$IFn$_invoke$arity$21 ? z.cljs$core$IFn$_invoke$arity$21(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y) : z.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y, z) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$22) {
    return a.cljs$core$IFn$_invoke$arity$22(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y, z);
  }
  var B = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != B) {
    return B.cljs$core$IFn$_invoke$arity$22 ? B.cljs$core$IFn$_invoke$arity$22(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y, z) : B.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y, z);
  }
  B = cljs.core._invoke._;
  if (null != B) {
    return B.cljs$core$IFn$_invoke$arity$22 ? B.cljs$core$IFn$_invoke$arity$22(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y, z) : B.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y, z);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function(a) {
  if (null != a && null != a.cljs$core$ICloneable$_clone$arity$1) {
    return a.cljs$core$ICloneable$_clone$arity$1(a);
  }
  var b = cljs.core._clone[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._clone._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ICloneable.-clone", a);
};
cljs.core.ICounted = function() {
};
cljs.core._count = function(a) {
  if (null != a && null != a.cljs$core$ICounted$_count$arity$1) {
    return a.cljs$core$ICounted$_count$arity$1(a);
  }
  var b = cljs.core._count[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._count._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ICounted.-count", a);
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function(a) {
  if (null != a && null != a.cljs$core$IEmptyableCollection$_empty$arity$1) {
    return a.cljs$core$IEmptyableCollection$_empty$arity$1(a);
  }
  var b = cljs.core._empty[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._empty._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IEmptyableCollection.-empty", a);
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function(a, b) {
  if (null != a && null != a.cljs$core$ICollection$_conj$arity$2) {
    return a.cljs$core$ICollection$_conj$arity$2(a, b);
  }
  var c = cljs.core._conj[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._conj._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ICollection.-conj", a);
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$IIndexed$_nth$arity$2) {
    return a.cljs$core$IIndexed$_nth$arity$2(a, b);
  }
  var c = cljs.core._nth[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._nth._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IIndexed.-nth", a);
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.cljs$core$IIndexed$_nth$arity$3) {
    return a.cljs$core$IIndexed$_nth$arity$3(a, b, c);
  }
  var d = cljs.core._nth[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._nth._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IIndexed.-nth", a);
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function(a) {
  if (null != a && null != a.cljs$core$ISeq$_first$arity$1) {
    return a.cljs$core$ISeq$_first$arity$1(a);
  }
  var b = cljs.core._first[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._first._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ISeq.-first", a);
};
cljs.core._rest = function(a) {
  if (null != a && null != a.cljs$core$ISeq$_rest$arity$1) {
    return a.cljs$core$ISeq$_rest$arity$1(a);
  }
  var b = cljs.core._rest[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._rest._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ISeq.-rest", a);
};
cljs.core.INext = function() {
};
cljs.core._next = function(a) {
  if (null != a && null != a.cljs$core$INext$_next$arity$1) {
    return a.cljs$core$INext$_next$arity$1(a);
  }
  var b = cljs.core._next[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._next._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("INext.-next", a);
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$ILookup$_lookup$arity$2) {
    return a.cljs$core$ILookup$_lookup$arity$2(a, b);
  }
  var c = cljs.core._lookup[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._lookup._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ILookup.-lookup", a);
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.cljs$core$ILookup$_lookup$arity$3) {
    return a.cljs$core$ILookup$_lookup$arity$3(a, b, c);
  }
  var d = cljs.core._lookup[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._lookup._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ILookup.-lookup", a);
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function(a, b) {
  if (null != a && null != a.cljs$core$IAssociative$_contains_key_QMARK_$arity$2) {
    return a.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(a, b);
  }
  var c = cljs.core._contains_key_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._contains_key_QMARK_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IAssociative.-contains-key?", a);
};
cljs.core._assoc = function(a, b, c) {
  if (null != a && null != a.cljs$core$IAssociative$_assoc$arity$3) {
    return a.cljs$core$IAssociative$_assoc$arity$3(a, b, c);
  }
  var d = cljs.core._assoc[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._assoc._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IAssociative.-assoc", a);
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function(a, b) {
  if (null != a && null != a.cljs$core$IMap$_dissoc$arity$2) {
    return a.cljs$core$IMap$_dissoc$arity$2(a, b);
  }
  var c = cljs.core._dissoc[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._dissoc._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IMap.-dissoc", a);
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function(a) {
  if (null != a && null != a.cljs$core$IMapEntry$_key$arity$1) {
    return a.cljs$core$IMapEntry$_key$arity$1(a);
  }
  var b = cljs.core._key[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._key._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMapEntry.-key", a);
};
cljs.core._val = function(a) {
  if (null != a && null != a.cljs$core$IMapEntry$_val$arity$1) {
    return a.cljs$core$IMapEntry$_val$arity$1(a);
  }
  var b = cljs.core._val[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._val._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMapEntry.-val", a);
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function(a, b) {
  if (null != a && null != a.cljs$core$ISet$_disjoin$arity$2) {
    return a.cljs$core$ISet$_disjoin$arity$2(a, b);
  }
  var c = cljs.core._disjoin[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._disjoin._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ISet.-disjoin", a);
};
cljs.core.IStack = function() {
};
cljs.core._peek = function(a) {
  if (null != a && null != a.cljs$core$IStack$_peek$arity$1) {
    return a.cljs$core$IStack$_peek$arity$1(a);
  }
  var b = cljs.core._peek[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._peek._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IStack.-peek", a);
};
cljs.core._pop = function(a) {
  if (null != a && null != a.cljs$core$IStack$_pop$arity$1) {
    return a.cljs$core$IStack$_pop$arity$1(a);
  }
  var b = cljs.core._pop[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._pop._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IStack.-pop", a);
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function(a, b, c) {
  if (null != a && null != a.cljs$core$IVector$_assoc_n$arity$3) {
    return a.cljs$core$IVector$_assoc_n$arity$3(a, b, c);
  }
  var d = cljs.core._assoc_n[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._assoc_n._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IVector.-assoc-n", a);
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function(a) {
  if (null != a && null != a.cljs$core$IDeref$_deref$arity$1) {
    return a.cljs$core$IDeref$_deref$arity$1(a);
  }
  var b = cljs.core._deref[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._deref._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IDeref.-deref", a);
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function(a, b, c) {
  if (null != a && null != a.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3) {
    return a.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(a, b, c);
  }
  var d = cljs.core._deref_with_timeout[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._deref_with_timeout._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", a);
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function(a) {
  if (null != a && null != a.cljs$core$IMeta$_meta$arity$1) {
    return a.cljs$core$IMeta$_meta$arity$1(a);
  }
  var b = cljs.core._meta[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._meta._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMeta.-meta", a);
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function(a, b) {
  if (null != a && null != a.cljs$core$IWithMeta$_with_meta$arity$2) {
    return a.cljs$core$IWithMeta$_with_meta$arity$2(a, b);
  }
  var c = cljs.core._with_meta[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._with_meta._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IWithMeta.-with-meta", a);
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$IReduce$_reduce$arity$2) {
    return a.cljs$core$IReduce$_reduce$arity$2(a, b);
  }
  var c = cljs.core._reduce[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._reduce._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IReduce.-reduce", a);
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.cljs$core$IReduce$_reduce$arity$3) {
    return a.cljs$core$IReduce$_reduce$arity$3(a, b, c);
  }
  var d = cljs.core._reduce[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._reduce._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IReduce.-reduce", a);
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function(a, b, c) {
  if (null != a && null != a.cljs$core$IKVReduce$_kv_reduce$arity$3) {
    return a.cljs$core$IKVReduce$_kv_reduce$arity$3(a, b, c);
  }
  var d = cljs.core._kv_reduce[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._kv_reduce._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", a);
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function(a, b) {
  if (null != a && null != a.cljs$core$IEquiv$_equiv$arity$2) {
    return a.cljs$core$IEquiv$_equiv$arity$2(a, b);
  }
  var c = cljs.core._equiv[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._equiv._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IEquiv.-equiv", a);
};
cljs.core.IHash = function() {
};
cljs.core._hash = function(a) {
  if (null != a && null != a.cljs$core$IHash$_hash$arity$1) {
    return a.cljs$core$IHash$_hash$arity$1(a);
  }
  var b = cljs.core._hash[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._hash._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IHash.-hash", a);
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function(a) {
  if (null != a && null != a.cljs$core$ISeqable$_seq$arity$1) {
    return a.cljs$core$ISeqable$_seq$arity$1(a);
  }
  var b = cljs.core._seq[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._seq._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ISeqable.-seq", a);
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function(a) {
  if (null != a && null != a.cljs$core$IReversible$_rseq$arity$1) {
    return a.cljs$core$IReversible$_rseq$arity$1(a);
  }
  var b = cljs.core._rseq[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._rseq._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IReversible.-rseq", a);
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function(a, b) {
  if (null != a && null != a.cljs$core$ISorted$_sorted_seq$arity$2) {
    return a.cljs$core$ISorted$_sorted_seq$arity$2(a, b);
  }
  var c = cljs.core._sorted_seq[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._sorted_seq._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ISorted.-sorted-seq", a);
};
cljs.core._sorted_seq_from = function(a, b, c) {
  if (null != a && null != a.cljs$core$ISorted$_sorted_seq_from$arity$3) {
    return a.cljs$core$ISorted$_sorted_seq_from$arity$3(a, b, c);
  }
  var d = cljs.core._sorted_seq_from[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._sorted_seq_from._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", a);
};
cljs.core._entry_key = function(a, b) {
  if (null != a && null != a.cljs$core$ISorted$_entry_key$arity$2) {
    return a.cljs$core$ISorted$_entry_key$arity$2(a, b);
  }
  var c = cljs.core._entry_key[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._entry_key._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ISorted.-entry-key", a);
};
cljs.core._comparator = function(a) {
  if (null != a && null != a.cljs$core$ISorted$_comparator$arity$1) {
    return a.cljs$core$ISorted$_comparator$arity$1(a);
  }
  var b = cljs.core._comparator[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._comparator._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ISorted.-comparator", a);
};
cljs.core.IWriter = function() {
};
cljs.core._write = function(a, b) {
  if (null != a && null != a.cljs$core$IWriter$_write$arity$2) {
    return a.cljs$core$IWriter$_write$arity$2(a, b);
  }
  var c = cljs.core._write[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._write._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IWriter.-write", a);
};
cljs.core._flush = function(a) {
  if (null != a && null != a.cljs$core$IWriter$_flush$arity$1) {
    return a.cljs$core$IWriter$_flush$arity$1(a);
  }
  var b = cljs.core._flush[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._flush._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IWriter.-flush", a);
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function(a, b, c) {
  if (null != a && null != a.cljs$core$IPrintWithWriter$_pr_writer$arity$3) {
    return a.cljs$core$IPrintWithWriter$_pr_writer$arity$3(a, b, c);
  }
  var d = cljs.core._pr_writer[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._pr_writer._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", a);
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function(a) {
  if (null != a && null != a.cljs$core$IPending$_realized_QMARK_$arity$1) {
    return a.cljs$core$IPending$_realized_QMARK_$arity$1(a);
  }
  var b = cljs.core._realized_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._realized_QMARK_._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IPending.-realized?", a);
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function(a, b, c) {
  if (null != a && null != a.cljs$core$IWatchable$_notify_watches$arity$3) {
    return a.cljs$core$IWatchable$_notify_watches$arity$3(a, b, c);
  }
  var d = cljs.core._notify_watches[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._notify_watches._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IWatchable.-notify-watches", a);
};
cljs.core._add_watch = function(a, b, c) {
  if (null != a && null != a.cljs$core$IWatchable$_add_watch$arity$3) {
    return a.cljs$core$IWatchable$_add_watch$arity$3(a, b, c);
  }
  var d = cljs.core._add_watch[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._add_watch._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IWatchable.-add-watch", a);
};
cljs.core._remove_watch = function(a, b) {
  if (null != a && null != a.cljs$core$IWatchable$_remove_watch$arity$2) {
    return a.cljs$core$IWatchable$_remove_watch$arity$2(a, b);
  }
  var c = cljs.core._remove_watch[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._remove_watch._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IWatchable.-remove-watch", a);
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function(a) {
  if (null != a && null != a.cljs$core$IEditableCollection$_as_transient$arity$1) {
    return a.cljs$core$IEditableCollection$_as_transient$arity$1(a);
  }
  var b = cljs.core._as_transient[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._as_transient._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IEditableCollection.-as-transient", a);
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$ITransientCollection$_conj_BANG_$arity$2) {
    return a.cljs$core$ITransientCollection$_conj_BANG_$arity$2(a, b);
  }
  var c = cljs.core._conj_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._conj_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ITransientCollection.-conj!", a);
};
cljs.core._persistent_BANG_ = function(a) {
  if (null != a && null != a.cljs$core$ITransientCollection$_persistent_BANG_$arity$1) {
    return a.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(a);
  }
  var b = cljs.core._persistent_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._persistent_BANG_._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ITransientCollection.-persistent!", a);
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function(a, b, c) {
  if (null != a && null != a.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3) {
    return a.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(a, b, c);
  }
  var d = cljs.core._assoc_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._assoc_BANG_._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", a);
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$ITransientMap$_dissoc_BANG_$arity$2) {
    return a.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(a, b);
  }
  var c = cljs.core._dissoc_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._dissoc_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ITransientMap.-dissoc!", a);
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function(a, b, c) {
  if (null != a && null != a.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3) {
    return a.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(a, b, c);
  }
  var d = cljs.core._assoc_n_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._assoc_n_BANG_._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", a);
};
cljs.core._pop_BANG_ = function(a) {
  if (null != a && null != a.cljs$core$ITransientVector$_pop_BANG_$arity$1) {
    return a.cljs$core$ITransientVector$_pop_BANG_$arity$1(a);
  }
  var b = cljs.core._pop_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._pop_BANG_._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ITransientVector.-pop!", a);
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$ITransientSet$_disjoin_BANG_$arity$2) {
    return a.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(a, b);
  }
  var c = cljs.core._disjoin_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._disjoin_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ITransientSet.-disjoin!", a);
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function(a, b) {
  if (null != a && null != a.cljs$core$IComparable$_compare$arity$2) {
    return a.cljs$core$IComparable$_compare$arity$2(a, b);
  }
  var c = cljs.core._compare[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._compare._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IComparable.-compare", a);
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function(a) {
  if (null != a && null != a.cljs$core$IChunk$_drop_first$arity$1) {
    return a.cljs$core$IChunk$_drop_first$arity$1(a);
  }
  var b = cljs.core._drop_first[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._drop_first._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IChunk.-drop-first", a);
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function(a) {
  if (null != a && null != a.cljs$core$IChunkedSeq$_chunked_first$arity$1) {
    return a.cljs$core$IChunkedSeq$_chunked_first$arity$1(a);
  }
  var b = cljs.core._chunked_first[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._chunked_first._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", a);
};
cljs.core._chunked_rest = function(a) {
  if (null != a && null != a.cljs$core$IChunkedSeq$_chunked_rest$arity$1) {
    return a.cljs$core$IChunkedSeq$_chunked_rest$arity$1(a);
  }
  var b = cljs.core._chunked_rest[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._chunked_rest._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", a);
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function(a) {
  if (null != a && null != a.cljs$core$IChunkedNext$_chunked_next$arity$1) {
    return a.cljs$core$IChunkedNext$_chunked_next$arity$1(a);
  }
  var b = cljs.core._chunked_next[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._chunked_next._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", a);
};
cljs.core.INamed = function() {
};
cljs.core._name = function(a) {
  if (null != a && null != a.cljs$core$INamed$_name$arity$1) {
    return a.cljs$core$INamed$_name$arity$1(a);
  }
  var b = cljs.core._name[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._name._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("INamed.-name", a);
};
cljs.core._namespace = function(a) {
  if (null != a && null != a.cljs$core$INamed$_namespace$arity$1) {
    return a.cljs$core$INamed$_namespace$arity$1(a);
  }
  var b = cljs.core._namespace[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._namespace._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("INamed.-namespace", a);
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$IReset$_reset_BANG_$arity$2) {
    return a.cljs$core$IReset$_reset_BANG_$arity$2(a, b);
  }
  var c = cljs.core._reset_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._reset_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IReset.-reset!", a);
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$ISwap$_swap_BANG_$arity$2) {
    return a.cljs$core$ISwap$_swap_BANG_$arity$2(a, b);
  }
  var c = cljs.core._swap_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._swap_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ISwap.-swap!", a);
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.cljs$core$ISwap$_swap_BANG_$arity$3) {
    return a.cljs$core$ISwap$_swap_BANG_$arity$3(a, b, c);
  }
  var d = cljs.core._swap_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._swap_BANG_._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ISwap.-swap!", a);
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  if (null != a && null != a.cljs$core$ISwap$_swap_BANG_$arity$4) {
    return a.cljs$core$ISwap$_swap_BANG_$arity$4(a, b, c, d);
  }
  var e = cljs.core._swap_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != e) {
    return e.cljs$core$IFn$_invoke$arity$4 ? e.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : e.call(null, a, b, c, d);
  }
  e = cljs.core._swap_BANG_._;
  if (null != e) {
    return e.cljs$core$IFn$_invoke$arity$4 ? e.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : e.call(null, a, b, c, d);
  }
  throw cljs.core.missing_protocol("ISwap.-swap!", a);
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  if (null != a && null != a.cljs$core$ISwap$_swap_BANG_$arity$5) {
    return a.cljs$core$ISwap$_swap_BANG_$arity$5(a, b, c, d, e);
  }
  var f = cljs.core._swap_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != f) {
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : f.call(null, a, b, c, d, e);
  }
  f = cljs.core._swap_BANG_._;
  if (null != f) {
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : f.call(null, a, b, c, d, e);
  }
  throw cljs.core.missing_protocol("ISwap.-swap!", a);
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$IVolatile$_vreset_BANG_$arity$2) {
    return a.cljs$core$IVolatile$_vreset_BANG_$arity$2(a, b);
  }
  var c = cljs.core._vreset_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._vreset_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IVolatile.-vreset!", a);
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function(a) {
  if (null != a && null != a.cljs$core$IIterable$_iterator$arity$1) {
    return a.cljs$core$IIterable$_iterator$arity$1(a);
  }
  var b = cljs.core._iterator[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._iterator._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IIterable.-iterator", a);
};
cljs.core.StringBufferWriter = function(a) {
  this.sb = a;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(a, b) {
  return this.sb.append(b);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(a) {
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = !0;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function(a) {
  return new cljs.core.StringBufferWriter(a);
};
cljs.core.pr_str_STAR_ = function(a) {
  var b = new goog.string.StringBuffer, c = new cljs.core.StringBufferWriter(b);
  a.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, c, cljs.core.pr_opts());
  c.cljs$core$IWriter$_flush$arity$1(null);
  return "" + cljs.core.str(b);
};
cljs.core.int_rotate_left = function(a, b) {
  return a << b | a >>> -b;
};
"undefined" !== typeof Math.imul && 0 !== Math.imul(4294967295, 5) ? cljs.core.imul = function(a, b) {
  return Math.imul(a, b);
} : cljs.core.imul = function(a, b) {
  var c = a & 65535, d = b & 65535;
  return c * d + ((a >>> 16 & 65535) * d + c * (b >>> 16 & 65535) << 16 >>> 0) | 0;
};
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = -862048943;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function(a) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(a | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function(a, b) {
  return cljs.core.imul(cljs.core.int_rotate_left((a | 0) ^ (b | 0), 13), 5) + -430675100 | 0;
};
cljs.core.m3_fmix = function(a, b) {
  var c = (a | 0) ^ b, c = cljs.core.imul(c ^ c >>> 16, -2048144789), c = cljs.core.imul(c ^ c >>> 13, -1028477387);
  return c ^ c >>> 16;
};
cljs.core.m3_hash_int = function(a) {
  if (0 === a) {
    return a;
  }
  a = cljs.core.m3_mix_K1(a);
  a = cljs.core.m3_mix_H1(cljs.core.m3_seed, a);
  return cljs.core.m3_fmix(a, 4);
};
cljs.core.m3_hash_unencoded_chars = function(a) {
  var b;
  a: {
    b = 1;
    for (var c = cljs.core.m3_seed;;) {
      if (b < a.length) {
        var d = b + 2, c = cljs.core.m3_mix_H1(c, cljs.core.m3_mix_K1(a.charCodeAt(b - 1) | a.charCodeAt(b) << 16));
        b = d;
      } else {
        b = c;
        break a;
      }
    }
  }
  b = 1 === (a.length & 1) ? b ^ cljs.core.m3_mix_K1(a.charCodeAt(a.length - 1)) : b;
  return cljs.core.m3_fmix(b, cljs.core.imul(2, a.length));
};
cljs.core.list;
cljs.core.Symbol;
cljs.core._EQ_;
cljs.core.compare;
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function(a) {
  if (null != a) {
    var b = a.length;
    if (0 < b) {
      for (var c = 0, d = 0;;) {
        if (c < b) {
          var e = c + 1, d = cljs.core.imul(31, d) + a.charCodeAt(c), c = e
        } else {
          return d;
        }
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function(a) {
  var b = cljs.core.hash_string_STAR_(a);
  cljs.core.string_hash_cache[a] = b;
  cljs.core.string_hash_cache_count += 1;
  return b;
};
cljs.core.hash_string = function(a) {
  255 < cljs.core.string_hash_cache_count && (cljs.core.string_hash_cache = {}, cljs.core.string_hash_cache_count = 0);
  var b = cljs.core.string_hash_cache[a];
  return "number" === typeof b ? b : cljs.core.add_to_string_hash_cache(a);
};
cljs.core.hash = function(a) {
  return null != a && (a.cljs$lang$protocol_mask$partition0$ & 4194304 || a.cljs$core$IHash$) ? a.cljs$core$IHash$_hash$arity$1(null) : "number" === typeof a ? Math.floor(a) % 2147483647 : !0 === a ? 1 : !1 === a ? 0 : "string" === typeof a ? cljs.core.m3_hash_int(cljs.core.hash_string(a)) : a instanceof Date ? a.valueOf() : null == a ? 0 : cljs.core._hash(a);
};
cljs.core.hash_combine = function(a, b) {
  return a ^ b + 2654435769 + (a << 6) + (a >> 2);
};
cljs.core.instance_QMARK_ = function(a, b) {
  return b instanceof a;
};
cljs.core.symbol_QMARK_ = function(a) {
  return a instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function(a) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(a.name), cljs.core.hash_string(a.ns));
};
cljs.core.compare_symbols = function(a, b) {
  if (a.str === b.str) {
    return 0;
  }
  if (cljs.core.truth_(function() {
    var c = cljs.core.not(a.ns);
    return c ? b.ns : c;
  }())) {
    return -1;
  }
  if (cljs.core.truth_(a.ns)) {
    if (cljs.core.not(b.ns)) {
      return 1;
    }
    var c = goog.array.defaultCompare(a.ns, b.ns);
    return 0 === c ? goog.array.defaultCompare(a.name, b.name) : c;
  }
  return goog.array.defaultCompare(a.name, b.name);
};
cljs.core.get;
cljs.core.Symbol = function(a, b, c, d, e) {
  this.ns = a;
  this.name = b;
  this.str = c;
  this._hash = d;
  this._meta = e;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  return this.str;
};
cljs.core.Symbol.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.Symbol ? this.str === b.str : !1;
};
cljs.core.Symbol.prototype.call = function() {
  var a = null, b = function(a, b) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(b, this) : cljs.core.get.call(null, b, this);
  }, c = function(a, b, c) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, this, c) : cljs.core.get.call(null, b, this, c);
  }, a = function(a, e, f) {
    switch(arguments.length) {
      case 2:
        return b.call(this, a, e);
      case 3:
        return c.call(this, a, e, f);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  return a;
}();
cljs.core.Symbol.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, this) : cljs.core.get.call(null, a, this);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, this, b) : cljs.core.get.call(null, a, this, b);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.Symbol(this.ns, this.name, this.str, this._hash, b);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this._hash;
  return null != a ? a : this._hash = a = cljs.core.hash_symbol(this);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(a) {
  return this.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(a) {
  return this.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write(b, this.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = !0;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function(a, b, c, d, e) {
  return new cljs.core.Symbol(a, b, c, d, e);
};
cljs.core.symbol = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if (a instanceof cljs.core.Symbol) {
    return a;
  }
  var b = a.indexOf("/");
  return -1 === b ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, a) : cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(a.substring(0, b), a.substring(b + 1, a.length));
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = null != a ? [cljs.core.str(a), cljs.core.str("/"), cljs.core.str(b)].join("") : b;
  return new cljs.core.Symbol(a, b, c, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(a, b, c) {
  this.val = a;
  this.sym = b;
  this._meta = c;
  this.cljs$lang$protocol_mask$partition0$ = 2523137;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  return this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.Var(this.val, this.sym, b);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  if (b instanceof cljs.core.Var) {
    var c = this.sym, d = b.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c, d) : cljs.core._EQ_.call(null, c, d);
  }
  return !1;
};
cljs.core.Var.prototype.cljs$core$Fn$ = !0;
cljs.core.Var.prototype.call = function() {
  var a = null, b = function(a) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null);
  }, c = function(a, b) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b);
  }, d = function(a, b, c) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c);
  }, e = function(a, b, c, d) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d);
  }, f = function(a, b, c, d, e) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d, e);
  }, g = function(a, b, c, d, e, f) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d, e, f);
  }, h = function(a, b, c, d, e, f, g) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d, e, f, g);
  }, k = function(a, b, c, d, e, f, g, h) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d, e, f, g, h);
  }, m = function(a, b, c, d, e, f, g, h, k) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d, e, f, g, h, k);
  }, l = function(a, b, c, d, e, f, g, h, k, m) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d, e, f, g, h, k, m);
  }, n = function(a, b, c, d, e, f, g, h, k, m, l) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d, e, f, g, h, k, m, l);
  }, p = function(a, b, c, d, e, f, g, h, k, m, l, n) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d, e, f, g, h, k, m, l, n);
  }, q = function(a, b, c, d, e, f, g, h, k, m, l, n, p) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d, e, f, g, h, k, m, l, n, p);
  }, r = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d, e, f, g, h, k, m, l, n, p, q);
  }, t = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r);
  }, u = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t);
  }, v = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v);
  }, w = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u);
  }, x = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w);
  }, y = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, B) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, B);
  }, z = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, B, x) {
    a = this;
    return (a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null)).call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, B, x);
  }, B = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, B, x, z) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, B, x, z) : cljs.core.apply.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, B, x, z);
  }, a = function(a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W, Q, Y, Z, N) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, C);
      case 3:
        return d.call(this, a, C, A);
      case 4:
        return e.call(this, a, C, A, F);
      case 5:
        return f.call(this, a, C, A, F, K);
      case 6:
        return g.call(this, a, C, A, F, K, D);
      case 7:
        return h.call(this, a, C, A, F, K, D, E);
      case 8:
        return k.call(this, a, C, A, F, K, D, E, H);
      case 9:
        return m.call(this, a, C, A, F, K, D, E, H, G);
      case 10:
        return l.call(this, a, C, A, F, K, D, E, H, G, L);
      case 11:
        return n.call(this, a, C, A, F, K, D, E, H, G, L, M);
      case 12:
        return p.call(this, a, C, A, F, K, D, E, H, G, L, M, J);
      case 13:
        return q.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T);
      case 14:
        return r.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U);
      case 15:
        return t.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R);
      case 16:
        return u.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S);
      case 17:
        return v.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P);
      case 18:
        return w.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W);
      case 19:
        return x.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W, Q);
      case 20:
        return y.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W, Q, Y);
      case 21:
        return z.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W, Q, Y, Z);
      case 22:
        return B.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W, Q, Y, Z, N);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  a.cljs$core$IFn$_invoke$arity$3 = d;
  a.cljs$core$IFn$_invoke$arity$4 = e;
  a.cljs$core$IFn$_invoke$arity$5 = f;
  a.cljs$core$IFn$_invoke$arity$6 = g;
  a.cljs$core$IFn$_invoke$arity$7 = h;
  a.cljs$core$IFn$_invoke$arity$8 = k;
  a.cljs$core$IFn$_invoke$arity$9 = m;
  a.cljs$core$IFn$_invoke$arity$10 = l;
  a.cljs$core$IFn$_invoke$arity$11 = n;
  a.cljs$core$IFn$_invoke$arity$12 = p;
  a.cljs$core$IFn$_invoke$arity$13 = q;
  a.cljs$core$IFn$_invoke$arity$14 = r;
  a.cljs$core$IFn$_invoke$arity$15 = t;
  a.cljs$core$IFn$_invoke$arity$16 = u;
  a.cljs$core$IFn$_invoke$arity$17 = v;
  a.cljs$core$IFn$_invoke$arity$18 = w;
  a.cljs$core$IFn$_invoke$arity$19 = x;
  a.cljs$core$IFn$_invoke$arity$20 = y;
  a.cljs$core$IFn$_invoke$arity$21 = z;
  a.cljs$core$IFn$_invoke$arity$22 = B;
  return a;
}();
cljs.core.Var.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, k) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c, d, e, f, g, h, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, k, m) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c, d, e, f, g, h, k, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, k, m, l) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c, d, e, f, g, h, k, m, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, k, m, l, n) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c, d, e, f, g, h, k, m, l, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, k, m, l, n, p) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c, d, e, f, g, h, k, m, l, n, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x) {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y) {
  var z = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(z, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y) : cljs.core.apply.call(null, z, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = !0;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Var");
};
cljs.core.__GT_Var = function(a, b, c) {
  return new cljs.core.Var(a, b, c);
};
cljs.core.var_QMARK_ = function(a) {
  return a instanceof cljs.core.Var;
};
cljs.core.array_seq;
cljs.core.prim_seq;
cljs.core.IndexedSeq;
cljs.core.iterable_QMARK_ = function(a) {
  return null != a ? a.cljs$core$IIterable$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, a);
};
cljs.core.clone = function(a) {
  return cljs.core._clone(a);
};
cljs.core.cloneable_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition1$ & 8192 || a.cljs$core$ICloneable$ ? !0 : a.cljs$lang$protocol_mask$partition1$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, a);
};
cljs.core.seq = function(a) {
  if (null == a) {
    return null;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 8388608 || a.cljs$core$ISeqable$)) {
    return a.cljs$core$ISeqable$_seq$arity$1(null);
  }
  if (cljs.core.array_QMARK_(a) || "string" === typeof a) {
    return 0 === a.length ? null : new cljs.core.IndexedSeq(a, 0);
  }
  if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, a)) {
    return cljs.core._seq(a);
  }
  throw Error([cljs.core.str(a), cljs.core.str(" is not ISeqable")].join(""));
};
cljs.core.first = function(a) {
  if (null == a) {
    return null;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$)) {
    return a.cljs$core$ISeq$_first$arity$1(null);
  }
  a = cljs.core.seq(a);
  return null == a ? null : cljs.core._first(a);
};
cljs.core.rest = function(a) {
  return null != a ? null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$) ? a.cljs$core$ISeq$_rest$arity$1(null) : (a = cljs.core.seq(a)) ? cljs.core._rest(a) : cljs.core.List.EMPTY : cljs.core.List.EMPTY;
};
cljs.core.next = function(a) {
  return null == a ? null : null != a && (a.cljs$lang$protocol_mask$partition0$ & 128 || a.cljs$core$INext$) ? a.cljs$core$INext$_next$arity$1(null) : cljs.core.seq(cljs.core.rest(a));
};
cljs.core._EQ_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == a ? null == b : a === b || cljs.core._equiv(a, b);
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b)) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(b, cljs.core.first(c));
      }
    } else {
      return !1;
    }
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(a) {
  this.s = a;
};
cljs.core.ES6Iterator.prototype.next = function() {
  if (null != this.s) {
    var a = cljs.core.first(this.s);
    this.s = cljs.core.next(this.s);
    return {value:a, done:!1};
  }
  return {value:null, done:!0};
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = !0;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function(a) {
  return new cljs.core.ES6Iterator(a);
};
cljs.core.es6_iterator = function(a) {
  return new cljs.core.ES6Iterator(cljs.core.seq(a));
};
cljs.core.es6_iterator_seq;
cljs.core.ES6IteratorSeq = function(a, b, c) {
  this.value = a;
  this.iter = b;
  this._rest = c;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  null == this._rest && (this._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(this.iter) : cljs.core.es6_iterator_seq.call(null, this.iter));
  return this._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = !0;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function(a, b, c) {
  return new cljs.core.ES6IteratorSeq(a, b, c);
};
cljs.core.es6_iterator_seq = function(a) {
  var b = a.next();
  return cljs.core.truth_(b.done) ? cljs.core.List.EMPTY : new cljs.core.ES6IteratorSeq(b.value, a, null);
};
cljs.core.mix_collection_hash = function(a, b) {
  var c = cljs.core.m3_seed, d = cljs.core.m3_mix_K1(a), c = cljs.core.m3_mix_H1(c, d);
  return cljs.core.m3_fmix(c, b);
};
cljs.core.hash_ordered_coll = function(a) {
  var b = 0, c = 1;
  for (a = cljs.core.seq(a);;) {
    if (null != a) {
      b += 1, c = cljs.core.imul(31, c) + cljs.core.hash(cljs.core.first(a)) | 0, a = cljs.core.next(a);
    } else {
      return cljs.core.mix_collection_hash(c, b);
    }
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function(a) {
  var b = 0, c = 0;
  for (a = cljs.core.seq(a);;) {
    if (null != a) {
      b += 1, c = c + cljs.core.hash(cljs.core.first(a)) | 0, a = cljs.core.next(a);
    } else {
      return cljs.core.mix_collection_hash(c, b);
    }
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.hash_map;
cljs.core.list;
cljs.core.equiv_sequential;
cljs.core.ICounted["null"] = !0;
cljs.core._count["null"] = function(a) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = !0;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof Date && this.valueOf() === b.valueOf();
};
Date.prototype.cljs$core$IComparable$ = !0;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (b instanceof Date) {
    return goog.array.defaultCompare(this.valueOf(), b.valueOf());
  }
  throw Error([cljs.core.str("Cannot compare "), cljs.core.str(this), cljs.core.str(" to "), cljs.core.str(b)].join(""));
};
cljs.core.IEquiv.number = !0;
cljs.core._equiv.number = function(a, b) {
  return a === b;
};
cljs.core.with_meta;
cljs.core.Fn["function"] = !0;
cljs.core.IMeta["function"] = !0;
cljs.core._meta["function"] = function(a) {
  return null;
};
cljs.core.IHash._ = !0;
cljs.core._hash._ = function(a) {
  return goog.getUid(a);
};
cljs.core.inc = function(a) {
  return a + 1;
};
cljs.core.deref;
cljs.core.Reduced = function(a) {
  this.val = a;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  return this.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = !0;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function(a) {
  return new cljs.core.Reduced(a);
};
cljs.core.reduced = function(a) {
  return new cljs.core.Reduced(a);
};
cljs.core.reduced_QMARK_ = function(a) {
  return a instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function(a) {
  return cljs.core.reduced_QMARK_(a) ? a : cljs.core.reduced(a);
};
cljs.core.unreduced = function(a) {
  return cljs.core.reduced_QMARK_(a) ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.deref.call(null, a) : a;
};
cljs.core.deref = function(a) {
  return cljs.core._deref(a);
};
cljs.core.ci_reduce = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core._count(a);
  if (0 === c) {
    return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
  }
  for (var d = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, 0), e = 1;;) {
    if (e < c) {
      var f = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, e), d = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, f) : b.call(null, d, f);
      if (cljs.core.reduced_QMARK_(d)) {
        return cljs.core.deref(d);
      }
      e += 1;
    } else {
      return d;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core._count(a), e = c;
  for (c = 0;;) {
    if (c < d) {
      var f = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, c), e = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(e, f) : b.call(null, e, f);
      if (cljs.core.reduced_QMARK_(e)) {
        return cljs.core.deref(e);
      }
      c += 1;
    } else {
      return e;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  for (var e = cljs.core._count(a);;) {
    if (d < e) {
      var f = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, d);
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, f) : b.call(null, c, f);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      d += 1;
    } else {
      return c;
    }
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = a.length;
  if (0 === a.length) {
    return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
  }
  for (var d = a[0], e = 1;;) {
    if (e < c) {
      var f = a[e], d = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, f) : b.call(null, d, f);
      if (cljs.core.reduced_QMARK_(d)) {
        return cljs.core.deref(d);
      }
      e += 1;
    } else {
      return d;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = a.length, e = c;
  for (c = 0;;) {
    if (c < d) {
      var f = a[c], e = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(e, f) : b.call(null, e, f);
      if (cljs.core.reduced_QMARK_(e)) {
        return cljs.core.deref(e);
      }
      c += 1;
    } else {
      return e;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  for (var e = a.length;;) {
    if (d < e) {
      var f = a[d];
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, f) : b.call(null, c, f);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      d += 1;
    } else {
      return c;
    }
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.hash_coll;
cljs.core.cons;
cljs.core.RSeq;
cljs.core.List;
cljs.core.counted_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 2 || a.cljs$core$ICounted$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, a);
};
cljs.core.indexed_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 16 || a.cljs$core$IIndexed$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, a);
};
cljs.core.IndexedSeqIterator = function(a, b) {
  this.arr = a;
  this.i = b;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  return this.i < this.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var a = this.arr[this.i];
  this.i += 1;
  return a;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = !0;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function(a, b) {
  return new cljs.core.IndexedSeqIterator(a, b);
};
cljs.core.IndexedSeq = function(a, b) {
  this.arr = a;
  this.i = b;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.IndexedSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  var c = b + this.i;
  return c < this.arr.length ? this.arr[c] : null;
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  a = b + this.i;
  return a < this.arr.length ? this.arr[a] : c;
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = !0;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.IndexedSeqIterator(this.arr, this.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.IndexedSeq(this.arr, this.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return this.i + 1 < this.arr.length ? new cljs.core.IndexedSeq(this.arr, this.i + 1) : null;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  a = this.arr.length - this.i;
  return 0 > a ? 0 : a;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  a = cljs.core._count(this);
  return 0 < a ? new cljs.core.RSeq(this, a - 1, null) : null;
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(this, b) : cljs.core.equiv_sequential.call(null, this, b);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(this.arr, b, this.arr[this.i], this.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(this.arr, b, c, this.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.arr[this.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return this.i + 1 < this.arr.length ? new cljs.core.IndexedSeq(this.arr, this.i + 1) : cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this.i < this.arr.length ? this : null;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(b, this) : cljs.core.cons.call(null, b, this);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = !0;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function(a, b) {
  return new cljs.core.IndexedSeq(a, b);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.prim_seq = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(a, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return b < a.length ? new cljs.core.IndexedSeq(a, b) : null;
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(a, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.with_meta;
cljs.core.seq_reduce;
cljs.core.RSeq = function(a, b, c) {
  this.ci = a;
  this.i = b;
  this.meta = c;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.RSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.RSeq(this.ci, this.i, this.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return 0 < this.i ? new cljs.core.RSeq(this.ci, this.i - 1, null) : null;
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(this, b) : cljs.core.equiv_sequential.call(null, this, b);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  a = cljs.core.List.EMPTY;
  var b = this.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(a, b) : cljs.core.with_meta.call(null, a, b);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this) : cljs.core.seq_reduce.call(null, b, this);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this) : cljs.core.seq_reduce.call(null, b, c, this);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.ci, this.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return 0 < this.i ? new cljs.core.RSeq(this.ci, this.i - 1, null) : cljs.core.List.EMPTY;
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.RSeq(this.ci, this.i, b);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(b, this) : cljs.core.cons.call(null, b, this);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = !0;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function(a, b, c) {
  return new cljs.core.RSeq(a, b, c);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.second = function(a) {
  return cljs.core.first(cljs.core.next(a));
};
cljs.core.ffirst = function(a) {
  return cljs.core.first(cljs.core.first(a));
};
cljs.core.nfirst = function(a) {
  return cljs.core.next(cljs.core.first(a));
};
cljs.core.fnext = function(a) {
  return cljs.core.first(cljs.core.next(a));
};
cljs.core.nnext = function(a) {
  return cljs.core.next(cljs.core.next(a));
};
cljs.core.last = function(a) {
  for (;;) {
    var b = cljs.core.next(a);
    if (null != b) {
      a = b;
    } else {
      return cljs.core.first(a);
    }
  }
};
cljs.core.IEquiv._ = !0;
cljs.core._equiv._ = function(a, b) {
  return a === b;
};
cljs.core.conj = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null != a ? cljs.core._conj(a, b) : cljs.core._conj(cljs.core.List.EMPTY, b);
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (cljs.core.truth_(c)) {
      a = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, b), b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, b);
    }
  }
};
cljs.core.conj.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function(a) {
  return null == a ? null : cljs.core._empty(a);
};
cljs.core.accumulating_seq_count = function(a) {
  a = cljs.core.seq(a);
  for (var b = 0;;) {
    if (cljs.core.counted_QMARK_(a)) {
      return b + cljs.core._count(a);
    }
    a = cljs.core.next(a);
    b += 1;
  }
};
cljs.core.count = function(a) {
  return null != a ? null != a && (a.cljs$lang$protocol_mask$partition0$ & 2 || a.cljs$core$ICounted$) ? a.cljs$core$ICounted$_count$arity$1(null) : cljs.core.array_QMARK_(a) ? a.length : "string" === typeof a ? a.length : null != a && (a.cljs$lang$protocol_mask$partition0$ & 8388608 || a.cljs$core$ISeqable$) ? cljs.core.accumulating_seq_count(a) : cljs.core._count(a) : 0;
};
cljs.core.linear_traversal_nth = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  for (;;) {
    if (null == a) {
      throw Error("Index out of bounds");
    }
    if (0 === b) {
      if (cljs.core.seq(a)) {
        return cljs.core.first(a);
      }
      throw Error("Index out of bounds");
    }
    if (cljs.core.indexed_QMARK_(a)) {
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, b);
    }
    if (cljs.core.seq(a)) {
      var c = cljs.core.next(a), d = b - 1;
      a = c;
      b = d;
    } else {
      throw Error("Index out of bounds");
    }
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  for (;;) {
    if (null == a) {
      return c;
    }
    if (0 === b) {
      return cljs.core.seq(a) ? cljs.core.first(a) : c;
    }
    if (cljs.core.indexed_QMARK_(a)) {
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(a, b, c);
    }
    if (cljs.core.seq(a)) {
      a = cljs.core.next(a), --b;
    } else {
      return c;
    }
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if ("number" !== typeof b) {
    throw Error("index argument to nth must be a number");
  }
  if (null == a) {
    return a;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 16 || a.cljs$core$IIndexed$)) {
    return a.cljs$core$IIndexed$_nth$arity$2(null, b);
  }
  if (cljs.core.array_QMARK_(a)) {
    return b < a.length ? a[b] : null;
  }
  if ("string" === typeof a) {
    return b < a.length ? a.charAt(b) : null;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$)) {
    return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(a, b);
  }
  if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, a)) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, b);
  }
  throw Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(a)))].join(""));
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if ("number" !== typeof b) {
    throw Error("index argument to nth must be a number.");
  }
  if (null == a) {
    return c;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 16 || a.cljs$core$IIndexed$)) {
    return a.cljs$core$IIndexed$_nth$arity$3(null, b, c);
  }
  if (cljs.core.array_QMARK_(a)) {
    return b < a.length ? a[b] : c;
  }
  if ("string" === typeof a) {
    return b < a.length ? a.charAt(b) : c;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$)) {
    return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(a, b, c);
  }
  if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, a)) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, b);
  }
  throw Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(a)))].join(""));
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function(a, b) {
  for (var c = b, d = a;;) {
    if (0 < c && cljs.core.seq(d)) {
      --c, d = cljs.core.rest(d);
    } else {
      return d;
    }
  }
};
cljs.core.get = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == a ? null : null != a && (a.cljs$lang$protocol_mask$partition0$ & 256 || a.cljs$core$ILookup$) ? a.cljs$core$ILookup$_lookup$arity$2(null, b) : cljs.core.array_QMARK_(a) ? b < a.length ? a[b | 0] : null : "string" === typeof a ? b < a.length ? a[b | 0] : null : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, a) ? cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(a, b) : null;
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != a ? null != a && (a.cljs$lang$protocol_mask$partition0$ & 256 || a.cljs$core$ILookup$) ? a.cljs$core$ILookup$_lookup$arity$3(null, b, c) : cljs.core.array_QMARK_(a) ? b < a.length ? a[b] : c : "string" === typeof a ? b < a.length ? a[b] : c : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, a) ? cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(a, b, c) : c : c;
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.PersistentHashMap;
cljs.core.assoc = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(3), 0), cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != a ? cljs.core._assoc(a, b, c) : cljs.core.PersistentHashMap.fromArrays([b], [c]);
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  for (;;) {
    if (a = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, c), cljs.core.truth_(d)) {
      b = cljs.core.first(d), c = cljs.core.second(d), d = cljs.core.nnext(d);
    } else {
      return a;
    }
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), d = cljs.core.next(d);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == a ? null : cljs.core._dissoc(a, b);
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (null == a) {
      return null;
    }
    a = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(a, b);
    if (cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function(a) {
  var b = goog.isFunction(a);
  return b ? b : null != a ? a.cljs$core$Fn$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.Fn, a) : cljs.core.native_satisfies_QMARK_(cljs.core.Fn, a);
};
cljs.core.MetaFn = function(a, b) {
  this.afn = a;
  this.meta = b;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.MetaFn(this.afn, b);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = !0;
cljs.core.MetaFn.prototype.call = function() {
  var a = null, b = function(a) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$0 ? a.afn.cljs$core$IFn$_invoke$arity$0() : a.afn.call(null);
  }, c = function(a, b) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$1 ? a.afn.cljs$core$IFn$_invoke$arity$1(b) : a.afn.call(null, b);
  }, d = function(a, b, c) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$2 ? a.afn.cljs$core$IFn$_invoke$arity$2(b, c) : a.afn.call(null, b, c);
  }, e = function(a, b, c, d) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$3 ? a.afn.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.afn.call(null, b, c, d);
  }, f = function(a, b, c, d, e) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$4 ? a.afn.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.afn.call(null, b, c, d, e);
  }, g = function(a, b, c, d, e, f) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$5 ? a.afn.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f) : a.afn.call(null, b, c, d, e, f);
  }, h = function(a, b, c, d, e, f, g) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$6 ? a.afn.cljs$core$IFn$_invoke$arity$6(b, c, d, e, f, g) : a.afn.call(null, b, c, d, e, f, g);
  }, k = function(a, b, c, d, e, f, g, h) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$7 ? a.afn.cljs$core$IFn$_invoke$arity$7(b, c, d, e, f, g, h) : a.afn.call(null, b, c, d, e, f, g, h);
  }, m = function(a, b, c, d, e, f, g, h, k) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$8 ? a.afn.cljs$core$IFn$_invoke$arity$8(b, c, d, e, f, g, h, k) : a.afn.call(null, b, c, d, e, f, g, h, k);
  }, l = function(a, b, c, d, e, f, g, h, k, m) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$9 ? a.afn.cljs$core$IFn$_invoke$arity$9(b, c, d, e, f, g, h, k, m) : a.afn.call(null, b, c, d, e, f, g, h, k, m);
  }, n = function(a, b, c, d, e, f, g, h, k, m, l) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$10 ? a.afn.cljs$core$IFn$_invoke$arity$10(b, c, d, e, f, g, h, k, m, l) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l);
  }, p = function(a, b, c, d, e, f, g, h, k, m, l, n) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$11 ? a.afn.cljs$core$IFn$_invoke$arity$11(b, c, d, e, f, g, h, k, m, l, n) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n);
  }, q = function(a, b, c, d, e, f, g, h, k, m, l, n, p) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$12 ? a.afn.cljs$core$IFn$_invoke$arity$12(b, c, d, e, f, g, h, k, m, l, n, p) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p);
  }, r = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$13 ? a.afn.cljs$core$IFn$_invoke$arity$13(b, c, d, e, f, g, h, k, m, l, n, p, q) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q);
  }, t = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$14 ? a.afn.cljs$core$IFn$_invoke$arity$14(b, c, d, e, f, g, h, k, m, l, n, p, q, r) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r);
  }, u = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$15 ? a.afn.cljs$core$IFn$_invoke$arity$15(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t);
  }, v = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$16 ? a.afn.cljs$core$IFn$_invoke$arity$16(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v);
  }, w = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$17 ? a.afn.cljs$core$IFn$_invoke$arity$17(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u);
  }, x = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$18 ? a.afn.cljs$core$IFn$_invoke$arity$18(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w);
  }, y = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, B) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$19 ? a.afn.cljs$core$IFn$_invoke$arity$19(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, B) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, B);
  }, z = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, B, x) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$20 ? a.afn.cljs$core$IFn$_invoke$arity$20(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, B, x) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, B, x);
  }, B = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, B, x, z) {
    a = this;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(a.afn, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, B, x, z) : cljs.core.apply.call(null, a.afn, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, B, x, z);
  }, a = function(a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W, Q, Y, Z, N) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, C);
      case 3:
        return d.call(this, a, C, A);
      case 4:
        return e.call(this, a, C, A, F);
      case 5:
        return f.call(this, a, C, A, F, K);
      case 6:
        return g.call(this, a, C, A, F, K, D);
      case 7:
        return h.call(this, a, C, A, F, K, D, E);
      case 8:
        return k.call(this, a, C, A, F, K, D, E, H);
      case 9:
        return m.call(this, a, C, A, F, K, D, E, H, G);
      case 10:
        return l.call(this, a, C, A, F, K, D, E, H, G, L);
      case 11:
        return n.call(this, a, C, A, F, K, D, E, H, G, L, M);
      case 12:
        return p.call(this, a, C, A, F, K, D, E, H, G, L, M, J);
      case 13:
        return q.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T);
      case 14:
        return r.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U);
      case 15:
        return t.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R);
      case 16:
        return u.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S);
      case 17:
        return v.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P);
      case 18:
        return w.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W);
      case 19:
        return x.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W, Q);
      case 20:
        return y.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W, Q, Y);
      case 21:
        return z.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W, Q, Y, Z);
      case 22:
        return B.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W, Q, Y, Z, N);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  a.cljs$core$IFn$_invoke$arity$3 = d;
  a.cljs$core$IFn$_invoke$arity$4 = e;
  a.cljs$core$IFn$_invoke$arity$5 = f;
  a.cljs$core$IFn$_invoke$arity$6 = g;
  a.cljs$core$IFn$_invoke$arity$7 = h;
  a.cljs$core$IFn$_invoke$arity$8 = k;
  a.cljs$core$IFn$_invoke$arity$9 = m;
  a.cljs$core$IFn$_invoke$arity$10 = l;
  a.cljs$core$IFn$_invoke$arity$11 = n;
  a.cljs$core$IFn$_invoke$arity$12 = p;
  a.cljs$core$IFn$_invoke$arity$13 = q;
  a.cljs$core$IFn$_invoke$arity$14 = r;
  a.cljs$core$IFn$_invoke$arity$15 = t;
  a.cljs$core$IFn$_invoke$arity$16 = u;
  a.cljs$core$IFn$_invoke$arity$17 = v;
  a.cljs$core$IFn$_invoke$arity$18 = w;
  a.cljs$core$IFn$_invoke$arity$19 = x;
  a.cljs$core$IFn$_invoke$arity$20 = y;
  a.cljs$core$IFn$_invoke$arity$21 = z;
  a.cljs$core$IFn$_invoke$arity$22 = B;
  return a;
}();
cljs.core.MetaFn.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  return this.afn.cljs$core$IFn$_invoke$arity$0 ? this.afn.cljs$core$IFn$_invoke$arity$0() : this.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.afn.cljs$core$IFn$_invoke$arity$1 ? this.afn.cljs$core$IFn$_invoke$arity$1(a) : this.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.afn.cljs$core$IFn$_invoke$arity$2 ? this.afn.cljs$core$IFn$_invoke$arity$2(a, b) : this.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return this.afn.cljs$core$IFn$_invoke$arity$3 ? this.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : this.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return this.afn.cljs$core$IFn$_invoke$arity$4 ? this.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : this.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return this.afn.cljs$core$IFn$_invoke$arity$5 ? this.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : this.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  return this.afn.cljs$core$IFn$_invoke$arity$6 ? this.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : this.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  return this.afn.cljs$core$IFn$_invoke$arity$7 ? this.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : this.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  return this.afn.cljs$core$IFn$_invoke$arity$8 ? this.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : this.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, k) {
  return this.afn.cljs$core$IFn$_invoke$arity$9 ? this.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : this.afn.call(null, a, b, c, d, e, f, g, h, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, k, m) {
  return this.afn.cljs$core$IFn$_invoke$arity$10 ? this.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, m) : this.afn.call(null, a, b, c, d, e, f, g, h, k, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, k, m, l) {
  return this.afn.cljs$core$IFn$_invoke$arity$11 ? this.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, m, l) : this.afn.call(null, a, b, c, d, e, f, g, h, k, m, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, k, m, l, n) {
  return this.afn.cljs$core$IFn$_invoke$arity$12 ? this.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, m, l, n) : this.afn.call(null, a, b, c, d, e, f, g, h, k, m, l, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, k, m, l, n, p) {
  return this.afn.cljs$core$IFn$_invoke$arity$13 ? this.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, m, l, n, p) : this.afn.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q) {
  return this.afn.cljs$core$IFn$_invoke$arity$14 ? this.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, m, l, n, p, q) : this.afn.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r) {
  return this.afn.cljs$core$IFn$_invoke$arity$15 ? this.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r) : this.afn.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t) {
  return this.afn.cljs$core$IFn$_invoke$arity$16 ? this.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t) : this.afn.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u) {
  return this.afn.cljs$core$IFn$_invoke$arity$17 ? this.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u) : this.afn.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v) {
  return this.afn.cljs$core$IFn$_invoke$arity$18 ? this.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v) : this.afn.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w) {
  return this.afn.cljs$core$IFn$_invoke$arity$19 ? this.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w) : this.afn.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x) {
  return this.afn.cljs$core$IFn$_invoke$arity$20 ? this.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x) : this.afn.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(this.afn, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y) : cljs.core.apply.call(null, this.afn, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = !0;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function(a, b) {
  return new cljs.core.MetaFn(a, b);
};
cljs.core.with_meta = function(a, b) {
  return goog.isFunction(a) ? new cljs.core.MetaFn(a, b) : null == a ? null : cljs.core._with_meta(a, b);
};
cljs.core.meta = function(a) {
  var b = null != a;
  return (b ? null != a ? a.cljs$lang$protocol_mask$partition0$ & 131072 || a.cljs$core$IMeta$ || (a.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, a) : b) ? cljs.core._meta(a) : null;
};
cljs.core.peek = function(a) {
  return null == a ? null : cljs.core._peek(a);
};
cljs.core.pop = function(a) {
  return null == a ? null : cljs.core._pop(a);
};
cljs.core.disj = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == a ? null : cljs.core._disjoin(a, b);
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (null == a) {
      return null;
    }
    a = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(a, b);
    if (cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.disj.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function(a) {
  return null == a || cljs.core.not(cljs.core.seq(a));
};
cljs.core.coll_QMARK_ = function(a) {
  return null == a ? !1 : null != a ? a.cljs$lang$protocol_mask$partition0$ & 8 || a.cljs$core$ICollection$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, a);
};
cljs.core.set_QMARK_ = function(a) {
  return null == a ? !1 : null != a ? a.cljs$lang$protocol_mask$partition0$ & 4096 || a.cljs$core$ISet$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISet, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISet, a);
};
cljs.core.associative_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 512 || a.cljs$core$IAssociative$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, a);
};
cljs.core.sequential_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 16777216 || a.cljs$core$ISequential$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, a);
};
cljs.core.sorted_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 268435456 || a.cljs$core$ISorted$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, a);
};
cljs.core.reduceable_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 524288 || a.cljs$core$IReduce$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, a);
};
cljs.core.map_QMARK_ = function(a) {
  return null == a ? !1 : null != a ? a.cljs$lang$protocol_mask$partition0$ & 1024 || a.cljs$core$IMap$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IMap, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IMap, a);
};
cljs.core.record_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 67108864 || a.cljs$core$IRecord$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, a);
};
cljs.core.vector_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 16384 || a.cljs$core$IVector$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IVector, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IVector, a);
};
cljs.core.ChunkedCons;
cljs.core.ChunkedSeq;
cljs.core.chunked_seq_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition1$ & 512 || a.cljs$core$IChunkedSeq$ ? !0 : !1 : !1;
};
cljs.core.js_obj = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
    default:
      return b = new cljs.core.IndexedSeq(b.slice(0), 0), cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(b);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, a) : cljs.core.apply.call(null, goog.object.create, a);
};
cljs.core.js_obj.cljs$lang$applyTo = function(a) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function(a) {
  var b = [], c = function(a, b) {
    return function(a, c, d) {
      return b.push(c);
    };
  }(a, b);
  goog.object.forEach(a, c);
  return b;
};
cljs.core.js_delete = function(a, b) {
  return delete a[b];
};
cljs.core.array_copy = function(a, b, c, d, e) {
  for (;;) {
    if (0 === e) {
      return c;
    }
    c[d] = a[b];
    d += 1;
    --e;
    b += 1;
  }
};
cljs.core.array_copy_downward = function(a, b, c, d, e) {
  b += e - 1;
  for (d += e - 1;;) {
    if (0 === e) {
      return c;
    }
    c[d] = a[b];
    --d;
    --e;
    --b;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function(a) {
  return !1 === a;
};
cljs.core.true_QMARK_ = function(a) {
  return !0 === a;
};
cljs.core.undefined_QMARK_ = function(a) {
  return void 0 === a;
};
cljs.core.seq_QMARK_ = function(a) {
  return null == a ? !1 : null != a ? a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, a);
};
cljs.core.seqable_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 8388608 || a.cljs$core$ISeqable$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, a);
};
cljs.core.boolean$ = function(a) {
  return null == a ? !1 : !1 === a ? !1 : !0;
};
cljs.core.ifn_QMARK_ = function(a) {
  var b = cljs.core.fn_QMARK_(a);
  return b ? b : null != a ? a.cljs$lang$protocol_mask$partition0$ & 1 || a.cljs$core$IFn$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IFn, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IFn, a);
};
cljs.core.integer_QMARK_ = function(a) {
  return "number" === typeof a && !isNaN(a) && Infinity !== a && parseFloat(a) === parseInt(a, 10);
};
cljs.core.contains_QMARK_ = function(a, b) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? !1 : !0;
};
cljs.core.find = function(a, b) {
  return null != a && cljs.core.associative_QMARK_(a) && cljs.core.contains_QMARK_(a, b) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b)], null) : null;
};
cljs.core.distinct_QMARK_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b)) {
    return !1;
  }
  a = cljs.core.PersistentHashSet.fromArray([a, b], !0);
  for (b = c;;) {
    var d = cljs.core.first(b);
    c = cljs.core.next(b);
    if (cljs.core.truth_(b)) {
      if (cljs.core.contains_QMARK_(a, d)) {
        return !1;
      }
      a = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d);
      b = c;
    } else {
      return !0;
    }
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function(a, b) {
  if (a === b) {
    return 0;
  }
  if (null == a) {
    return -1;
  }
  if (null == b) {
    return 1;
  }
  if ("number" === typeof a) {
    if ("number" === typeof b) {
      return goog.array.defaultCompare(a, b);
    }
    throw Error([cljs.core.str("Cannot compare "), cljs.core.str(a), cljs.core.str(" to "), cljs.core.str(b)].join(""));
  }
  if (null != a ? a.cljs$lang$protocol_mask$partition1$ & 2048 || a.cljs$core$IComparable$ || (a.cljs$lang$protocol_mask$partition1$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, a)) {
    return cljs.core._compare(a, b);
  }
  if ("string" !== typeof a && !cljs.core.array_QMARK_(a) && !0 !== a && !1 !== a || cljs.core.type(a) !== cljs.core.type(b)) {
    throw Error([cljs.core.str("Cannot compare "), cljs.core.str(a), cljs.core.str(" to "), cljs.core.str(b)].join(""));
  }
  return goog.array.defaultCompare(a, b);
};
cljs.core.compare_indexed = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.count(a), d = cljs.core.count(b);
  return c < d ? -1 : c > d ? 1 : 0 === c ? 0 : cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(a, b, c, 0);
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  for (;;) {
    var e = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, d), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(b, d));
    if (0 === e && d + 1 < c) {
      d += 1;
    } else {
      return e;
    }
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function(a) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, cljs.core.compare) ? cljs.core.compare : function(b, c) {
    var d = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    return "number" === typeof d ? d : cljs.core.truth_(d) ? -1 : cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, b) : a.call(null, c, b)) ? 1 : 0;
  };
};
cljs.core.to_array;
cljs.core.sort = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, a);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (cljs.core.seq(b)) {
    var c = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(b) : cljs.core.to_array.call(null, b), d = cljs.core.fn__GT_comparator(a);
    goog.array.stableSort(c, d);
    return cljs.core.seq(c);
  }
  return cljs.core.List.EMPTY;
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(a, cljs.core.compare, b);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(c, e) {
    return cljs.core.fn__GT_comparator(b).call(null, a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c), a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e));
  }, c);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.seq(b);
  if (c) {
    var d = cljs.core.first(c), c = cljs.core.next(c);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(a, d, c) : cljs.core.reduce.call(null, a, d, c);
  }
  return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  for (c = cljs.core.seq(c);;) {
    if (c) {
      var d = cljs.core.first(c);
      b = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, d) : a.call(null, b, d);
      if (cljs.core.reduced_QMARK_(b)) {
        return cljs.core.deref(b);
      }
      c = cljs.core.next(c);
    } else {
      return b;
    }
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.vec;
cljs.core.shuffle = function(a) {
  a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.to_array.call(null, a);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null != b && (b.cljs$lang$protocol_mask$partition0$ & 524288 || b.cljs$core$IReduce$) ? b.cljs$core$IReduce$_reduce$arity$2(null, a) : cljs.core.array_QMARK_(b) ? cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(b, a) : "string" === typeof b ? cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(b, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, b) ? cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(b, a) : cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != c && (c.cljs$lang$protocol_mask$partition0$ & 524288 || c.cljs$core$IReduce$) ? c.cljs$core$IReduce$_reduce$arity$3(null, a, b) : cljs.core.array_QMARK_(c) ? cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(c, a, b) : "string" === typeof c ? cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(c, a, b) : cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, c) ? cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(c, a, b) : cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(a, b, 
  c);
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function(a, b, c) {
  return null != c ? cljs.core._kv_reduce(c, a, b) : b;
};
cljs.core.identity = function(a) {
  return a;
};
cljs.core.completing = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(a, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function() {
      return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
    }, e = function(a) {
      return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
    }, f = function(b, c) {
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    }, c = function(a, b) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    c.cljs$core$IFn$_invoke$arity$0 = d;
    c.cljs$core$IFn$_invoke$arity$1 = e;
    c.cljs$core$IFn$_invoke$arity$2 = f;
    return c;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(a, b, b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null), c);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  a = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
  c = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(a, c, d);
  return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a + b;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, a + b, c);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return -a;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a - b;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, a - b, c);
};
cljs.core._.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a * b;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, a * b, c);
};
cljs.core._STAR_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.divide;
cljs.core._SLASH_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return 1 / a;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a / b;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, a / b, c);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a < b;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a < b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b < cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a <= b;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a <= b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b <= cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a > b;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a > b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b > cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a >= b;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a >= b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b >= cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function(a) {
  return a - 1;
};
cljs.core.max = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a > b ? a : b;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, a > b ? a : b, c);
};
cljs.core.max.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a < b ? a : b;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, a < b ? a : b, c);
};
cljs.core.min.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function(a) {
  return a;
};
cljs.core.char$ = function(a) {
  if ("number" === typeof a) {
    return String.fromCharCode(a);
  }
  if ("string" === typeof a && 1 === a.length) {
    return a;
  }
  throw Error("Argument to char must be a character or number");
};
cljs.core.short$ = function(a) {
  return a;
};
cljs.core.float$ = function(a) {
  return a;
};
cljs.core.double$ = function(a) {
  return a;
};
cljs.core.unchecked_byte = function(a) {
  return a;
};
cljs.core.unchecked_char = function(a) {
  return a;
};
cljs.core.unchecked_short = function(a) {
  return a;
};
cljs.core.unchecked_float = function(a) {
  return a;
};
cljs.core.unchecked_double = function(a) {
  return a;
};
cljs.core.unchecked_add = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a + b;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, a + b, c);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a + b;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, a + b, c);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function(a) {
  return a - 1;
};
cljs.core.unchecked_dec_int = function(a) {
  return a - 1;
};
cljs.core.unchecked_divide_int = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return 1 / a;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a / b;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, a / b, c);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function(a) {
  return a + 1;
};
cljs.core.unchecked_inc_int = function(a) {
  return a + 1;
};
cljs.core.unchecked_multiply = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a * b;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, a * b, c);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a * b;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, a * b, c);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function(a) {
  return -a;
};
cljs.core.unchecked_negate_int = function(a) {
  return -a;
};
cljs.core.mod;
cljs.core.unchecked_remainder_int = function(a, b) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(a, b) : cljs.core.mod.call(null, a, b);
};
cljs.core.unchecked_subtract = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return -a;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a - b;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, a - b, c);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return -a;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a - b;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, a - b, c);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function(a) {
  return 0 <= a ? Math.floor(a) : Math.ceil(a);
};
cljs.core.int$ = function(a) {
  return a | 0;
};
cljs.core.unchecked_int = function(a) {
  return cljs.core.fix(a);
};
cljs.core.long$ = function(a) {
  return cljs.core.fix(a);
};
cljs.core.unchecked_long = function(a) {
  return cljs.core.fix(a);
};
cljs.core.booleans = function(a) {
  return a;
};
cljs.core.bytes = function(a) {
  return a;
};
cljs.core.chars = function(a) {
  return a;
};
cljs.core.shorts = function(a) {
  return a;
};
cljs.core.ints = function(a) {
  return a;
};
cljs.core.floats = function(a) {
  return a;
};
cljs.core.doubles = function(a) {
  return a;
};
cljs.core.longs = function(a) {
  return a;
};
cljs.core.js_mod = function(a, b) {
  return a % b;
};
cljs.core.mod = function(a, b) {
  return (a % b + b) % b;
};
cljs.core.quot = function(a, b) {
  return cljs.core.fix((a - a % b) / b);
};
cljs.core.rem = function(a, b) {
  var c = cljs.core.quot(a, b);
  return a - b * c;
};
cljs.core.bit_xor = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a ^ b;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, a ^ b, c);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a & b;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, a & b, c);
};
cljs.core.bit_and.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a | b;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, a | b, c);
};
cljs.core.bit_or.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a & ~b;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, a & ~b, c);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function(a, b) {
  return a & ~(1 << b);
};
cljs.core.bit_flip = function(a, b) {
  return a ^ 1 << b;
};
cljs.core.bit_not = function(a) {
  return ~a;
};
cljs.core.bit_set = function(a, b) {
  return a | 1 << b;
};
cljs.core.bit_test = function(a, b) {
  return 0 != (a & 1 << b);
};
cljs.core.bit_shift_left = function(a, b) {
  return a << b;
};
cljs.core.bit_shift_right = function(a, b) {
  return a >> b;
};
cljs.core.bit_shift_right_zero_fill = function(a, b) {
  return a >>> b;
};
cljs.core.unsigned_bit_shift_right = function(a, b) {
  return a >>> b;
};
cljs.core.bit_count = function(a) {
  a -= a >> 1 & 1431655765;
  a = (a & 858993459) + (a >> 2 & 858993459);
  return 16843009 * (a + (a >> 4) & 252645135) >> 24;
};
cljs.core._EQ__EQ_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._equiv(a, b);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a === b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b === cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function(a) {
  return 0 < a;
};
cljs.core.zero_QMARK_ = function(a) {
  return 0 === a;
};
cljs.core.neg_QMARK_ = function(a) {
  return 0 > a;
};
cljs.core.nthnext = function(a, b) {
  for (var c = b, d = cljs.core.seq(a);;) {
    if (d && 0 < c) {
      --c, d = cljs.core.next(d);
    } else {
      return d;
    }
  }
};
cljs.core.str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(1), 0), cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return null == a ? "" : "" + a;
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  for (var c = new goog.string.StringBuffer("" + cljs.core.str(a)), d = b;;) {
    if (cljs.core.truth_(d)) {
      c = c.append("" + cljs.core.str(cljs.core.first(d))), d = cljs.core.next(d);
    } else {
      return c.toString();
    }
  }
};
cljs.core.str.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.substring(b);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a.substring(b, c);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.map;
cljs.core.name;
cljs.core.equiv_sequential = function(a, b) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(b) ? cljs.core.counted_QMARK_(a) && cljs.core.counted_QMARK_(b) && cljs.core.count(a) !== cljs.core.count(b) ? !1 : function() {
    for (var c = cljs.core.seq(a), d = cljs.core.seq(b);;) {
      if (null == c) {
        return null == d;
      }
      if (null != d && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(c), cljs.core.first(d))) {
        c = cljs.core.next(c), d = cljs.core.next(d);
      } else {
        return !1;
      }
    }
  }() : null);
};
cljs.core.hash_coll = function(a) {
  if (cljs.core.seq(a)) {
    var b = cljs.core.hash(cljs.core.first(a));
    for (a = cljs.core.next(a);;) {
      if (null == a) {
        return b;
      }
      b = cljs.core.hash_combine(b, cljs.core.hash(cljs.core.first(a)));
      a = cljs.core.next(a);
    }
  } else {
    return 0;
  }
};
cljs.core.key;
cljs.core.val;
cljs.core.hash_imap = function(a) {
  var b = 0;
  for (a = cljs.core.seq(a);;) {
    if (a) {
      var c = cljs.core.first(a), b = (b + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(c) : cljs.core.key.call(null, c)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(c) : cljs.core.val.call(null, c)))) % 4503599627370496;
      a = cljs.core.next(a);
    } else {
      return b;
    }
  }
};
cljs.core.hash_iset = function(a) {
  var b = 0;
  for (a = cljs.core.seq(a);;) {
    if (a) {
      var c = cljs.core.first(a), b = (b + cljs.core.hash(c)) % 4503599627370496;
      a = cljs.core.next(a);
    } else {
      return b;
    }
  }
};
cljs.core.name;
cljs.core.chunk_first;
cljs.core.chunk_rest;
cljs.core.extend_object_BANG_ = function(a, b) {
  for (var c = cljs.core.seq(b), d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = d.cljs$core$IIndexed$_nth$arity$2(null, f), h = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(g, 0, null), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(g, 1, null), h = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(h) : cljs.core.name.call(null, h);
      a[h] = g;
      f += 1;
    } else {
      if (c = cljs.core.seq(c)) {
        cljs.core.chunked_seq_QMARK_(c) ? (e = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(c) : cljs.core.chunk_first.call(null, c), c = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(c) : cljs.core.chunk_rest.call(null, c), d = e, e = cljs.core.count(e)) : (e = cljs.core.first(c), d = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(e, 0, null), e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(e, 
        1, null), d = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(d) : cljs.core.name.call(null, d), a[d] = e, c = cljs.core.next(c), d = null, e = 0), f = 0;
      } else {
        break;
      }
    }
  }
  return a;
};
cljs.core.List = function(a, b, c, d, e) {
  this.meta = a;
  this.first = b;
  this.rest = c;
  this.count = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.List.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.List(this.meta, this.first, this.rest, this.count, this.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return 1 === this.count ? null : this.rest;
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return this.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return cljs.core._rest(this);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return 1 === this.count ? cljs.core.List.EMPTY : this.rest;
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.List(b, this.first, this.rest, this.count, this.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.List(this.meta, b, this, this.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.List.cljs$lang$type = !0;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/List");
};
cljs.core.__GT_List = function(a, b, c, d, e) {
  return new cljs.core.List(a, b, c, d, e);
};
cljs.core.list_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 33554432 || a.cljs$core$IList$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IList, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IList, a);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.EmptyList = function(a) {
  this.meta = a;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.EmptyList.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.EmptyList(this.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  throw Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.list_QMARK_(b) || cljs.core.sequential_QMARK_(b) ? null == cljs.core.seq(b) : !1;
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return this;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.EmptyList(b);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.List(this.meta, b, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = !0;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function(a) {
  return new cljs.core.EmptyList(a);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.reversible_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 134217728 || a.cljs$core$IReversible$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, a);
};
cljs.core.rseq = function(a) {
  return cljs.core._rseq(a);
};
cljs.core.reverse = function(a) {
  return cljs.core.reversible_QMARK_(a) ? cljs.core.rseq(a) : cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, a);
};
cljs.core.list = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  var b;
  if (a instanceof cljs.core.IndexedSeq && 0 === a.i) {
    b = a.arr;
  } else {
    a: {
      for (b = [];;) {
        if (null != a) {
          b.push(a.cljs$core$ISeq$_first$arity$1(null)), a = a.cljs$core$INext$_next$arity$1(null);
        } else {
          break a;
        }
      }
    }
  }
  a = b.length;
  for (var c = cljs.core.List.EMPTY;;) {
    if (0 < a) {
      var d = a - 1, c = c.cljs$core$ICollection$_conj$arity$2(null, b[a - 1]);
      a = d;
    } else {
      return c;
    }
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(a) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.Cons = function(a, b, c, d) {
  this.meta = a;
  this.first = b;
  this.rest = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Cons.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.Cons(this.meta, this.first, this.rest, this.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return null == this.rest ? null : cljs.core.seq(this.rest);
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return null == this.rest ? cljs.core.List.EMPTY : this.rest;
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.Cons(b, this.first, this.rest, this.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.Cons(null, b, this, this.__hash);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Cons.cljs$lang$type = !0;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function(a, b, c, d) {
  return new cljs.core.Cons(a, b, c, d);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.cons = function(a, b) {
  var c = null == b;
  return (c ? c : null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || b.cljs$core$ISeq$)) ? new cljs.core.Cons(null, a, b, null) : new cljs.core.Cons(null, a, cljs.core.seq(b), null);
};
cljs.core.hash_keyword = function(a) {
  return cljs.core.hash_symbol(a) + 2654435769 | 0;
};
cljs.core.compare_keywords = function(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  }
  if (cljs.core.truth_(function() {
    var c = cljs.core.not(a.ns);
    return c ? b.ns : c;
  }())) {
    return -1;
  }
  if (cljs.core.truth_(a.ns)) {
    if (cljs.core.not(b.ns)) {
      return 1;
    }
    var c = goog.array.defaultCompare(a.ns, b.ns);
    return 0 === c ? goog.array.defaultCompare(a.name, b.name) : c;
  }
  return goog.array.defaultCompare(a.name, b.name);
};
cljs.core.Keyword = function(a, b, c, d) {
  this.ns = a;
  this.name = b;
  this.fqn = c;
  this._hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  return [cljs.core.str(":"), cljs.core.str(this.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.Keyword ? this.fqn === b.fqn : !1;
};
cljs.core.Keyword.prototype.call = function() {
  var a = null, b = function(a, b) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(b, this);
  }, c = function(a, b, c) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, this, c);
  }, a = function(a, e, f) {
    switch(arguments.length) {
      case 2:
        return b.call(this, a, e);
      case 3:
        return c.call(this, a, e, f);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  return a;
}();
cljs.core.Keyword.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, this);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, this, b);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this._hash;
  return null != a ? a : this._hash = a = cljs.core.hash_keyword(this);
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(a) {
  return this.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(a) {
  return this.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write(b, [cljs.core.str(":"), cljs.core.str(this.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Keyword.cljs$lang$type = !0;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function(a, b, c, d) {
  return new cljs.core.Keyword(a, b, c, d);
};
cljs.core.keyword_QMARK_ = function(a) {
  return a instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function(a, b) {
  return a === b ? !0 : a instanceof cljs.core.Keyword && b instanceof cljs.core.Keyword ? a.fqn === b.fqn : !1;
};
cljs.core.symbol_identical_QMARK_ = function(a, b) {
  return a === b ? !0 : a instanceof cljs.core.Symbol && b instanceof cljs.core.Symbol ? a.str === b.str : !1;
};
cljs.core.namespace = function(a) {
  if (null != a && (a.cljs$lang$protocol_mask$partition1$ & 4096 || a.cljs$core$INamed$)) {
    return a.cljs$core$INamed$_namespace$arity$1(null);
  }
  throw Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(a)].join(""));
};
cljs.core.keyword = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if (a instanceof cljs.core.Keyword) {
    return a;
  }
  if (a instanceof cljs.core.Symbol) {
    return new cljs.core.Keyword(cljs.core.namespace(a), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.name.call(null, a), a.str, null);
  }
  if ("string" === typeof a) {
    var b = a.split("/");
    return 2 === b.length ? new cljs.core.Keyword(b[0], b[1], a, null) : new cljs.core.Keyword(null, b[0], a, null);
  }
  return null;
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.Keyword(a, b, [cljs.core.str(cljs.core.truth_(a) ? [cljs.core.str(a), cljs.core.str("/")].join("") : null), cljs.core.str(b)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(a, b, c, d) {
  this.meta = a;
  this.fn = b;
  this.s = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazySeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.LazySeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.LazySeq.prototype.sval = function() {
  null != this.fn && (this.s = this.fn.cljs$core$IFn$_invoke$arity$0 ? this.fn.cljs$core$IFn$_invoke$arity$0() : this.fn.call(null), this.fn = null);
  return this.s;
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  cljs.core._seq(this);
  return null == this.s ? null : cljs.core.next(this.s);
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  cljs.core._seq(this);
  return null == this.s ? null : cljs.core.first(this.s);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  cljs.core._seq(this);
  return null != this.s ? cljs.core.rest(this.s) : cljs.core.List.EMPTY;
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  this.sval();
  if (null == this.s) {
    return null;
  }
  for (a = this.s;;) {
    if (a instanceof cljs.core.LazySeq) {
      a = a.sval();
    } else {
      return this.s = a, cljs.core.seq(this.s);
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(b, this.fn, this.s, this.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = !0;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function(a, b, c, d) {
  return new cljs.core.LazySeq(a, b, c, d);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.ArrayChunk;
cljs.core.ChunkBuffer = function(a, b) {
  this.buf = a;
  this.end = b;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(a) {
  this.buf[this.end] = a;
  return this.end += 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(a) {
  a = new cljs.core.ArrayChunk(this.buf, 0, this.end);
  this.buf = null;
  return a;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = !0;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function(a, b) {
  return new cljs.core.ChunkBuffer(a, b);
};
cljs.core.chunk_buffer = function(a) {
  return new cljs.core.ChunkBuffer(Array(a), 0);
};
cljs.core.ArrayChunk = function(a, b, c) {
  this.arr = a;
  this.off = b;
  this.end = c;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.end - this.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  return this.arr[this.off + b];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 <= b && b < this.end - this.off ? this.arr[this.off + b] : c;
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = !0;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(a) {
  if (this.off === this.end) {
    throw Error("-drop-first of empty chunk");
  }
  return new cljs.core.ArrayChunk(this.arr, this.off + 1, this.end);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(this.arr, b, this.arr[this.off], this.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(this.arr, b, c, this.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = !0;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function(a, b, c) {
  return new cljs.core.ArrayChunk(a, b, c);
};
cljs.core.array_chunk = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.ArrayChunk(a, 0, a.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.ArrayChunk(a, b, a.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.ArrayChunk(a, b, c);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(a, b, c, d) {
  this.chunk = a;
  this.more = b;
  this.meta = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ChunkedCons.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  if (1 < cljs.core._count(this.chunk)) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(this.chunk), this.more, this.meta, null);
  }
  a = cljs.core._seq(this.more);
  return null == a ? null : a;
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return 1 < cljs.core._count(this.chunk) ? new cljs.core.ChunkedCons(cljs.core._drop_first(this.chunk), this.more, this.meta, null) : null == this.more ? cljs.core.List.EMPTY : this.more;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(a) {
  return this.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(a) {
  return null == this.more ? cljs.core.List.EMPTY : this.more;
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.ChunkedCons(this.chunk, this.more, b, this.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(a) {
  return null == this.more ? null : this.more;
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = !0;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function(a, b, c, d) {
  return new cljs.core.ChunkedCons(a, b, c, d);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.chunk_cons = function(a, b) {
  return 0 === cljs.core._count(a) ? b : new cljs.core.ChunkedCons(a, b, null, null);
};
cljs.core.chunk_append = function(a, b) {
  return a.add(b);
};
cljs.core.chunk = function(a) {
  return a.chunk();
};
cljs.core.chunk_first = function(a) {
  return cljs.core._chunked_first(a);
};
cljs.core.chunk_rest = function(a) {
  return cljs.core._chunked_rest(a);
};
cljs.core.chunk_next = function(a) {
  return null != a && (a.cljs$lang$protocol_mask$partition1$ & 1024 || a.cljs$core$IChunkedNext$) ? cljs.core._chunked_next(a) : cljs.core.seq(cljs.core._chunked_rest(a));
};
cljs.core.to_array = function(a) {
  for (var b = [];;) {
    if (cljs.core.seq(a)) {
      b.push(cljs.core.first(a)), a = cljs.core.next(a);
    } else {
      return b;
    }
  }
};
cljs.core.to_array_2d = function(a) {
  var b = Array(cljs.core.count(a)), c = 0;
  for (a = cljs.core.seq(a);;) {
    if (a) {
      b[c] = cljs.core.to_array(cljs.core.first(a)), c += 1, a = cljs.core.next(a);
    } else {
      break;
    }
  }
  return b;
};
cljs.core.int_array = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return "number" === typeof a ? cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(a, null) : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = Array(a);
  if (cljs.core.seq_QMARK_(b)) {
    for (var d = 0, e = cljs.core.seq(b);;) {
      if (e && d < a) {
        c[d] = cljs.core.first(e), d += 1, e = cljs.core.next(e);
      } else {
        return c;
      }
    }
  } else {
    for (d = 0;;) {
      if (d < a) {
        c[d] = b, d += 1;
      } else {
        break;
      }
    }
    return c;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return "number" === typeof a ? cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(a, null) : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = Array(a);
  if (cljs.core.seq_QMARK_(b)) {
    for (var d = 0, e = cljs.core.seq(b);;) {
      if (e && d < a) {
        c[d] = cljs.core.first(e), d += 1, e = cljs.core.next(e);
      } else {
        return c;
      }
    }
  } else {
    for (d = 0;;) {
      if (d < a) {
        c[d] = b, d += 1;
      } else {
        break;
      }
    }
    return c;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return "number" === typeof a ? cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(a, null) : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = Array(a);
  if (cljs.core.seq_QMARK_(b)) {
    for (var d = 0, e = cljs.core.seq(b);;) {
      if (e && d < a) {
        c[d] = cljs.core.first(e), d += 1, e = cljs.core.next(e);
      } else {
        return c;
      }
    }
  } else {
    for (d = 0;;) {
      if (d < a) {
        c[d] = b, d += 1;
      } else {
        break;
      }
    }
    return c;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return "number" === typeof a ? cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(a, null) : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = Array(a);
  if (cljs.core.seq_QMARK_(b)) {
    for (var d = 0, e = cljs.core.seq(b);;) {
      if (e && d < a) {
        c[d] = cljs.core.first(e), d += 1, e = cljs.core.next(e);
      } else {
        return c;
      }
    }
  } else {
    for (d = 0;;) {
      if (d < a) {
        c[d] = b, d += 1;
      } else {
        break;
      }
    }
    return c;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function(a, b) {
  if (cljs.core.counted_QMARK_(a)) {
    return cljs.core.count(a);
  }
  for (var c = a, d = b, e = 0;;) {
    if (0 < d && cljs.core.seq(c)) {
      c = cljs.core.next(c), --d, e += 1;
    } else {
      return e;
    }
  }
};
cljs.core.spread = function cljs$core$spread(b) {
  return null == b ? null : null == cljs.core.next(b) ? cljs.core.seq(cljs.core.first(b)) : cljs.core.cons(cljs.core.first(b), cljs$core$spread(cljs.core.next(b)));
};
cljs.core.concat = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.LazySeq(null, function() {
    return a;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(a);
    return c ? cljs.core.chunked_seq_QMARK_(c) ? cljs.core.chunk_cons(cljs.core.chunk_first(c), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(c), b)) : cljs.core.cons(cljs.core.first(c), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(c), b)) : b;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return function e(a, b) {
    return new cljs.core.LazySeq(null, function() {
      var c = cljs.core.seq(a);
      return c ? cljs.core.chunked_seq_QMARK_(c) ? cljs.core.chunk_cons(cljs.core.chunk_first(c), e(cljs.core.chunk_rest(c), b)) : cljs.core.cons(cljs.core.first(c), e(cljs.core.rest(c), b)) : cljs.core.truth_(b) ? e(cljs.core.first(b), cljs.core.next(b)) : null;
    }, null, null);
  }(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(a, b), c);
};
cljs.core.concat.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(4), 0), cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.seq(a);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.cons(a, b);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.cons(a, cljs.core.cons(b, c));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, d)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(e)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), e = cljs.core.next(d), d = cljs.core.first(e), e = cljs.core.next(e);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function(a) {
  return cljs.core._as_transient(a);
};
cljs.core.persistent_BANG_ = function(a) {
  return cljs.core._persistent_BANG_(a);
};
cljs.core.conj_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._conj_BANG_(a, b);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a = cljs.core._conj_BANG_(a, b), cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(3), 0), cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core._assoc_BANG_(a, b, c);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  for (;;) {
    if (a = cljs.core._assoc_BANG_(a, b, c), cljs.core.truth_(d)) {
      b = cljs.core.first(d), c = cljs.core.second(d), d = cljs.core.nnext(d);
    } else {
      return a;
    }
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), d = cljs.core.next(d);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._dissoc_BANG_(a, b);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a = cljs.core._dissoc_BANG_(a, b), cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function(a) {
  return cljs.core._pop_BANG_(a);
};
cljs.core.disj_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._disjoin_BANG_(a, b);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a = cljs.core._disjoin_BANG_(a, b), cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function(a, b, c) {
  var d = cljs.core.seq(c);
  if (0 === b) {
    return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
  }
  c = cljs.core._first(d);
  var e = cljs.core._rest(d);
  if (1 === b) {
    return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
  }
  var d = cljs.core._first(e), f = cljs.core._rest(e);
  if (2 === b) {
    return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d);
  }
  var e = cljs.core._first(f), g = cljs.core._rest(f);
  if (3 === b) {
    return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(c, d, e) : a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(c, d, e) : a.call(null, c, d, e);
  }
  var f = cljs.core._first(g), h = cljs.core._rest(g);
  if (4 === b) {
    return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(c, d, e, f) : a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(c, d, e, f) : a.call(null, c, d, e, f);
  }
  var g = cljs.core._first(h), k = cljs.core._rest(h);
  if (5 === b) {
    return a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(c, d, e, f, g) : a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(c, d, e, f, g) : a.call(null, c, d, e, f, g);
  }
  var h = cljs.core._first(k), m = cljs.core._rest(k);
  if (6 === b) {
    return a.cljs$core$IFn$_invoke$arity$6 ? a.cljs$core$IFn$_invoke$arity$6(c, d, e, f, g, h) : a.cljs$core$IFn$_invoke$arity$6 ? a.cljs$core$IFn$_invoke$arity$6(c, d, e, f, g, h) : a.call(null, c, d, e, f, g, h);
  }
  var k = cljs.core._first(m), l = cljs.core._rest(m);
  if (7 === b) {
    return a.cljs$core$IFn$_invoke$arity$7 ? a.cljs$core$IFn$_invoke$arity$7(c, d, e, f, g, h, k) : a.cljs$core$IFn$_invoke$arity$7 ? a.cljs$core$IFn$_invoke$arity$7(c, d, e, f, g, h, k) : a.call(null, c, d, e, f, g, h, k);
  }
  var m = cljs.core._first(l), n = cljs.core._rest(l);
  if (8 === b) {
    return a.cljs$core$IFn$_invoke$arity$8 ? a.cljs$core$IFn$_invoke$arity$8(c, d, e, f, g, h, k, m) : a.cljs$core$IFn$_invoke$arity$8 ? a.cljs$core$IFn$_invoke$arity$8(c, d, e, f, g, h, k, m) : a.call(null, c, d, e, f, g, h, k, m);
  }
  var l = cljs.core._first(n), p = cljs.core._rest(n);
  if (9 === b) {
    return a.cljs$core$IFn$_invoke$arity$9 ? a.cljs$core$IFn$_invoke$arity$9(c, d, e, f, g, h, k, m, l) : a.cljs$core$IFn$_invoke$arity$9 ? a.cljs$core$IFn$_invoke$arity$9(c, d, e, f, g, h, k, m, l) : a.call(null, c, d, e, f, g, h, k, m, l);
  }
  var n = cljs.core._first(p), q = cljs.core._rest(p);
  if (10 === b) {
    return a.cljs$core$IFn$_invoke$arity$10 ? a.cljs$core$IFn$_invoke$arity$10(c, d, e, f, g, h, k, m, l, n) : a.cljs$core$IFn$_invoke$arity$10 ? a.cljs$core$IFn$_invoke$arity$10(c, d, e, f, g, h, k, m, l, n) : a.call(null, c, d, e, f, g, h, k, m, l, n);
  }
  var p = cljs.core._first(q), r = cljs.core._rest(q);
  if (11 === b) {
    return a.cljs$core$IFn$_invoke$arity$11 ? a.cljs$core$IFn$_invoke$arity$11(c, d, e, f, g, h, k, m, l, n, p) : a.cljs$core$IFn$_invoke$arity$11 ? a.cljs$core$IFn$_invoke$arity$11(c, d, e, f, g, h, k, m, l, n, p) : a.call(null, c, d, e, f, g, h, k, m, l, n, p);
  }
  var q = cljs.core._first(r), t = cljs.core._rest(r);
  if (12 === b) {
    return a.cljs$core$IFn$_invoke$arity$12 ? a.cljs$core$IFn$_invoke$arity$12(c, d, e, f, g, h, k, m, l, n, p, q) : a.cljs$core$IFn$_invoke$arity$12 ? a.cljs$core$IFn$_invoke$arity$12(c, d, e, f, g, h, k, m, l, n, p, q) : a.call(null, c, d, e, f, g, h, k, m, l, n, p, q);
  }
  var r = cljs.core._first(t), u = cljs.core._rest(t);
  if (13 === b) {
    return a.cljs$core$IFn$_invoke$arity$13 ? a.cljs$core$IFn$_invoke$arity$13(c, d, e, f, g, h, k, m, l, n, p, q, r) : a.cljs$core$IFn$_invoke$arity$13 ? a.cljs$core$IFn$_invoke$arity$13(c, d, e, f, g, h, k, m, l, n, p, q, r) : a.call(null, c, d, e, f, g, h, k, m, l, n, p, q, r);
  }
  var t = cljs.core._first(u), v = cljs.core._rest(u);
  if (14 === b) {
    return a.cljs$core$IFn$_invoke$arity$14 ? a.cljs$core$IFn$_invoke$arity$14(c, d, e, f, g, h, k, m, l, n, p, q, r, t) : a.cljs$core$IFn$_invoke$arity$14 ? a.cljs$core$IFn$_invoke$arity$14(c, d, e, f, g, h, k, m, l, n, p, q, r, t) : a.call(null, c, d, e, f, g, h, k, m, l, n, p, q, r, t);
  }
  var u = cljs.core._first(v), w = cljs.core._rest(v);
  if (15 === b) {
    return a.cljs$core$IFn$_invoke$arity$15 ? a.cljs$core$IFn$_invoke$arity$15(c, d, e, f, g, h, k, m, l, n, p, q, r, t, u) : a.cljs$core$IFn$_invoke$arity$15 ? a.cljs$core$IFn$_invoke$arity$15(c, d, e, f, g, h, k, m, l, n, p, q, r, t, u) : a.call(null, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u);
  }
  var v = cljs.core._first(w), x = cljs.core._rest(w);
  if (16 === b) {
    return a.cljs$core$IFn$_invoke$arity$16 ? a.cljs$core$IFn$_invoke$arity$16(c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v) : a.cljs$core$IFn$_invoke$arity$16 ? a.cljs$core$IFn$_invoke$arity$16(c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v) : a.call(null, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v);
  }
  var w = cljs.core._first(x), y = cljs.core._rest(x);
  if (17 === b) {
    return a.cljs$core$IFn$_invoke$arity$17 ? a.cljs$core$IFn$_invoke$arity$17(c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w) : a.cljs$core$IFn$_invoke$arity$17 ? a.cljs$core$IFn$_invoke$arity$17(c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w) : a.call(null, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w);
  }
  var x = cljs.core._first(y), z = cljs.core._rest(y);
  if (18 === b) {
    return a.cljs$core$IFn$_invoke$arity$18 ? a.cljs$core$IFn$_invoke$arity$18(c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x) : a.cljs$core$IFn$_invoke$arity$18 ? a.cljs$core$IFn$_invoke$arity$18(c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x) : a.call(null, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x);
  }
  y = cljs.core._first(z);
  z = cljs.core._rest(z);
  if (19 === b) {
    return a.cljs$core$IFn$_invoke$arity$19 ? a.cljs$core$IFn$_invoke$arity$19(c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y) : a.cljs$core$IFn$_invoke$arity$19 ? a.cljs$core$IFn$_invoke$arity$19(c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y) : a.call(null, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y);
  }
  var B = cljs.core._first(z);
  cljs.core._rest(z);
  if (20 === b) {
    return a.cljs$core$IFn$_invoke$arity$20 ? a.cljs$core$IFn$_invoke$arity$20(c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y, B) : a.cljs$core$IFn$_invoke$arity$20 ? a.cljs$core$IFn$_invoke$arity$20(c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y, B) : a.call(null, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y, B);
  }
  throw Error("Only up to 20 arguments supported on functions");
};
cljs.core.apply = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(5), 0), cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], b);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = a.cljs$lang$maxFixedArity;
  if (a.cljs$lang$applyTo) {
    var d = cljs.core.bounded_count(b, c + 1);
    return d <= c ? cljs.core.apply_to(a, d, b) : a.cljs$lang$applyTo(b);
  }
  return a.apply(a, cljs.core.to_array(b));
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  b = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(b, c);
  c = a.cljs$lang$maxFixedArity;
  if (a.cljs$lang$applyTo) {
    var d = cljs.core.bounded_count(b, c + 1);
    return d <= c ? cljs.core.apply_to(a, d, b) : a.cljs$lang$applyTo(b);
  }
  return a.apply(a, cljs.core.to_array(b));
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  b = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(b, c, d);
  c = a.cljs$lang$maxFixedArity;
  return a.cljs$lang$applyTo ? (d = cljs.core.bounded_count(b, c + 1), d <= c ? cljs.core.apply_to(a, d, b) : a.cljs$lang$applyTo(b)) : a.apply(a, cljs.core.to_array(b));
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  b = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(b, c, d, e);
  c = a.cljs$lang$maxFixedArity;
  return a.cljs$lang$applyTo ? (d = cljs.core.bounded_count(b, c + 1), d <= c ? cljs.core.apply_to(a, d, b) : a.cljs$lang$applyTo(b)) : a.apply(a, cljs.core.to_array(b));
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e, f) {
  b = cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.cons(e, cljs.core.spread(f)))));
  c = a.cljs$lang$maxFixedArity;
  return a.cljs$lang$applyTo ? (d = cljs.core.bounded_count(b, c + 1), d <= c ? cljs.core.apply_to(a, d, b) : a.cljs$lang$applyTo(b)) : a.apply(a, cljs.core.to_array(b));
};
cljs.core.apply.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), e = cljs.core.next(d), d = cljs.core.first(e), f = cljs.core.next(e), e = cljs.core.first(f), f = cljs.core.next(f);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e, f);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(6), 0), cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], b);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.with_meta(a, function() {
    var c = cljs.core.meta(a);
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.with_meta(a, function() {
    var d = cljs.core.meta(a);
    return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, c) : b.call(null, d, c);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.with_meta(a, function() {
    var e = cljs.core.meta(a);
    return b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(e, c, d) : b.call(null, e, c, d);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return cljs.core.with_meta(a, function() {
    var f = cljs.core.meta(a);
    return b.cljs$core$IFn$_invoke$arity$4 ? b.cljs$core$IFn$_invoke$arity$4(f, c, d, e) : b.call(null, f, c, d, e);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  return cljs.core.with_meta(a, function() {
    var g = cljs.core.meta(a);
    return b.cljs$core$IFn$_invoke$arity$5 ? b.cljs$core$IFn$_invoke$arity$5(g, c, d, e, f) : b.call(null, g, c, d, e, f);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e, f, g) {
  return cljs.core.with_meta(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.meta(a), c, d, e, cljs.core.array_seq([f, g], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), e = cljs.core.next(d), d = cljs.core.first(e), f = cljs.core.next(e), e = cljs.core.first(f), g = cljs.core.next(f), f = cljs.core.first(g), g = cljs.core.next(g);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e, f, g);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !1;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, a, b, c));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function(a) {
  return cljs.core.seq(a) ? a : null;
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  "undefined" === typeof cljs.core.t_cljs$core7844 && (cljs.core.t_cljs$core7844 = function(b, c) {
    this.nil_iter = b;
    this.meta7845 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.t_cljs$core7844.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b, c) {
    return new cljs.core.t_cljs$core7844(this.nil_iter, c);
  }, cljs.core.t_cljs$core7844.prototype.cljs$core$IMeta$_meta$arity$1 = function(b) {
    return this.meta7845;
  }, cljs.core.t_cljs$core7844.prototype.hasNext = function() {
    return !1;
  }, cljs.core.t_cljs$core7844.prototype.next = function() {
    return Error("No such element");
  }, cljs.core.t_cljs$core7844.prototype.remove = function() {
    return Error("Unsupported operation");
  }, cljs.core.t_cljs$core7844.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta7845", "meta7845", 627719589, null)], 
    null);
  }, cljs.core.t_cljs$core7844.cljs$lang$type = !0, cljs.core.t_cljs$core7844.cljs$lang$ctorStr = "cljs.core/t_cljs$core7844", cljs.core.t_cljs$core7844.cljs$lang$ctorPrWriter = function(b, c, d) {
    return cljs.core._write(c, "cljs.core/t_cljs$core7844");
  }, cljs.core.__GT_t_cljs$core7844 = function(b, c) {
    return new cljs.core.t_cljs$core7844(b, c);
  });
  return new cljs.core.t_cljs$core7844(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(a, b) {
  this.s = a;
  this.i = b;
};
cljs.core.StringIter.prototype.hasNext = function() {
  return this.i < this.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var a = this.s.charAt(this.i);
  this.i += 1;
  return a;
};
cljs.core.StringIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.StringIter.cljs$lang$type = !0;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function(a, b) {
  return new cljs.core.StringIter(a, b);
};
cljs.core.string_iter = function(a) {
  return new cljs.core.StringIter(a, 0);
};
cljs.core.ArrayIter = function(a, b) {
  this.arr = a;
  this.i = b;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  return this.i < this.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var a = this.arr[this.i];
  this.i += 1;
  return a;
};
cljs.core.ArrayIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = !0;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function(a, b) {
  return new cljs.core.ArrayIter(a, b);
};
cljs.core.array_iter = function(a) {
  return new cljs.core.ArrayIter(a, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(a, b) {
  this._seq = a;
  this._next = b;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  this._seq === cljs.core.INIT ? (this._seq = cljs.core.START, this._next = cljs.core.seq(this._next)) : this._seq === this._next && (this._next = cljs.core.next(this._seq));
  return null != this._next;
};
cljs.core.SeqIter.prototype.next = function() {
  if (cljs.core.not(this.hasNext())) {
    throw Error("No such element");
  }
  this._seq = this._next;
  return cljs.core.first(this._next);
};
cljs.core.SeqIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = !0;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function(a, b) {
  return new cljs.core.SeqIter(a, b);
};
cljs.core.seq_iter = function(a) {
  return new cljs.core.SeqIter(cljs.core.INIT, a);
};
cljs.core.iter = function(a) {
  if (null == a) {
    return cljs.core.nil_iter();
  }
  if ("string" === typeof a) {
    return cljs.core.string_iter(a);
  }
  if (cljs.core.array_QMARK_(a)) {
    return cljs.core.array_iter(a);
  }
  if (cljs.core.truth_(cljs.core.iterable_QMARK_(a))) {
    return cljs.core._iterator(a);
  }
  if (cljs.core.seqable_QMARK_(a)) {
    return cljs.core.seq_iter(a);
  }
  throw Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(a)].join(""));
};
cljs.core.LazyTransformer;
cljs.core.lazy_transformer = function(a) {
  return new cljs.core.LazyTransformer(a, null, null, null);
};
cljs.core.Stepper = function(a, b) {
  this.xform = a;
  this.iter = b;
};
cljs.core.Stepper.prototype.step = function(a) {
  for (var b = this;;) {
    if (cljs.core.truth_(function() {
      var c = null != a.stepper;
      return c ? b.iter.hasNext() : c;
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var c = b.iter.next();
        return b.xform.cljs$core$IFn$_invoke$arity$2 ? b.xform.cljs$core$IFn$_invoke$arity$2(a, c) : b.xform.call(null, a, c);
      }())) {
        null != a.rest && (a.rest.stepper = null);
      } else {
        continue;
      }
    }
    break;
  }
  return null == a.stepper ? null : b.xform.cljs$core$IFn$_invoke$arity$1 ? b.xform.cljs$core$IFn$_invoke$arity$1(a) : b.xform.call(null, a);
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = !0;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function(a, b) {
  return new cljs.core.Stepper(a, b);
};
cljs.core.stepper = function(a, b) {
  var c = function() {
    var a = null, b = function(a) {
      (cljs.core.reduced_QMARK_(a) ? cljs.core.deref(a) : a).stepper = null;
      return a;
    }, c = function(a, b) {
      a.first = b;
      a.rest = cljs.core.lazy_transformer(a.stepper);
      a.stepper = null;
      return a.rest;
    }, a = function(a, d) {
      switch(arguments.length) {
        case 1:
          return b.call(this, a);
        case 2:
          return c.call(this, a, d);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    a.cljs$core$IFn$_invoke$arity$1 = b;
    a.cljs$core$IFn$_invoke$arity$2 = c;
    return a;
  }();
  return new cljs.core.Stepper(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c), b);
};
cljs.core.MultiStepper = function(a, b, c) {
  this.xform = a;
  this.iters = b;
  this.nexts = c;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  for (var a = cljs.core.seq(this.iters);;) {
    if (null != a) {
      var b = cljs.core.first(a);
      if (cljs.core.not(b.hasNext())) {
        return !1;
      }
      a = cljs.core.next(a);
    } else {
      return !0;
    }
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  for (var a = this.iters.length, b = 0;;) {
    if (b < a) {
      this.nexts[b] = this.iters[b].next(), b += 1;
    } else {
      break;
    }
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(this.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(a) {
  for (var b = this;;) {
    if (cljs.core.truth_(function() {
      var c = null != a.stepper;
      return c ? b.hasNext() : c;
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(this.xform, cljs.core.cons(a, b.next())))) {
        null != a.rest && (a.rest.stepper = null);
      } else {
        continue;
      }
    }
    break;
  }
  return null == a.stepper ? null : this.xform.cljs$core$IFn$_invoke$arity$1 ? this.xform.cljs$core$IFn$_invoke$arity$1(a) : this.xform.call(null, a);
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = !0;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function(a, b, c) {
  return new cljs.core.MultiStepper(a, b, c);
};
cljs.core.multi_stepper = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(a, b, Array(b.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = function() {
    var a = null, b = function(a) {
      a = cljs.core.reduced_QMARK_(a) ? cljs.core.deref(a) : a;
      a.stepper = null;
      return a;
    }, c = function(a, b) {
      a.first = b;
      a.rest = cljs.core.lazy_transformer(a.stepper);
      a.stepper = null;
      return a.rest;
    }, a = function(a, d) {
      switch(arguments.length) {
        case 1:
          return b.call(this, a);
        case 2:
          return c.call(this, a, d);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    a.cljs$core$IFn$_invoke$arity$1 = b;
    a.cljs$core$IFn$_invoke$arity$2 = c;
    return a;
  }();
  return new cljs.core.MultiStepper(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d), b, c);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(a, b, c, d) {
  this.stepper = a;
  this.first = b;
  this.rest = c;
  this.meta = d;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.LazyTransformer(this.stepper, this.first, this.rest, b);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, cljs.core._seq(this));
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != cljs.core._seq(this) ? cljs.core.equiv_sequential(this, b) : cljs.core.sequential_QMARK_(b) && null == cljs.core.seq(b);
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  null != this.stepper && this.stepper.step(this);
  return null == this.rest ? null : this;
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  null != this.stepper && cljs.core._seq(this);
  return null == this.rest ? null : this.first;
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  null != this.stepper && cljs.core._seq(this);
  return null == this.rest ? cljs.core.List.EMPTY : this.rest;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  null != this.stepper && cljs.core._seq(this);
  return null == this.rest ? null : cljs.core._seq(this.rest);
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = !0;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function(a, b, c, d) {
  return new cljs.core.LazyTransformer(a, b, c, d);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.LazyTransformer.create = function(a, b) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(a, cljs.core.iter(b)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(a, b) {
  for (var c = [], d = cljs.core.seq(b), e = null, f = 0, g = 0;;) {
    if (g < f) {
      var h = e.cljs$core$IIndexed$_nth$arity$2(null, g);
      c.push(cljs.core.iter(h));
      g += 1;
    } else {
      if (d = cljs.core.seq(d)) {
        e = d, cljs.core.chunked_seq_QMARK_(e) ? (d = cljs.core.chunk_first(e), g = cljs.core.chunk_rest(e), e = d, f = cljs.core.count(d), d = g) : (d = cljs.core.first(e), c.push(cljs.core.iter(d)), d = cljs.core.next(e), e = null, f = 0), g = 0;
      } else {
        break;
      }
    }
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(a, c, Array(c.length)), null, null, null);
};
cljs.core.sequence = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.seq_QMARK_(a) ? a : (a = cljs.core.seq(a)) ? a : cljs.core.List.EMPTY;
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.LazyTransformer.create(a, b);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.LazyTransformer.createMulti(a, cljs.core.to_array(cljs.core.cons(b, c)));
};
cljs.core.sequence.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function(a, b) {
  for (;;) {
    if (null == cljs.core.seq(b)) {
      return !0;
    }
    if (cljs.core.truth_(function() {
      var c = cljs.core.first(b);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }())) {
      var c = a, d = cljs.core.next(b);
      a = c;
      b = d;
    } else {
      return !1;
    }
  }
};
cljs.core.not_every_QMARK_ = function(a, b) {
  return !cljs.core.every_QMARK_(a, b);
};
cljs.core.some = function(a, b) {
  for (;;) {
    if (cljs.core.seq(b)) {
      var c;
      c = cljs.core.first(b);
      c = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      if (cljs.core.truth_(c)) {
        return c;
      }
      c = a;
      var d = cljs.core.next(b);
      a = c;
      b = d;
    } else {
      return null;
    }
  }
};
cljs.core.not_any_QMARK_ = function(a, b) {
  return cljs.core.not(cljs.core.some(a, b));
};
cljs.core.even_QMARK_ = function(a) {
  if (cljs.core.integer_QMARK_(a)) {
    return 0 === (a & 1);
  }
  throw Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(a)].join(""));
};
cljs.core.odd_QMARK_ = function(a) {
  return !cljs.core.even_QMARK_(a);
};
cljs.core.complement = function(a) {
  return function() {
    var b = null, c = function() {
      return cljs.core.not(a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null));
    }, d = function(b) {
      return cljs.core.not(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b));
    }, e = function(b, c) {
      return cljs.core.not(a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c));
    }, f = function() {
      var b = function(b, c, d) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(a, b, c, d));
      }, c = function(a, c, d) {
        var e = null;
        if (2 < arguments.length) {
          for (var e = 0, f = Array(arguments.length - 2);e < f.length;) {
            f[e] = arguments[e + 2], ++e;
          }
          e = new cljs.core.IndexedSeq(f, 0);
        }
        return b.call(this, a, c, e);
      };
      c.cljs$lang$maxFixedArity = 2;
      c.cljs$lang$applyTo = function(a) {
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.rest(a);
        return b(c, d, a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }(), b = function(a, b, k) {
      switch(arguments.length) {
        case 0:
          return c.call(this);
        case 1:
          return d.call(this, a);
        case 2:
          return e.call(this, a, b);
        default:
          var m = null;
          if (2 < arguments.length) {
            for (var m = 0, l = Array(arguments.length - 2);m < l.length;) {
              l[m] = arguments[m + 2], ++m;
            }
            m = new cljs.core.IndexedSeq(l, 0);
          }
          return f.cljs$core$IFn$_invoke$arity$variadic(a, b, m);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    b.cljs$lang$maxFixedArity = 2;
    b.cljs$lang$applyTo = f.cljs$lang$applyTo;
    b.cljs$core$IFn$_invoke$arity$0 = c;
    b.cljs$core$IFn$_invoke$arity$1 = d;
    b.cljs$core$IFn$_invoke$arity$2 = e;
    b.cljs$core$IFn$_invoke$arity$variadic = f.cljs$core$IFn$_invoke$arity$variadic;
    return b;
  }();
};
cljs.core.constantly = function(a) {
  return function() {
    var b = function(b) {
      if (0 < arguments.length) {
        for (var d = 0, e = Array(arguments.length - 0);d < e.length;) {
          e[d] = arguments[d + 0], ++d;
        }
        new cljs.core.IndexedSeq(e, 0);
      }
      return a;
    };
    b.cljs$lang$maxFixedArity = 0;
    b.cljs$lang$applyTo = function(b) {
      cljs.core.seq(b);
      return a;
    };
    b.cljs$core$IFn$_invoke$arity$variadic = function(b) {
      return a;
    };
    return b;
  }();
};
cljs.core.comp = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(3), 0), cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function() {
      var c = b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }, e = function(c) {
      c = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }, f = function(c, d) {
      var e = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e);
    }, g = function(c, d, e) {
      c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, d, e) : b.call(null, c, d, e);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }, h = function() {
      var c = function(c, d, e, f) {
        c = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f);
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }(), c = function(a, b, c, n) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var p = null;
          if (3 < arguments.length) {
            for (var p = 0, q = Array(arguments.length - 3);p < q.length;) {
              q[p] = arguments[p + 3], ++p;
            }
            p = new cljs.core.IndexedSeq(q, 0);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, p);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = h.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = d;
    c.cljs$core$IFn$_invoke$arity$1 = e;
    c.cljs$core$IFn$_invoke$arity$2 = f;
    c.cljs$core$IFn$_invoke$arity$3 = g;
    c.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function() {
      var d;
      d = c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null);
      d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    }, f = function(d) {
      d = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
      d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    }, g = function(d, e) {
      var f;
      f = c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(d, e) : c.call(null, d, e);
      f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(f) : b.call(null, f);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(f) : a.call(null, f);
    }, h = function(d, e, f) {
      d = c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(d, e, f) : c.call(null, d, e, f);
      d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    }, k = function() {
      var d = function(d, e, f, g) {
        d = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(c, d, e, f, g);
        d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }(), d = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return e.call(this);
        case 1:
          return f.call(this, a);
        case 2:
          return g.call(this, a, b);
        case 3:
          return h.call(this, a, b, c);
        default:
          var q = null;
          if (3 < arguments.length) {
            for (var q = 0, r = Array(arguments.length - 3);q < r.length;) {
              r[q] = arguments[q + 3], ++q;
            }
            q = new cljs.core.IndexedSeq(r, 0);
          }
          return k.cljs$core$IFn$_invoke$arity$variadic(a, b, c, q);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = k.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = e;
    d.cljs$core$IFn$_invoke$arity$1 = f;
    d.cljs$core$IFn$_invoke$arity$2 = g;
    d.cljs$core$IFn$_invoke$arity$3 = h;
    d.cljs$core$IFn$_invoke$arity$variadic = k.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return function(a) {
    return function() {
      var b = function(b) {
        b = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(a), b);
        for (var c = cljs.core.next(a);;) {
          if (c) {
            b = cljs.core.first(c).call(null, b), c = cljs.core.next(c);
          } else {
            return b;
          }
        }
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(a, b, c, d)));
};
cljs.core.comp.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), d = cljs.core.next(d);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(4), 0), cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function() {
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
    }, e = function(c) {
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    }, f = function(c, d) {
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d);
    }, g = function(c, d, e) {
      return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.call(null, b, c, d, e);
    }, h = function() {
      var c = function(c, d, e, f) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, e, cljs.core.array_seq([f], 0));
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }(), c = function(a, b, c, n) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var p = null;
          if (3 < arguments.length) {
            for (var p = 0, q = Array(arguments.length - 3);p < q.length;) {
              q[p] = arguments[p + 3], ++p;
            }
            p = new cljs.core.IndexedSeq(q, 0);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, p);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = h.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = d;
    c.cljs$core$IFn$_invoke$arity$1 = e;
    c.cljs$core$IFn$_invoke$arity$2 = f;
    c.cljs$core$IFn$_invoke$arity$3 = g;
    c.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function() {
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    }, f = function(d) {
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d);
    }, g = function(d, e) {
      return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.call(null, b, c, d, e);
    }, h = function(d, e, f) {
      return a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f) : a.call(null, b, c, d, e, f);
    }, k = function() {
      var d = function(d, e, f, g) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, e, cljs.core.array_seq([f, g], 0));
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }(), d = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return e.call(this);
        case 1:
          return f.call(this, a);
        case 2:
          return g.call(this, a, b);
        case 3:
          return h.call(this, a, b, c);
        default:
          var q = null;
          if (3 < arguments.length) {
            for (var q = 0, r = Array(arguments.length - 3);q < r.length;) {
              r[q] = arguments[q + 3], ++q;
            }
            q = new cljs.core.IndexedSeq(r, 0);
          }
          return k.cljs$core$IFn$_invoke$arity$variadic(a, b, c, q);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = k.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = e;
    d.cljs$core$IFn$_invoke$arity$1 = f;
    d.cljs$core$IFn$_invoke$arity$2 = g;
    d.cljs$core$IFn$_invoke$arity$3 = h;
    d.cljs$core$IFn$_invoke$arity$variadic = k.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return function() {
    var e = null, f = function() {
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d);
    }, g = function(e) {
      return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.call(null, b, c, d, e);
    }, h = function(e, f) {
      return a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f) : a.call(null, b, c, d, e, f);
    }, k = function(e, f, g) {
      return a.cljs$core$IFn$_invoke$arity$6 ? a.cljs$core$IFn$_invoke$arity$6(b, c, d, e, f, g) : a.call(null, b, c, d, e, f, g);
    }, m = function() {
      var e = function(e, f, g, h) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, e, cljs.core.array_seq([f, g, h], 0));
      }, f = function(a, b, c, d) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0);
        }
        return e.call(this, a, b, c, f);
      };
      f.cljs$lang$maxFixedArity = 3;
      f.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.rest(a);
        return e(b, c, d, a);
      };
      f.cljs$core$IFn$_invoke$arity$variadic = e;
      return f;
    }(), e = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return f.call(this);
        case 1:
          return g.call(this, a);
        case 2:
          return h.call(this, a, b);
        case 3:
          return k.call(this, a, b, c);
        default:
          var e = null;
          if (3 < arguments.length) {
            for (var e = 0, t = Array(arguments.length - 3);e < t.length;) {
              t[e] = arguments[e + 3], ++e;
            }
            e = new cljs.core.IndexedSeq(t, 0);
          }
          return m.cljs$core$IFn$_invoke$arity$variadic(a, b, c, e);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    e.cljs$lang$maxFixedArity = 3;
    e.cljs$lang$applyTo = m.cljs$lang$applyTo;
    e.cljs$core$IFn$_invoke$arity$0 = f;
    e.cljs$core$IFn$_invoke$arity$1 = g;
    e.cljs$core$IFn$_invoke$arity$2 = h;
    e.cljs$core$IFn$_invoke$arity$3 = k;
    e.cljs$core$IFn$_invoke$arity$variadic = m.cljs$core$IFn$_invoke$arity$variadic;
    return e;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return function() {
    var f = function(f) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, b, c, d, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(e, f));
    }, g = function(a) {
      var b = null;
      if (0 < arguments.length) {
        for (var b = 0, c = Array(arguments.length - 0);b < c.length;) {
          c[b] = arguments[b + 0], ++b;
        }
        b = new cljs.core.IndexedSeq(c, 0);
      }
      return f.call(this, b);
    };
    g.cljs$lang$maxFixedArity = 0;
    g.cljs$lang$applyTo = function(a) {
      a = cljs.core.seq(a);
      return f(a);
    };
    g.cljs$core$IFn$_invoke$arity$variadic = f;
    return g;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), e = cljs.core.next(d), d = cljs.core.first(e), e = cljs.core.next(e);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function(c) {
      c = null == c ? b : c;
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }, e = function(c, d) {
      var e = null == c ? b : c;
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(e, d) : a.call(null, e, d);
    }, f = function(c, d, e) {
      c = null == c ? b : c;
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(c, d, e) : a.call(null, c, d, e);
    }, g = function() {
      var c = function(c, d, e, f) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, null == c ? b : c, d, e, f);
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }(), c = function(a, b, c, l) {
      switch(arguments.length) {
        case 1:
          return d.call(this, a);
        case 2:
          return e.call(this, a, b);
        case 3:
          return f.call(this, a, b, c);
        default:
          var n = null;
          if (3 < arguments.length) {
            for (var n = 0, p = Array(arguments.length - 3);n < p.length;) {
              p[n] = arguments[n + 3], ++n;
            }
            n = new cljs.core.IndexedSeq(p, 0);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(a, b, c, n);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = g.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$1 = d;
    c.cljs$core$IFn$_invoke$arity$2 = e;
    c.cljs$core$IFn$_invoke$arity$3 = f;
    c.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function(d, e) {
      var f = null == d ? b : d, g = null == e ? c : e;
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
    }, f = function(d, e, f) {
      d = null == d ? b : d;
      e = null == e ? c : e;
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(d, e, f) : a.call(null, d, e, f);
    }, g = function() {
      var d = function(d, e, f, g) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, null == d ? b : d, null == e ? c : e, f, g);
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }(), d = function(a, b, c, d) {
      switch(arguments.length) {
        case 2:
          return e.call(this, a, b);
        case 3:
          return f.call(this, a, b, c);
        default:
          var n = null;
          if (3 < arguments.length) {
            for (var n = 0, p = Array(arguments.length - 3);n < p.length;) {
              p[n] = arguments[n + 3], ++n;
            }
            n = new cljs.core.IndexedSeq(p, 0);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(a, b, c, n);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = g.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$2 = e;
    d.cljs$core$IFn$_invoke$arity$3 = f;
    d.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return function() {
    var e = null, f = function(d, e) {
      var f = null == d ? b : d, g = null == e ? c : e;
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
    }, g = function(e, f, g) {
      e = null == e ? b : e;
      f = null == f ? c : f;
      g = null == g ? d : g;
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(e, f, g) : a.call(null, e, f, g);
    }, h = function() {
      var e = function(e, f, g, h) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, null == e ? b : e, null == f ? c : f, null == g ? d : g, h);
      }, f = function(a, b, c, d) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0);
        }
        return e.call(this, a, b, c, f);
      };
      f.cljs$lang$maxFixedArity = 3;
      f.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.rest(a);
        return e(b, c, d, a);
      };
      f.cljs$core$IFn$_invoke$arity$variadic = e;
      return f;
    }(), e = function(a, b, c, d) {
      switch(arguments.length) {
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var e = null;
          if (3 < arguments.length) {
            for (var e = 0, q = Array(arguments.length - 3);e < q.length;) {
              q[e] = arguments[e + 3], ++e;
            }
            e = new cljs.core.IndexedSeq(q, 0);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, e);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    e.cljs$lang$maxFixedArity = 3;
    e.cljs$lang$applyTo = h.cljs$lang$applyTo;
    e.cljs$core$IFn$_invoke$arity$2 = f;
    e.cljs$core$IFn$_invoke$arity$3 = g;
    e.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return e;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.volatile_BANG_;
cljs.core.map_indexed = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          var f;
          f = cljs.core._vreset_BANG_(c, cljs.core._deref(c) + 1);
          f = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, e) : a.call(null, f, e);
          return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, f) : b.call(null, d, f);
        }, d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + arguments.length);
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1));
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function d(b, f) {
    return new cljs.core.LazySeq(null, function() {
      var g = cljs.core.seq(f);
      if (g) {
        if (cljs.core.chunked_seq_QMARK_(g)) {
          for (var h = cljs.core.chunk_first(g), k = cljs.core.count(h), m = cljs.core.chunk_buffer(k), l = 0;;) {
            if (l < k) {
              cljs.core.chunk_append(m, function() {
                var d = b + l, f = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(h, l);
                return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(d, f) : a.call(null, d, f);
              }()), l += 1;
            } else {
              break;
            }
          }
          return cljs.core.chunk_cons(cljs.core.chunk(m), d(b + k, cljs.core.chunk_rest(g)));
        }
        return cljs.core.cons(function() {
          var d = cljs.core.first(g);
          return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, d) : a.call(null, b, d);
        }(), d(b + 1, cljs.core.rest(g)));
      }
      return null;
    }, null, null);
  }(0, b);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, e = function(a) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
      }, f = function(c, d) {
        var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
        return null == e ? c : b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, e) : b.call(null, c, e);
      }, c = function(a, b) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, a);
          case 2:
            return f.call(this, a, b);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      if (cljs.core.chunked_seq_QMARK_(c)) {
        for (var d = cljs.core.chunk_first(c), e = cljs.core.count(d), f = cljs.core.chunk_buffer(e), g = 0;;) {
          if (g < e) {
            var h = function() {
              var b = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(d, g);
              return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            }();
            null != h && cljs.core.chunk_append(f, h);
            g += 1;
          } else {
            break;
          }
        }
        return cljs.core.chunk_cons(cljs.core.chunk(f), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(a, cljs.core.chunk_rest(c)));
      }
      e = function() {
        var b = cljs.core.first(c);
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
      }();
      return null == e ? cljs.core.keep.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rest(c)) : cljs.core.cons(e, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rest(c)));
    }
    return null;
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(a, b, c, d) {
  this.state = a;
  this.meta = b;
  this.validator = c;
  this.watches = d;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return this === b;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  return this.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(a, b, c) {
  a = cljs.core.seq(this.watches);
  for (var d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = d.cljs$core$IIndexed$_nth$arity$2(null, f), h = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(g, 0, null), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(g, 1, null);
      g.cljs$core$IFn$_invoke$arity$4 ? g.cljs$core$IFn$_invoke$arity$4(h, this, b, c) : g.call(null, h, this, b, c);
      f += 1;
    } else {
      if (a = cljs.core.seq(a)) {
        cljs.core.chunked_seq_QMARK_(a) ? (d = cljs.core.chunk_first(a), a = cljs.core.chunk_rest(a), h = d, e = cljs.core.count(d), d = h) : (d = cljs.core.first(a), h = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 0, null), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 1, null), g.cljs$core$IFn$_invoke$arity$4 ? g.cljs$core$IFn$_invoke$arity$4(h, this, b, c) : g.call(null, h, this, b, c), a = cljs.core.next(a), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(a, b, c) {
  this.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.watches, b, c);
  return this;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(a, b) {
  return this.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(this.watches, b);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return goog.getUid(this);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = !0;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function(a, b, c, d) {
  return new cljs.core.Atom(a, b, c, d);
};
cljs.core.atom = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(1), 0), cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.Atom(a, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || b.cljs$core$ISeq$) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, b) : b, d = cljs.core.get.cljs$core$IFn$_invoke$arity$2(c, new cljs.core.Keyword(null, "meta", "meta", 1499536964)), c = cljs.core.get.cljs$core$IFn$_invoke$arity$2(c, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(a, d, c, null);
};
cljs.core.atom.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str;
cljs.core.reset_BANG_ = function(a, b) {
  if (a instanceof cljs.core.Atom) {
    var c = a.validator;
    if (null != c && !cljs.core.truth_(c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(b) : c.call(null, b))) {
      throw Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
        var a = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
        return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.pr_str.call(null, a);
      }())].join(""));
    }
    c = a.state;
    a.state = b;
    null != a.watches && cljs.core._notify_watches(a, c, b);
    return b;
  }
  return cljs.core._reset_BANG_(a, b);
};
cljs.core.swap_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(4), 0), cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a instanceof cljs.core.Atom ? cljs.core.reset_BANG_(a, function() {
    var c = a.state;
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
  }()) : cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a instanceof cljs.core.Atom ? cljs.core.reset_BANG_(a, function() {
    var d = a.state;
    return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, c) : b.call(null, d, c);
  }()) : cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, b, c);
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return a instanceof cljs.core.Atom ? cljs.core.reset_BANG_(a, function() {
    var e = a.state;
    return b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(e, c, d) : b.call(null, e, c, d);
  }()) : cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return a instanceof cljs.core.Atom ? cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, a.state, c, d, e)) : cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), e = cljs.core.next(d), d = cljs.core.first(e), e = cljs.core.next(e);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function(a, b, c) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), b) ? (cljs.core.reset_BANG_(a, c), !0) : !1;
};
cljs.core.set_validator_BANG_ = function(a, b) {
  return a.validator = b;
};
cljs.core.get_validator = function(a) {
  return a.validator;
};
cljs.core.Volatile = function(a) {
  this.state = a;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = !0;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(a, b) {
  return this.state = b;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  return this.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Volatile.cljs$lang$type = !0;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function(a) {
  return new cljs.core.Volatile(a);
};
cljs.core.volatile_BANG_ = function(a) {
  return new cljs.core.Volatile(a);
};
cljs.core.volatile_QMARK_ = function(a) {
  return a instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function(a, b) {
  return cljs.core._vreset_BANG_(a, b);
};
cljs.core.keep_indexed = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          var f = cljs.core._vreset_BANG_(c, cljs.core._deref(c) + 1), f = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, e) : a.call(null, f, e);
          return null == f ? d : b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, f) : b.call(null, d, f);
        }, d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + arguments.length);
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_(-1));
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function d(b, f) {
    return new cljs.core.LazySeq(null, function() {
      var g = cljs.core.seq(f);
      if (g) {
        if (cljs.core.chunked_seq_QMARK_(g)) {
          for (var h = cljs.core.chunk_first(g), k = cljs.core.count(h), m = cljs.core.chunk_buffer(k), l = 0;;) {
            if (l < k) {
              var n = function() {
                var d = b + l, f = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(h, l);
                return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(d, f) : a.call(null, d, f);
              }();
              null != n && cljs.core.chunk_append(m, n);
              l += 1;
            } else {
              break;
            }
          }
          return cljs.core.chunk_cons(cljs.core.chunk(m), d(b + k, cljs.core.chunk_rest(g)));
        }
        k = function() {
          var d = cljs.core.first(g);
          return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, d) : a.call(null, b, d);
        }();
        return null == k ? d(b + 1, cljs.core.rest(g)) : cljs.core.cons(k, d(b + 1, cljs.core.rest(g)));
      }
      return null;
    }, null, null);
  }(0, b);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(3), 0), cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function() {
    var b = null, c = function(b) {
      return cljs.core.boolean$(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b));
    }, d = function(b, c) {
      return cljs.core.boolean$(function() {
        var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
        return cljs.core.truth_(d) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c) : d;
      }());
    }, e = function(b, c, d) {
      return cljs.core.boolean$(function() {
        var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
        return cljs.core.truth_(e) ? (e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c), cljs.core.truth_(e) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d) : e) : e;
      }());
    }, f = function() {
      var c = function(c, d, e, f) {
        return cljs.core.boolean$(function() {
          var g = b.cljs$core$IFn$_invoke$arity$3(c, d, e);
          return cljs.core.truth_(g) ? cljs.core.every_QMARK_(a, f) : g;
        }());
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, h = Array(arguments.length - 3);f < h.length;) {
            h[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(h, 0);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }(), b = function(a, b, k, m) {
      switch(arguments.length) {
        case 0:
          return !0;
        case 1:
          return c.call(this, a);
        case 2:
          return d.call(this, a, b);
        case 3:
          return e.call(this, a, b, k);
        default:
          var l = null;
          if (3 < arguments.length) {
            for (var l = 0, n = Array(arguments.length - 3);l < n.length;) {
              n[l] = arguments[l + 3], ++l;
            }
            l = new cljs.core.IndexedSeq(n, 0);
          }
          return f.cljs$core$IFn$_invoke$arity$variadic(a, b, k, l);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    b.cljs$lang$maxFixedArity = 3;
    b.cljs$lang$applyTo = f.cljs$lang$applyTo;
    b.cljs$core$IFn$_invoke$arity$0 = function() {
      return !0;
    };
    b.cljs$core$IFn$_invoke$arity$1 = c;
    b.cljs$core$IFn$_invoke$arity$2 = d;
    b.cljs$core$IFn$_invoke$arity$3 = e;
    b.cljs$core$IFn$_invoke$arity$variadic = f.cljs$core$IFn$_invoke$arity$variadic;
    return b;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function(c) {
      return cljs.core.boolean$(function() {
        var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
        return cljs.core.truth_(d) ? b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c) : d;
      }());
    }, e = function(c, d) {
      return cljs.core.boolean$(function() {
        var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
        return cljs.core.truth_(e) && (e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d), cljs.core.truth_(e)) ? (e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c), cljs.core.truth_(e) ? b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d) : e) : e;
      }());
    }, f = function(c, d, e) {
      return cljs.core.boolean$(function() {
        var f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
        return cljs.core.truth_(f) && (f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d), cljs.core.truth_(f) && (f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e), cljs.core.truth_(f) && (f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c), cljs.core.truth_(f)))) ? (f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), cljs.core.truth_(f) ? 
        b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e) : f) : f;
      }());
    }, g = function() {
      var d = function(d, e, f, g) {
        return cljs.core.boolean$(function() {
          var h = c.cljs$core$IFn$_invoke$arity$3(d, e, f);
          return cljs.core.truth_(h) ? cljs.core.every_QMARK_(function(c) {
            return function(c) {
              var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
              return cljs.core.truth_(d) ? b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c) : d;
            };
          }(h), g) : h;
        }());
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }(), c = function(a, b, c, l) {
      switch(arguments.length) {
        case 0:
          return !0;
        case 1:
          return d.call(this, a);
        case 2:
          return e.call(this, a, b);
        case 3:
          return f.call(this, a, b, c);
        default:
          var n = null;
          if (3 < arguments.length) {
            for (var n = 0, p = Array(arguments.length - 3);n < p.length;) {
              p[n] = arguments[n + 3], ++n;
            }
            n = new cljs.core.IndexedSeq(p, 0);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(a, b, c, n);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = g.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = function() {
      return !0;
    };
    c.cljs$core$IFn$_invoke$arity$1 = d;
    c.cljs$core$IFn$_invoke$arity$2 = e;
    c.cljs$core$IFn$_invoke$arity$3 = f;
    c.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function(d) {
      return cljs.core.boolean$(function() {
        var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
        return cljs.core.truth_(e) ? (e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), cljs.core.truth_(e) ? c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d) : e) : e;
      }());
    }, f = function(d, e) {
      return cljs.core.boolean$(function() {
        var f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
        return cljs.core.truth_(f) && (f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), cljs.core.truth_(f) && (f = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d), cljs.core.truth_(f) && (f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e), cljs.core.truth_(f)))) ? (f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e), cljs.core.truth_(f) ? 
        c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(e) : c.call(null, e) : f) : f;
      }());
    }, g = function(d, e, f) {
      return cljs.core.boolean$(function() {
        var g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
        return cljs.core.truth_(g) && (g = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), cljs.core.truth_(g) && (g = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d), cljs.core.truth_(g) && (g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e), cljs.core.truth_(g) && (g = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e), cljs.core.truth_(g) && 
        (g = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(e) : c.call(null, e), cljs.core.truth_(g) && (g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(f) : a.call(null, f), cljs.core.truth_(g))))))) ? (g = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(f) : b.call(null, f), cljs.core.truth_(g) ? c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(f) : c.call(null, f) : g) : g;
      }());
    }, h = function() {
      var e = function(e, f, g, h) {
        return cljs.core.boolean$(function() {
          var k = d.cljs$core$IFn$_invoke$arity$3(e, f, g);
          return cljs.core.truth_(k) ? cljs.core.every_QMARK_(function(d) {
            return function(d) {
              var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
              return cljs.core.truth_(e) ? (e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), cljs.core.truth_(e) ? c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d) : e) : e;
            };
          }(k), h) : k;
        }());
      }, f = function(a, b, c, d) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0);
        }
        return e.call(this, a, b, c, f);
      };
      f.cljs$lang$maxFixedArity = 3;
      f.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.rest(a);
        return e(b, c, d, a);
      };
      f.cljs$core$IFn$_invoke$arity$variadic = e;
      return f;
    }(), d = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return !0;
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var p = null;
          if (3 < arguments.length) {
            for (var p = 0, q = Array(arguments.length - 3);p < q.length;) {
              q[p] = arguments[p + 3], ++p;
            }
            p = new cljs.core.IndexedSeq(q, 0);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, p);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = h.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = function() {
      return !0;
    };
    d.cljs$core$IFn$_invoke$arity$1 = e;
    d.cljs$core$IFn$_invoke$arity$2 = f;
    d.cljs$core$IFn$_invoke$arity$3 = g;
    d.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return function(a) {
    return function() {
      var b = null, c = function(b) {
        return cljs.core.every_QMARK_(function(a) {
          return function(a) {
            return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
          };
        }(a), a);
      }, d = function(b, c) {
        return cljs.core.every_QMARK_(function(a) {
          return function(a) {
            var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            return cljs.core.truth_(d) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c) : d;
          };
        }(a), a);
      }, k = function(b, c, d) {
        return cljs.core.every_QMARK_(function(a) {
          return function(a) {
            var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            return cljs.core.truth_(e) ? (e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c), cljs.core.truth_(e) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d) : e) : e;
          };
        }(a), a);
      }, m = function() {
        var c = function(c, d, g, h) {
          return cljs.core.boolean$(function() {
            var k = b.cljs$core$IFn$_invoke$arity$3(c, d, g);
            return cljs.core.truth_(k) ? cljs.core.every_QMARK_(function(a, b) {
              return function(a) {
                return cljs.core.every_QMARK_(a, h);
              };
            }(k, a), a) : k;
          }());
        }, d = function(a, b, d, e) {
          var f = null;
          if (3 < arguments.length) {
            for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
              g[f] = arguments[f + 3], ++f;
            }
            f = new cljs.core.IndexedSeq(g, 0);
          }
          return c.call(this, a, b, d, f);
        };
        d.cljs$lang$maxFixedArity = 3;
        d.cljs$lang$applyTo = function(a) {
          var b = cljs.core.first(a);
          a = cljs.core.next(a);
          var d = cljs.core.first(a);
          a = cljs.core.next(a);
          var e = cljs.core.first(a);
          a = cljs.core.rest(a);
          return c(b, d, e, a);
        };
        d.cljs$core$IFn$_invoke$arity$variadic = c;
        return d;
      }(), b = function(a, b, e, f) {
        switch(arguments.length) {
          case 0:
            return !0;
          case 1:
            return c.call(this, a);
          case 2:
            return d.call(this, a, b);
          case 3:
            return k.call(this, a, b, e);
          default:
            var r = null;
            if (3 < arguments.length) {
              for (var r = 0, t = Array(arguments.length - 3);r < t.length;) {
                t[r] = arguments[r + 3], ++r;
              }
              r = new cljs.core.IndexedSeq(t, 0);
            }
            return m.cljs$core$IFn$_invoke$arity$variadic(a, b, e, r);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      b.cljs$lang$maxFixedArity = 3;
      b.cljs$lang$applyTo = m.cljs$lang$applyTo;
      b.cljs$core$IFn$_invoke$arity$0 = function() {
        return !0;
      };
      b.cljs$core$IFn$_invoke$arity$1 = c;
      b.cljs$core$IFn$_invoke$arity$2 = d;
      b.cljs$core$IFn$_invoke$arity$3 = k;
      b.cljs$core$IFn$_invoke$arity$variadic = m.cljs$core$IFn$_invoke$arity$variadic;
      return b;
    }();
  }(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(a, b, c, d));
};
cljs.core.every_pred.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), d = cljs.core.next(d);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(3), 0), cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function() {
    var b = null, c = function(b) {
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
    }, d = function(b, c) {
      var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
      return cljs.core.truth_(d) ? d : a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }, e = function(b, c, d) {
      b = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
      if (cljs.core.truth_(b)) {
        return b;
      }
      c = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      return cljs.core.truth_(c) ? c : a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    }, f = function() {
      var c = function(c, d, e, f) {
        c = b.cljs$core$IFn$_invoke$arity$3(c, d, e);
        return cljs.core.truth_(c) ? c : cljs.core.some(a, f);
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, h = Array(arguments.length - 3);f < h.length;) {
            h[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(h, 0);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }(), b = function(a, b, k, m) {
      switch(arguments.length) {
        case 0:
          return null;
        case 1:
          return c.call(this, a);
        case 2:
          return d.call(this, a, b);
        case 3:
          return e.call(this, a, b, k);
        default:
          var l = null;
          if (3 < arguments.length) {
            for (var l = 0, n = Array(arguments.length - 3);l < n.length;) {
              n[l] = arguments[l + 3], ++l;
            }
            l = new cljs.core.IndexedSeq(n, 0);
          }
          return f.cljs$core$IFn$_invoke$arity$variadic(a, b, k, l);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    b.cljs$lang$maxFixedArity = 3;
    b.cljs$lang$applyTo = f.cljs$lang$applyTo;
    b.cljs$core$IFn$_invoke$arity$0 = function() {
      return null;
    };
    b.cljs$core$IFn$_invoke$arity$1 = c;
    b.cljs$core$IFn$_invoke$arity$2 = d;
    b.cljs$core$IFn$_invoke$arity$3 = e;
    b.cljs$core$IFn$_invoke$arity$variadic = f.cljs$core$IFn$_invoke$arity$variadic;
    return b;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function(c) {
      var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      return cljs.core.truth_(d) ? d : b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
    }, e = function(c, d) {
      var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      if (cljs.core.truth_(e)) {
        return e;
      }
      e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      if (cljs.core.truth_(e)) {
        return e;
      }
      e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
      return cljs.core.truth_(e) ? e : b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
    }, f = function(c, d, e) {
      var f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      if (cljs.core.truth_(f)) {
        return f;
      }
      f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      if (cljs.core.truth_(f)) {
        return f;
      }
      f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e);
      if (cljs.core.truth_(f)) {
        return f;
      }
      c = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
      if (cljs.core.truth_(c)) {
        return c;
      }
      d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      return cljs.core.truth_(d) ? d : b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e);
    }, g = function() {
      var d = function(d, e, f, g) {
        d = c.cljs$core$IFn$_invoke$arity$3(d, e, f);
        return cljs.core.truth_(d) ? d : cljs.core.some(function(c) {
          return function(c) {
            var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
            return cljs.core.truth_(d) ? d : b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
          };
        }(d), g);
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }(), c = function(a, b, c, l) {
      switch(arguments.length) {
        case 0:
          return null;
        case 1:
          return d.call(this, a);
        case 2:
          return e.call(this, a, b);
        case 3:
          return f.call(this, a, b, c);
        default:
          var n = null;
          if (3 < arguments.length) {
            for (var n = 0, p = Array(arguments.length - 3);n < p.length;) {
              p[n] = arguments[n + 3], ++n;
            }
            n = new cljs.core.IndexedSeq(p, 0);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(a, b, c, n);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = g.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = function() {
      return null;
    };
    c.cljs$core$IFn$_invoke$arity$1 = d;
    c.cljs$core$IFn$_invoke$arity$2 = e;
    c.cljs$core$IFn$_invoke$arity$3 = f;
    c.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function(d) {
      var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      if (cljs.core.truth_(e)) {
        return e;
      }
      e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      return cljs.core.truth_(e) ? e : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
    }, f = function(d, e) {
      var f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      if (cljs.core.truth_(f)) {
        return f;
      }
      f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      if (cljs.core.truth_(f)) {
        return f;
      }
      f = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
      if (cljs.core.truth_(f)) {
        return f;
      }
      f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e);
      if (cljs.core.truth_(f)) {
        return f;
      }
      f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e);
      return cljs.core.truth_(f) ? f : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(e) : c.call(null, e);
    }, g = function(d, e, f) {
      var g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      if (cljs.core.truth_(g)) {
        return g;
      }
      g = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      if (cljs.core.truth_(g)) {
        return g;
      }
      d = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
      if (cljs.core.truth_(d)) {
        return d;
      }
      d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e);
      if (cljs.core.truth_(d)) {
        return d;
      }
      d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e);
      if (cljs.core.truth_(d)) {
        return d;
      }
      e = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(e) : c.call(null, e);
      if (cljs.core.truth_(e)) {
        return e;
      }
      e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(f) : a.call(null, f);
      if (cljs.core.truth_(e)) {
        return e;
      }
      e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(f) : b.call(null, f);
      return cljs.core.truth_(e) ? e : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(f) : c.call(null, f);
    }, h = function() {
      var e = function(e, f, g, h) {
        e = d.cljs$core$IFn$_invoke$arity$3(e, f, g);
        return cljs.core.truth_(e) ? e : cljs.core.some(function(d) {
          return function(d) {
            var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
            if (cljs.core.truth_(e)) {
              return e;
            }
            e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
            return cljs.core.truth_(e) ? e : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
          };
        }(e), h);
      }, f = function(a, b, c, d) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0);
        }
        return e.call(this, a, b, c, f);
      };
      f.cljs$lang$maxFixedArity = 3;
      f.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.rest(a);
        return e(b, c, d, a);
      };
      f.cljs$core$IFn$_invoke$arity$variadic = e;
      return f;
    }(), d = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return null;
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var p = null;
          if (3 < arguments.length) {
            for (var p = 0, q = Array(arguments.length - 3);p < q.length;) {
              q[p] = arguments[p + 3], ++p;
            }
            p = new cljs.core.IndexedSeq(q, 0);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, p);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = h.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = function() {
      return null;
    };
    d.cljs$core$IFn$_invoke$arity$1 = e;
    d.cljs$core$IFn$_invoke$arity$2 = f;
    d.cljs$core$IFn$_invoke$arity$3 = g;
    d.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return function(a) {
    return function() {
      var b = null, c = function(b) {
        return cljs.core.some(function(a) {
          return function(a) {
            return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
          };
        }(a), a);
      }, d = function(b, c) {
        return cljs.core.some(function(a) {
          return function(a) {
            var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            return cljs.core.truth_(d) ? d : a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
          };
        }(a), a);
      }, k = function(b, c, d) {
        return cljs.core.some(function(a) {
          return function(a) {
            var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            if (cljs.core.truth_(e)) {
              return e;
            }
            e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
            return cljs.core.truth_(e) ? e : a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
          };
        }(a), a);
      }, m = function() {
        var c = function(c, d, g, h) {
          c = b.cljs$core$IFn$_invoke$arity$3(c, d, g);
          return cljs.core.truth_(c) ? c : cljs.core.some(function(a, b) {
            return function(a) {
              return cljs.core.some(a, h);
            };
          }(c, a), a);
        }, d = function(a, b, d, e) {
          var f = null;
          if (3 < arguments.length) {
            for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
              g[f] = arguments[f + 3], ++f;
            }
            f = new cljs.core.IndexedSeq(g, 0);
          }
          return c.call(this, a, b, d, f);
        };
        d.cljs$lang$maxFixedArity = 3;
        d.cljs$lang$applyTo = function(a) {
          var b = cljs.core.first(a);
          a = cljs.core.next(a);
          var d = cljs.core.first(a);
          a = cljs.core.next(a);
          var e = cljs.core.first(a);
          a = cljs.core.rest(a);
          return c(b, d, e, a);
        };
        d.cljs$core$IFn$_invoke$arity$variadic = c;
        return d;
      }(), b = function(a, b, e, f) {
        switch(arguments.length) {
          case 0:
            return null;
          case 1:
            return c.call(this, a);
          case 2:
            return d.call(this, a, b);
          case 3:
            return k.call(this, a, b, e);
          default:
            var r = null;
            if (3 < arguments.length) {
              for (var r = 0, t = Array(arguments.length - 3);r < t.length;) {
                t[r] = arguments[r + 3], ++r;
              }
              r = new cljs.core.IndexedSeq(t, 0);
            }
            return m.cljs$core$IFn$_invoke$arity$variadic(a, b, e, r);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      b.cljs$lang$maxFixedArity = 3;
      b.cljs$lang$applyTo = m.cljs$lang$applyTo;
      b.cljs$core$IFn$_invoke$arity$0 = function() {
        return null;
      };
      b.cljs$core$IFn$_invoke$arity$1 = c;
      b.cljs$core$IFn$_invoke$arity$2 = d;
      b.cljs$core$IFn$_invoke$arity$3 = k;
      b.cljs$core$IFn$_invoke$arity$variadic = m.cljs$core$IFn$_invoke$arity$variadic;
      return b;
    }();
  }(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(a, b, c, d));
};
cljs.core.some_fn.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), d = cljs.core.next(d);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(4), 0), cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, e = function(a) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
      }, f = function(c, d) {
        var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
        return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, e) : b.call(null, c, e);
      }, g = function() {
        var c = function(c, d, e) {
          d = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(a, d, e);
          return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d);
        }, d = function(a, b, d) {
          var e = null;
          if (2 < arguments.length) {
            for (var e = 0, f = Array(arguments.length - 2);e < f.length;) {
              f[e] = arguments[e + 2], ++e;
            }
            e = new cljs.core.IndexedSeq(f, 0);
          }
          return c.call(this, a, b, e);
        };
        d.cljs$lang$maxFixedArity = 2;
        d.cljs$lang$applyTo = function(a) {
          var b = cljs.core.first(a);
          a = cljs.core.next(a);
          var d = cljs.core.first(a);
          a = cljs.core.rest(a);
          return c(b, d, a);
        };
        d.cljs$core$IFn$_invoke$arity$variadic = c;
        return d;
      }(), c = function(a, b, c) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, a);
          case 2:
            return f.call(this, a, b);
          default:
            var l = null;
            if (2 < arguments.length) {
              for (var l = 0, n = Array(arguments.length - 2);l < n.length;) {
                n[l] = arguments[l + 2], ++l;
              }
              l = new cljs.core.IndexedSeq(n, 0);
            }
            return g.cljs$core$IFn$_invoke$arity$variadic(a, b, l);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      c.cljs$lang$maxFixedArity = 2;
      c.cljs$lang$applyTo = g.cljs$lang$applyTo;
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      c.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
      return c;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      if (cljs.core.chunked_seq_QMARK_(c)) {
        for (var d = cljs.core.chunk_first(c), e = cljs.core.count(d), f = cljs.core.chunk_buffer(e), g = 0;;) {
          if (g < e) {
            cljs.core.chunk_append(f, function() {
              var b = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(d, g);
              return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            }()), g += 1;
          } else {
            break;
          }
        }
        return cljs.core.chunk_cons(cljs.core.chunk(f), cljs.core.map.cljs$core$IFn$_invoke$arity$2(a, cljs.core.chunk_rest(c)));
      }
      return cljs.core.cons(function() {
        var b = cljs.core.first(c);
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rest(c)));
    }
    return null;
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.LazySeq(null, function() {
    var d = cljs.core.seq(b), e = cljs.core.seq(c);
    return d && e ? cljs.core.cons(function() {
      var b = cljs.core.first(d), c = cljs.core.first(e);
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(a, cljs.core.rest(d), cljs.core.rest(e))) : null;
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return new cljs.core.LazySeq(null, function() {
    var e = cljs.core.seq(b), f = cljs.core.seq(c), g = cljs.core.seq(d);
    return e && f && g ? cljs.core.cons(function() {
      var b = cljs.core.first(e), c = cljs.core.first(f), d = cljs.core.first(g);
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d);
    }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(a, cljs.core.rest(e), cljs.core.rest(f), cljs.core.rest(g))) : null;
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  var f = function h(a) {
    return new cljs.core.LazySeq(null, function() {
      var b = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, a);
      return cljs.core.every_QMARK_(cljs.core.identity, b) ? cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, b), h(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, b))) : null;
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(b) {
    return function(b) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(a, b);
    };
  }(f), f(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(e, d, cljs.core.array_seq([c, b], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), e = cljs.core.next(d), d = cljs.core.first(e), e = cljs.core.next(e);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if ("number" !== typeof a) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var a = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.pr_str.call(null, a);
    }())].join(""));
  }
  return function(b) {
    return function(a) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          var f = cljs.core.deref(a), g = cljs.core._vreset_BANG_(a, cljs.core._deref(a) - 1), f = 0 < f ? b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e) : d;
          return 0 < g ? f : cljs.core.ensure_reduced(f);
        }, d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + arguments.length);
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_(a));
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if ("number" !== typeof a) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var a = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.pr_str.call(null, a);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    if (0 < a) {
      var c = cljs.core.seq(b);
      return c ? cljs.core.cons(cljs.core.first(c), cljs.core.take.cljs$core$IFn$_invoke$arity$2(a - 1, cljs.core.rest(c))) : null;
    }
    return null;
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if ("number" !== typeof a) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var a = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.pr_str.call(null, a);
    }())].join(""));
  }
  return function(b) {
    return function(a) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          var f = cljs.core.deref(a);
          cljs.core._vreset_BANG_(a, cljs.core._deref(a) - 1);
          return 0 < f ? d : b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e);
        }, d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + arguments.length);
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_(a));
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if ("number" !== typeof a) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var a = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.pr_str.call(null, a);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function(c) {
    return function() {
      return c(a, b);
    };
  }(function(a, b) {
    for (;;) {
      var e = cljs.core.seq(b);
      if (0 < a && e) {
        var f = a - 1, e = cljs.core.rest(e);
        a = f;
        b = e;
      } else {
        return e;
      }
    }
  }), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, a);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(a, b) {
    return a;
  }, b, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(a, b));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function(a, b) {
  for (var c = cljs.core.seq(b), d = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(a, b));;) {
    if (d) {
      c = cljs.core.next(c), d = cljs.core.next(d);
    } else {
      return c;
    }
  }
};
cljs.core.drop_while = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          var f = cljs.core.deref(c);
          if (cljs.core.truth_(cljs.core.truth_(f) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e) : f)) {
            return d;
          }
          cljs.core.vreset_BANG_(c, null);
          return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e);
        }, d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + arguments.length);
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_(!0));
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function(c) {
    return function() {
      return c(a, b);
    };
  }(function(a, b) {
    for (;;) {
      var e = cljs.core.seq(b);
      if (cljs.core.truth_(function() {
        var b = e;
        return b ? (b = cljs.core.first(e), a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b)) : b;
      }())) {
        var f = a, g = cljs.core.rest(e);
        a = f;
        b = g;
      } else {
        return e;
      }
    }
  }), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    return c ? cljs.core.concat.cljs$core$IFn$_invoke$arity$2(c, cljs$core$cycle(c)) : null;
  }, null, null);
};
cljs.core.split_at = function(a, b) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, b), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(a, b)], null);
};
cljs.core.repeat = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(a, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(a));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(b));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function(a, b) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(b));
};
cljs.core.repeatedly = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(a));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(b));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(b, c) {
  return cljs.core.cons(c, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(b, b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c));
  }, null, null));
};
cljs.core.interleave = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(a), d = cljs.core.seq(b);
    return c && d ? cljs.core.cons(cljs.core.first(c), cljs.core.cons(cljs.core.first(d), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(c), cljs.core.rest(d)))) : null;
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return new cljs.core.LazySeq(null, function() {
    var d = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(c, b, cljs.core.array_seq([a], 0)));
    return cljs.core.every_QMARK_(cljs.core.identity, d) ? cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, d), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, d))) : null;
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          if (cljs.core.truth_(cljs.core.deref(c))) {
            var f = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, a) : b.call(null, d, a);
            return cljs.core.reduced_QMARK_(f) ? f : b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(f, e) : b.call(null, f, e);
          }
          cljs.core.vreset_BANG_(c, !0);
          return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e);
        }, d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + arguments.length);
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_(!1));
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(a), b));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function(a) {
  return function c(a, e) {
    return new cljs.core.LazySeq(null, function() {
      var f = cljs.core.seq(a);
      return f ? cljs.core.cons(cljs.core.first(f), c(cljs.core.rest(f), e)) : cljs.core.seq(e) ? c(cljs.core.first(e), cljs.core.rest(e)) : null;
    }, null, null);
  }(null, a);
};
cljs.core.cat;
cljs.core.mapcat = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(1), 0), cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(a), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, a, b));
};
cljs.core.mapcat.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, e = function(a) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
      }, f = function(c, d) {
        return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d)) ? b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d) : c;
      }, c = function(a, b) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, a);
          case 2:
            return f.call(this, a, b);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      if (cljs.core.chunked_seq_QMARK_(c)) {
        for (var d = cljs.core.chunk_first(c), e = cljs.core.count(d), f = cljs.core.chunk_buffer(e), g = 0;;) {
          if (g < e) {
            cljs.core.truth_(function() {
              var b = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(d, g);
              return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            }()) && cljs.core.chunk_append(f, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(d, g)), g += 1;
          } else {
            break;
          }
        }
        return cljs.core.chunk_cons(cljs.core.chunk(f), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(a, cljs.core.chunk_rest(c)));
      }
      e = cljs.core.first(c);
      c = cljs.core.rest(c);
      return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e)) ? cljs.core.cons(e, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(a, c)) : cljs.core.filter.cljs$core$IFn$_invoke$arity$2(a, c);
    }
    return null;
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(a));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(a), b);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function(a, b, c) {
  return function e(c) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(c, cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(e, cljs.core.array_seq([b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c)], 0)) : null);
    }, null, null);
  }(c);
};
cljs.core.flatten = function(a) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(a) {
    return !cljs.core.sequential_QMARK_(a);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, a)));
};
cljs.core.into = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null != a ? null != a && (a.cljs$lang$protocol_mask$partition1$ & 4 || a.cljs$core$IEditableCollection$) ? cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(a), b)), cljs.core.meta(a)) : cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, a, b) : cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, b);
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != a && (a.cljs$lang$protocol_mask$partition1$ & 4 || a.cljs$core$IEditableCollection$) ? cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(b, cljs.core.conj_BANG_, cljs.core.transient$(a), c)), cljs.core.meta(a)) : cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(b, cljs.core.conj, a, c);
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(4), 0), cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, d) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(b, a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), b));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(a, b, c));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(a, b, c, d));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, a, b, c, d, cljs.core.array_seq([e], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), e = cljs.core.next(d), d = cljs.core.first(e), e = cljs.core.next(e);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function(a, b) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, d) {
    return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d)) ? cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(b, d) : b;
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), b));
};
cljs.core.partition = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(a, a, b);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.LazySeq(null, function() {
    var d = cljs.core.seq(c);
    if (d) {
      var e = cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, d);
      return a === cljs.core.count(e) ? cljs.core.cons(e, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(b, d))) : null;
    }
    return null;
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return new cljs.core.LazySeq(null, function() {
    var e = cljs.core.seq(d);
    if (e) {
      var f = cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, e);
      return a === cljs.core.count(f) ? cljs.core.cons(f, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(a, b, c, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(b, e))) : cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(f, c)));
    }
    return null;
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(a, b, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.lookup_sentinel;
  for (b = cljs.core.seq(b);;) {
    if (b) {
      if (null != a ? a.cljs$lang$protocol_mask$partition0$ & 256 || a.cljs$core$ILookup$ || (a.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, a)) {
        a = cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, cljs.core.first(b), d);
        if (d === a) {
          return c;
        }
        b = cljs.core.next(b);
      } else {
        return c;
      }
    } else {
      return a;
    }
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(b, c, d) {
  var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null);
  c = cljs.core.nthnext(c, 1);
  return cljs.core.truth_(c) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(b, e, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(b, e), c, d)) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(b, e, d);
};
cljs.core.update_in = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(6), 0), cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], b);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(b, 0, null);
  b = cljs.core.nthnext(b, 1);
  return cljs.core.truth_(b) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, d, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, d), b, c)) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, d, function() {
    var b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, d);
    return c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(b) : c.call(null, b);
  }());
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(b, 0, null);
  b = cljs.core.nthnext(b, 1);
  return cljs.core.truth_(b) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, e, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, e), b, c, d)) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, e, function() {
    var b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, e);
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(b, d) : c.call(null, b, d);
  }());
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(b, 0, null);
  b = cljs.core.nthnext(b, 1);
  return cljs.core.truth_(b) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, f, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, f), b, c, d, e)) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, f, function() {
    var b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, f);
    return c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(b, d, e) : c.call(null, b, d, e);
  }());
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(b, 0, null);
  b = cljs.core.nthnext(b, 1);
  return cljs.core.truth_(b) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, g, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, g), b, c, d, e, f)) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, g, function() {
    var b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, g);
    return c.cljs$core$IFn$_invoke$arity$4 ? c.cljs$core$IFn$_invoke$arity$4(b, d, e, f) : c.call(null, b, d, e, f);
  }());
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e, f, g) {
  var h = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(b, 0, null);
  b = cljs.core.nthnext(b, 1);
  return cljs.core.truth_(b) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, h, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, h), b, c, d, cljs.core.array_seq([e, f, g], 0))) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, h, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(c, cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, h), d, e, f, cljs.core.array_seq([g], 0)));
};
cljs.core.update_in.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), e = cljs.core.next(d), d = cljs.core.first(e), f = cljs.core.next(e), e = cljs.core.first(f), g = cljs.core.next(f), f = cljs.core.first(g), g = cljs.core.next(g);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e, f, g);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(6), 0), cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], b);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, function() {
    var d = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
    return c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, function() {
    var e = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(e, d) : c.call(null, e, d);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, function() {
    var f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
    return c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(f, d, e) : c.call(null, f, d, e);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, function() {
    var g = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
    return c.cljs$core$IFn$_invoke$arity$4 ? c.cljs$core$IFn$_invoke$arity$4(g, d, e, f) : c.call(null, g, d, e, f);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e, f, g) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(c, cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b), d, e, f, cljs.core.array_seq([g], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), e = cljs.core.next(d), d = cljs.core.first(e), f = cljs.core.next(e), e = cljs.core.first(f), g = cljs.core.next(f), f = cljs.core.first(g), g = cljs.core.next(g);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e, f, g);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(a, b) {
  this.edit = a;
  this.arr = b;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = !0;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function(a, b) {
  return new cljs.core.VectorNode(a, b);
};
cljs.core.pv_fresh_node = function(a) {
  return new cljs.core.VectorNode(a, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function(a, b) {
  return a.arr[b];
};
cljs.core.pv_aset = function(a, b, c) {
  return a.arr[b] = c;
};
cljs.core.pv_clone_node = function(a) {
  return new cljs.core.VectorNode(a.edit, cljs.core.aclone(a.arr));
};
cljs.core.tail_off = function(a) {
  a = a.cnt;
  return 32 > a ? 0 : a - 1 >>> 5 << 5;
};
cljs.core.new_path = function(a, b, c) {
  for (;;) {
    if (0 === b) {
      return c;
    }
    var d = cljs.core.pv_fresh_node(a);
    cljs.core.pv_aset(d, 0, c);
    c = d;
    b -= 5;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(b, c, d, e) {
  var f = cljs.core.pv_clone_node(d), g = b.cnt - 1 >>> c & 31;
  5 === c ? cljs.core.pv_aset(f, g, e) : (d = cljs.core.pv_aget(d, g), b = null != d ? cljs$core$push_tail(b, c - 5, d, e) : cljs.core.new_path(null, c - 5, e), cljs.core.pv_aset(f, g, b));
  return f;
};
cljs.core.vector_index_out_of_bounds = function(a, b) {
  throw Error([cljs.core.str("No item "), cljs.core.str(a), cljs.core.str(" in vector of length "), cljs.core.str(b)].join(""));
};
cljs.core.first_array_for_longvec = function(a) {
  var b = a.root;
  for (a = a.shift;;) {
    if (0 < a) {
      b = cljs.core.pv_aget(b, 0), a -= 5;
    } else {
      return b.arr;
    }
  }
};
cljs.core.unchecked_array_for = function(a, b) {
  if (b >= cljs.core.tail_off(a)) {
    return a.tail;
  }
  for (var c = a.root, d = a.shift;;) {
    if (0 < d) {
      c = cljs.core.pv_aget(c, b >>> d & 31), d -= 5;
    } else {
      return c.arr;
    }
  }
};
cljs.core.array_for = function(a, b) {
  return 0 <= b && b < a.cnt ? cljs.core.unchecked_array_for(a, b) : cljs.core.vector_index_out_of_bounds(b, a.cnt);
};
cljs.core.do_assoc = function cljs$core$do_assoc(b, c, d, e, f) {
  var g = cljs.core.pv_clone_node(d);
  if (0 === c) {
    cljs.core.pv_aset(g, e & 31, f);
  } else {
    var h = e >>> c & 31;
    cljs.core.pv_aset(g, h, cljs$core$do_assoc(b, c - 5, cljs.core.pv_aget(d, h), e, f));
  }
  return g;
};
cljs.core.pop_tail = function cljs$core$pop_tail(b, c, d) {
  var e = b.cnt - 2 >>> c & 31;
  if (5 < c) {
    b = cljs$core$pop_tail(b, c - 5, cljs.core.pv_aget(d, e));
    if (null == b && 0 === e) {
      return null;
    }
    d = cljs.core.pv_clone_node(d);
    cljs.core.pv_aset(d, e, b);
    return d;
  }
  if (0 === e) {
    return null;
  }
  d = cljs.core.pv_clone_node(d);
  cljs.core.pv_aset(d, e, null);
  return d;
};
cljs.core.RangedIterator = function(a, b, c, d, e, f) {
  this.i = a;
  this.base = b;
  this.arr = c;
  this.v = d;
  this.start = e;
  this.end = f;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  return this.i < this.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  32 === this.i - this.base && (this.arr = cljs.core.unchecked_array_for(this.v, this.i), this.base += 32);
  var a = this.arr[this.i & 31];
  this.i += 1;
  return a;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = !0;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function(a, b, c, d, e, f) {
  return new cljs.core.RangedIterator(a, b, c, d, e, f);
};
cljs.core.ranged_iterator = function(a, b, c) {
  return new cljs.core.RangedIterator(b, b - b % 32, b < cljs.core.count(a) ? cljs.core.unchecked_array_for(a, b) : null, a, b, c);
};
cljs.core.tv_editable_root;
cljs.core.tv_editable_tail;
cljs.core.TransientVector;
cljs.core.deref;
cljs.core.pr_sequential_writer;
cljs.core.pr_writer;
cljs.core.chunked_seq;
cljs.core.PersistentVector = function(a, b, c, d, e, f) {
  this.meta = a;
  this.cnt = b;
  this.shift = c;
  this.root = d;
  this.tail = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentVector.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this, b, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return "number" === typeof b ? cljs.core._nth.cljs$core$IFn$_invoke$arity$3(this, b, c) : c;
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = 0;
  for (var d = c;;) {
    if (a < this.cnt) {
      var e = cljs.core.unchecked_array_for(this, a);
      c = e.length;
      a: {
        for (var f = 0;;) {
          if (f < c) {
            var g = f + a, h = e[f], d = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(d, g, h) : b.call(null, d, g, h);
            if (cljs.core.reduced_QMARK_(d)) {
              e = d;
              break a;
            }
            f += 1;
          } else {
            e = d;
            break a;
          }
        }
      }
      if (cljs.core.reduced_QMARK_(e)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.deref.call(null, e);
      }
      a += c;
      d = e;
    } else {
      return d;
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  return cljs.core.array_for(this, b)[b & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 <= b && b < this.cnt ? cljs.core.unchecked_array_for(this, b)[b & 31] : c;
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  if (0 <= b && b < this.cnt) {
    return cljs.core.tail_off(this) <= b ? (a = cljs.core.aclone(this.tail), a[b & 31] = c, new cljs.core.PersistentVector(this.meta, this.cnt, this.shift, this.root, a, null)) : new cljs.core.PersistentVector(this.meta, this.cnt, this.shift, cljs.core.do_assoc(this, this.shift, this.root, b, c), this.tail, null);
  }
  if (b === this.cnt) {
    return cljs.core._conj(this, c);
  }
  throw Error([cljs.core.str("Index "), cljs.core.str(b), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this.cnt), cljs.core.str("]")].join(""));
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = !0;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return cljs.core.ranged_iterator(this, 0, this.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentVector(this.meta, this.cnt, this.shift, this.root, this.tail, this.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(a) {
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(a) {
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return 0 < this.cnt ? cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this, this.cnt - 1) : null;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  if (0 === this.cnt) {
    throw Error("Can't pop empty vector");
  }
  if (1 === this.cnt) {
    return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, this.meta);
  }
  if (1 < this.cnt - cljs.core.tail_off(this)) {
    return new cljs.core.PersistentVector(this.meta, this.cnt - 1, this.shift, this.root, this.tail.slice(0, -1), null);
  }
  a = cljs.core.unchecked_array_for(this, this.cnt - 2);
  var b = cljs.core.pop_tail(this, this.shift, this.root), b = null == b ? cljs.core.PersistentVector.EMPTY_NODE : b, c = this.cnt - 1;
  return 5 < this.shift && null == cljs.core.pv_aget(b, 1) ? new cljs.core.PersistentVector(this.meta, c, this.shift - 5, cljs.core.pv_aget(b, 0), a, null) : new cljs.core.PersistentVector(this.meta, c, this.shift, b, a, null);
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return 0 < this.cnt ? new cljs.core.RSeq(this, this.cnt - 1, null) : null;
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  if (b instanceof cljs.core.PersistentVector) {
    if (this.cnt === cljs.core.count(b)) {
      for (var c = cljs.core._iterator(this), d = cljs.core._iterator(b);;) {
        if (cljs.core.truth_(c.hasNext())) {
          var e = c.next(), f = d.next();
          if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(e, f)) {
            return !1;
          }
        } else {
          return !0;
        }
      }
    } else {
      return !1;
    }
  } else {
    return cljs.core.equiv_sequential(this, b);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return new cljs.core.TransientVector(this.cnt, this.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(this.root) : cljs.core.tv_editable_root.call(null, this.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(this.tail) : cljs.core.tv_editable_tail.call(null, this.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, this.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  a = 0;
  for (var d = c;;) {
    if (a < this.cnt) {
      var e = cljs.core.unchecked_array_for(this, a);
      c = e.length;
      a: {
        for (var f = 0;;) {
          if (f < c) {
            var g = e[f], d = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, g) : b.call(null, d, g);
            if (cljs.core.reduced_QMARK_(d)) {
              e = d;
              break a;
            }
            f += 1;
          } else {
            e = d;
            break a;
          }
        }
      }
      if (cljs.core.reduced_QMARK_(e)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.deref.call(null, e);
      }
      a += c;
      d = e;
    } else {
      return d;
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  if ("number" === typeof b) {
    return cljs.core._assoc_n(this, b, c);
  }
  throw Error("Vector's key for assoc must be a number.");
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  if (0 === this.cnt) {
    return null;
  }
  if (32 >= this.cnt) {
    return new cljs.core.IndexedSeq(this.tail, 0);
  }
  a = cljs.core.first_array_for_longvec(this);
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(this, a, 0, 0) : cljs.core.chunked_seq.call(null, this, a, 0, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentVector(b, this.cnt, this.shift, this.root, this.tail, this.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  if (32 > this.cnt - cljs.core.tail_off(this)) {
    for (var c = this.tail.length, d = Array(c + 1), e = 0;;) {
      if (e < c) {
        d[e] = this.tail[e], e += 1;
      } else {
        break;
      }
    }
    d[c] = b;
    return new cljs.core.PersistentVector(this.meta, this.cnt + 1, this.shift, this.root, d, null);
  }
  c = (d = this.cnt >>> 5 > 1 << this.shift) ? this.shift + 5 : this.shift;
  d ? (d = cljs.core.pv_fresh_node(null), cljs.core.pv_aset(d, 0, this.root), cljs.core.pv_aset(d, 1, cljs.core.new_path(null, this.shift, new cljs.core.VectorNode(null, this.tail)))) : d = cljs.core.push_tail(this, this.shift, this.root, new cljs.core.VectorNode(null, this.tail));
  return new cljs.core.PersistentVector(this.meta, this.cnt + 1, c, d, [b], null);
};
cljs.core.PersistentVector.prototype.call = function() {
  var a = null, a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$IIndexed$_nth$arity$2(null, c);
      case 3:
        return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentVector.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, a);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, a, b);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = !0;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function(a, b, c, d, e, f) {
  return new cljs.core.PersistentVector(a, b, c, d, e, f);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(a, b) {
  var c = a.length, d = b ? a : cljs.core.aclone(a);
  if (32 > c) {
    return new cljs.core.PersistentVector(null, c, 5, cljs.core.PersistentVector.EMPTY_NODE, d, null);
  }
  for (var e = d.slice(0, 32), f = 32, g = (new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, e, null)).cljs$core$IEditableCollection$_as_transient$arity$1(null);;) {
    if (f < c) {
      e = f + 1, g = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(g, d[f]), f = e;
    } else {
      return cljs.core.persistent_BANG_(g);
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.vec = function(a) {
  return cljs.core.array_QMARK_(a) ? cljs.core.PersistentVector.fromArray(a, !0) : cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), a));
};
cljs.core.vector = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return a instanceof cljs.core.IndexedSeq && 0 === a.i ? cljs.core.PersistentVector.fromArray(a.arr, !0) : cljs.core.vec(a);
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(a) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.subvec;
cljs.core.ChunkedSeq = function(a, b, c, d, e, f) {
  this.vec = a;
  this.node = b;
  this.i = c;
  this.off = d;
  this.meta = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ChunkedSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  if (this.off + 1 < this.node.length) {
    a = this.vec;
    var b = this.node, c = this.i, d = this.off + 1;
    a = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : cljs.core.chunked_seq.call(null, a, b, c, d);
    return null == a ? null : a;
  }
  return cljs.core._chunked_next(this);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, this.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  var c = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var a = c.vec, b = c.i + c.off, f = cljs.core.count(c.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(a, b, f) : cljs.core.subvec.call(null, a, b, f);
  }(), b);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  var d = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var a = d.vec, b = d.i + d.off, c = cljs.core.count(d.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(a, b, c) : cljs.core.subvec.call(null, a, b, c);
  }(), b, c);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.node[this.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  if (this.off + 1 < this.node.length) {
    a = this.vec;
    var b = this.node, c = this.i, d = this.off + 1;
    a = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : cljs.core.chunked_seq.call(null, a, b, c, d);
    return null == a ? cljs.core.List.EMPTY : a;
  }
  return cljs.core._chunked_rest(this);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(a) {
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(this.node, this.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(a) {
  a = this.i + this.node.length;
  if (a < cljs.core._count(this.vec)) {
    var b = this.vec, c = cljs.core.unchecked_array_for(this.vec, a);
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(b, c, a, 0) : cljs.core.chunked_seq.call(null, b, c, a, 0);
  }
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(this.vec, this.node, this.i, this.off, b) : cljs.core.chunked_seq.call(null, this.vec, this.node, this.i, this.off, b);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(a) {
  a = this.i + this.node.length;
  if (a < cljs.core._count(this.vec)) {
    var b = this.vec, c = cljs.core.unchecked_array_for(this.vec, a);
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(b, c, a, 0) : cljs.core.chunked_seq.call(null, b, c, a, 0);
  }
  return null;
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = !0;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function(a, b, c, d, e, f) {
  return new cljs.core.ChunkedSeq(a, b, c, d, e, f);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.chunked_seq = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.ChunkedSeq(a, cljs.core.array_for(a, b), b, c, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return new cljs.core.ChunkedSeq(a, b, c, d, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return new cljs.core.ChunkedSeq(a, b, c, d, e, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.build_subvec;
cljs.core.Subvec = function(a, b, c, d, e) {
  this.meta = a;
  this.v = b;
  this.start = c;
  this.end = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Subvec.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this, b, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return "number" === typeof b ? cljs.core._nth.cljs$core$IFn$_invoke$arity$3(this, b, c) : c;
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = this.start;
  for (var d = 0;;) {
    if (a < this.end) {
      var e = d, f = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.v, a);
      c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, e, f) : b.call(null, c, e, f);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(c) : cljs.core.deref.call(null, c);
      }
      d += 1;
      a += 1;
    } else {
      return c;
    }
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  return 0 > b || this.end <= this.start + b ? cljs.core.vector_index_out_of_bounds(b, this.end - this.start) : cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.v, this.start + b);
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 > b || this.end <= this.start + b ? c : cljs.core._nth.cljs$core$IFn$_invoke$arity$3(this.v, this.start + b, c);
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  var d = this.start + b;
  a = this.meta;
  c = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.v, d, c);
  b = this.start;
  var e = this.end, d = d + 1, d = e > d ? e : d;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(a, c, b, d, null) : cljs.core.build_subvec.call(null, a, c, b, d, null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.Subvec(this.meta, this.v, this.start, this.end, this.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.end - this.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.v, this.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  if (this.start === this.end) {
    throw Error("Can't pop empty vector");
  }
  a = this.meta;
  var b = this.v, c = this.start, d = this.end - 1;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(a, b, c, d, null) : cljs.core.build_subvec.call(null, a, b, c, d, null);
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return this.start !== this.end ? new cljs.core.RSeq(this, this.end - this.start - 1, null) : null;
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, this.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  if ("number" === typeof b) {
    return cljs.core._assoc_n(this, b, c);
  }
  throw Error("Subvec's key for assoc must be a number.");
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  var b = this;
  return function(a) {
    return function e(f) {
      return f === b.end ? null : cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b.v, f), new cljs.core.LazySeq(null, function(a) {
        return function() {
          return e(f + 1);
        };
      }(a), null, null));
    };
  }(this)(b.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(b, this.v, this.start, this.end, this.__hash) : cljs.core.build_subvec.call(null, b, this.v, this.start, this.end, this.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  var c = this.meta, d = cljs.core._assoc_n(this.v, this.end, b), e = this.start, f = this.end + 1;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(c, d, e, f, null) : cljs.core.build_subvec.call(null, c, d, e, f, null);
};
cljs.core.Subvec.prototype.call = function() {
  var a = null, a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$IIndexed$_nth$arity$2(null, c);
      case 3:
        return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.Subvec.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, a);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, a, b);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.Subvec.cljs$lang$type = !0;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function(a, b, c, d, e) {
  return new cljs.core.Subvec(a, b, c, d, e);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.build_subvec = function(a, b, c, d, e) {
  for (;;) {
    if (b instanceof cljs.core.Subvec) {
      c = b.start + c, d = b.start + d, b = b.v;
    } else {
      var f = cljs.core.count(b);
      if (0 > c || 0 > d || c > f || d > f) {
        throw Error("Index out of bounds");
      }
      return new cljs.core.Subvec(a, b, c, d, e);
    }
  }
};
cljs.core.subvec = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.count(a));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.build_subvec(null, a, b, c, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function(a, b) {
  return a === b.edit ? b : new cljs.core.VectorNode(a, cljs.core.aclone(b.arr));
};
cljs.core.tv_editable_root = function(a) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(a.arr));
};
cljs.core.tv_editable_tail = function(a) {
  var b = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(a, 0, b, 0, a.length);
  return b;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(b, c, d, e) {
  var f = cljs.core.tv_ensure_editable(b.root.edit, d), g = b.cnt - 1 >>> c & 31;
  cljs.core.pv_aset(f, g, 5 === c ? e : function() {
    var d = cljs.core.pv_aget(f, g);
    return null != d ? cljs$core$tv_push_tail(b, c - 5, d, e) : cljs.core.new_path(b.root.edit, c - 5, e);
  }());
  return f;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(b, c, d) {
  d = cljs.core.tv_ensure_editable(b.root.edit, d);
  var e = b.cnt - 2 >>> c & 31;
  if (5 < c) {
    b = cljs$core$tv_pop_tail(b, c - 5, cljs.core.pv_aget(d, e));
    if (null == b && 0 === e) {
      return null;
    }
    cljs.core.pv_aset(d, e, b);
    return d;
  }
  if (0 === e) {
    return null;
  }
  cljs.core.pv_aset(d, e, null);
  return d;
};
cljs.core.unchecked_editable_array_for = function(a, b) {
  if (b >= cljs.core.tail_off(a)) {
    return a.tail;
  }
  for (var c = a.root, d = c, e = a.shift;;) {
    if (0 < e) {
      d = cljs.core.tv_ensure_editable(c.edit, cljs.core.pv_aget(d, b >>> e & 31)), e -= 5;
    } else {
      return d.arr;
    }
  }
};
cljs.core.TransientVector = function(a, b, c, d) {
  this.cnt = a;
  this.shift = b;
  this.root = c;
  this.tail = d;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(a, b) {
  if (this.root.edit) {
    if (32 > this.cnt - cljs.core.tail_off(this)) {
      this.tail[this.cnt & 31] = b;
    } else {
      var c = new cljs.core.VectorNode(this.root.edit, this.tail), d = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      d[0] = b;
      this.tail = d;
      if (this.cnt >>> 5 > 1 << this.shift) {
        var d = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], e = this.shift + 5;
        d[0] = this.root;
        d[1] = cljs.core.new_path(this.root.edit, this.shift, c);
        this.root = new cljs.core.VectorNode(this.root.edit, d);
        this.shift = e;
      } else {
        this.root = cljs.core.tv_push_tail(this, this.shift, this.root, c);
      }
    }
    this.cnt += 1;
    return this;
  }
  throw Error("conj! after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(a) {
  if (this.root.edit) {
    this.root.edit = null;
    a = this.cnt - cljs.core.tail_off(this);
    var b = Array(a);
    cljs.core.array_copy(this.tail, 0, b, 0, a);
    return new cljs.core.PersistentVector(null, this.cnt, this.shift, this.root, b, null);
  }
  throw Error("persistent! called twice");
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(a, b, c) {
  if ("number" === typeof b) {
    return cljs.core._assoc_n_BANG_(this, b, c);
  }
  throw Error("TransientVector's key for assoc! must be a number.");
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(a, b, c) {
  var d = this;
  if (d.root.edit) {
    if (0 <= b && b < d.cnt) {
      return cljs.core.tail_off(this) <= b ? d.tail[b & 31] = c : (a = function(a) {
        return function g(a, e) {
          var m = cljs.core.tv_ensure_editable(d.root.edit, e);
          if (0 === a) {
            cljs.core.pv_aset(m, b & 31, c);
          } else {
            var l = b >>> a & 31;
            cljs.core.pv_aset(m, l, g(a - 5, cljs.core.pv_aget(m, l)));
          }
          return m;
        };
      }(this).call(null, d.shift, d.root), d.root = a), this;
    }
    if (b === d.cnt) {
      return cljs.core._conj_BANG_(this, c);
    }
    throw Error([cljs.core.str("Index "), cljs.core.str(b), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(d.cnt)].join(""));
  }
  throw Error("assoc! after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(a) {
  if (this.root.edit) {
    if (0 === this.cnt) {
      throw Error("Can't pop empty vector");
    }
    if (1 === this.cnt) {
      this.cnt = 0;
    } else {
      if (0 < (this.cnt - 1 & 31)) {
        --this.cnt;
      } else {
        a = cljs.core.unchecked_editable_array_for(this, this.cnt - 2);
        var b;
        b = cljs.core.tv_pop_tail(this, this.shift, this.root);
        b = null != b ? b : new cljs.core.VectorNode(this.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
        5 < this.shift && null == cljs.core.pv_aget(b, 1) ? (this.root = cljs.core.tv_ensure_editable(this.root.edit, cljs.core.pv_aget(b, 0)), this.shift -= 5) : this.root = b;
        --this.cnt;
        this.tail = a;
      }
    }
    return this;
  }
  throw Error("pop! after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  if (this.root.edit) {
    return this.cnt;
  }
  throw Error("count after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  if (this.root.edit) {
    return cljs.core.array_for(this, b)[b & 31];
  }
  throw Error("nth after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 <= b && b < this.cnt ? cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this, b) : c;
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this, b, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return "number" === typeof b ? cljs.core._nth.cljs$core$IFn$_invoke$arity$3(this, b, c) : c;
};
cljs.core.TransientVector.prototype.call = function() {
  var a = null, a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.TransientVector.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = !0;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function(a, b, c, d) {
  return new cljs.core.TransientVector(a, b, c, d);
};
cljs.core.PersistentQueueIter = function(a, b) {
  this.fseq = a;
  this.riter = b;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var a = cljs.core.some_QMARK_(this.fseq) && cljs.core.seq(this.fseq);
  return a ? a : (a = cljs.core.some_QMARK_(this.riter)) ? this.riter.hasNext() : a;
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  if (cljs.core.some_QMARK_(this.fseq)) {
    var a = cljs.core.first(this.fseq);
    this.fseq = cljs.core.next(this.fseq);
    return a;
  }
  if (cljs.core.some_QMARK_(this.riter) && this.riter.hasNext()) {
    return this.riter.next();
  }
  throw Error("No such element");
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = !0;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function(a, b) {
  return new cljs.core.PersistentQueueIter(a, b);
};
cljs.core.PersistentQueueSeq = function(a, b, c, d) {
  this.meta = a;
  this.front = b;
  this.rear = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.first(this.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return (a = cljs.core.next(this.front)) ? new cljs.core.PersistentQueueSeq(this.meta, a, this.rear, null) : null == this.rear ? cljs.core._empty(this) : new cljs.core.PersistentQueueSeq(this.meta, this.rear, null, null);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentQueueSeq(b, this.front, this.rear, this.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = !0;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function(a, b, c, d) {
  return new cljs.core.PersistentQueueSeq(a, b, c, d);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.PersistentQueue = function(a, b, c, d, e) {
  this.meta = a;
  this.count = b;
  this.front = c;
  this.rear = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentQueue.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = !0;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.PersistentQueueIter(this.front, cljs.core._iterator(this.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentQueue(this.meta, this.count, this.front, this.rear, this.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return cljs.core.first(this.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return cljs.core.truth_(this.front) ? (a = cljs.core.next(this.front)) ? new cljs.core.PersistentQueue(this.meta, this.count - 1, a, this.rear, null) : new cljs.core.PersistentQueue(this.meta, this.count - 1, cljs.core.seq(this.rear), cljs.core.PersistentVector.EMPTY, null) : this;
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, this.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.first(this.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return cljs.core.rest(cljs.core.seq(this));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  var b = this, c = cljs.core.seq(b.rear);
  return cljs.core.truth_(function() {
    var a = b.front;
    return cljs.core.truth_(a) ? a : c;
  }()) ? new cljs.core.PersistentQueueSeq(null, b.front, cljs.core.seq(c), null) : null;
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentQueue(b, this.count, this.front, this.rear, this.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  var c = this;
  return cljs.core.truth_(c.front) ? new cljs.core.PersistentQueue(c.meta, c.count + 1, c.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
    var a = c.rear;
    return cljs.core.truth_(a) ? a : cljs.core.PersistentVector.EMPTY;
  }(), b), null) : new cljs.core.PersistentQueue(c.meta, c.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(c.front, b), cljs.core.PersistentVector.EMPTY, null);
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = !0;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function(a, b, c, d, e) {
  return new cljs.core.PersistentQueue(a, b, c, d, e);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return !1;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = !0;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function(a, b) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(b) ? cljs.core.count(a) === cljs.core.count(b) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(a) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, cljs.core.first(a), cljs.core.never_equiv), cljs.core.second(a));
  }, a)) : null : null);
};
cljs.core.scan_array = function(a, b, c) {
  for (var d = c.length, e = 0;;) {
    if (e < d) {
      if (b === c[e]) {
        return e;
      }
      e += a;
    } else {
      return null;
    }
  }
};
cljs.core.obj_map_compare_keys = function(a, b) {
  var c = cljs.core.hash(a), d = cljs.core.hash(b);
  return c < d ? -1 : c > d ? 1 : 0;
};
cljs.core.obj_map__GT_hash_map = function(a, b, c) {
  var d = a.keys, e = d.length, f = a.strobj;
  a = cljs.core.meta(a);
  for (var g = 0, h = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);;) {
    if (g < e) {
      var k = d[g], g = g + 1, h = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(h, k, f[k])
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(h, b, c)), a);
    }
  }
};
cljs.core.obj_clone = function(a, b) {
  for (var c = {}, d = b.length, e = 0;;) {
    if (e < d) {
      var f = b[e];
      c[f] = a[f];
      e += 1;
    } else {
      break;
    }
  }
  return c;
};
cljs.core.ObjMap = function(a, b, c, d, e) {
  this.meta = a;
  this.keys = b;
  this.strobj = c;
  this.update_count = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ObjMap.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this, b, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return goog.isString(b) && null != cljs.core.scan_array(1, b, this.keys) ? this.strobj[b] : c;
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = this.keys.sort(cljs.core.obj_map_compare_keys);
  for (var d = c;;) {
    if (cljs.core.seq(a)) {
      var e = c = cljs.core.first(a);
      c = this.strobj[c];
      c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(d, e, c) : b.call(null, d, e, c);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(c) : cljs.core.deref.call(null, c);
      }
      a = cljs.core.rest(a);
      d = c;
    } else {
      return d;
    }
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_map(this, b);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, this));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, this.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  if (goog.isString(b) && null != cljs.core.scan_array(1, b, this.keys)) {
    var c = cljs.core.aclone(this.keys), d = cljs.core.obj_clone(this.strobj, this.keys);
    c.splice(cljs.core.scan_array(1, b, c), 1);
    delete d[b];
    return new cljs.core.ObjMap(this.meta, c, d, this.update_count + 1, null);
  }
  return this;
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  if (goog.isString(b)) {
    if (this.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || this.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(this, b, c);
    }
    if (null != cljs.core.scan_array(1, b, this.keys)) {
      return a = cljs.core.obj_clone(this.strobj, this.keys), a[b] = c, new cljs.core.ObjMap(this.meta, this.keys, a, this.update_count + 1, null);
    }
    a = cljs.core.obj_clone(this.strobj, this.keys);
    var d = cljs.core.aclone(this.keys);
    a[b] = c;
    d.push(b);
    return new cljs.core.ObjMap(this.meta, d, a, this.update_count + 1, null);
  }
  return cljs.core.obj_map__GT_hash_map(this, b, c);
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return goog.isString(b) && null != cljs.core.scan_array(1, b, this.keys) ? !0 : !1;
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  var b = this;
  return 0 < b.keys.length ? cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(a) {
    return function(a) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b.strobj[a]], null);
    };
  }(this), b.keys.sort(cljs.core.obj_map_compare_keys)) : null;
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.ObjMap(b, this.keys, this.strobj, this.update_count, this.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_(b) ? cljs.core._assoc(this, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 1)) : cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this, b);
};
cljs.core.ObjMap.prototype.call = function() {
  var a = null, a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.ObjMap.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = !0;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function(a, b, c, d, e) {
  return new cljs.core.ObjMap(a, b, c, d, e);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(a, b) {
  return new cljs.core.ObjMap(null, a, b, 0, null);
};
cljs.core.RecordIter = function(a, b, c, d, e) {
  this.i = a;
  this.record = b;
  this.base_count = c;
  this.fields = d;
  this.ext_map_iter = e;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var a = this.i < this.base_count;
  return a ? a : this.ext_map_iter.hasNext();
};
cljs.core.RecordIter.prototype.next = function() {
  if (this.i < this.base_count) {
    var a = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this.fields, this.i);
    this.i += 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(this.record, a)], null);
  }
  return this.ext_map_iter.next();
};
cljs.core.RecordIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = !0;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function(a, b, c, d, e) {
  return new cljs.core.RecordIter(a, b, c, d, e);
};
cljs.core.ES6EntriesIterator = function(a) {
  this.s = a;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  if (null != this.s) {
    var a = cljs.core.first(this.s), b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(a, 0, null), a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(a, 1, null);
    this.s = cljs.core.next(this.s);
    return {value:[b, a], done:!1};
  }
  return {value:null, done:!0};
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = !0;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function(a) {
  return new cljs.core.ES6EntriesIterator(a);
};
cljs.core.es6_entries_iterator = function(a) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(a));
};
cljs.core.ES6SetEntriesIterator = function(a) {
  this.s = a;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  if (null != this.s) {
    var a = cljs.core.first(this.s);
    this.s = cljs.core.next(this.s);
    return {value:[a, a], done:!1};
  }
  return {value:null, done:!0};
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = !0;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function(a) {
  return new cljs.core.ES6SetEntriesIterator(a);
};
cljs.core.es6_set_entries_iterator = function(a) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(a));
};
cljs.core.array_index_of_nil_QMARK_ = function(a) {
  for (var b = a.length, c = 0;;) {
    if (b <= c) {
      return -1;
    }
    if (null == a[c]) {
      return c;
    }
    c += 2;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function(a, b) {
  for (var c = a.length, d = b.fqn, e = 0;;) {
    if (c <= e) {
      return -1;
    }
    if (a[e] instanceof cljs.core.Keyword && d === a[e].fqn) {
      return e;
    }
    e += 2;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function(a, b) {
  for (var c = a.length, d = b.str, e = 0;;) {
    if (c <= e) {
      return -1;
    }
    if (a[e] instanceof cljs.core.Symbol && d === a[e].str) {
      return e;
    }
    e += 2;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function(a, b) {
  for (var c = a.length, d = 0;;) {
    if (c <= d) {
      return -1;
    }
    if (b === a[d]) {
      return d;
    }
    d += 2;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function(a, b) {
  for (var c = a.length, d = 0;;) {
    if (c <= d) {
      return -1;
    }
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(b, a[d])) {
      return d;
    }
    d += 2;
  }
};
cljs.core.array_index_of = function(a, b) {
  return b instanceof cljs.core.Keyword ? cljs.core.array_index_of_keyword_QMARK_(a, b) : goog.isString(b) || "number" === typeof b ? cljs.core.array_index_of_identical_QMARK_(a, b) : b instanceof cljs.core.Symbol ? cljs.core.array_index_of_symbol_QMARK_(a, b) : null == b ? cljs.core.array_index_of_nil_QMARK_(a) : cljs.core.array_index_of_equiv_QMARK_(a, b);
};
cljs.core.array_map_index_of = function(a, b) {
  return cljs.core.array_index_of(a.arr, b);
};
cljs.core.array_extend_kv = function(a, b, c) {
  for (var d = a.length, e = Array(d + 2), f = 0;;) {
    if (f < d) {
      e[f] = a[f], f += 1;
    } else {
      break;
    }
  }
  e[d] = b;
  e[d + 1] = c;
  return e;
};
cljs.core.array_map_extend_kv = function(a, b, c) {
  return cljs.core.array_extend_kv(a.arr, b, c);
};
cljs.core.TransientArrayMap;
cljs.core.PersistentArrayMapSeq = function(a, b, c) {
  this.arr = a;
  this.i = b;
  this._meta = c;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return this.i < this.arr.length - 2 ? new cljs.core.PersistentArrayMapSeq(this.arr, this.i + 2, this._meta) : null;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return (this.arr.length - this.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.with_meta(cljs.core.List.EMPTY, this._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.arr[this.i], this.arr[this.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return this.i < this.arr.length - 2 ? new cljs.core.PersistentArrayMapSeq(this.arr, this.i + 2, this._meta) : cljs.core.List.EMPTY;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentArrayMapSeq(this.arr, this.i, b);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = !0;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function(a, b, c) {
  return new cljs.core.PersistentArrayMapSeq(a, b, c);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.persistent_array_map_seq = function(a, b, c) {
  return b <= a.length - 2 ? new cljs.core.PersistentArrayMapSeq(a, b, c) : null;
};
cljs.core.keys;
cljs.core.vals;
cljs.core.PersistentArrayMapIterator = function(a, b, c) {
  this.arr = a;
  this.i = b;
  this.cnt = c;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  return this.i < this.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var a = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.arr[this.i], this.arr[this.i + 1]], null);
  this.i += 2;
  return a;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = !0;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function(a, b, c) {
  return new cljs.core.PersistentArrayMapIterator(a, b, c);
};
cljs.core.PersistentArrayMap = function(a, b, c, d) {
  this.meta = a;
  this.cnt = b;
  this.arr = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(this) : cljs.core.keys.call(null, this));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  return cljs.core.es6_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(this) : cljs.core.vals.call(null, this));
};
cljs.core.PersistentArrayMap.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentArrayMap.prototype.get = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this, b, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  a = cljs.core.array_map_index_of(this, b);
  return -1 === a ? c : this.arr[a + 1];
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = this.arr.length;
  for (var d = 0;;) {
    if (d < a) {
      var e = this.arr[d], f = this.arr[d + 1];
      c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, e, f) : b.call(null, c, e, f);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(c) : cljs.core.deref.call(null, c);
      }
      d += 2;
    } else {
      return c;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = !0;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.PersistentArrayMapIterator(this.arr, 0, 2 * this.cnt);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentArrayMap(this.meta, this.cnt, this.arr, this.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  if (null != b && (b.cljs$lang$protocol_mask$partition0$ & 1024 || b.cljs$core$IMap$)) {
    var c = this.arr.length;
    if (this.cnt === b.cljs$core$ICounted$_count$arity$1(null)) {
      for (var d = 0;;) {
        if (d < c) {
          var e = b.cljs$core$ILookup$_lookup$arity$3(null, this.arr[d], cljs.core.lookup_sentinel);
          if (e !== cljs.core.lookup_sentinel) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.arr[d + 1], e)) {
              d += 2;
            } else {
              return !1;
            }
          } else {
            return !1;
          }
        } else {
          return !0;
        }
      }
    } else {
      return !1;
    }
  } else {
    return cljs.core.equiv_map(this, b);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return new cljs.core.TransientArrayMap({}, this.arr.length, cljs.core.aclone(this.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, this.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  if (0 <= cljs.core.array_map_index_of(this, b)) {
    var c = this.arr.length, d = c - 2;
    if (0 === d) {
      return cljs.core._empty(this);
    }
    for (var d = Array(d), e = 0, f = 0;;) {
      if (e >= c) {
        return new cljs.core.PersistentArrayMap(this.meta, this.cnt - 1, d, null);
      }
      cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(b, this.arr[e]) || (d[f] = this.arr[e], d[f + 1] = this.arr[e + 1], f += 2);
      e += 2;
    }
  } else {
    return this;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.array_map_index_of(this, b);
  if (-1 === a) {
    return this.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD ? (c = cljs.core.array_map_extend_kv(this, b, c), new cljs.core.PersistentArrayMap(this.meta, this.cnt + 1, c, null)) : cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, this), b, c), this.meta);
  }
  if (c === this.arr[a + 1]) {
    return this;
  }
  b = cljs.core.aclone(this.arr);
  b[a + 1] = c;
  return new cljs.core.PersistentArrayMap(this.meta, this.cnt, b, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return -1 !== cljs.core.array_map_index_of(this, b);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.persistent_array_map_seq(this.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentArrayMap(b, this.cnt, this.arr, this.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core._assoc(this, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 1));
  }
  for (var c = this, d = cljs.core.seq(b);;) {
    if (null == d) {
      return c;
    }
    var e = cljs.core.first(d);
    if (cljs.core.vector_QMARK_(e)) {
      c = cljs.core._assoc(c, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1)), d = cljs.core.next(d);
    } else {
      throw Error("conj on a map takes map entries or seqables of map entries");
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var a = null, a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = !0;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function(a, b, c, d) {
  return new cljs.core.PersistentArrayMap(a, b, c, d);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(a, b, c) {
  a = b ? a : cljs.core.aclone(a);
  if (!c) {
    c = [];
    for (b = 0;;) {
      if (b < a.length) {
        var d = a[b], e = a[b + 1];
        -1 === cljs.core.array_index_of(c, d) && (c.push(d), c.push(e));
        b += 2;
      } else {
        break;
      }
    }
    a = c;
  }
  return new cljs.core.PersistentArrayMap(null, a.length / 2, a, null);
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.array__GT_transient_hash_map;
cljs.core.TransientArrayMap = function(a, b, c) {
  this.editable_QMARK_ = a;
  this.len = b;
  this.arr = c;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    return cljs.core.quot(this.len, 2);
  }
  throw Error("count after persistent!");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this, b, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    return a = cljs.core.array_map_index_of(this, b), -1 === a ? c : this.arr[a + 1];
  }
  throw Error("lookup after persistent!");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(a, b) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    if (null != b ? b.cljs$lang$protocol_mask$partition0$ & 2048 || b.cljs$core$IMapEntry$ || (b.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, b)) : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, b)) {
      return cljs.core._assoc_BANG_(this, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(b) : cljs.core.key.call(null, b), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(b) : cljs.core.val.call(null, b));
    }
    for (var c = cljs.core.seq(b), d = this;;) {
      var e = cljs.core.first(c);
      if (cljs.core.truth_(e)) {
        c = cljs.core.next(c), d = cljs.core._assoc_BANG_(d, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
      } else {
        return d;
      }
    }
  } else {
    throw Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(a) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    return this.editable_QMARK_ = !1, new cljs.core.PersistentArrayMap(null, cljs.core.quot(this.len, 2), this.arr, null);
  }
  throw Error("persistent! called twice");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(a, b, c) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    a = cljs.core.array_map_index_of(this, b);
    if (-1 === a) {
      return this.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD ? (this.len += 2, this.arr.push(b), this.arr.push(c), this) : cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(this.len, this.arr) : cljs.core.array__GT_transient_hash_map.call(null, this.len, this.arr), b, c);
    }
    c !== this.arr[a + 1] && (this.arr[a + 1] = c);
    return this;
  }
  throw Error("assoc! after persistent!");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(a, b) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    var c = cljs.core.array_map_index_of(this, b);
    0 <= c && (this.arr[c] = this.arr[this.len - 2], this.arr[c + 1] = this.arr[this.len - 1], c = this.arr, c.pop(), c.pop(), this.len -= 2);
    return this;
  }
  throw Error("dissoc! after persistent!");
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = !0;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function(a, b, c) {
  return new cljs.core.TransientArrayMap(a, b, c);
};
cljs.core.TransientHashMap;
cljs.core.PersistentHashMap;
cljs.core.array__GT_transient_hash_map = function(a, b) {
  for (var c = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY), d = 0;;) {
    if (d < a) {
      c = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(c, b[d], b[d + 1]), d += 2;
    } else {
      return c;
    }
  }
};
cljs.core.Box = function(a) {
  this.val = a;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Box.cljs$lang$type = !0;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Box");
};
cljs.core.__GT_Box = function(a) {
  return new cljs.core.Box(a);
};
cljs.core.create_inode_seq;
cljs.core.create_array_node_seq;
cljs.core.reset_BANG_;
cljs.core.create_node;
cljs.core.atom;
cljs.core.deref;
cljs.core.key_test = function(a, b) {
  return a === b ? !0 : cljs.core.keyword_identical_QMARK_(a, b) ? !0 : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.mask = function(a, b) {
  return a >>> b & 31;
};
cljs.core.clone_and_set = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = cljs.core.aclone(a);
  a[b] = c;
  return a;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  a = cljs.core.aclone(a);
  a[b] = c;
  a[d] = e;
  return a;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function(a, b) {
  var c = Array(a.length - 2);
  cljs.core.array_copy(a, 0, c, 0, 2 * b);
  cljs.core.array_copy(a, 2 * (b + 1), c, 2 * b, c.length - 2 * b);
  return c;
};
cljs.core.bitmap_indexed_node_index = function(a, b) {
  return cljs.core.bit_count(a & b - 1);
};
cljs.core.bitpos = function(a, b) {
  return 1 << (a >>> b & 31);
};
cljs.core.edit_and_set = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  a = a.ensure_editable(b);
  a.arr[c] = d;
  return a;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  a = a.ensure_editable(b);
  a.arr[c] = d;
  a.arr[e] = f;
  return a;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function(a, b, c) {
  for (var d = a.length, e = 0, f = c;;) {
    if (e < d) {
      c = a[e];
      if (null != c) {
        var g = a[e + 1];
        c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(f, c, g) : b.call(null, f, c, g);
      } else {
        c = a[e + 1], c = null != c ? c.kv_reduce(b, f) : f;
      }
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(c) : cljs.core.deref.call(null, c);
      }
      e += 2;
      f = c;
    } else {
      return f;
    }
  }
};
cljs.core.ArrayNode;
cljs.core.NodeIterator = function(a, b, c, d) {
  this.arr = a;
  this.i = b;
  this.next_entry = c;
  this.next_iter = d;
};
cljs.core.NodeIterator.prototype.advance = function() {
  for (var a = this.arr.length;;) {
    if (this.i < a) {
      var b = this.arr[this.i], c = this.arr[this.i + 1];
      cljs.core.some_QMARK_(b) ? b = this.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c], null) : cljs.core.some_QMARK_(c) ? (b = cljs.core._iterator(c), b = b.hasNext() ? this.next_iter = b : !1) : b = !1;
      this.i += 2;
      if (b) {
        return !0;
      }
    } else {
      return !1;
    }
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var a = cljs.core.some_QMARK_(this.next_entry);
  return a ? a : (a = cljs.core.some_QMARK_(this.next_iter)) ? a : this.advance();
};
cljs.core.NodeIterator.prototype.next = function() {
  if (cljs.core.some_QMARK_(this.next_entry)) {
    var a = this.next_entry;
    this.next_entry = null;
    return a;
  }
  if (cljs.core.some_QMARK_(this.next_iter)) {
    return a = this.next_iter.next(), this.next_iter.hasNext() || (this.next_iter = null), a;
  }
  if (this.advance()) {
    return this.next();
  }
  throw Error("No such element");
};
cljs.core.NodeIterator.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = !0;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function(a, b, c, d) {
  return new cljs.core.NodeIterator(a, b, c, d);
};
cljs.core.BitmapIndexedNode = function(a, b, c) {
  this.edit = a;
  this.bitmap = b;
  this.arr = c;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(a) {
  if (a === this.edit) {
    return this;
  }
  var b = cljs.core.bit_count(this.bitmap), c = Array(0 > b ? 4 : 2 * (b + 1));
  cljs.core.array_copy(this.arr, 0, c, 0, 2 * b);
  return new cljs.core.BitmapIndexedNode(a, this.bitmap, c);
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(a, b, c, d, e) {
  var f = 1 << (c >>> b & 31);
  if (0 === (this.bitmap & f)) {
    return this;
  }
  var g = cljs.core.bitmap_indexed_node_index(this.bitmap, f), h = this.arr[2 * g], k = this.arr[2 * g + 1];
  return null == h ? (b = k.inode_without_BANG_(a, b + 5, c, d, e), b === k ? this : null != b ? cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, 2 * g + 1, b) : this.bitmap === f ? null : this.edit_and_remove_pair(a, f, g)) : cljs.core.key_test(d, h) ? (e[0] = !0, this.edit_and_remove_pair(a, f, g)) : this;
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(a, b, c) {
  if (this.bitmap === b) {
    return null;
  }
  a = this.ensure_editable(a);
  var d = a.arr, e = d.length;
  a.bitmap ^= b;
  cljs.core.array_copy(d, 2 * (c + 1), d, 2 * c, e - 2 * (c + 1));
  d[e - 2] = null;
  d[e - 1] = null;
  return a;
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(this.arr) : cljs.core.create_inode_seq.call(null, this.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(a, b) {
  return cljs.core.inode_kv_reduce(this.arr, a, b);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(a, b, c, d) {
  var e = 1 << (b >>> a & 31);
  if (0 === (this.bitmap & e)) {
    return d;
  }
  var f = cljs.core.bitmap_indexed_node_index(this.bitmap, e), e = this.arr[2 * f], f = this.arr[2 * f + 1];
  return null == e ? f.inode_lookup(a + 5, b, c, d) : cljs.core.key_test(c, e) ? f : d;
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(a, b, c, d, e, f) {
  var g = 1 << (c >>> b & 31), h = cljs.core.bitmap_indexed_node_index(this.bitmap, g);
  if (0 === (this.bitmap & g)) {
    var k = cljs.core.bit_count(this.bitmap);
    if (2 * k < this.arr.length) {
      var m = this.ensure_editable(a), l = m.arr;
      f.val = !0;
      cljs.core.array_copy_downward(l, 2 * h, l, 2 * (h + 1), 2 * (k - h));
      l[2 * h] = d;
      l[2 * h + 1] = e;
      m.bitmap |= g;
      return m;
    }
    if (16 <= k) {
      g = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      g[c >>> b & 31] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(a, b + 5, c, d, e, f);
      for (m = h = 0;;) {
        if (32 > h) {
          0 !== (this.bitmap >>> h & 1) && (g[h] = null != this.arr[m] ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(a, b + 5, cljs.core.hash(this.arr[m]), this.arr[m], this.arr[m + 1], f) : this.arr[m + 1], m += 2), h += 1;
        } else {
          break;
        }
      }
      return new cljs.core.ArrayNode(a, k + 1, g);
    }
    l = Array(2 * (k + 4));
    cljs.core.array_copy(this.arr, 0, l, 0, 2 * h);
    l[2 * h] = d;
    l[2 * h + 1] = e;
    cljs.core.array_copy(this.arr, 2 * h, l, 2 * (h + 1), 2 * (k - h));
    f.val = !0;
    m = this.ensure_editable(a);
    m.arr = l;
    m.bitmap |= g;
    return m;
  }
  var n = this.arr[2 * h], p = this.arr[2 * h + 1];
  if (null == n) {
    return k = p.inode_assoc_BANG_(a, b + 5, c, d, e, f), k === p ? this : cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, 2 * h + 1, k);
  }
  if (cljs.core.key_test(d, n)) {
    return e === p ? this : cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, 2 * h + 1, e);
  }
  f.val = !0;
  return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(this, a, 2 * h, null, 2 * h + 1, function() {
    var f = b + 5;
    return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(a, f, n, p, c, d, e) : cljs.core.create_node.call(null, a, f, n, p, c, d, e);
  }());
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(a, b, c, d, e) {
  var f = 1 << (b >>> a & 31), g = cljs.core.bitmap_indexed_node_index(this.bitmap, f);
  if (0 === (this.bitmap & f)) {
    var h = cljs.core.bit_count(this.bitmap);
    if (16 <= h) {
      f = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      f[b >>> a & 31] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(a + 5, b, c, d, e);
      for (var k = g = 0;;) {
        if (32 > g) {
          0 !== (this.bitmap >>> g & 1) && (f[g] = null != this.arr[k] ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(a + 5, cljs.core.hash(this.arr[k]), this.arr[k], this.arr[k + 1], e) : this.arr[k + 1], k += 2), g += 1;
        } else {
          break;
        }
      }
      return new cljs.core.ArrayNode(null, h + 1, f);
    }
    k = Array(2 * (h + 1));
    cljs.core.array_copy(this.arr, 0, k, 0, 2 * g);
    k[2 * g] = c;
    k[2 * g + 1] = d;
    cljs.core.array_copy(this.arr, 2 * g, k, 2 * (g + 1), 2 * (h - g));
    e.val = !0;
    return new cljs.core.BitmapIndexedNode(null, this.bitmap | f, k);
  }
  var m = this.arr[2 * g], l = this.arr[2 * g + 1];
  if (null == m) {
    return h = l.inode_assoc(a + 5, b, c, d, e), h === l ? this : new cljs.core.BitmapIndexedNode(null, this.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, 2 * g + 1, h));
  }
  if (cljs.core.key_test(c, m)) {
    return d === l ? this : new cljs.core.BitmapIndexedNode(null, this.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, 2 * g + 1, d));
  }
  e.val = !0;
  return new cljs.core.BitmapIndexedNode(null, this.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(this.arr, 2 * g, null, 2 * g + 1, function() {
    var e = a + 5;
    return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(e, m, l, b, c, d) : cljs.core.create_node.call(null, e, m, l, b, c, d);
  }()));
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(a, b, c, d) {
  var e = 1 << (b >>> a & 31);
  if (0 === (this.bitmap & e)) {
    return d;
  }
  var f = cljs.core.bitmap_indexed_node_index(this.bitmap, e), e = this.arr[2 * f], f = this.arr[2 * f + 1];
  return null == e ? f.inode_find(a + 5, b, c, d) : cljs.core.key_test(c, e) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, f], null) : d;
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(a, b, c) {
  var d = 1 << (b >>> a & 31);
  if (0 === (this.bitmap & d)) {
    return this;
  }
  var e = cljs.core.bitmap_indexed_node_index(this.bitmap, d), f = this.arr[2 * e], g = this.arr[2 * e + 1];
  return null == f ? (a = g.inode_without(a + 5, b, c), a === g ? this : null != a ? new cljs.core.BitmapIndexedNode(null, this.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, 2 * e + 1, a)) : this.bitmap === d ? null : new cljs.core.BitmapIndexedNode(null, this.bitmap ^ d, cljs.core.remove_pair(this.arr, e))) : cljs.core.key_test(c, f) ? new cljs.core.BitmapIndexedNode(null, this.bitmap ^ d, cljs.core.remove_pair(this.arr, e)) : this;
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = !0;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.NodeIterator(this.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = !0;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function(a, b, c) {
  return new cljs.core.BitmapIndexedNode(a, b, c);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function(a, b, c) {
  var d = a.arr, e = d.length;
  a = Array(2 * (a.cnt - 1));
  for (var f = 0, g = 1, h = 0;;) {
    if (f < e) {
      f !== c && null != d[f] && (a[g] = d[f], g += 2, h |= 1 << f), f += 1;
    } else {
      return new cljs.core.BitmapIndexedNode(b, h, a);
    }
  }
};
cljs.core.ArrayNodeIterator = function(a, b, c) {
  this.arr = a;
  this.i = b;
  this.next_iter = c;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  for (var a = this.arr.length;;) {
    if (cljs.core.some_QMARK_(this.next_iter) && this.next_iter.hasNext()) {
      return !0;
    }
    if (this.i < a) {
      var b = this.arr[this.i];
      this.i += 1;
      cljs.core.some_QMARK_(b) && (this.next_iter = cljs.core._iterator(b));
    } else {
      return !1;
    }
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  if (this.hasNext()) {
    return this.next_iter.next();
  }
  throw Error("No such element");
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = !0;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function(a, b, c) {
  return new cljs.core.ArrayNodeIterator(a, b, c);
};
cljs.core.ArrayNode = function(a, b, c) {
  this.edit = a;
  this.cnt = b;
  this.arr = c;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(a) {
  return a === this.edit ? this : new cljs.core.ArrayNode(a, this.cnt, cljs.core.aclone(this.arr));
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(a, b, c, d, e) {
  var f = c >>> b & 31, g = this.arr[f];
  if (null == g) {
    return this;
  }
  b = g.inode_without_BANG_(a, b + 5, c, d, e);
  if (b === g) {
    return this;
  }
  if (null == b) {
    if (8 >= this.cnt) {
      return cljs.core.pack_array_node(this, a, f);
    }
    a = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, f, b);
    --a.cnt;
    return a;
  }
  return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, f, b);
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(this.arr) : cljs.core.create_array_node_seq.call(null, this.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(a, b) {
  for (var c = this.arr.length, d = 0, e = b;;) {
    if (d < c) {
      var f = this.arr[d];
      if (null != f && (e = f.kv_reduce(a, e), cljs.core.reduced_QMARK_(e))) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.deref.call(null, e);
      }
      d += 1;
    } else {
      return e;
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(a, b, c, d) {
  var e = this.arr[b >>> a & 31];
  return null != e ? e.inode_lookup(a + 5, b, c, d) : d;
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(a, b, c, d, e, f) {
  var g = c >>> b & 31, h = this.arr[g];
  if (null == h) {
    return a = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, g, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(a, b + 5, c, d, e, f)), a.cnt += 1, a;
  }
  b = h.inode_assoc_BANG_(a, b + 5, c, d, e, f);
  return b === h ? this : cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, g, b);
};
cljs.core.ArrayNode.prototype.inode_assoc = function(a, b, c, d, e) {
  var f = b >>> a & 31, g = this.arr[f];
  if (null == g) {
    return new cljs.core.ArrayNode(null, this.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, f, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(a + 5, b, c, d, e)));
  }
  a = g.inode_assoc(a + 5, b, c, d, e);
  return a === g ? this : new cljs.core.ArrayNode(null, this.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, f, a));
};
cljs.core.ArrayNode.prototype.inode_find = function(a, b, c, d) {
  var e = this.arr[b >>> a & 31];
  return null != e ? e.inode_find(a + 5, b, c, d) : d;
};
cljs.core.ArrayNode.prototype.inode_without = function(a, b, c) {
  var d = b >>> a & 31, e = this.arr[d];
  return null != e ? (a = e.inode_without(a + 5, b, c), a === e ? this : null == a ? 8 >= this.cnt ? cljs.core.pack_array_node(this, null, d) : new cljs.core.ArrayNode(null, this.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, d, a)) : new cljs.core.ArrayNode(null, this.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, d, a))) : this;
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = !0;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.ArrayNodeIterator(this.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = !0;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function(a, b, c) {
  return new cljs.core.ArrayNode(a, b, c);
};
cljs.core.hash_collision_node_find_index = function(a, b, c) {
  b *= 2;
  for (var d = 0;;) {
    if (d < b) {
      if (cljs.core.key_test(c, a[d])) {
        return d;
      }
      d += 2;
    } else {
      return -1;
    }
  }
};
cljs.core.HashCollisionNode = function(a, b, c, d) {
  this.edit = a;
  this.collision_hash = b;
  this.cnt = c;
  this.arr = d;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(a) {
  if (a === this.edit) {
    return this;
  }
  var b = Array(2 * (this.cnt + 1));
  cljs.core.array_copy(this.arr, 0, b, 0, 2 * this.cnt);
  return new cljs.core.HashCollisionNode(a, this.collision_hash, this.cnt, b);
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(a, b, c, d, e) {
  b = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, d);
  if (-1 === b) {
    return this;
  }
  e[0] = !0;
  if (1 === this.cnt) {
    return null;
  }
  a = this.ensure_editable(a);
  e = a.arr;
  e[b] = e[2 * this.cnt - 2];
  e[b + 1] = e[2 * this.cnt - 1];
  e[2 * this.cnt - 1] = null;
  e[2 * this.cnt - 2] = null;
  --a.cnt;
  return a;
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(this.arr) : cljs.core.create_inode_seq.call(null, this.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(a, b) {
  return cljs.core.inode_kv_reduce(this.arr, a, b);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(a, b, c, d) {
  a = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, c);
  return 0 > a ? d : cljs.core.key_test(c, this.arr[a]) ? this.arr[a + 1] : d;
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(a, b, c, d, e, f) {
  if (c === this.collision_hash) {
    b = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, d);
    if (-1 === b) {
      if (this.arr.length > 2 * this.cnt) {
        return a = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(this, a, 2 * this.cnt, d, 2 * this.cnt + 1, e), f.val = !0, a.cnt += 1, a;
      }
      b = this.arr.length;
      c = Array(b + 2);
      cljs.core.array_copy(this.arr, 0, c, 0, b);
      c[b] = d;
      c[b + 1] = e;
      f.val = !0;
      return this.ensure_editable_array(a, this.cnt + 1, c);
    }
    return this.arr[b + 1] === e ? this : cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, b + 1, e);
  }
  return (new cljs.core.BitmapIndexedNode(a, 1 << (this.collision_hash >>> b & 31), [null, this, null, null])).inode_assoc_BANG_(a, b, c, d, e, f);
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(a, b, c, d, e) {
  return b === this.collision_hash ? (a = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, c), -1 === a ? (a = 2 * this.cnt, b = Array(a + 2), cljs.core.array_copy(this.arr, 0, b, 0, a), b[a] = c, b[a + 1] = d, e.val = !0, new cljs.core.HashCollisionNode(null, this.collision_hash, this.cnt + 1, b)) : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.arr[a], d) ? this : new cljs.core.HashCollisionNode(null, this.collision_hash, this.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, 
  a + 1, d))) : (new cljs.core.BitmapIndexedNode(null, 1 << (this.collision_hash >>> a & 31), [null, this])).inode_assoc(a, b, c, d, e);
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(a, b, c) {
  return a === this.edit ? (this.arr = c, this.cnt = b, this) : new cljs.core.HashCollisionNode(this.edit, this.collision_hash, b, c);
};
cljs.core.HashCollisionNode.prototype.inode_find = function(a, b, c, d) {
  a = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, c);
  return 0 > a ? d : cljs.core.key_test(c, this.arr[a]) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.arr[a], this.arr[a + 1]], null) : d;
};
cljs.core.HashCollisionNode.prototype.inode_without = function(a, b, c) {
  a = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, c);
  return -1 === a ? this : 1 === this.cnt ? null : new cljs.core.HashCollisionNode(null, this.collision_hash, this.cnt - 1, cljs.core.remove_pair(this.arr, cljs.core.quot(a, 2)));
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = !0;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.NodeIterator(this.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = !0;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function(a, b, c, d) {
  return new cljs.core.HashCollisionNode(a, b, c, d);
};
cljs.core.create_node = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var g = cljs.core.hash(b);
  if (g === d) {
    return new cljs.core.HashCollisionNode(null, g, 2, [b, c, e, f]);
  }
  var h = new cljs.core.Box(!1);
  return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(a, g, b, c, h).inode_assoc(a, d, e, f, h);
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var h = cljs.core.hash(c);
  if (h === e) {
    return new cljs.core.HashCollisionNode(null, h, 2, [c, d, f, g]);
  }
  var k = new cljs.core.Box(!1);
  return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(a, b, h, c, d, k).inode_assoc_BANG_(a, b, e, f, g, k);
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(a, b, c, d, e) {
  this.meta = a;
  this.nodes = b;
  this.i = c;
  this.s = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.NodeSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return null == this.s ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.nodes[this.i], this.nodes[this.i + 1]], null) : cljs.core.first(this.s);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  if (null == this.s) {
    a = this.nodes;
    var b = this.i + 2;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(a, b, null) : cljs.core.create_inode_seq.call(null, a, b, null);
  }
  a = this.nodes;
  var b = this.i, c = cljs.core.next(this.s);
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(a, b, c) : cljs.core.create_inode_seq.call(null, a, b, c);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.NodeSeq(b, this.nodes, this.i, this.s, this.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), !0], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = !0;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function(a, b, c, d, e) {
  return new cljs.core.NodeSeq(a, b, c, d, e);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.create_inode_seq = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(a, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null == c) {
    for (c = a.length;;) {
      if (b < c) {
        if (null != a[b]) {
          return new cljs.core.NodeSeq(null, a, b, null, null);
        }
        var d = a[b + 1];
        if (cljs.core.truth_(d) && (d = d.inode_seq(), cljs.core.truth_(d))) {
          return new cljs.core.NodeSeq(null, a, b + 2, d, null);
        }
        b += 2;
      } else {
        return null;
      }
    }
  } else {
    return new cljs.core.NodeSeq(null, a, b, c, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(a, b, c, d, e) {
  this.meta = a;
  this.nodes = b;
  this.i = c;
  this.s = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.first(this.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = this.nodes;
  var b = this.i, c = cljs.core.next(this.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, a, b, c) : cljs.core.create_array_node_seq.call(null, null, a, b, c);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.ArrayNodeSeq(b, this.nodes, this.i, this.s, this.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), !0], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = !0;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function(a, b, c, d, e) {
  return new cljs.core.ArrayNodeSeq(a, b, c, d, e);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.create_array_node_seq = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, a, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  if (null == d) {
    for (d = b.length;;) {
      if (c < d) {
        var e = b[c];
        if (cljs.core.truth_(e) && (e = e.inode_seq(), cljs.core.truth_(e))) {
          return new cljs.core.ArrayNodeSeq(a, b, c + 1, e, null);
        }
        c += 1;
      } else {
        return null;
      }
    }
  } else {
    return new cljs.core.ArrayNodeSeq(a, b, c, d, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.TransientHashMap;
cljs.core.HashMapIter = function(a, b, c) {
  this.nil_val = a;
  this.root_iter = b;
  this.seen = c;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  return this.seen && this.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  if (this.seen) {
    return this.root_iter.next();
  }
  this.seen = !0;
  return this.nil_val;
};
cljs.core.HashMapIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = !0;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function(a, b, c) {
  return new cljs.core.HashMapIter(a, b, c);
};
cljs.core.PersistentHashMap = function(a, b, c, d, e, f) {
  this.meta = a;
  this.cnt = b;
  this.root = c;
  this.has_nil_QMARK_ = d;
  this.nil_val = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentHashMap.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(this) : cljs.core.keys.call(null, this));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  return cljs.core.es6_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(this) : cljs.core.vals.call(null, this));
};
cljs.core.PersistentHashMap.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentHashMap.prototype.get = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentHashMap.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this, b, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return null == b ? this.has_nil_QMARK_ ? this.nil_val : c : null == this.root ? c : this.root.inode_lookup(0, cljs.core.hash(b), b, c);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = this.has_nil_QMARK_ ? b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, null, this.nil_val) : b.call(null, c, null, this.nil_val) : c;
  return cljs.core.reduced_QMARK_(a) ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.deref.call(null, a) : null != this.root ? this.root.kv_reduce(b, a) : a;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = !0;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  a = this.root ? cljs.core._iterator(this.root) : cljs.core.nil_iter;
  return this.has_nil_QMARK_ ? new cljs.core.HashMapIter(this.nil_val, a, !1) : a;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentHashMap(this.meta, this.cnt, this.root, this.has_nil_QMARK_, this.nil_val, this.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_map(this, b);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return new cljs.core.TransientHashMap({}, this.root, this.cnt, this.has_nil_QMARK_, this.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, this.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  if (null == b) {
    return this.has_nil_QMARK_ ? new cljs.core.PersistentHashMap(this.meta, this.cnt - 1, this.root, !1, null, null) : this;
  }
  if (null == this.root) {
    return this;
  }
  var c = this.root.inode_without(0, cljs.core.hash(b), b);
  return c === this.root ? this : new cljs.core.PersistentHashMap(this.meta, this.cnt - 1, c, this.has_nil_QMARK_, this.nil_val, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  if (null == b) {
    return this.has_nil_QMARK_ && c === this.nil_val ? this : new cljs.core.PersistentHashMap(this.meta, this.has_nil_QMARK_ ? this.cnt : this.cnt + 1, this.root, !0, c, null);
  }
  a = new cljs.core.Box(!1);
  b = (null == this.root ? cljs.core.BitmapIndexedNode.EMPTY : this.root).inode_assoc(0, cljs.core.hash(b), b, c, a);
  return b === this.root ? this : new cljs.core.PersistentHashMap(this.meta, a.val ? this.cnt + 1 : this.cnt, b, this.has_nil_QMARK_, this.nil_val, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return null == b ? this.has_nil_QMARK_ : null == this.root ? !1 : this.root.inode_lookup(0, cljs.core.hash(b), b, cljs.core.lookup_sentinel) !== cljs.core.lookup_sentinel;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return 0 < this.cnt ? (a = null != this.root ? this.root.inode_seq() : null, this.has_nil_QMARK_ ? cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, this.nil_val], null), a) : a) : null;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentHashMap(b, this.cnt, this.root, this.has_nil_QMARK_, this.nil_val, this.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core._assoc(this, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 1));
  }
  for (var c = this, d = cljs.core.seq(b);;) {
    if (null == d) {
      return c;
    }
    var e = cljs.core.first(d);
    if (cljs.core.vector_QMARK_(e)) {
      c = cljs.core._assoc(c, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1)), d = cljs.core.next(d);
    } else {
      throw Error("conj on a map takes map entries or seqables of map entries");
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var a = null, a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentHashMap.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = !0;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function(a, b, c, d, e, f) {
  return new cljs.core.PersistentHashMap(a, b, c, d, e, f);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, !1, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(a, b) {
  for (var c = b ? a : cljs.core.aclone(a), d = c.length, e = 0, f = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);;) {
    if (e < d) {
      var g = e + 2, f = cljs.core._assoc_BANG_(f, c[e], c[e + 1]), e = g
    } else {
      return cljs.core._persistent_BANG_(f);
    }
  }
};
cljs.core.PersistentHashMap.fromArrays = function(a, b) {
  for (var c = a.length, d = 0, e = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);;) {
    if (d < c) {
      var f = d + 1, e = e.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, a[d], b[d]), d = f
    } else {
      return cljs.core.persistent_BANG_(e);
    }
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.TransientHashMap = function(a, b, c, d, e) {
  this.edit = a;
  this.root = b;
  this.count = c;
  this.has_nil_QMARK_ = d;
  this.nil_val = e;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(a) {
  if (this.edit) {
    if (null != a ? a.cljs$lang$protocol_mask$partition0$ & 2048 || a.cljs$core$IMapEntry$ || (a.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, a)) {
      return this.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.key.call(null, a), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.val.call(null, a));
    }
    a = cljs.core.seq(a);
    for (var b = this;;) {
      var c = cljs.core.first(a);
      if (cljs.core.truth_(c)) {
        a = cljs.core.next(a), b = b.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(c) : cljs.core.key.call(null, c), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(c) : cljs.core.val.call(null, c));
      } else {
        return b;
      }
    }
  } else {
    throw Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(a, b) {
  if (this.edit) {
    if (null == a) {
      this.nil_val !== b && (this.nil_val = b), this.has_nil_QMARK_ || (this.count += 1, this.has_nil_QMARK_ = !0);
    } else {
      var c = new cljs.core.Box(!1), d = (null == this.root ? cljs.core.BitmapIndexedNode.EMPTY : this.root).inode_assoc_BANG_(this.edit, 0, cljs.core.hash(a), a, b, c);
      d !== this.root && (this.root = d);
      c.val && (this.count += 1);
    }
    return this;
  }
  throw Error("assoc! after persistent!");
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(a) {
  if (this.edit) {
    if (null == a) {
      this.has_nil_QMARK_ && (this.has_nil_QMARK_ = !1, this.nil_val = null, --this.count);
    } else {
      if (null != this.root) {
        var b = new cljs.core.Box(!1);
        a = this.root.inode_without_BANG_(this.edit, 0, cljs.core.hash(a), a, b);
        a !== this.root && (this.root = a);
        cljs.core.truth_(b[0]) && --this.count;
      }
    }
    return this;
  }
  throw Error("dissoc! after persistent!");
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  if (this.edit) {
    return this.edit = null, new cljs.core.PersistentHashMap(null, this.count, this.root, this.has_nil_QMARK_, this.nil_val, null);
  }
  throw Error("persistent! called twice");
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  if (this.edit) {
    return this.count;
  }
  throw Error("count after persistent!");
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return null == b ? this.has_nil_QMARK_ ? this.nil_val : null : null == this.root ? null : this.root.inode_lookup(0, cljs.core.hash(b), b);
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return null == b ? this.has_nil_QMARK_ ? this.nil_val : c : null == this.root ? c : this.root.inode_lookup(0, cljs.core.hash(b), b, c);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(a, b) {
  return this.conj_BANG_(b);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(a) {
  return this.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(a, b, c) {
  return this.assoc_BANG_(b, c);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(a, b) {
  return this.without_BANG_(b);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = !0;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function(a, b, c, d, e) {
  return new cljs.core.TransientHashMap(a, b, c, d, e);
};
cljs.core.tree_map_seq_push = function(a, b, c) {
  for (var d = b;;) {
    if (null != a) {
      b = c ? a.left : a.right, d = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(d, a), a = b;
    } else {
      return d;
    }
  }
};
cljs.core.PersistentTreeMapSeq = function(a, b, c, d, e) {
  this.meta = a;
  this.stack = b;
  this.ascending_QMARK_ = c;
  this.cnt = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 0 > this.cnt ? cljs.core.count(cljs.core.next(this)) + 1 : this.cnt;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.peek(this.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = cljs.core.first(this.stack);
  a = cljs.core.tree_map_seq_push(this.ascending_QMARK_ ? a.right : a.left, cljs.core.next(this.stack), this.ascending_QMARK_);
  return null != a ? new cljs.core.PersistentTreeMapSeq(null, a, this.ascending_QMARK_, this.cnt - 1, null) : cljs.core.List.EMPTY;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentTreeMapSeq(b, this.stack, this.ascending_QMARK_, this.cnt, this.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = !0;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function(a, b, c, d, e) {
  return new cljs.core.PersistentTreeMapSeq(a, b, c, d, e);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.create_tree_map_seq = function(a, b, c) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(a, null, b), b, c, null);
};
cljs.core.RedNode;
cljs.core.BlackNode;
cljs.core.balance_left = function(a, b, c, d) {
  return c instanceof cljs.core.RedNode ? c.left instanceof cljs.core.RedNode ? new cljs.core.RedNode(c.key, c.val, c.left.blacken(), new cljs.core.BlackNode(a, b, c.right, d, null), null) : c.right instanceof cljs.core.RedNode ? new cljs.core.RedNode(c.right.key, c.right.val, new cljs.core.BlackNode(c.key, c.val, c.left, c.right.left, null), new cljs.core.BlackNode(a, b, c.right.right, d, null), null) : new cljs.core.BlackNode(a, b, c, d, null) : new cljs.core.BlackNode(a, b, c, d, null);
};
cljs.core.balance_right = function(a, b, c, d) {
  return d instanceof cljs.core.RedNode ? d.right instanceof cljs.core.RedNode ? new cljs.core.RedNode(d.key, d.val, new cljs.core.BlackNode(a, b, c, d.left, null), d.right.blacken(), null) : d.left instanceof cljs.core.RedNode ? new cljs.core.RedNode(d.left.key, d.left.val, new cljs.core.BlackNode(a, b, c, d.left.left, null), new cljs.core.BlackNode(d.key, d.val, d.left.right, d.right, null), null) : new cljs.core.BlackNode(a, b, c, d, null) : new cljs.core.BlackNode(a, b, c, d, null);
};
cljs.core.balance_left_del = function(a, b, c, d) {
  if (c instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(a, b, c.blacken(), d, null);
  }
  if (d instanceof cljs.core.BlackNode) {
    return cljs.core.balance_right(a, b, c, d.redden());
  }
  if (d instanceof cljs.core.RedNode && d.left instanceof cljs.core.BlackNode) {
    return new cljs.core.RedNode(d.left.key, d.left.val, new cljs.core.BlackNode(a, b, c, d.left.left, null), cljs.core.balance_right(d.key, d.val, d.left.right, d.right.redden()), null);
  }
  throw Error("red-black tree invariant violation");
};
cljs.core.balance_right_del = function(a, b, c, d) {
  if (d instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(a, b, c, d.blacken(), null);
  }
  if (c instanceof cljs.core.BlackNode) {
    return cljs.core.balance_left(a, b, c.redden(), d);
  }
  if (c instanceof cljs.core.RedNode && c.right instanceof cljs.core.BlackNode) {
    return new cljs.core.RedNode(c.right.key, c.right.val, cljs.core.balance_left(c.key, c.val, c.left.redden(), c.right.left), new cljs.core.BlackNode(a, b, c.right.right, d, null), null);
  }
  throw Error("red-black tree invariant violation");
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(b, c, d) {
  d = null != b.left ? cljs$core$tree_map_kv_reduce(b.left, c, d) : d;
  if (cljs.core.reduced_QMARK_(d)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(d) : cljs.core.deref.call(null, d);
  }
  var e = b.key, f = b.val;
  d = c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(d, e, f) : c.call(null, d, e, f);
  if (cljs.core.reduced_QMARK_(d)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(d) : cljs.core.deref.call(null, d);
  }
  b = null != b.right ? cljs$core$tree_map_kv_reduce(b.right, c, d) : d;
  return cljs.core.reduced_QMARK_(b) ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(b) : cljs.core.deref.call(null, b) : b;
};
cljs.core.BlackNode = function(a, b, c, d, e) {
  this.key = a;
  this.val = b;
  this.left = c;
  this.right = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.add_right = function(a) {
  return a.balance_right(this);
};
cljs.core.BlackNode.prototype.redden = function() {
  return new cljs.core.RedNode(this.key, this.val, this.left, this.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  return this;
};
cljs.core.BlackNode.prototype.add_left = function(a) {
  return a.balance_left(this);
};
cljs.core.BlackNode.prototype.replace = function(a, b, c, d) {
  return new cljs.core.BlackNode(a, b, c, d, null);
};
cljs.core.BlackNode.prototype.balance_left = function(a) {
  return new cljs.core.BlackNode(a.key, a.val, this, a.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(a) {
  return new cljs.core.BlackNode(a.key, a.val, a.left, this, null);
};
cljs.core.BlackNode.prototype.remove_left = function(a) {
  return cljs.core.balance_left_del(this.key, this.val, a, this.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(a, b) {
  return cljs.core.tree_map_kv_reduce(this, a, b);
};
cljs.core.BlackNode.prototype.remove_right = function(a) {
  return cljs.core.balance_right_del(this.key, this.val, this.left, a);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(this, b, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  return 0 === b ? this.key : 1 === b ? this.val : null;
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 === b ? this.key : 1 === b ? this.val : c;
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, b, c);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(a) {
  return this.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(a) {
  return this.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return this.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b, c);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, this.val), this.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val, b], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var a = null, a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.BlackNode.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = !0;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function(a, b, c, d, e) {
  return new cljs.core.BlackNode(a, b, c, d, e);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.RedNode = function(a, b, c, d, e) {
  this.key = a;
  this.val = b;
  this.left = c;
  this.right = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.add_right = function(a) {
  return new cljs.core.RedNode(this.key, this.val, this.left, a, null);
};
cljs.core.RedNode.prototype.redden = function() {
  throw Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  return new cljs.core.BlackNode(this.key, this.val, this.left, this.right, null);
};
cljs.core.RedNode.prototype.add_left = function(a) {
  return new cljs.core.RedNode(this.key, this.val, a, this.right, null);
};
cljs.core.RedNode.prototype.replace = function(a, b, c, d) {
  return new cljs.core.RedNode(a, b, c, d, null);
};
cljs.core.RedNode.prototype.balance_left = function(a) {
  return this.left instanceof cljs.core.RedNode ? new cljs.core.RedNode(this.key, this.val, this.left.blacken(), new cljs.core.BlackNode(a.key, a.val, this.right, a.right, null), null) : this.right instanceof cljs.core.RedNode ? new cljs.core.RedNode(this.right.key, this.right.val, new cljs.core.BlackNode(this.key, this.val, this.left, this.right.left, null), new cljs.core.BlackNode(a.key, a.val, this.right.right, a.right, null), null) : new cljs.core.BlackNode(a.key, a.val, this, a.right, null);
};
cljs.core.RedNode.prototype.balance_right = function(a) {
  return this.right instanceof cljs.core.RedNode ? new cljs.core.RedNode(this.key, this.val, new cljs.core.BlackNode(a.key, a.val, a.left, this.left, null), this.right.blacken(), null) : this.left instanceof cljs.core.RedNode ? new cljs.core.RedNode(this.left.key, this.left.val, new cljs.core.BlackNode(a.key, a.val, a.left, this.left.left, null), new cljs.core.BlackNode(this.key, this.val, this.left.right, this.right, null), null) : new cljs.core.BlackNode(a.key, a.val, a.left, this, null);
};
cljs.core.RedNode.prototype.remove_left = function(a) {
  return new cljs.core.RedNode(this.key, this.val, a, this.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(a, b) {
  return cljs.core.tree_map_kv_reduce(this, a, b);
};
cljs.core.RedNode.prototype.remove_right = function(a) {
  return new cljs.core.RedNode(this.key, this.val, this.left, a, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(this, b, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  return 0 === b ? this.key : 1 === b ? this.val : null;
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 === b ? this.key : 1 === b ? this.val : c;
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, b, c);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(a) {
  return this.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(a) {
  return this.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return this.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b, c);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, this.val), this.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val, b], null);
};
cljs.core.RedNode.prototype.call = function() {
  var a = null, a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.RedNode.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.RedNode.cljs$lang$type = !0;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function(a, b, c, d, e) {
  return new cljs.core.RedNode(a, b, c, d, e);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(b, c, d, e, f) {
  if (null == c) {
    return new cljs.core.RedNode(d, e, null, null, null);
  }
  var g;
  g = c.key;
  g = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, g) : b.call(null, d, g);
  if (0 === g) {
    return f[0] = c, null;
  }
  if (0 > g) {
    return b = cljs$core$tree_map_add(b, c.left, d, e, f), null != b ? c.add_left(b) : null;
  }
  b = cljs$core$tree_map_add(b, c.right, d, e, f);
  return null != b ? c.add_right(b) : null;
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(b, c) {
  if (null == b) {
    return c;
  }
  if (null == c) {
    return b;
  }
  if (b instanceof cljs.core.RedNode) {
    if (c instanceof cljs.core.RedNode) {
      var d = cljs$core$tree_map_append(b.right, c.left);
      return d instanceof cljs.core.RedNode ? new cljs.core.RedNode(d.key, d.val, new cljs.core.RedNode(b.key, b.val, b.left, d.left, null), new cljs.core.RedNode(c.key, c.val, d.right, c.right, null), null) : new cljs.core.RedNode(b.key, b.val, b.left, new cljs.core.RedNode(c.key, c.val, d, c.right, null), null);
    }
    return new cljs.core.RedNode(b.key, b.val, b.left, cljs$core$tree_map_append(b.right, c), null);
  }
  if (c instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(c.key, c.val, cljs$core$tree_map_append(b, c.left), c.right, null);
  }
  d = cljs$core$tree_map_append(b.right, c.left);
  return d instanceof cljs.core.RedNode ? new cljs.core.RedNode(d.key, d.val, new cljs.core.BlackNode(b.key, b.val, b.left, d.left, null), new cljs.core.BlackNode(c.key, c.val, d.right, c.right, null), null) : cljs.core.balance_left_del(b.key, b.val, b.left, new cljs.core.BlackNode(c.key, c.val, d, c.right, null));
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(b, c, d, e) {
  if (null != c) {
    var f;
    f = c.key;
    f = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, f) : b.call(null, d, f);
    if (0 === f) {
      return e[0] = c, cljs.core.tree_map_append(c.left, c.right);
    }
    if (0 > f) {
      return b = cljs$core$tree_map_remove(b, c.left, d, e), null != b || null != e[0] ? c.left instanceof cljs.core.BlackNode ? cljs.core.balance_left_del(c.key, c.val, b, c.right) : new cljs.core.RedNode(c.key, c.val, b, c.right, null) : null;
    }
    b = cljs$core$tree_map_remove(b, c.right, d, e);
    return null != b || null != e[0] ? c.right instanceof cljs.core.BlackNode ? cljs.core.balance_right_del(c.key, c.val, c.left, b) : new cljs.core.RedNode(c.key, c.val, c.left, b, null) : null;
  }
  return null;
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(b, c, d, e) {
  var f = c.key, g = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, f) : b.call(null, d, f);
  return 0 === g ? c.replace(f, e, c.left, c.right) : 0 > g ? c.replace(f, c.val, cljs$core$tree_map_replace(b, c.left, d, e), c.right) : c.replace(f, c.val, c.left, cljs$core$tree_map_replace(b, c.right, d, e));
};
cljs.core.key;
cljs.core.PersistentTreeMap = function(a, b, c, d, e) {
  this.comp = a;
  this.tree = b;
  this.cnt = c;
  this.meta = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  return cljs.core.es6_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(this) : cljs.core.keys.call(null, this));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(this) : cljs.core.vals.call(null, this));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(a) {
  for (var b = this.tree;;) {
    if (null != b) {
      var c;
      c = a;
      var d = b.key;
      c = this.comp.cljs$core$IFn$_invoke$arity$2 ? this.comp.cljs$core$IFn$_invoke$arity$2(c, d) : this.comp.call(null, c, d);
      if (0 === c) {
        return b;
      }
      b = 0 > c ? b.left : b.right;
    } else {
      return null;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this, b, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  a = this.entry_at(b);
  return null != a ? a.val : c;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  return null != this.tree ? cljs.core.tree_map_kv_reduce(this.tree, b, c) : c;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentTreeMap(this.comp, this.tree, this.cnt, this.meta, this.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return 0 < this.cnt ? cljs.core.create_tree_map_seq(this.tree, !1, this.cnt) : null;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_map(this, b);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return new cljs.core.PersistentTreeMap(this.comp, null, 0, this.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  var c = [null], d = cljs.core.tree_map_remove(this.comp, this.tree, b, c);
  return null == d ? null == cljs.core.nth.cljs$core$IFn$_invoke$arity$2(c, 0) ? this : new cljs.core.PersistentTreeMap(this.comp, null, 0, this.meta, null) : new cljs.core.PersistentTreeMap(this.comp, d.blacken(), this.cnt - 1, this.meta, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = [null];
  var d = cljs.core.tree_map_add(this.comp, this.tree, b, c, a);
  return null == d ? (a = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, 0), cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c, a.val) ? this : new cljs.core.PersistentTreeMap(this.comp, cljs.core.tree_map_replace(this.comp, this.tree, b, c), this.cnt, this.meta, null)) : new cljs.core.PersistentTreeMap(this.comp, d.blacken(), this.cnt + 1, this.meta, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return null != this.entry_at(b);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return 0 < this.cnt ? cljs.core.create_tree_map_seq(this.tree, !0, this.cnt) : null;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentTreeMap(this.comp, this.tree, this.cnt, b, this.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core._assoc(this, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 1));
  }
  for (var c = this, d = cljs.core.seq(b);;) {
    if (null == d) {
      return c;
    }
    var e = cljs.core.first(d);
    if (cljs.core.vector_QMARK_(e)) {
      c = cljs.core._assoc(c, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1)), d = cljs.core.next(d);
    } else {
      throw Error("conj on a map takes map entries or seqables of map entries");
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var a = null, a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(a, b) {
  return 0 < this.cnt ? cljs.core.create_tree_map_seq(this.tree, b, this.cnt) : null;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(a, b, c) {
  if (0 < this.cnt) {
    a = null;
    for (var d = this.tree;;) {
      if (null != d) {
        var e;
        e = b;
        var f = d.key;
        e = this.comp.cljs$core$IFn$_invoke$arity$2 ? this.comp.cljs$core$IFn$_invoke$arity$2(e, f) : this.comp.call(null, e, f);
        if (0 === e) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d), c, -1, null);
        }
        cljs.core.truth_(c) ? 0 > e ? (a = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d), d = d.left) : d = d.right : 0 < e ? (a = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d), d = d.right) : d = d.left;
      } else {
        return null == a ? null : new cljs.core.PersistentTreeMapSeq(null, a, c, -1, null);
      }
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(a, b) {
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(b) : cljs.core.key.call(null, b);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(a) {
  return this.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = !0;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function(a, b, c, d, e) {
  return new cljs.core.PersistentTreeMap(a, b, c, d, e);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.hash_map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  a = cljs.core.seq(a);
  for (var b = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);;) {
    if (a) {
      var c = cljs.core.nnext(a), b = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(b, cljs.core.first(a), cljs.core.second(a));
      a = c;
    } else {
      return cljs.core.persistent_BANG_(b);
    }
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(a) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.array_map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  a = a instanceof cljs.core.IndexedSeq && 0 === a.i ? a.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
  return cljs.core.PersistentArrayMap.fromArray(a, !0, !1);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(a) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.obj_map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  var b = [], c = {};
  for (a = cljs.core.seq(a);;) {
    if (a) {
      b.push(cljs.core.first(a)), c[cljs.core.first(a)] = cljs.core.second(a), a = cljs.core.nnext(a);
    } else {
      return cljs.core.ObjMap.fromObject(b, c);
    }
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(a) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.sorted_map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  a = cljs.core.seq(a);
  for (var b = cljs.core.PersistentTreeMap.EMPTY;;) {
    if (a) {
      var c = cljs.core.nnext(a), b = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(b, cljs.core.first(a), cljs.core.second(a));
      a = c;
    } else {
      return b;
    }
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(a) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.sorted_map_by = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  for (var c = cljs.core.seq(b), d = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(a), null, 0, null, 0);;) {
    if (c) {
      var e = cljs.core.nnext(c), d = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d, cljs.core.first(c), cljs.core.second(c)), c = e
    } else {
      return d;
    }
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.KeySeq = function(a, b) {
  this.mseq = a;
  this._meta = b;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.KeySeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  a = (null != this.mseq ? this.mseq.cljs$lang$protocol_mask$partition0$ & 128 || this.mseq.cljs$core$INext$ || (this.mseq.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) ? this.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(this.mseq);
  return null == a ? null : new cljs.core.KeySeq(a, this._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.with_meta(cljs.core.List.EMPTY, this._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.mseq.cljs$core$ISeq$_first$arity$1(null).cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = (null != this.mseq ? this.mseq.cljs$lang$protocol_mask$partition0$ & 128 || this.mseq.cljs$core$INext$ || (this.mseq.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) ? this.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(this.mseq);
  return null != a ? new cljs.core.KeySeq(a, this._meta) : cljs.core.List.EMPTY;
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.KeySeq(this.mseq, b);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = !0;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function(a, b) {
  return new cljs.core.KeySeq(a, b);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.keys = function(a) {
  return (a = cljs.core.seq(a)) ? new cljs.core.KeySeq(a, null) : null;
};
cljs.core.key = function(a) {
  return cljs.core._key(a);
};
cljs.core.ValSeq = function(a, b) {
  this.mseq = a;
  this._meta = b;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ValSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  a = (null != this.mseq ? this.mseq.cljs$lang$protocol_mask$partition0$ & 128 || this.mseq.cljs$core$INext$ || (this.mseq.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) ? this.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(this.mseq);
  return null == a ? null : new cljs.core.ValSeq(a, this._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.with_meta(cljs.core.List.EMPTY, this._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.mseq.cljs$core$ISeq$_first$arity$1(null).cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = (null != this.mseq ? this.mseq.cljs$lang$protocol_mask$partition0$ & 128 || this.mseq.cljs$core$INext$ || (this.mseq.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) ? this.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(this.mseq);
  return null != a ? new cljs.core.ValSeq(a, this._meta) : cljs.core.List.EMPTY;
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.ValSeq(this.mseq, b);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = !0;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function(a, b) {
  return new cljs.core.ValSeq(a, b);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.vals = function(a) {
  return (a = cljs.core.seq(a)) ? new cljs.core.ValSeq(a, null) : null;
};
cljs.core.val = function(a) {
  return cljs.core._val(a);
};
cljs.core.merge = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.truth_(cljs.core.some(cljs.core.identity, a)) ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(a, c) {
    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.truth_(a) ? a : cljs.core.PersistentArrayMap.EMPTY, c);
  }, a) : null;
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(a) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.merge_with = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, b))) {
    var c = function(a) {
      return function(b, c) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(a, cljs.core.truth_(b) ? b : cljs.core.PersistentArrayMap.EMPTY, cljs.core.seq(c));
      };
    }(function(b, c) {
      var f = cljs.core.first(c), g = cljs.core.second(c);
      return cljs.core.contains_QMARK_(b, f) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(b, f, function() {
        var c = cljs.core.get.cljs$core$IFn$_invoke$arity$2(b, f);
        return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, g) : a.call(null, c, g);
      }()) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(b, f, g);
    });
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(c, b);
  }
  return null;
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.select_keys = function(a, b) {
  for (var c = cljs.core.PersistentArrayMap.EMPTY, d = cljs.core.seq(b);;) {
    if (d) {
      var e = cljs.core.first(d), f = cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, e, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)), c = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(f, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c, e, f) : c, d = cljs.core.next(d)
    } else {
      return cljs.core.with_meta(c, cljs.core.meta(a));
    }
  }
};
cljs.core.TransientHashSet;
cljs.core.HashSetIter = function(a) {
  this.iter = a;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  return this.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  if (this.iter.hasNext()) {
    return this.iter.next().tail[0];
  }
  throw Error("No such element");
};
cljs.core.HashSetIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = !0;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function(a) {
  return new cljs.core.HashSetIter(a);
};
cljs.core.PersistentHashSet = function(a, b, c) {
  this.meta = a;
  this.hash_map = b;
  this.__hash = c;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentHashSet.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.seq(this));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.seq(this));
};
cljs.core.PersistentHashSet.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentHashSet.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this, b, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return cljs.core._contains_key_QMARK_(this.hash_map, b) ? b : c;
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = !0;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.HashSetIter(cljs.core._iterator(this.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentHashSet(this.meta, this.hash_map, this.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core._count(this.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.set_QMARK_(b) && cljs.core.count(this) === cljs.core.count(b) && cljs.core.every_QMARK_(function(a) {
    return function(b) {
      return cljs.core.contains_QMARK_(a, b);
    };
  }(this), b);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return new cljs.core.TransientHashSet(cljs.core._as_transient(this.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, this.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(a, b) {
  return new cljs.core.PersistentHashSet(this.meta, cljs.core._dissoc(this.hash_map, b), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.keys(this.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentHashSet(b, this.hash_map, this.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentHashSet(this.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.hash_map, b, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var a = null, a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentHashSet.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = !0;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function(a, b, c) {
  return new cljs.core.PersistentHashSet(a, b, c);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(a, b) {
  var c = a.length;
  if (c <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    b || cljs.core.aclone(a);
    for (var d = 0, e = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);;) {
      if (d < c) {
        var f = d + 1, e = cljs.core._assoc_BANG_(e, a[d], null), d = f
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(e), null);
      }
    }
  } else {
    for (d = 0, e = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);;) {
      if (d < c) {
        f = d + 1, e = cljs.core._conj_BANG_(e, a[d]), d = f;
      } else {
        return cljs.core._persistent_BANG_(e);
      }
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.TransientHashSet = function(a) {
  this.transient_map = a;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(a, b) {
  this.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(this.transient_map, b, null);
  return this;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(a) {
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(this.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(a, b) {
  this.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(this.transient_map, b);
  return this;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core.count(this.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this, b, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, b, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? c : b;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var a = null, b = function(a, b) {
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, b, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? null : b;
  }, c = function(a, b, c) {
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, b, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? c : b;
  }, a = function(a, e, f) {
    switch(arguments.length) {
      case 2:
        return b.call(this, a, e);
      case 3:
        return c.call(this, a, e, f);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  return a;
}();
cljs.core.TransientHashSet.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, a, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? null : a;
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, a, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? b : a;
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = !0;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function(a) {
  return new cljs.core.TransientHashSet(a);
};
cljs.core.PersistentTreeSet = function(a, b, c) {
  this.meta = a;
  this.tree_map = b;
  this.__hash = c;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.seq(this));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.seq(this));
};
cljs.core.PersistentTreeSet.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this, b, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  a = this.tree_map.entry_at(b);
  return null != a ? a.key : c;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentTreeSet(this.meta, this.tree_map, this.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core.count(this.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return 0 < cljs.core.count(this.tree_map) ? cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(this.tree_map)) : null;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.set_QMARK_(b) && cljs.core.count(this) === cljs.core.count(b) && cljs.core.every_QMARK_(function(a) {
    return function(b) {
      return cljs.core.contains_QMARK_(a, b);
    };
  }(this), b);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return new cljs.core.PersistentTreeSet(this.meta, cljs.core._empty(this.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(a, b) {
  return new cljs.core.PersistentTreeSet(this.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(this.tree_map, b), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.keys(this.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentTreeSet(b, this.tree_map, this.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentTreeSet(this.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.tree_map, b, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var a = null, a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(a, b) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(this.tree_map, b));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(a, b, c) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(this.tree_map, b, c));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(a, b) {
  return b;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(a) {
  return cljs.core._comparator(this.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = !0;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function(a, b, c) {
  return new cljs.core.PersistentTreeSet(a, b, c);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.set_from_indexed_seq = function(a) {
  a = a.arr;
  a: {
    for (var b = 0, c = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);;) {
      if (b < a.length) {
        var d = b + 1, c = c.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, a[b]), b = d
      } else {
        break a;
      }
    }
  }
  return c.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function(a) {
  a = cljs.core.seq(a);
  if (null == a) {
    return cljs.core.PersistentHashSet.EMPTY;
  }
  if (a instanceof cljs.core.IndexedSeq && 0 === a.i) {
    return cljs.core.set_from_indexed_seq(a);
  }
  for (var b = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);;) {
    if (null != a) {
      var c = cljs.core.next(a), b = b.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, a.cljs$core$ISeq$_first$arity$1(null));
      a = c;
    } else {
      return cljs.core.persistent_BANG_(b);
    }
  }
};
cljs.core.hash_set = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
    default:
      return b = new cljs.core.IndexedSeq(b.slice(0), 0), cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(b);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.set(a);
};
cljs.core.hash_set.cljs$lang$applyTo = function(a) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, a);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(a) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.sorted_set_by = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(a), 0), b);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.replace = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(b) {
    var c = cljs.core.find(a, b);
    return cljs.core.truth_(c) ? cljs.core.val(c) : b;
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    var c = cljs.core.count(b);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b) {
      return function(b, c) {
        var d = cljs.core.find(a, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(b, c));
        return cljs.core.truth_(d) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(b, c, cljs.core.second(d)) : b;
      };
    }(c), b, cljs.core.take.cljs$core$IFn$_invoke$arity$2(c, cljs.core.iterate(cljs.core.inc, 0)));
  }
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(b) {
    var c = cljs.core.find(a, b);
    return cljs.core.truth_(c) ? cljs.core.second(c) : b;
  }, b);
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(a) {
    return function(b) {
      return function() {
        var c = null, d = function() {
          return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
        }, e = function(b) {
          return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
        }, f = function(c, d) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(b) : cljs.core.deref.call(null, b), d)) {
            return c;
          }
          cljs.core._vreset_BANG_(b, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(b), d));
          return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d);
        }, c = function(a, b) {
          switch(arguments.length) {
            case 0:
              return d.call(this);
            case 1:
              return e.call(this, a);
            case 2:
              return f.call(this, a, b);
          }
          throw Error("Invalid arity: " + arguments.length);
        };
        c.cljs$core$IFn$_invoke$arity$0 = d;
        c.cljs$core$IFn$_invoke$arity$1 = e;
        c.cljs$core$IFn$_invoke$arity$2 = f;
        return c;
      }();
    }(cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY));
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function c(a, e) {
    return new cljs.core.LazySeq(null, function() {
      return function(a, d) {
        for (;;) {
          var e = a, k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(e, 0, null);
          if (e = cljs.core.seq(e)) {
            if (cljs.core.contains_QMARK_(d, k)) {
              k = cljs.core.rest(e), e = d, a = k, d = e;
            } else {
              return cljs.core.cons(k, c(cljs.core.rest(e), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(d, k)));
            }
          } else {
            return null;
          }
        }
      }.call(null, a, e);
    }, null, null);
  }(a, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function(a) {
  for (var b = cljs.core.PersistentVector.EMPTY;;) {
    if (cljs.core.next(a)) {
      b = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(b, cljs.core.first(a)), a = cljs.core.next(a);
    } else {
      return cljs.core.seq(b);
    }
  }
};
cljs.core.name = function(a) {
  if (null != a && (a.cljs$lang$protocol_mask$partition1$ & 4096 || a.cljs$core$INamed$)) {
    return a.cljs$core$INamed$_name$arity$1(null);
  }
  if ("string" === typeof a) {
    return a;
  }
  throw Error([cljs.core.str("Doesn't support name: "), cljs.core.str(a)].join(""));
};
cljs.core.zipmap = function(a, b) {
  for (var c = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.seq(a), e = cljs.core.seq(b);;) {
    if (d && e) {
      c = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(c, cljs.core.first(d), cljs.core.first(e)), d = cljs.core.next(d), e = cljs.core.next(e);
    } else {
      return cljs.core.persistent_BANG_(c);
    }
  }
};
cljs.core.max_key = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(3), 0), cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return b;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b)) > (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c)) ? b : c;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, c) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(a, b, c);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(a, b, c), d);
};
cljs.core.max_key.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), d = cljs.core.next(d);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(3), 0), cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return b;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b)) < (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c)) ? b : c;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, c) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(a, b, c);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(a, b, c), d);
};
cljs.core.min_key.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), d = cljs.core.next(d);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(a) {
  this.arr = a;
};
cljs.core.ArrayList.prototype.add = function(a) {
  return this.arr.push(a);
};
cljs.core.ArrayList.prototype.size = function() {
  return this.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  return this.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  return 0 === this.arr.length;
};
cljs.core.ArrayList.prototype.toArray = function() {
  return this.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = !0;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function(a) {
  return new cljs.core.ArrayList(a);
};
cljs.core.array_list = function() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          if (!cljs.core.truth_(c.isEmpty())) {
            var d = cljs.core.vec(c.toArray());
            c.clear();
            a = cljs.core.unreduced(b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(a, d) : b.call(null, a, d));
          }
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          c.add(e);
          if (a === c.size()) {
            var f = cljs.core.vec(c.toArray());
            c.clear();
            return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, f) : b.call(null, d, f);
          }
          return d;
        }, d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + arguments.length);
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.array_list());
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(a, a, b);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.LazySeq(null, function() {
    var d = cljs.core.seq(c);
    return d ? cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, d), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(b, d))) : null;
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, e = function(a) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
      }, f = function(c, d) {
        return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d)) ? b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d) : cljs.core.reduced(c);
      }, c = function(a, b) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, a);
          case 2:
            return f.call(this, a, b);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    return c ? cljs.core.truth_(function() {
      var b = cljs.core.first(c);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
    }()) ? cljs.core.cons(cljs.core.first(c), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rest(c))) : null : null;
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function(a, b, c) {
  return function(d) {
    var e = cljs.core._comparator(a);
    d = cljs.core._entry_key(a, d);
    e = e.cljs$core$IFn$_invoke$arity$2 ? e.cljs$core$IFn$_invoke$arity$2(d, c) : e.call(null, d, c);
    return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(e, 0) : b.call(null, e, 0);
  };
};
cljs.core.subseq = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.mk_bound_fn(a, b, c);
  return cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], !0).call(null, b)) ? (a = cljs.core._sorted_seq_from(a, c, !0), cljs.core.truth_(a) ? (b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(a, 0, null), cljs.core.truth_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b)) ? a : cljs.core.next(a)) : null) : cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(d, cljs.core._sorted_seq(a, !0));
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = cljs.core._sorted_seq_from(a, c, !0);
  if (cljs.core.truth_(f)) {
    var g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(a, d, e), cljs.core.truth_(cljs.core.mk_bound_fn(a, b, c).call(null, g)) ? f : cljs.core.next(f));
  }
  return null;
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.mk_bound_fn(a, b, c);
  return cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], !0).call(null, b)) ? (a = cljs.core._sorted_seq_from(a, c, !1), cljs.core.truth_(a) ? (b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(a, 0, null), cljs.core.truth_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b)) ? a : cljs.core.next(a)) : null) : cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(d, cljs.core._sorted_seq(a, !1));
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = cljs.core._sorted_seq_from(a, e, !1);
  if (cljs.core.truth_(f)) {
    var g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(a, b, c), cljs.core.truth_(cljs.core.mk_bound_fn(a, d, e).call(null, g)) ? f : cljs.core.next(f));
  }
  return null;
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(a, b, c) {
  this.i = a;
  this.end = b;
  this.step = c;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  return 0 < this.step ? this.i < this.end : this.i > this.end;
};
cljs.core.RangeIterator.prototype.next = function() {
  var a = this.i;
  this.i += this.step;
  return a;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = !0;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function(a, b, c) {
  return new cljs.core.RangeIterator(a, b, c);
};
cljs.core.Range = function(a, b, c, d, e) {
  this.meta = a;
  this.start = b;
  this.end = c;
  this.step = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Range.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  if (b < cljs.core._count(this)) {
    return this.start + b * this.step;
  }
  if (this.start > this.end && 0 === this.step) {
    return this.start;
  }
  throw Error("Index out of bounds");
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return b < cljs.core._count(this) ? this.start + b * this.step : this.start > this.end && 0 === this.step ? this.start : c;
};
cljs.core.Range.prototype.cljs$core$IIterable$ = !0;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RangeIterator(this.start, this.end, this.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.Range(this.meta, this.start, this.end, this.step, this.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return 0 < this.step ? this.start + this.step < this.end ? new cljs.core.Range(this.meta, this.start + this.step, this.end, this.step, null) : null : this.start + this.step > this.end ? new cljs.core.Range(this.meta, this.start + this.step, this.end, this.step, null) : null;
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core.not(cljs.core._seq(this)) ? 0 : Math.ceil((this.end - this.start) / this.step);
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  for (a = this.start;;) {
    if (0 < this.step ? a < this.end : a > this.end) {
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, a) : b.call(null, c, a);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(c) : cljs.core.deref.call(null, c);
      }
      a += this.step;
    } else {
      return c;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return null == cljs.core._seq(this) ? null : this.start;
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return null != cljs.core._seq(this) ? new cljs.core.Range(this.meta, this.start + this.step, this.end, this.step, null) : cljs.core.List.EMPTY;
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return 0 < this.step ? this.start < this.end ? this : null : 0 > this.step ? this.start > this.end ? this : null : this.start === this.end ? null : this;
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.Range(b, this.start, this.end, this.step, this.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.Range.cljs$lang$type = !0;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Range");
};
cljs.core.__GT_Range = function(a, b, c, d, e) {
  return new cljs.core.Range(a, b, c, d, e);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.range = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, a, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(a, b, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.Range(null, a, b, c, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if ("number" !== typeof a) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var a = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.pr_str.call(null, a);
    }())].join(""));
  }
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          var f = cljs.core._vreset_BANG_(c, cljs.core._deref(c) + 1);
          return 0 === cljs.core.rem(f, a) ? b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e) : d;
        }, d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + arguments.length);
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_(-1));
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if ("number" !== typeof a) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var a = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.pr_str.call(null, a);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    return c ? cljs.core.cons(cljs.core.first(c), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(a, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(a, c))) : null;
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function(a, b) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(a, b), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(a, b)], null);
};
cljs.core.partition_by = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    var c = cljs.core.array_list(), d = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(c, d) {
      return function() {
        var g = null, h = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, k = function(a) {
          if (!cljs.core.truth_(c.isEmpty())) {
            var d = cljs.core.vec(c.toArray());
            c.clear();
            a = cljs.core.unreduced(b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(a, d) : b.call(null, a, d));
          }
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, m = function(g, h) {
          var k = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(d) : cljs.core.deref.call(null, d), m = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h);
          cljs.core.vreset_BANG_(d, m);
          if (cljs.core.keyword_identical_QMARK_(k, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(m, k)) {
            return c.add(h), g;
          }
          k = cljs.core.vec(c.toArray());
          c.clear();
          k = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(g, k) : b.call(null, g, k);
          cljs.core.reduced_QMARK_(k) || c.add(h);
          return k;
        }, g = function(a, b) {
          switch(arguments.length) {
            case 0:
              return h.call(this);
            case 1:
              return k.call(this, a);
            case 2:
              return m.call(this, a, b);
          }
          throw Error("Invalid arity: " + arguments.length);
        };
        g.cljs$core$IFn$_invoke$arity$0 = h;
        g.cljs$core$IFn$_invoke$arity$1 = k;
        g.cljs$core$IFn$_invoke$arity$2 = m;
        return g;
      }();
    }(c, d);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      var d = cljs.core.first(c), e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d), d = cljs.core.cons(d, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(b, c, d, e) {
        return function(b) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c, a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b));
        };
      }(d, e, c, c), cljs.core.next(c)));
      return cljs.core.cons(d, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(a, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(d), c))));
    }
    return null;
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function(a) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, c) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(a, c, cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, c, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), a));
};
cljs.core.reductions = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    return c ? cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(a, cljs.core.first(c), cljs.core.rest(c)) : cljs.core._conj(cljs.core.List.EMPTY, a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null));
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.cons(b, new cljs.core.LazySeq(null, function() {
    var d = cljs.core.seq(c);
    return d ? cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(a, function() {
      var c = cljs.core.first(d);
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    }(), cljs.core.rest(d)) : null;
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(3), 0), cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function() {
    var b = null, c = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null)], null);
    }, d = function(b) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b)], null);
    }, e = function(b, c) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c)], null);
    }, f = function(b, c, d) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d)], null);
    }, g = function() {
      var b = function(b, c, d, e) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e)], null);
      }, c = function(a, c, d, e) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0);
        }
        return b.call(this, a, c, d, f);
      };
      c.cljs$lang$maxFixedArity = 3;
      c.cljs$lang$applyTo = function(a) {
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return b(c, d, e, a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }(), b = function(a, b, m, l) {
      switch(arguments.length) {
        case 0:
          return c.call(this);
        case 1:
          return d.call(this, a);
        case 2:
          return e.call(this, a, b);
        case 3:
          return f.call(this, a, b, m);
        default:
          var n = null;
          if (3 < arguments.length) {
            for (var n = 0, p = Array(arguments.length - 3);n < p.length;) {
              p[n] = arguments[n + 3], ++n;
            }
            n = new cljs.core.IndexedSeq(p, 0);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(a, b, m, n);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    b.cljs$lang$maxFixedArity = 3;
    b.cljs$lang$applyTo = g.cljs$lang$applyTo;
    b.cljs$core$IFn$_invoke$arity$0 = c;
    b.cljs$core$IFn$_invoke$arity$1 = d;
    b.cljs$core$IFn$_invoke$arity$2 = e;
    b.cljs$core$IFn$_invoke$arity$3 = f;
    b.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return b;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null)], null);
    }, e = function(c) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c), b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c)], null);
    }, f = function(c, d) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d), b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d)], null);
    }, g = function(c, d, e) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(c, d, e) : a.call(null, c, d, e), b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, d, e) : b.call(null, c, d, e)], null);
    }, h = function() {
      var c = function(c, d, e, f) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, c, d, e, f), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f)], null);
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }(), c = function(a, b, c, n) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var p = null;
          if (3 < arguments.length) {
            for (var p = 0, q = Array(arguments.length - 3);p < q.length;) {
              q[p] = arguments[p + 3], ++p;
            }
            p = new cljs.core.IndexedSeq(q, 0);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, p);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = h.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = d;
    c.cljs$core$IFn$_invoke$arity$1 = e;
    c.cljs$core$IFn$_invoke$arity$2 = f;
    c.cljs$core$IFn$_invoke$arity$3 = g;
    c.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null), c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null)], null);
    }, f = function(d) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d), b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d)], null);
    }, g = function(d, e) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(d, e) : a.call(null, d, e), b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e), c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(d, e) : c.call(null, d, e)], null);
    }, h = function(d, e, f) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(d, e, f) : a.call(null, d, e, f), b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(d, e, f) : b.call(null, d, e, f), c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(d, e, f) : c.call(null, d, e, f)], null);
    }, k = function() {
      var d = function(d, e, f, g) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, d, e, f, g), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, d, e, f, g), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(c, d, e, f, g)], null);
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }(), d = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return e.call(this);
        case 1:
          return f.call(this, a);
        case 2:
          return g.call(this, a, b);
        case 3:
          return h.call(this, a, b, c);
        default:
          var q = null;
          if (3 < arguments.length) {
            for (var q = 0, r = Array(arguments.length - 3);q < r.length;) {
              r[q] = arguments[q + 3], ++q;
            }
            q = new cljs.core.IndexedSeq(r, 0);
          }
          return k.cljs$core$IFn$_invoke$arity$variadic(a, b, c, q);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = k.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = e;
    d.cljs$core$IFn$_invoke$arity$1 = f;
    d.cljs$core$IFn$_invoke$arity$2 = g;
    d.cljs$core$IFn$_invoke$arity$3 = h;
    d.cljs$core$IFn$_invoke$arity$variadic = k.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return function(a) {
    return function() {
      var b = null, c = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a) {
          return function(a, b) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null));
          };
        }(a), cljs.core.PersistentVector.EMPTY, a);
      }, d = function(b) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a) {
          return function(a, c) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(b) : c.call(null, b));
          };
        }(a), cljs.core.PersistentVector.EMPTY, a);
      }, k = function(b, c) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a) {
          return function(a, d) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d.cljs$core$IFn$_invoke$arity$2 ? d.cljs$core$IFn$_invoke$arity$2(b, c) : d.call(null, b, c));
          };
        }(a), cljs.core.PersistentVector.EMPTY, a);
      }, m = function(b, c, d) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a) {
          return function(a, e) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, e.cljs$core$IFn$_invoke$arity$3 ? e.cljs$core$IFn$_invoke$arity$3(b, c, d) : e.call(null, b, c, d));
          };
        }(a), cljs.core.PersistentVector.EMPTY, a);
      }, l = function() {
        var b = function(b, c, d, f) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a) {
            return function(a, e) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(e, b, c, d, f));
            };
          }(a), cljs.core.PersistentVector.EMPTY, a);
        }, c = function(a, c, d, e) {
          var f = null;
          if (3 < arguments.length) {
            for (var f = 0, g = Array(arguments.length - 3);f < g.length;) {
              g[f] = arguments[f + 3], ++f;
            }
            f = new cljs.core.IndexedSeq(g, 0);
          }
          return b.call(this, a, c, d, f);
        };
        c.cljs$lang$maxFixedArity = 3;
        c.cljs$lang$applyTo = function(a) {
          var c = cljs.core.first(a);
          a = cljs.core.next(a);
          var d = cljs.core.first(a);
          a = cljs.core.next(a);
          var e = cljs.core.first(a);
          a = cljs.core.rest(a);
          return b(c, d, e, a);
        };
        c.cljs$core$IFn$_invoke$arity$variadic = b;
        return c;
      }(), b = function(a, b, e, f) {
        switch(arguments.length) {
          case 0:
            return c.call(this);
          case 1:
            return d.call(this, a);
          case 2:
            return k.call(this, a, b);
          case 3:
            return m.call(this, a, b, e);
          default:
            var t = null;
            if (3 < arguments.length) {
              for (var t = 0, u = Array(arguments.length - 3);t < u.length;) {
                u[t] = arguments[t + 3], ++t;
              }
              t = new cljs.core.IndexedSeq(u, 0);
            }
            return l.cljs$core$IFn$_invoke$arity$variadic(a, b, e, t);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      b.cljs$lang$maxFixedArity = 3;
      b.cljs$lang$applyTo = l.cljs$lang$applyTo;
      b.cljs$core$IFn$_invoke$arity$0 = c;
      b.cljs$core$IFn$_invoke$arity$1 = d;
      b.cljs$core$IFn$_invoke$arity$2 = k;
      b.cljs$core$IFn$_invoke$arity$3 = m;
      b.cljs$core$IFn$_invoke$arity$variadic = l.cljs$core$IFn$_invoke$arity$variadic;
      return b;
    }();
  }(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(a, b, c, d));
};
cljs.core.juxt.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c), c = cljs.core.first(d), d = cljs.core.next(d);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(a) {
  for (;;) {
    if (cljs.core.seq(a)) {
      a = cljs.core.next(a);
    } else {
      return null;
    }
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  for (;;) {
    if (cljs.core.seq(b) && 0 < a) {
      var c = a - 1, d = cljs.core.next(b);
      a = c;
      b = d;
    } else {
      return null;
    }
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(a) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(a);
  return a;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(a, b);
  return b;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function(a) {
  return a instanceof RegExp;
};
cljs.core.re_matches = function(a, b) {
  if ("string" === typeof b) {
    var c = a.exec(b);
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(c), b) ? 1 === cljs.core.count(c) ? cljs.core.first(c) : cljs.core.vec(c) : null;
  }
  throw new TypeError("re-matches must match against a string.");
};
cljs.core.re_find = function(a, b) {
  if ("string" === typeof b) {
    var c = a.exec(b);
    return null == c ? null : 1 === cljs.core.count(c) ? cljs.core.first(c) : cljs.core.vec(c);
  }
  throw new TypeError("re-find must match against a string.");
};
cljs.core.re_seq = function cljs$core$re_seq(b, c) {
  var d = cljs.core.re_find(b, c), e = c.search(b), f = cljs.core.coll_QMARK_(d) ? cljs.core.first(d) : d, g = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(c, e + cljs.core.count(f));
  return cljs.core.truth_(d) ? new cljs.core.LazySeq(null, function(c, d, e, f) {
    return function() {
      return cljs.core.cons(c, cljs.core.seq(f) ? cljs$core$re_seq(b, f) : null);
    };
  }(d, e, f, g), null, null) : null;
};
cljs.core.re_pattern = function(a) {
  if (a instanceof RegExp) {
    return a;
  }
  var b = cljs.core.re_find(/^\(\?([idmsux]*)\)/, a), c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(b, 0, null), b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(b, 1, null);
  a = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(a, cljs.core.count(c));
  c = RegExp;
  b = cljs.core.truth_(b) ? b : "";
  return new c(a, b);
};
cljs.core.pr_sequential_writer = function(a, b, c, d, e, f, g) {
  var h = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = null == cljs.core._STAR_print_level_STAR_ ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (null != cljs.core._STAR_print_level_STAR_ && 0 > cljs.core._STAR_print_level_STAR_) {
      return cljs.core._write(a, "#");
    }
    cljs.core._write(a, c);
    if (0 === (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(f)) {
      cljs.core.seq(g) && cljs.core._write(a, function() {
        var a = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(f);
        return cljs.core.truth_(a) ? a : "...";
      }());
    } else {
      if (cljs.core.seq(g)) {
        var k = cljs.core.first(g);
        b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(k, a, f) : b.call(null, k, a, f);
      }
      for (var m = cljs.core.next(g), l = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(f) - 1;;) {
        if (!m || null != l && 0 === l) {
          cljs.core.seq(m) && 0 === l && (cljs.core._write(a, d), cljs.core._write(a, function() {
            var a = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(f);
            return cljs.core.truth_(a) ? a : "...";
          }()));
          break;
        } else {
          cljs.core._write(a, d);
          var n = cljs.core.first(m);
          c = a;
          g = f;
          b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(n, c, g) : b.call(null, n, c, g);
          var p = cljs.core.next(m);
          c = l - 1;
          m = p;
          l = c;
        }
      }
    }
    return cljs.core._write(a, e);
  } finally {
    cljs.core._STAR_print_level_STAR_ = h;
  }
};
cljs.core.write_all = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  for (var c = cljs.core.seq(b), d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = d.cljs$core$IIndexed$_nth$arity$2(null, f);
      cljs.core._write(a, g);
      f += 1;
    } else {
      if (c = cljs.core.seq(c)) {
        d = c, cljs.core.chunked_seq_QMARK_(d) ? (c = cljs.core.chunk_first(d), e = cljs.core.chunk_rest(d), d = c, g = cljs.core.count(c), c = e, e = g) : (g = cljs.core.first(d), cljs.core._write(a, g), c = cljs.core.next(d), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.string_print = function(a) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(a) : cljs.core._STAR_print_fn_STAR_.call(null, a);
  return null;
};
cljs.core.flush = function() {
  return null;
};
cljs.core.char_escapes = function() {
  return {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
}();
cljs.core.quote_string = function(a) {
  return [cljs.core.str('"'), cljs.core.str(a.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(a) {
    return cljs.core.char_escapes[a];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_map;
cljs.core.print_meta_QMARK_ = function(a, b) {
  var c = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  return c ? (c = null != b ? b.cljs$lang$protocol_mask$partition0$ & 131072 || b.cljs$core$IMeta$ ? !0 : !1 : !1) ? null != cljs.core.meta(b) : c : c;
};
cljs.core.pr_writer_impl = function(a, b, c) {
  if (null == a) {
    return cljs.core._write(b, "nil");
  }
  if (cljs.core.print_meta_QMARK_(c, a)) {
    cljs.core._write(b, "^");
    var d = cljs.core.meta(a);
    cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(d, b, c) : cljs.core.pr_writer.call(null, d, b, c);
    cljs.core._write(b, " ");
  }
  if (a.cljs$lang$type) {
    return a.cljs$lang$ctorPrWriter(a, b, c);
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 2147483648 || a.cljs$core$IPrintWithWriter$)) {
    return a.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, b, c);
  }
  if (!0 === a || !1 === a || "number" === typeof a) {
    return cljs.core._write(b, "" + cljs.core.str(a));
  }
  if (cljs.core.object_QMARK_(a)) {
    cljs.core._write(b, "#js ");
    var d = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(b) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(b), a[b]], null);
    }, cljs.core.js_keys(a)), e = cljs.core.pr_writer;
    return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(d, e, b, c) : cljs.core.print_map.call(null, d, e, b, c);
  }
  if (cljs.core.array_QMARK_(a)) {
    return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "#js [", " ", "]", c, a);
  }
  if (goog.isString(a)) {
    return cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(c)) ? cljs.core._write(b, cljs.core.quote_string(a)) : cljs.core._write(b, a);
  }
  if (goog.isFunction(a)) {
    var f = a.name;
    c = cljs.core.truth_(function() {
      var a = null == f;
      return a ? a : goog.string.isEmpty(f);
    }()) ? "Function" : f;
    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.array_seq(["#object[", c, ' "', "" + cljs.core.str(a), '"]'], 0));
  }
  if (a instanceof Date) {
    return c = function(a, b) {
      for (var c = "" + cljs.core.str(a);;) {
        if (cljs.core.count(c) < b) {
          c = [cljs.core.str("0"), cljs.core.str(c)].join("");
        } else {
          return c;
        }
      }
    }, cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.array_seq(['#inst "', "" + cljs.core.str(a.getUTCFullYear()), "-", c(a.getUTCMonth() + 1, 2), "-", c(a.getUTCDate(), 2), "T", c(a.getUTCHours(), 2), ":", c(a.getUTCMinutes(), 2), ":", c(a.getUTCSeconds(), 2), ".", c(a.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
  }
  if (cljs.core.regexp_QMARK_(a)) {
    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.array_seq(['#"', a.source, '"'], 0));
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 2147483648 || a.cljs$core$IPrintWithWriter$)) {
    return cljs.core._pr_writer(a, b, c);
  }
  if (cljs.core.truth_(a.constructor.cljs$lang$ctorStr)) {
    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.array_seq(["#object[", a.constructor.cljs$lang$ctorStr.replace(RegExp("/", "g"), "."), "]"], 0));
  }
  f = a.constructor.name;
  c = cljs.core.truth_(function() {
    var a = null == f;
    return a ? a : goog.string.isEmpty(f);
  }()) ? "Object" : f;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.array_seq(["#object[", c, " ", "" + cljs.core.str(a), "]"], 0));
};
cljs.core.pr_writer = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(c);
  return cljs.core.truth_(d) ? (c = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl), d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c)) : cljs.core.pr_writer_impl(a, b, c);
};
cljs.core.pr_seq_writer = function(a, b, c) {
  cljs.core.pr_writer(cljs.core.first(a), b, c);
  a = cljs.core.seq(cljs.core.next(a));
  for (var d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = d.cljs$core$IIndexed$_nth$arity$2(null, f);
      cljs.core._write(b, " ");
      cljs.core.pr_writer(g, b, c);
      f += 1;
    } else {
      if (a = cljs.core.seq(a)) {
        d = a, cljs.core.chunked_seq_QMARK_(d) ? (a = cljs.core.chunk_first(d), e = cljs.core.chunk_rest(d), d = a, g = cljs.core.count(a), a = e, e = g) : (g = cljs.core.first(d), cljs.core._write(b, " "), cljs.core.pr_writer(g, b, c), a = cljs.core.next(d), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_sb_with_opts = function(a, b) {
  var c = new goog.string.StringBuffer, d = new cljs.core.StringBufferWriter(c);
  cljs.core.pr_seq_writer(a, d, b);
  d.cljs$core$IWriter$_flush$arity$1(null);
  return c;
};
cljs.core.pr_str_with_opts = function(a, b) {
  return cljs.core.empty_QMARK_(a) ? "" : "" + cljs.core.str(cljs.core.pr_sb_with_opts(a, b));
};
cljs.core.prn_str_with_opts = function(a, b) {
  if (cljs.core.empty_QMARK_(a)) {
    return "\n";
  }
  var c = cljs.core.pr_sb_with_opts(a, b);
  c.append("\n");
  return "" + cljs.core.str(c);
};
cljs.core.pr_with_opts = function(a, b) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(a, b));
};
cljs.core.newline = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(a) {
  cljs.core.string_print("\n");
  return cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939))) ? cljs.core.flush() : null;
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.pr_str_with_opts(a, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(a) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.prn_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.prn_str_with_opts(a, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(a) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.pr = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.pr_with_opts(a, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(a) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.print = function() {
  var a = function(a) {
    return cljs.core.pr_with_opts(a, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), !1));
  }, b = function(b) {
    var d = null;
    if (0 < arguments.length) {
      for (var d = 0, e = Array(arguments.length - 0);d < e.length;) {
        e[d] = arguments[d + 0], ++d;
      }
      d = new cljs.core.IndexedSeq(e, 0);
    }
    return a.call(this, d);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(b) {
    b = cljs.core.seq(b);
    return a(b);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}();
cljs.core.print_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.pr_str_with_opts(a, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), !1));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(a) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.println = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  cljs.core.pr_with_opts(a, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), !1));
  return cljs.core.truth_(cljs.core._STAR_print_newline_STAR_) ? cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts()) : null;
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(a) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.println_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.prn_str_with_opts(a, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), !1));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(a) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.prn = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  cljs.core.pr_with_opts(a, cljs.core.pr_opts());
  return cljs.core.truth_(cljs.core._STAR_print_newline_STAR_) ? cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts()) : null;
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(a) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.print_map = function(a, b, c, d) {
  return cljs.core.pr_sequential_writer(c, function(a, c, d) {
    var h = cljs.core.key(a);
    b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(h, c, d) : b.call(null, h, c, d);
    cljs.core._write(c, " ");
    a = cljs.core.val(a);
    return b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(a, c, d) : b.call(null, a, c, d);
  }, "{", ", ", "}", d, cljs.core.seq(a));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write(b, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), this.state], null), b, c);
  return cljs.core._write(b, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write(b, "#'");
  return cljs.core.pr_writer(this.sym, b, c);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "#{", " ", "}", c, this);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.print_map(this, cljs.core.pr_writer, b, c);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.print_map(this, cljs.core.pr_writer, b, c);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.print_map(this, cljs.core.pr_writer, b, c);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "#{", " ", "}", c, this);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write(b, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), this.state], null), b, c);
  return cljs.core._write(b, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write(b, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "#queue [", " ", "]", c, cljs.core.seq(this));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.print_map(this, cljs.core.pr_writer, b, c);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = !0;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (b instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(this, b);
  }
  throw Error([cljs.core.str("Cannot compare "), cljs.core.str(this), cljs.core.str(" to "), cljs.core.str(b)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = !0;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (b instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(this, b);
  }
  throw Error([cljs.core.str("Cannot compare "), cljs.core.str(this), cljs.core.str(" to "), cljs.core.str(b)].join(""));
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = !0;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this, b);
  }
  throw Error([cljs.core.str("Cannot compare "), cljs.core.str(this), cljs.core.str(" to "), cljs.core.str(b)].join(""));
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = !0;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this, b);
  }
  throw Error([cljs.core.str("Cannot compare "), cljs.core.str(this), cljs.core.str(" to "), cljs.core.str(b)].join(""));
};
cljs.core.alter_meta_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return a.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(b, a.meta, c);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.reset_meta_BANG_ = function(a, b) {
  return a.meta = b;
};
cljs.core.add_watch = function(a, b, c) {
  cljs.core._add_watch(a, b, c);
  return a;
};
cljs.core.remove_watch = function(a, b) {
  cljs.core._remove_watch(a, b);
  return a;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(a) {
  null == cljs.core.gensym_counter && (cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0));
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(a), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(a, b) {
  this.f = a;
  this.value = b;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  cljs.core.truth_(this.f) && (this.value = this.f.cljs$core$IFn$_invoke$arity$0 ? this.f.cljs$core$IFn$_invoke$arity$0() : this.f.call(null), this.f = null);
  return this.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(a) {
  return cljs.core.not(this.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Delay.cljs$lang$type = !0;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function(a, b) {
  return new cljs.core.Delay(a, b);
};
cljs.core.delay_QMARK_ = function(a) {
  return a instanceof cljs.core.Delay;
};
cljs.core.force = function(a) {
  return cljs.core.delay_QMARK_(a) ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.deref.call(null, a) : a;
};
cljs.core.realized_QMARK_ = function(a) {
  return cljs.core._realized_QMARK_(a);
};
cljs.core.preserving_reduced = function(a) {
  return function(b, c) {
    var d = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    return cljs.core.reduced_QMARK_(d) ? cljs.core.reduced(d) : d;
  };
};
cljs.core.cat = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
      }, e = function(b) {
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
      }, f = function(a, c) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(b, a, c);
      }, c = function(a, b) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, a);
          case 2:
            return f.call(this, a, b);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  }(cljs.core.preserving_reduced(a));
};
cljs.core.dedupe = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(a) {
    return function(b) {
      return function() {
        var c = null, d = function() {
          return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
        }, e = function(b) {
          return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
        }, f = function(c, d) {
          var e = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(b) : cljs.core.deref.call(null, b);
          cljs.core.vreset_BANG_(b, d);
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(e, d) ? c : a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d);
        }, c = function(a, b) {
          switch(arguments.length) {
            case 0:
              return d.call(this);
            case 1:
              return e.call(this, a);
            case 2:
              return f.call(this, a, b);
          }
          throw Error("Invalid arity: " + arguments.length);
        };
        c.cljs$core$IFn$_invoke$arity$0 = d;
        c.cljs$core$IFn$_invoke$arity$1 = e;
        c.cljs$core$IFn$_invoke$arity$2 = f;
        return c;
      }();
    }(cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)));
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), a);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.rand;
cljs.core.random_sample = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(b) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < a;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(b) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < a;
  }, b);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(a, b) {
  this.xform = a;
  this.coll = b;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(this.xform, this.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(this.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(b), this.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(this.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(b), c, this.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = !0;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function(a, b) {
  return new cljs.core.Eduction(a, b);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.eduction = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(a)), cljs.core.last(a));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(a) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.run_BANG_ = function(a, b) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, d) {
    return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
  }, null, b);
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function(a) {
  if (null != a && null != a.cljs$core$IEncodeJS$_clj__GT_js$arity$1) {
    return a.cljs$core$IEncodeJS$_clj__GT_js$arity$1(a);
  }
  var b = cljs.core._clj__GT_js[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._clj__GT_js._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", a);
};
cljs.core._key__GT_js = function(a) {
  if (null != a && null != a.cljs$core$IEncodeJS$_key__GT_js$arity$1) {
    return a.cljs$core$IEncodeJS$_key__GT_js$arity$1(a);
  }
  var b = cljs.core._key__GT_js[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._key__GT_js._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", a);
};
cljs.core.clj__GT_js;
cljs.core.key__GT_js = function(a) {
  return (null != a ? a.cljs$core$IEncodeJS$ || (a.cljs$lang$protocol_mask$partition$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, a)) ? cljs.core._clj__GT_js(a) : "string" === typeof a || "number" === typeof a || a instanceof cljs.core.Keyword || a instanceof cljs.core.Symbol ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.clj__GT_js.call(null, a) : 
  cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([a], 0));
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(b) {
  if (null == b) {
    return null;
  }
  if (null != b ? b.cljs$core$IEncodeJS$ || (b.cljs$lang$protocol_mask$partition$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, b)) : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, b)) {
    return cljs.core._clj__GT_js(b);
  }
  if (b instanceof cljs.core.Keyword) {
    return cljs.core.name(b);
  }
  if (b instanceof cljs.core.Symbol) {
    return "" + cljs.core.str(b);
  }
  if (cljs.core.map_QMARK_(b)) {
    var c = {};
    b = cljs.core.seq(b);
    for (var d = null, e = 0, f = 0;;) {
      if (f < e) {
        var g = d.cljs$core$IIndexed$_nth$arity$2(null, f), h = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(g, 0, null), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(g, 1, null);
        c[cljs.core.key__GT_js(h)] = cljs$core$clj__GT_js(g);
        f += 1;
      } else {
        if (b = cljs.core.seq(b)) {
          cljs.core.chunked_seq_QMARK_(b) ? (e = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), d = e, e = cljs.core.count(e)) : (e = cljs.core.first(b), d = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(e, 0, null), e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(e, 1, null), c[cljs.core.key__GT_js(d)] = cljs$core$clj__GT_js(e), b = cljs.core.next(b), d = null, e = 0), f = 0;
        } else {
          break;
        }
      }
    }
    return c;
  }
  if (cljs.core.coll_QMARK_(b)) {
    c = [];
    b = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, b));
    d = null;
    for (f = e = 0;;) {
      if (f < e) {
        h = d.cljs$core$IIndexed$_nth$arity$2(null, f), c.push(h), f += 1;
      } else {
        if (b = cljs.core.seq(b)) {
          d = b, cljs.core.chunked_seq_QMARK_(d) ? (b = cljs.core.chunk_first(d), f = cljs.core.chunk_rest(d), d = b, e = cljs.core.count(b), b = f) : (b = cljs.core.first(d), c.push(b), b = cljs.core.next(d), d = null, e = 0), f = 0;
        } else {
          break;
        }
      }
    }
    return c;
  }
  return b;
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function(a, b) {
  if (null != a && null != a.cljs$core$IEncodeClojure$_js__GT_clj$arity$2) {
    return a.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(a, b);
  }
  var c = cljs.core._js__GT_clj[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._js__GT_clj._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", a);
};
cljs.core.js__GT_clj = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(1), 0), cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(a, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), !1], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || b.cljs$core$ISeq$) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, b) : b, d = cljs.core.get.cljs$core$IFn$_invoke$arity$2(c, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252)), e = cljs.core.truth_(d) ? cljs.core.keyword : cljs.core.str;
  return function(a, c, d, e) {
    return function l(n) {
      return (null != n ? n.cljs$core$IEncodeClojure$ || (n.cljs$lang$protocol_mask$partition$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, n)) : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, n)) ? cljs.core._js__GT_clj(n, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, b)) : cljs.core.seq_QMARK_(n) ? cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(l, n)) : cljs.core.coll_QMARK_(n) ? cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(n), 
      cljs.core.map.cljs$core$IFn$_invoke$arity$2(l, n)) : cljs.core.array_QMARK_(n) ? cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(l, n)) : cljs.core.type(n) === Object ? cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
        return function(a, b, c, d) {
          return function v(e) {
            return new cljs.core.LazySeq(null, function(a, b, c, d) {
              return function() {
                for (;;) {
                  var a = cljs.core.seq(e);
                  if (a) {
                    if (cljs.core.chunked_seq_QMARK_(a)) {
                      var b = cljs.core.chunk_first(a), c = cljs.core.count(b), f = cljs.core.chunk_buffer(c);
                      a: {
                        for (var g = 0;;) {
                          if (g < c) {
                            var h = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, g);
                            cljs.core.chunk_append(f, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(h) : d.call(null, h), l(n[h])], null));
                            g += 1;
                          } else {
                            b = !0;
                            break a;
                          }
                        }
                      }
                      return b ? cljs.core.chunk_cons(cljs.core.chunk(f), v(cljs.core.chunk_rest(a))) : cljs.core.chunk_cons(cljs.core.chunk(f), null);
                    }
                    f = cljs.core.first(a);
                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(f) : d.call(null, f), l(n[f])], null), v(cljs.core.rest(a)));
                  }
                  return null;
                }
              };
            }(a, b, c, d), null, null);
          };
        }(a, c, d, e)(cljs.core.js_keys(n));
      }()) : n;
    };
  }(b, c, d, e)(a);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function(a) {
  return function(b) {
    return function() {
      var c = function(c) {
        var d = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(b) : cljs.core.deref.call(null, b), c, cljs.core.lookup_sentinel);
        d === cljs.core.lookup_sentinel && (d = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(a, c), cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(b, cljs.core.assoc, c, d));
        return d;
      }, d = function(a) {
        var b = null;
        if (0 < arguments.length) {
          for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
            d[b] = arguments[b + 0], ++b;
          }
          b = new cljs.core.IndexedSeq(d, 0);
        }
        return c.call(this, b);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return c(a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
  }(function() {
    var a = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.atom.call(null, a);
  }());
};
cljs.core.trampoline = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(1), 0), cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(a) {
  for (;;) {
    if (a = a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), !cljs.core.fn_QMARK_(a)) {
      return a;
    }
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(a, b);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return Math.random() * a;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function(a) {
  return Math.floor(Math.random() * a);
};
cljs.core.rand_nth = function(a) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rand_int(cljs.core.count(a)));
};
cljs.core.group_by = function(a, b) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, d) {
    var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(b, e, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, e, cljs.core.PersistentVector.EMPTY), d));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), b));
};
cljs.core.make_hierarchy = function() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function() {
  if (null == cljs.core._global_hierarchy) {
    var a = cljs.core, b;
    b = cljs.core.make_hierarchy();
    b = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(b) : cljs.core.atom.call(null, b);
    a._global_hierarchy = b;
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), a, b);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.isa_QMARK_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var a = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.deref.call(null, a);
  }(), a, b);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(b, c);
  if (!d && !(d = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(a).call(null, b), c)) && (d = cljs.core.vector_QMARK_(c)) && (d = cljs.core.vector_QMARK_(b))) {
    if (d = cljs.core.count(c) === cljs.core.count(b)) {
      for (var d = !0, e = 0;;) {
        if (d && e !== cljs.core.count(c)) {
          d = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(a, b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e), c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(e) : c.call(null, e)), e += 1;
        } else {
          return d;
        }
      }
    } else {
      return d;
    }
  } else {
    return d;
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var a = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.deref.call(null, a);
  }(), a);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(a), b));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var a = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.deref.call(null, a);
  }(), a);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(a), b));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var a = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.deref.call(null, a);
  }(), a);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(a), b));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (!cljs.core.truth_(cljs.core.namespace(b))) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([a, b], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (!cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(b, c)) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var d = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(a), e = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(a), f = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(a), g = function(a, b, c) {
    return function(d, e, f, g, r) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, b, c) {
        return function(a, b) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(r, b, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(g, r.cljs$core$IFn$_invoke$arity$1 ? r.cljs$core$IFn$_invoke$arity$1(g) : r.call(null, g))));
        };
      }(a, b, c), d, cljs.core.cons(e, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(e) : f.call(null, e)));
    };
  }(d, e, f);
  if (cljs.core.contains_QMARK_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b), c)) {
    b = null;
  } else {
    if (cljs.core.contains_QMARK_(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(b) : f.call(null, b), c)) {
      throw Error([cljs.core.str(b), cljs.core.str("already has"), cljs.core.str(c), cljs.core.str("as ancestor")].join(""));
    }
    if (cljs.core.contains_QMARK_(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(c) : f.call(null, c), b)) {
      throw Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(c), cljs.core.str("has"), cljs.core.str(b), cljs.core.str("as ancestor")].join(""));
    }
    b = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(a), b, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(d, b, cljs.core.PersistentHashSet.EMPTY), c)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), g((new cljs.core.Keyword(null, "ancestors", 
    "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(a), b, e, c, f), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), g((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(a), c, f, b, e)], null);
  }
  return cljs.core.truth_(b) ? b : a;
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([a, b], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(a), e = cljs.core.truth_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b), c) : cljs.core.PersistentHashSet.EMPTY, f = cljs.core.truth_(cljs.core.not_empty(e)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d, b, e) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(d, 
  b), g = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(a, b, c) {
    return function(a) {
      return cljs.core.cons(cljs.core.first(a), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(a), cljs.core.second(a)));
    };
  }(d, e, f), cljs.core.seq(f)));
  return cljs.core.contains_QMARK_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b), c) ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, b, c, d) {
    return function(a, b) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, a, b);
    };
  }(d, e, f, g), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, g)) : a;
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function(a, b, c, d) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, function(a) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(b) : cljs.core.deref.call(null, b);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(c, function(a) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(d) : cljs.core.deref.call(null, d);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(b, c, d) {
  var e = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(d) : cljs.core.deref.call(null, d)).call(null, b), e = cljs.core.truth_(cljs.core.truth_(e) ? e.cljs$core$IFn$_invoke$arity$1 ? e.cljs$core$IFn$_invoke$arity$1(c) : e.call(null, c) : e) ? !0 : null;
  if (cljs.core.truth_(e)) {
    return e;
  }
  e = function() {
    for (var e = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(c);;) {
      if (0 < cljs.core.count(e)) {
        cljs.core.truth_(cljs$core$prefers_STAR_(b, cljs.core.first(e), d)), e = cljs.core.rest(e);
      } else {
        return null;
      }
    }
  }();
  if (cljs.core.truth_(e)) {
    return e;
  }
  e = function() {
    for (var e = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(b);;) {
      if (0 < cljs.core.count(e)) {
        cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(e), c, d)), e = cljs.core.rest(e);
      } else {
        return null;
      }
    }
  }();
  return cljs.core.truth_(e) ? e : !1;
};
cljs.core.dominates = function(a, b, c) {
  c = cljs.core.prefers_STAR_(a, b, c);
  return cljs.core.truth_(c) ? c : cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(b, c, d, e, f, g, h) {
  var k = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(e, g) {
    var h = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(g, 0, null);
    cljs.core.nth.cljs$core$IFn$_invoke$arity$3(g, 1, null);
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(d) : cljs.core.deref.call(null, d), c, h)) {
      var k = cljs.core.truth_(function() {
        var b = null == e;
        return b ? b : cljs.core.dominates(h, cljs.core.first(e), f);
      }()) ? g : e;
      if (!cljs.core.truth_(cljs.core.dominates(cljs.core.first(k), h, f))) {
        throw Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(b), cljs.core.str("' match dispatch value: "), cljs.core.str(c), cljs.core.str(" -\x3e "), cljs.core.str(h), cljs.core.str(" and "), cljs.core.str(cljs.core.first(k)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return k;
    }
    return e;
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.deref.call(null, e));
  if (cljs.core.truth_(k)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(h) : cljs.core.deref.call(null, h), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(d) : cljs.core.deref.call(null, d))) {
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(g, cljs.core.assoc, c, cljs.core.second(k)), cljs.core.second(k);
    }
    cljs.core.reset_cache(g, e, h, d);
    return cljs$core$find_and_cache_best_method(b, c, d, e, f, g, h);
  }
  return null;
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function(a) {
  if (null != a && null != a.cljs$core$IMultiFn$_reset$arity$1) {
    return a.cljs$core$IMultiFn$_reset$arity$1(a);
  }
  var b = cljs.core._reset[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._reset._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-reset", a);
};
cljs.core._add_method = function(a, b, c) {
  if (null != a && null != a.cljs$core$IMultiFn$_add_method$arity$3) {
    return a.cljs$core$IMultiFn$_add_method$arity$3(a, b, c);
  }
  var d = cljs.core._add_method[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._add_method._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IMultiFn.-add-method", a);
};
cljs.core._remove_method = function(a, b) {
  if (null != a && null != a.cljs$core$IMultiFn$_remove_method$arity$2) {
    return a.cljs$core$IMultiFn$_remove_method$arity$2(a, b);
  }
  var c = cljs.core._remove_method[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._remove_method._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IMultiFn.-remove-method", a);
};
cljs.core._prefer_method = function(a, b, c) {
  if (null != a && null != a.cljs$core$IMultiFn$_prefer_method$arity$3) {
    return a.cljs$core$IMultiFn$_prefer_method$arity$3(a, b, c);
  }
  var d = cljs.core._prefer_method[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._prefer_method._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IMultiFn.-prefer-method", a);
};
cljs.core._get_method = function(a, b) {
  if (null != a && null != a.cljs$core$IMultiFn$_get_method$arity$2) {
    return a.cljs$core$IMultiFn$_get_method$arity$2(a, b);
  }
  var c = cljs.core._get_method[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._get_method._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IMultiFn.-get-method", a);
};
cljs.core._methods = function(a) {
  if (null != a && null != a.cljs$core$IMultiFn$_methods$arity$1) {
    return a.cljs$core$IMultiFn$_methods$arity$1(a);
  }
  var b = cljs.core._methods[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._methods._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-methods", a);
};
cljs.core._prefers = function(a) {
  if (null != a && null != a.cljs$core$IMultiFn$_prefers$arity$1) {
    return a.cljs$core$IMultiFn$_prefers$arity$1(a);
  }
  var b = cljs.core._prefers[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._prefers._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-prefers", a);
};
cljs.core._default_dispatch_val = function(a) {
  if (null != a && null != a.cljs$core$IMultiFn$_default_dispatch_val$arity$1) {
    return a.cljs$core$IMultiFn$_default_dispatch_val$arity$1(a);
  }
  var b = cljs.core._default_dispatch_val[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._default_dispatch_val._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", a);
};
cljs.core._dispatch_fn = function(a) {
  if (null != a && null != a.cljs$core$IMultiFn$_dispatch_fn$arity$1) {
    return a.cljs$core$IMultiFn$_dispatch_fn$arity$1(a);
  }
  var b = cljs.core._dispatch_fn[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._dispatch_fn._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", a);
};
cljs.core.throw_no_method_error = function(a, b) {
  throw Error([cljs.core.str("No method in multimethod '"), cljs.core.str(a), cljs.core.str("' for dispatch value: "), cljs.core.str(b)].join(""));
};
cljs.core.MultiFn = function(a, b, c, d, e, f, g, h) {
  this.name = a;
  this.dispatch_fn = b;
  this.default_dispatch_val = c;
  this.hierarchy = d;
  this.method_table = e;
  this.prefer_table = f;
  this.method_cache = g;
  this.cached_hierarchy = h;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var a = null, b = function(a) {
    a = this;
    var b = a.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : a.dispatch_fn.call(null), c = this.cljs$core$IMultiFn$_get_method$arity$2(null, b);
    cljs.core.truth_(c) || cljs.core.throw_no_method_error(a.name, b);
    return c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null);
  }, c = function(a, b) {
    a = this;
    var c = a.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$1(b) : a.dispatch_fn.call(null, b), d = this.cljs$core$IMultiFn$_get_method$arity$2(null, c);
    cljs.core.truth_(d) || cljs.core.throw_no_method_error(a.name, c);
    return d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b);
  }, d = function(a, b, c) {
    a = this;
    var d = a.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$2(b, c) : a.dispatch_fn.call(null, b, c), e = this.cljs$core$IMultiFn$_get_method$arity$2(null, d);
    cljs.core.truth_(e) || cljs.core.throw_no_method_error(a.name, d);
    return e.cljs$core$IFn$_invoke$arity$2 ? e.cljs$core$IFn$_invoke$arity$2(b, c) : e.call(null, b, c);
  }, e = function(a, b, c, d) {
    a = this;
    var e = a.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.dispatch_fn.call(null, b, c, d), f = this.cljs$core$IMultiFn$_get_method$arity$2(null, e);
    cljs.core.truth_(f) || cljs.core.throw_no_method_error(a.name, e);
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(b, c, d) : f.call(null, b, c, d);
  }, f = function(a, b, c, d, e) {
    a = this;
    var f = a.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.dispatch_fn.call(null, b, c, d, e), g = this.cljs$core$IMultiFn$_get_method$arity$2(null, f);
    cljs.core.truth_(g) || cljs.core.throw_no_method_error(a.name, f);
    return g.cljs$core$IFn$_invoke$arity$4 ? g.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : g.call(null, b, c, d, e);
  }, g = function(a, b, c, d, e, f) {
    a = this;
    var g = a.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f) : a.dispatch_fn.call(null, b, c, d, e, f), h = this.cljs$core$IMultiFn$_get_method$arity$2(null, g);
    cljs.core.truth_(h) || cljs.core.throw_no_method_error(a.name, g);
    return h.cljs$core$IFn$_invoke$arity$5 ? h.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f) : h.call(null, b, c, d, e, f);
  }, h = function(a, b, c, d, e, f, g) {
    a = this;
    var h = a.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$6(b, c, d, e, f, g) : a.dispatch_fn.call(null, b, c, d, e, f, g), k = this.cljs$core$IMultiFn$_get_method$arity$2(null, h);
    cljs.core.truth_(k) || cljs.core.throw_no_method_error(a.name, h);
    return k.cljs$core$IFn$_invoke$arity$6 ? k.cljs$core$IFn$_invoke$arity$6(b, c, d, e, f, g) : k.call(null, b, c, d, e, f, g);
  }, k = function(a, b, c, d, e, f, g, h) {
    a = this;
    var k = a.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$7(b, c, d, e, f, g, h) : a.dispatch_fn.call(null, b, c, d, e, f, g, h), m = this.cljs$core$IMultiFn$_get_method$arity$2(null, k);
    cljs.core.truth_(m) || cljs.core.throw_no_method_error(a.name, k);
    return m.cljs$core$IFn$_invoke$arity$7 ? m.cljs$core$IFn$_invoke$arity$7(b, c, d, e, f, g, h) : m.call(null, b, c, d, e, f, g, h);
  }, m = function(a, b, c, d, e, f, g, h, k) {
    a = this;
    var m = a.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$8(b, c, d, e, f, g, h, k) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k), l = this.cljs$core$IMultiFn$_get_method$arity$2(null, m);
    cljs.core.truth_(l) || cljs.core.throw_no_method_error(a.name, m);
    return l.cljs$core$IFn$_invoke$arity$8 ? l.cljs$core$IFn$_invoke$arity$8(b, c, d, e, f, g, h, k) : l.call(null, b, c, d, e, f, g, h, k);
  }, l = function(a, b, c, d, e, f, g, h, k, m) {
    a = this;
    var l = a.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$9(b, c, d, e, f, g, h, k, m) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m), n = this.cljs$core$IMultiFn$_get_method$arity$2(null, l);
    cljs.core.truth_(n) || cljs.core.throw_no_method_error(a.name, l);
    return n.cljs$core$IFn$_invoke$arity$9 ? n.cljs$core$IFn$_invoke$arity$9(b, c, d, e, f, g, h, k, m) : n.call(null, b, c, d, e, f, g, h, k, m);
  }, n = function(a, b, c, d, e, f, g, h, k, m, l) {
    a = this;
    var n = a.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$10(b, c, d, e, f, g, h, k, m, l) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l), p = this.cljs$core$IMultiFn$_get_method$arity$2(null, n);
    cljs.core.truth_(p) || cljs.core.throw_no_method_error(a.name, n);
    return p.cljs$core$IFn$_invoke$arity$10 ? p.cljs$core$IFn$_invoke$arity$10(b, c, d, e, f, g, h, k, m, l) : p.call(null, b, c, d, e, f, g, h, k, m, l);
  }, p = function(a, b, c, d, e, f, g, h, k, m, l, n) {
    a = this;
    var p = a.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$11(b, c, d, e, f, g, h, k, m, l, n) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n), q = this.cljs$core$IMultiFn$_get_method$arity$2(null, p);
    cljs.core.truth_(q) || cljs.core.throw_no_method_error(a.name, p);
    return q.cljs$core$IFn$_invoke$arity$11 ? q.cljs$core$IFn$_invoke$arity$11(b, c, d, e, f, g, h, k, m, l, n) : q.call(null, b, c, d, e, f, g, h, k, m, l, n);
  }, q = function(a, b, c, d, e, f, g, h, k, m, l, n, p) {
    a = this;
    var q = a.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$12(b, c, d, e, f, g, h, k, m, l, n, p) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p), r = this.cljs$core$IMultiFn$_get_method$arity$2(null, q);
    cljs.core.truth_(r) || cljs.core.throw_no_method_error(a.name, q);
    return r.cljs$core$IFn$_invoke$arity$12 ? r.cljs$core$IFn$_invoke$arity$12(b, c, d, e, f, g, h, k, m, l, n, p) : r.call(null, b, c, d, e, f, g, h, k, m, l, n, p);
  }, r = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q) {
    a = this;
    var r = a.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$13(b, c, d, e, f, g, h, k, m, l, n, p, q) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q), v = this.cljs$core$IMultiFn$_get_method$arity$2(null, r);
    cljs.core.truth_(v) || cljs.core.throw_no_method_error(a.name, r);
    return v.cljs$core$IFn$_invoke$arity$13 ? v.cljs$core$IFn$_invoke$arity$13(b, c, d, e, f, g, h, k, m, l, n, p, q) : v.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q);
  }, t = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r) {
    a = this;
    var v = a.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$14(b, c, d, e, f, g, h, k, m, l, n, p, q, r) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r), t = this.cljs$core$IMultiFn$_get_method$arity$2(null, v);
    cljs.core.truth_(t) || cljs.core.throw_no_method_error(a.name, v);
    return t.cljs$core$IFn$_invoke$arity$14 ? t.cljs$core$IFn$_invoke$arity$14(b, c, d, e, f, g, h, k, m, l, n, p, q, r) : t.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r);
  }, u = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v) {
    a = this;
    var t = a.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$15(b, c, d, e, f, g, h, k, m, l, n, p, q, r, v) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v), w = this.cljs$core$IMultiFn$_get_method$arity$2(null, t);
    cljs.core.truth_(w) || cljs.core.throw_no_method_error(a.name, t);
    return w.cljs$core$IFn$_invoke$arity$15 ? w.cljs$core$IFn$_invoke$arity$15(b, c, d, e, f, g, h, k, m, l, n, p, q, r, v) : w.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v);
  }, v = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t) {
    a = this;
    var w = a.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$16(b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t), u = this.cljs$core$IMultiFn$_get_method$arity$2(null, w);
    cljs.core.truth_(u) || cljs.core.throw_no_method_error(a.name, w);
    return u.cljs$core$IFn$_invoke$arity$16 ? u.cljs$core$IFn$_invoke$arity$16(b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t) : u.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t);
  }, w = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w) {
    a = this;
    var u = a.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$17(b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w), B = this.cljs$core$IMultiFn$_get_method$arity$2(null, u);
    cljs.core.truth_(B) || cljs.core.throw_no_method_error(a.name, u);
    return B.cljs$core$IFn$_invoke$arity$17 ? B.cljs$core$IFn$_invoke$arity$17(b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w) : B.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w);
  }, x = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w, u) {
    a = this;
    var B = a.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$18(b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w, u) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w, u), x = this.cljs$core$IMultiFn$_get_method$arity$2(null, B);
    cljs.core.truth_(x) || cljs.core.throw_no_method_error(a.name, B);
    return x.cljs$core$IFn$_invoke$arity$18 ? x.cljs$core$IFn$_invoke$arity$18(b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w, u) : x.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w, u);
  }, y = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w, u, B) {
    a = this;
    var x = a.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$19(b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w, u, B) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w, u, B), z = this.cljs$core$IMultiFn$_get_method$arity$2(null, x);
    cljs.core.truth_(z) || cljs.core.throw_no_method_error(a.name, x);
    return z.cljs$core$IFn$_invoke$arity$19 ? z.cljs$core$IFn$_invoke$arity$19(b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w, u, B) : z.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w, u, B);
  }, z = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w, u, B, x) {
    a = this;
    var z = a.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$20(b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w, u, B, x) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w, u, B, x), y = this.cljs$core$IMultiFn$_get_method$arity$2(null, z);
    cljs.core.truth_(y) || cljs.core.throw_no_method_error(a.name, z);
    return y.cljs$core$IFn$_invoke$arity$20 ? y.cljs$core$IFn$_invoke$arity$20(b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w, u, B, x) : y.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w, u, B, x);
  }, B = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t, w, u, B, x, z) {
    a = this;
    var y = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(a.dispatch_fn, b, c, d, e, cljs.core.array_seq([f, g, h, k, m, l, n, p, q, r, v, t, w, u, B, x, z], 0)), V = this.cljs$core$IMultiFn$_get_method$arity$2(null, y);
    cljs.core.truth_(V) || cljs.core.throw_no_method_error(a.name, y);
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(V, b, c, d, e, cljs.core.array_seq([f, g, h, k, m, l, n, p, q, r, v, t, w, u, B, x, z], 0));
  }, a = function(a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W, Q, Y, Z, N) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, C);
      case 3:
        return d.call(this, a, C, A);
      case 4:
        return e.call(this, a, C, A, F);
      case 5:
        return f.call(this, a, C, A, F, K);
      case 6:
        return g.call(this, a, C, A, F, K, D);
      case 7:
        return h.call(this, a, C, A, F, K, D, E);
      case 8:
        return k.call(this, a, C, A, F, K, D, E, H);
      case 9:
        return m.call(this, a, C, A, F, K, D, E, H, G);
      case 10:
        return l.call(this, a, C, A, F, K, D, E, H, G, L);
      case 11:
        return n.call(this, a, C, A, F, K, D, E, H, G, L, M);
      case 12:
        return p.call(this, a, C, A, F, K, D, E, H, G, L, M, J);
      case 13:
        return q.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T);
      case 14:
        return r.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U);
      case 15:
        return t.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R);
      case 16:
        return u.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S);
      case 17:
        return v.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P);
      case 18:
        return w.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W);
      case 19:
        return x.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W, Q);
      case 20:
        return y.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W, Q, Y);
      case 21:
        return z.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W, Q, Y, Z);
      case 22:
        return B.call(this, a, C, A, F, K, D, E, H, G, L, M, J, T, U, R, S, P, W, Q, Y, Z, N);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  a.cljs$core$IFn$_invoke$arity$3 = d;
  a.cljs$core$IFn$_invoke$arity$4 = e;
  a.cljs$core$IFn$_invoke$arity$5 = f;
  a.cljs$core$IFn$_invoke$arity$6 = g;
  a.cljs$core$IFn$_invoke$arity$7 = h;
  a.cljs$core$IFn$_invoke$arity$8 = k;
  a.cljs$core$IFn$_invoke$arity$9 = m;
  a.cljs$core$IFn$_invoke$arity$10 = l;
  a.cljs$core$IFn$_invoke$arity$11 = n;
  a.cljs$core$IFn$_invoke$arity$12 = p;
  a.cljs$core$IFn$_invoke$arity$13 = q;
  a.cljs$core$IFn$_invoke$arity$14 = r;
  a.cljs$core$IFn$_invoke$arity$15 = t;
  a.cljs$core$IFn$_invoke$arity$16 = u;
  a.cljs$core$IFn$_invoke$arity$17 = v;
  a.cljs$core$IFn$_invoke$arity$18 = w;
  a.cljs$core$IFn$_invoke$arity$19 = x;
  a.cljs$core$IFn$_invoke$arity$20 = y;
  a.cljs$core$IFn$_invoke$arity$21 = z;
  a.cljs$core$IFn$_invoke$arity$22 = B;
  return a;
}();
cljs.core.MultiFn.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var a = this.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : this.dispatch_fn.call(null), b = this.cljs$core$IMultiFn$_get_method$arity$2(null, a);
  cljs.core.truth_(b) || cljs.core.throw_no_method_error(this.name, a);
  return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var b = this.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : this.dispatch_fn.call(null, a), c = this.cljs$core$IMultiFn$_get_method$arity$2(null, b);
  cljs.core.truth_(c) || cljs.core.throw_no_method_error(this.name, b);
  return c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(a) : c.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = this.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : this.dispatch_fn.call(null, a, b), d = this.cljs$core$IMultiFn$_get_method$arity$2(null, c);
  cljs.core.truth_(d) || cljs.core.throw_no_method_error(this.name, c);
  return d.cljs$core$IFn$_invoke$arity$2 ? d.cljs$core$IFn$_invoke$arity$2(a, b) : d.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = this.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : this.dispatch_fn.call(null, a, b, c), e = this.cljs$core$IMultiFn$_get_method$arity$2(null, d);
  cljs.core.truth_(e) || cljs.core.throw_no_method_error(this.name, d);
  return e.cljs$core$IFn$_invoke$arity$3 ? e.cljs$core$IFn$_invoke$arity$3(a, b, c) : e.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = this.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : this.dispatch_fn.call(null, a, b, c, d), f = this.cljs$core$IMultiFn$_get_method$arity$2(null, e);
  cljs.core.truth_(f) || cljs.core.throw_no_method_error(this.name, e);
  return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : f.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = this.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : this.dispatch_fn.call(null, a, b, c, d, e), g = this.cljs$core$IMultiFn$_get_method$arity$2(null, f);
  cljs.core.truth_(g) || cljs.core.throw_no_method_error(this.name, f);
  return g.cljs$core$IFn$_invoke$arity$5 ? g.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : g.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var g = this.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : this.dispatch_fn.call(null, a, b, c, d, e, f), h = this.cljs$core$IMultiFn$_get_method$arity$2(null, g);
  cljs.core.truth_(h) || cljs.core.throw_no_method_error(this.name, g);
  return h.cljs$core$IFn$_invoke$arity$6 ? h.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : h.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var h = this.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : this.dispatch_fn.call(null, a, b, c, d, e, f, g), k = this.cljs$core$IMultiFn$_get_method$arity$2(null, h);
  cljs.core.truth_(k) || cljs.core.throw_no_method_error(this.name, h);
  return k.cljs$core$IFn$_invoke$arity$7 ? k.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : k.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var k = this.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h), m = this.cljs$core$IMultiFn$_get_method$arity$2(null, k);
  cljs.core.truth_(m) || cljs.core.throw_no_method_error(this.name, k);
  return m.cljs$core$IFn$_invoke$arity$8 ? m.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : m.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, k) {
  var m = this.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k), l = this.cljs$core$IMultiFn$_get_method$arity$2(null, m);
  cljs.core.truth_(l) || cljs.core.throw_no_method_error(this.name, m);
  return l.cljs$core$IFn$_invoke$arity$9 ? l.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : l.call(null, a, b, c, d, e, f, g, h, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, k, m) {
  var l = this.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, m) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, m), n = this.cljs$core$IMultiFn$_get_method$arity$2(null, l);
  cljs.core.truth_(n) || cljs.core.throw_no_method_error(this.name, l);
  return n.cljs$core$IFn$_invoke$arity$10 ? n.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, m) : n.call(null, a, b, c, d, e, f, g, h, k, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, k, m, l) {
  var n = this.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, m, l) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, m, l), p = this.cljs$core$IMultiFn$_get_method$arity$2(null, n);
  cljs.core.truth_(p) || cljs.core.throw_no_method_error(this.name, n);
  return p.cljs$core$IFn$_invoke$arity$11 ? p.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, m, l) : p.call(null, a, b, c, d, e, f, g, h, k, m, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, k, m, l, n) {
  var p = this.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, m, l, n) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, m, l, n), q = this.cljs$core$IMultiFn$_get_method$arity$2(null, p);
  cljs.core.truth_(q) || cljs.core.throw_no_method_error(this.name, p);
  return q.cljs$core$IFn$_invoke$arity$12 ? q.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, m, l, n) : q.call(null, a, b, c, d, e, f, g, h, k, m, l, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, k, m, l, n, p) {
  var q = this.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, m, l, n, p) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p), r = this.cljs$core$IMultiFn$_get_method$arity$2(null, q);
  cljs.core.truth_(r) || cljs.core.throw_no_method_error(this.name, q);
  return r.cljs$core$IFn$_invoke$arity$13 ? r.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, m, l, n, p) : r.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q) {
  var r = this.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, m, l, n, p, q) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q), t = this.cljs$core$IMultiFn$_get_method$arity$2(null, r);
  cljs.core.truth_(t) || cljs.core.throw_no_method_error(this.name, r);
  return t.cljs$core$IFn$_invoke$arity$14 ? t.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, m, l, n, p, q) : t.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r) {
  var t = this.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r), u = this.cljs$core$IMultiFn$_get_method$arity$2(null, t);
  cljs.core.truth_(u) || cljs.core.throw_no_method_error(this.name, t);
  return u.cljs$core$IFn$_invoke$arity$15 ? u.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r) : u.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t) {
  var u = this.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t), v = this.cljs$core$IMultiFn$_get_method$arity$2(null, u);
  cljs.core.truth_(v) || cljs.core.throw_no_method_error(this.name, u);
  return v.cljs$core$IFn$_invoke$arity$16 ? v.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t) : v.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u) {
  var v = this.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u), w = this.cljs$core$IMultiFn$_get_method$arity$2(null, v);
  cljs.core.truth_(w) || cljs.core.throw_no_method_error(this.name, v);
  return w.cljs$core$IFn$_invoke$arity$17 ? w.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u) : w.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v) {
  var w = this.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v), x = this.cljs$core$IMultiFn$_get_method$arity$2(null, w);
  cljs.core.truth_(x) || cljs.core.throw_no_method_error(this.name, w);
  return x.cljs$core$IFn$_invoke$arity$18 ? x.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v) : x.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w) {
  var x = this.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w), y = this.cljs$core$IMultiFn$_get_method$arity$2(null, x);
  cljs.core.truth_(y) || cljs.core.throw_no_method_error(this.name, x);
  return y.cljs$core$IFn$_invoke$arity$19 ? y.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w) : y.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x) {
  var y = this.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x), z = this.cljs$core$IMultiFn$_get_method$arity$2(null, y);
  cljs.core.truth_(z) || cljs.core.throw_no_method_error(this.name, y);
  return z.cljs$core$IFn$_invoke$arity$20 ? z.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x) : z.call(null, a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y) {
  var z = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(this.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y], 0)), B = this.cljs$core$IMultiFn$_get_method$arity$2(null, z);
  cljs.core.truth_(B) || cljs.core.throw_no_method_error(this.name, z);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(B, a, b, c, d, cljs.core.array_seq([e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, x, y], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(a, b, c) {
  if (cljs.core.truth_(cljs.core.prefers_STAR_(b, c, this.prefer_table))) {
    throw Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this.name), cljs.core.str("': "), cljs.core.str(c), cljs.core.str(" is already preferred to "), cljs.core.str(b)].join(""));
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.prefer_table, function(a) {
    return function(a) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.PersistentHashSet.EMPTY), c));
    };
  }(this));
  return cljs.core.reset_cache(this.method_cache, this.method_table, this.cached_hierarchy, this.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(a) {
  return this.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(a, b) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(this.method_table, cljs.core.dissoc, b);
  cljs.core.reset_cache(this.method_cache, this.method_table, this.cached_hierarchy, this.hierarchy);
  return this;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(a) {
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(this.method_table) : cljs.core.deref.call(null, this.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(a) {
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(this.prefer_table) : cljs.core.deref.call(null, this.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(a) {
  return this.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(a, b, c) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(this.method_table, cljs.core.assoc, b, c);
  cljs.core.reset_cache(this.method_cache, this.method_table, this.cached_hierarchy, this.hierarchy);
  return this;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(a) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.method_table, function(a) {
    return function(a) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(this));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.method_cache, function(a) {
    return function(a) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(this));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.prefer_table, function(a) {
    return function(a) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(this));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.cached_hierarchy, function(a) {
    return function(a) {
      return null;
    };
  }(this));
  return this;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(a, b) {
  cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(this.cached_hierarchy) : cljs.core.deref.call(null, this.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(this.hierarchy) : cljs.core.deref.call(null, this.hierarchy)) || cljs.core.reset_cache(this.method_cache, this.method_table, this.cached_hierarchy, this.hierarchy);
  var c = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(this.method_cache) : cljs.core.deref.call(null, this.method_cache)).call(null, b);
  if (cljs.core.truth_(c)) {
    return c;
  }
  c = cljs.core.find_and_cache_best_method(this.name, b, this.hierarchy, this.method_table, this.prefer_table, this.method_cache, this.cached_hierarchy);
  return cljs.core.truth_(c) ? c : (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(this.method_table) : cljs.core.deref.call(null, this.method_table)).call(null, this.default_dispatch_val);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(a) {
  return cljs.core._name(this.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(a) {
  return cljs.core._namespace(this.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return goog.getUid(this);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = !0;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function(a, b, c, d, e, f, g, h) {
  return new cljs.core.MultiFn(a, b, c, d, e, f, g, h);
};
cljs.core.remove_all_methods = function(a) {
  return cljs.core._reset(a);
};
cljs.core.remove_method = function(a, b) {
  return cljs.core._remove_method(a, b);
};
cljs.core.prefer_method = function(a, b, c) {
  return cljs.core._prefer_method(a, b, c);
};
cljs.core.methods$ = function(a) {
  return cljs.core._methods(a);
};
cljs.core.get_method = function(a, b) {
  return cljs.core._get_method(a, b);
};
cljs.core.prefers = function(a) {
  return cljs.core._prefers(a);
};
cljs.core.default_dispatch_val = function(a) {
  return cljs.core._default_dispatch_val(a);
};
cljs.core.dispatch_fn = function(a) {
  return cljs.core._dispatch_fn(a);
};
cljs.core.UUID = function(a, b) {
  this.uuid = a;
  this.__hash = b;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  return this.uuid;
};
cljs.core.UUID.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.UUID && this.uuid === b.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write(b, [cljs.core.str('#uuid "'), cljs.core.str(this.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  null == this.__hash && (this.__hash = cljs.core.hash(this.uuid));
  return this.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  return goog.array.defaultCompare(this.uuid, b.uuid);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.UUID.cljs$lang$type = !0;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function(a, b) {
  return new cljs.core.UUID(a, b);
};
cljs.core.uuid = function(a) {
  return new cljs.core.UUID(a, null);
};
cljs.core.random_uuid = function() {
  var a = function() {
    return cljs.core.rand_int(16).toString(16);
  }, b = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str("-"), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str("-"), cljs.core.str(b), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str("-"), 
  cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a()), cljs.core.str(a())].join(""));
};
cljs.core.pr_writer_ex_info = function(a, b, c) {
  cljs.core._write(b, "#error {:message ");
  cljs.core.pr_writer(a.message, b, c);
  cljs.core.truth_(a.data) && (cljs.core._write(b, ", :data "), cljs.core.pr_writer(a.data, b, c));
  cljs.core.truth_(a.cause) && (cljs.core._write(b, ", :cause "), cljs.core.pr_writer(a.cause, b, c));
  return cljs.core._write(b, "}");
};
cljs.core.ExceptionInfo = function(a, b, c) {
  var d = Error(a);
  this.message = a;
  this.data = b;
  this.cause = c;
  this.name = d.name;
  this.description = d.description;
  this.number = d.number;
  this.fileName = d.fileName;
  this.lineNumber = d.lineNumber;
  this.columnNumber = d.columnNumber;
  this.stack = d.stack;
  return this;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_writer_ex_info(this, b, c);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ex_info = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(a, b, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.ExceptionInfo(a, b, c);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function(a) {
  return a instanceof cljs.core.ExceptionInfo ? a.data : null;
};
cljs.core.ex_message = function(a) {
  return a instanceof Error ? a.message : null;
};
cljs.core.ex_cause = function(a) {
  return a instanceof cljs.core.ExceptionInfo ? a.cause : null;
};
cljs.core.comparator = function(a) {
  return function(b, c) {
    return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c)) ? -1 : cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, b) : a.call(null, c, b)) ? 1 : 0;
  };
};
cljs.core.special_symbol_QMARK_ = function(a) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), a);
};
cljs.core.test = function(a) {
  a = a.cljs$lang$test;
  return cljs.core.truth_(a) ? (a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), new cljs.core.Keyword(null, "ok", "ok", 967785236)) : new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
};
cljs.core.TaggedLiteral = function(a, b) {
  this.tag = a;
  this.form = b;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.tag, b.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.form, b.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return 31 * cljs.core.hash(this.tag) + cljs.core.hash(this.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this, b, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "tag":
      return this.tag;
    case "form":
      return this.form;
    default:
      return c;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write(b, [cljs.core.str("#"), cljs.core.str(this.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(this.form, b, c);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = !0;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function(a, b) {
  return new cljs.core.TaggedLiteral(a, b);
};
cljs.core.tagged_literal_QMARK_ = function(a) {
  return a instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function(a, b) {
  if (!(a instanceof cljs.core.Symbol)) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))], 0)))].join(""));
  }
  return new cljs.core.TaggedLiteral(a, b);
};
cljs.core.js_reserved_arr = "abstract boolean break byte case catch char class const continue debugger default delete do double else enum export extends final finally float for function goto if implements import in instanceof int interface let long native new package private protected public return short static super switch synchronized this throw throws transient try typeof var void volatile while with yield methods null".split(" ");
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function(a) {
  null == cljs.core.js_reserved && (cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, c) {
    goog.object.set(a, c, !0);
    return a;
  }, {}, cljs.core.js_reserved_arr));
  return cljs.core.js_reserved.hasOwnProperty(a);
};
cljs.core.demunge_pattern = function() {
  cljs.core.truth_(cljs.core.DEMUNGE_PATTERN) || (cljs.core.DEMUNGE_PATTERN = function() {
    for (var a = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
      return b.length - a.length;
    }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP)), b = "";;) {
      if (cljs.core.seq(a)) {
        var c = cljs.core.next(a), d = [cljs.core.str(function() {
          var a = b;
          return "" !== b ? [cljs.core.str(a), cljs.core.str("|")].join("") : a;
        }()), cljs.core.str(cljs.core.first(a))].join(""), a = c, b = d
      } else {
        return [cljs.core.str(b), cljs.core.str("|\\$")].join("");
      }
    }
  }());
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function(a) {
  for (var b = new goog.string.StringBuffer, c = 0;;) {
    if (c < a.length) {
      var d = a.charAt(c), e = goog.object.get(cljs.core.CHAR_MAP, d);
      null != e ? b.append(e) : b.append(d);
      c += 1;
    } else {
      break;
    }
  }
  return b.toString();
};
cljs.core.munge = function(a) {
  var b = cljs.core.munge_str("" + cljs.core.str(a)), b = ".." === b ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(b)) ? [cljs.core.str(b), cljs.core.str("$")].join("") : b;
  return a instanceof cljs.core.Symbol ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(b) : "" + cljs.core.str(b);
};
cljs.core.demunge_str = function(a) {
  var b = new RegExp(cljs.core.demunge_pattern(), "g");
  a = cljs.core.truth_(goog.string.endsWith(a, "$")) ? a.substring(0, a.length - 1) : a;
  for (var c = "", d = 0;;) {
    var e = b.exec(a);
    if (cljs.core.truth_(e)) {
      e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(e, 0, null), c = [cljs.core.str(c), cljs.core.str(a.substring(d, b.lastIndex - e.length)), cljs.core.str("$" === e ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, e))].join(""), d = b.lastIndex;
    } else {
      return [cljs.core.str(c), cljs.core.str(a.substring(d, a.length))].join("");
    }
  }
};
cljs.core.demunge = function(a) {
  return (a instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, "_DOT__DOT_" === "" + cljs.core.str(a) ? ".." : cljs.core.demunge_str("" + cljs.core.str(a)));
};
cljs.core.ns_lookup = function(a, b) {
  return function() {
    return goog.object.get(a, b);
  };
};
cljs.core.Namespace = function(a, b) {
  this.obj = a;
  this.name = b;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(a) {
  var b = cljs.core.munge("" + cljs.core.str(a));
  if (goog.object.containsKey(this.obj, b)) {
    a = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("" + cljs.core.str(this.name), "" + cljs.core.str(a));
    var c = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this], null);
    return new cljs.core.Var(cljs.core.ns_lookup(this.obj, b), a, c);
  }
  return null;
};
cljs.core.Namespace.prototype.getName = function() {
  return this.name;
};
cljs.core.Namespace.prototype.toString = function() {
  return "" + cljs.core.str(this.name);
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.Namespace ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.name, b.name) : !1;
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash(this.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = !0;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function(a, b) {
  return new cljs.core.Namespace(a, b);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function(a, b) {
  for (;;) {
    if (null == a) {
      return null;
    }
    if (null == b) {
      return a;
    }
    var c;
    c = a;
    var d = cljs.core.first(b);
    c = goog.object.get(c, d);
    d = cljs.core.next(b);
    a = c;
    b = d;
  }
};
cljs.core.find_ns_obj = function(a) {
  var b = cljs.core.munge("" + cljs.core.str(a)).split(".");
  switch(cljs.core._STAR_target_STAR_) {
    case "nodejs":
      return COMPILED ? cljs.core.find_ns_obj_STAR_(function() {
        try {
          var a = cljs.core.first(b);
          return eval(a);
        } catch (d) {
          if (d instanceof ReferenceError) {
            return null;
          }
          throw d;
        }
      }(), cljs.core.next(b)) : cljs.core.find_ns_obj_STAR_(global, b);
    case "default":
      return cljs.core.find_ns_obj_STAR_(goog.global, b);
    default:
      throw Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function(a) {
  var b = cljs.core.find_ns_obj(a), c = new cljs.core.Namespace(b, a), c = function(b, c) {
    return function(f, g) {
      var h = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(g));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(f, h, new cljs.core.Var(function(a, b, c) {
        return function() {
          return goog.object.get(b, g);
        };
      }(h, b, c), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("" + cljs.core.str(a), "" + cljs.core.str(h)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), c], null)));
    };
  }(b, c);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(c, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(b));
};
cljs.core.create_ns = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(a, cljs.core.find_ns_obj(a));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.Namespace(b, a);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function(a) {
  if (null == cljs.core.NS_CACHE) {
    var b = cljs.core, c;
    c = cljs.core.PersistentArrayMap.EMPTY;
    c = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(c) : cljs.core.atom.call(null, c);
    b.NS_CACHE = c;
  }
  b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), a);
  if (null != b) {
    return b;
  }
  b = cljs.core.find_ns_obj(a);
  if (null == b) {
    return null;
  }
  b = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(a, b);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, a, b);
  return b;
};
cljs.core.find_macros_ns = function(a) {
  if (null == cljs.core.NS_CACHE) {
    var b = cljs.core, c;
    c = cljs.core.PersistentArrayMap.EMPTY;
    c = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(c) : cljs.core.atom.call(null, c);
    b.NS_CACHE = c;
  }
  b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), a);
  if (null != b) {
    return b;
  }
  b = "" + cljs.core.str(a);
  a = goog.string.contains(b, "$macros") ? a : cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(b), cljs.core.str("$macros")].join(""));
  b = cljs.core.find_ns_obj(a);
  if (null == b) {
    return null;
  }
  b = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(a, b);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, a, b);
  return b;
};
cljs.core.ns_name = function(a) {
  return a.name;
};
goog.html.SafeScript = function() {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = "";
  this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeScript.prototype.implementsGoogStringTypedString = !0;
goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeScript.fromConstant = function(a) {
  a = goog.string.Const.unwrap(a);
  return 0 === a.length ? goog.html.SafeScript.EMPTY : goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(a);
};
goog.html.SafeScript.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeScriptWrappedValue_;
};
goog.DEBUG && (goog.html.SafeScript.prototype.toString = function() {
  return "SafeScript{" + this.privateDoNotAccessOrElseSafeScriptWrappedValue_ + "}";
});
goog.html.SafeScript.unwrap = function(a) {
  if (a instanceof goog.html.SafeScript && a.constructor === goog.html.SafeScript && a.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return a.privateDoNotAccessOrElseSafeScriptWrappedValue_;
  }
  goog.asserts.fail("expected object of type SafeScript, got '" + a + "'");
  return "type_error:SafeScript";
};
goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse = function(a) {
  return (new goog.html.SafeScript).initSecurityPrivateDoNotAccessOrElse_(a);
};
goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(a) {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = a;
  return this;
};
goog.html.SafeScript.EMPTY = goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");
goog.html.uncheckedconversions = {};
goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function(a, b, c) {
  goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification");
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b, c || null);
};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function(a, b) {
  goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
  goog.asserts.assert(!goog.string.isEmpty(goog.string.Const.unwrap(a)), "must provide non-empty justification");
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(b);
};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function(a, b) {
  goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification");
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b);
};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function(a, b) {
  goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification");
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b);
};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function(a, b) {
  goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification");
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b);
};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(a, b) {
  goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification");
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b);
};
goog.structs = {};
goog.structs.getCount = function(a) {
  return a.getCount && "function" == typeof a.getCount ? a.getCount() : goog.isArrayLike(a) || goog.isString(a) ? a.length : goog.object.getCount(a);
};
goog.structs.getValues = function(a) {
  if (a.getValues && "function" == typeof a.getValues) {
    return a.getValues();
  }
  if (goog.isString(a)) {
    return a.split("");
  }
  if (goog.isArrayLike(a)) {
    for (var b = [], c = a.length, d = 0;d < c;d++) {
      b.push(a[d]);
    }
    return b;
  }
  return goog.object.getValues(a);
};
goog.structs.getKeys = function(a) {
  if (a.getKeys && "function" == typeof a.getKeys) {
    return a.getKeys();
  }
  if (!a.getValues || "function" != typeof a.getValues) {
    if (goog.isArrayLike(a) || goog.isString(a)) {
      var b = [];
      a = a.length;
      for (var c = 0;c < a;c++) {
        b.push(c);
      }
      return b;
    }
    return goog.object.getKeys(a);
  }
};
goog.structs.contains = function(a, b) {
  return a.contains && "function" == typeof a.contains ? a.contains(b) : a.containsValue && "function" == typeof a.containsValue ? a.containsValue(b) : goog.isArrayLike(a) || goog.isString(a) ? goog.array.contains(a, b) : goog.object.containsValue(a, b);
};
goog.structs.isEmpty = function(a) {
  return a.isEmpty && "function" == typeof a.isEmpty ? a.isEmpty() : goog.isArrayLike(a) || goog.isString(a) ? goog.array.isEmpty(a) : goog.object.isEmpty(a);
};
goog.structs.clear = function(a) {
  a.clear && "function" == typeof a.clear ? a.clear() : goog.isArrayLike(a) ? goog.array.clear(a) : goog.object.clear(a);
};
goog.structs.forEach = function(a, b, c) {
  if (a.forEach && "function" == typeof a.forEach) {
    a.forEach(b, c);
  } else {
    if (goog.isArrayLike(a) || goog.isString(a)) {
      goog.array.forEach(a, b, c);
    } else {
      for (var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length, g = 0;g < f;g++) {
        b.call(c, e[g], d && d[g], a);
      }
    }
  }
};
goog.structs.filter = function(a, b, c) {
  if ("function" == typeof a.filter) {
    return a.filter(b, c);
  }
  if (goog.isArrayLike(a) || goog.isString(a)) {
    return goog.array.filter(a, b, c);
  }
  var d, e = goog.structs.getKeys(a), f = goog.structs.getValues(a), g = f.length;
  if (e) {
    d = {};
    for (var h = 0;h < g;h++) {
      b.call(c, f[h], e[h], a) && (d[e[h]] = f[h]);
    }
  } else {
    for (d = [], h = 0;h < g;h++) {
      b.call(c, f[h], void 0, a) && d.push(f[h]);
    }
  }
  return d;
};
goog.structs.map = function(a, b, c) {
  if ("function" == typeof a.map) {
    return a.map(b, c);
  }
  if (goog.isArrayLike(a) || goog.isString(a)) {
    return goog.array.map(a, b, c);
  }
  var d, e = goog.structs.getKeys(a), f = goog.structs.getValues(a), g = f.length;
  if (e) {
    d = {};
    for (var h = 0;h < g;h++) {
      d[e[h]] = b.call(c, f[h], e[h], a);
    }
  } else {
    for (d = [], h = 0;h < g;h++) {
      d[h] = b.call(c, f[h], void 0, a);
    }
  }
  return d;
};
goog.structs.some = function(a, b, c) {
  if ("function" == typeof a.some) {
    return a.some(b, c);
  }
  if (goog.isArrayLike(a) || goog.isString(a)) {
    return goog.array.some(a, b, c);
  }
  for (var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length, g = 0;g < f;g++) {
    if (b.call(c, e[g], d && d[g], a)) {
      return !0;
    }
  }
  return !1;
};
goog.structs.every = function(a, b, c) {
  if ("function" == typeof a.every) {
    return a.every(b, c);
  }
  if (goog.isArrayLike(a) || goog.isString(a)) {
    return goog.array.every(a, b, c);
  }
  for (var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length, g = 0;g < f;g++) {
    if (!b.call(c, e[g], d && d[g], a)) {
      return !1;
    }
  }
  return !0;
};
goog.structs.Collection = function() {
};
goog.functions = {};
goog.functions.constant = function(a) {
  return function() {
    return a;
  };
};
goog.functions.FALSE = goog.functions.constant(!1);
goog.functions.TRUE = goog.functions.constant(!0);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(a, b) {
  return a;
};
goog.functions.error = function(a) {
  return function() {
    throw Error(a);
  };
};
goog.functions.fail = function(a) {
  return function() {
    throw a;
  };
};
goog.functions.lock = function(a, b) {
  b = b || 0;
  return function() {
    return a.apply(this, Array.prototype.slice.call(arguments, 0, b));
  };
};
goog.functions.nth = function(a) {
  return function() {
    return arguments[a];
  };
};
goog.functions.withReturnValue = function(a, b) {
  return goog.functions.sequence(a, goog.functions.constant(b));
};
goog.functions.equalTo = function(a, b) {
  return function(c) {
    return b ? a == c : a === c;
  };
};
goog.functions.compose = function(a, b) {
  var c = arguments, d = c.length;
  return function() {
    var a;
    d && (a = c[d - 1].apply(this, arguments));
    for (var b = d - 2;0 <= b;b--) {
      a = c[b].call(this, a);
    }
    return a;
  };
};
goog.functions.sequence = function(a) {
  var b = arguments, c = b.length;
  return function() {
    for (var a, e = 0;e < c;e++) {
      a = b[e].apply(this, arguments);
    }
    return a;
  };
};
goog.functions.and = function(a) {
  var b = arguments, c = b.length;
  return function() {
    for (var a = 0;a < c;a++) {
      if (!b[a].apply(this, arguments)) {
        return !1;
      }
    }
    return !0;
  };
};
goog.functions.or = function(a) {
  var b = arguments, c = b.length;
  return function() {
    for (var a = 0;a < c;a++) {
      if (b[a].apply(this, arguments)) {
        return !0;
      }
    }
    return !1;
  };
};
goog.functions.not = function(a) {
  return function() {
    return !a.apply(this, arguments);
  };
};
goog.functions.create = function(a, b) {
  var c = function() {
  };
  c.prototype = a.prototype;
  c = new c;
  a.apply(c, Array.prototype.slice.call(arguments, 1));
  return c;
};
goog.functions.CACHE_RETURN_VALUE = !0;
goog.functions.cacheReturnValue = function(a) {
  var b = !1, c;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return a();
    }
    b || (c = a(), b = !0);
    return c;
  };
};
goog.functions.once = function(a) {
  var b = a;
  return function() {
    if (b) {
      var a = b;
      b = null;
      a();
    }
  };
};
goog.functions.debounce = function(a, b, c) {
  c && (a = goog.bind(a, c));
  var d = null;
  return function(c) {
    goog.global.clearTimeout(d);
    var f = arguments;
    d = goog.global.setTimeout(function() {
      a.apply(null, f);
    }, b);
  };
};
goog.functions.throttle = function(a, b, c) {
  c && (a = goog.bind(a, c));
  var d = null, e = !1, f = [], g = function() {
    d = null;
    e && (e = !1, h());
  }, h = function() {
    d = goog.global.setTimeout(g, b);
    a.apply(null, f);
  };
  return function(a) {
    f = arguments;
    d ? e = !0 : h();
  };
};
goog.iter = {};
goog.iter.StopIteration = "StopIteration" in goog.global ? goog.global.StopIteration : {message:"StopIteration", stack:""};
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(a) {
  return this;
};
goog.iter.toIterator = function(a) {
  if (a instanceof goog.iter.Iterator) {
    return a;
  }
  if ("function" == typeof a.__iterator__) {
    return a.__iterator__(!1);
  }
  if (goog.isArrayLike(a)) {
    var b = 0, c = new goog.iter.Iterator;
    c.next = function() {
      for (;;) {
        if (b >= a.length) {
          throw goog.iter.StopIteration;
        }
        if (b in a) {
          return a[b++];
        }
        b++;
      }
    };
    return c;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(a, b, c) {
  if (goog.isArrayLike(a)) {
    try {
      goog.array.forEach(a, b, c);
    } catch (d) {
      if (d !== goog.iter.StopIteration) {
        throw d;
      }
    }
  } else {
    a = goog.iter.toIterator(a);
    try {
      for (;;) {
        b.call(c, a.next(), void 0, a);
      }
    } catch (d) {
      if (d !== goog.iter.StopIteration) {
        throw d;
      }
    }
  }
};
goog.iter.filter = function(a, b, c) {
  var d = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  a.next = function() {
    for (;;) {
      var a = d.next();
      if (b.call(c, a, void 0, d)) {
        return a;
      }
    }
  };
  return a;
};
goog.iter.filterFalse = function(a, b, c) {
  return goog.iter.filter(a, goog.functions.not(b), c);
};
goog.iter.range = function(a, b, c) {
  var d = 0, e = a, f = c || 1;
  1 < arguments.length && (d = a, e = b);
  if (0 == f) {
    throw Error("Range step argument must not be zero");
  }
  var g = new goog.iter.Iterator;
  g.next = function() {
    if (0 < f && d >= e || 0 > f && d <= e) {
      throw goog.iter.StopIteration;
    }
    var a = d;
    d += f;
    return a;
  };
  return g;
};
goog.iter.join = function(a, b) {
  return goog.iter.toArray(a).join(b);
};
goog.iter.map = function(a, b, c) {
  var d = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  a.next = function() {
    var a = d.next();
    return b.call(c, a, void 0, d);
  };
  return a;
};
goog.iter.reduce = function(a, b, c, d) {
  var e = c;
  goog.iter.forEach(a, function(a) {
    e = b.call(d, e, a);
  });
  return e;
};
goog.iter.some = function(a, b, c) {
  a = goog.iter.toIterator(a);
  try {
    for (;;) {
      if (b.call(c, a.next(), void 0, a)) {
        return !0;
      }
    }
  } catch (d) {
    if (d !== goog.iter.StopIteration) {
      throw d;
    }
  }
  return !1;
};
goog.iter.every = function(a, b, c) {
  a = goog.iter.toIterator(a);
  try {
    for (;;) {
      if (!b.call(c, a.next(), void 0, a)) {
        return !1;
      }
    }
  } catch (d) {
    if (d !== goog.iter.StopIteration) {
      throw d;
    }
  }
  return !0;
};
goog.iter.chain = function(a) {
  return goog.iter.chainFromIterable(arguments);
};
goog.iter.chainFromIterable = function(a) {
  var b = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  var c = null;
  a.next = function() {
    for (;;) {
      if (null == c) {
        var a = b.next();
        c = goog.iter.toIterator(a);
      }
      try {
        return c.next();
      } catch (e) {
        if (e !== goog.iter.StopIteration) {
          throw e;
        }
        c = null;
      }
    }
  };
  return a;
};
goog.iter.dropWhile = function(a, b, c) {
  var d = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  var e = !0;
  a.next = function() {
    for (;;) {
      var a = d.next();
      if (!e || !b.call(c, a, void 0, d)) {
        return e = !1, a;
      }
    }
  };
  return a;
};
goog.iter.takeWhile = function(a, b, c) {
  var d = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  a.next = function() {
    var a = d.next();
    if (b.call(c, a, void 0, d)) {
      return a;
    }
    throw goog.iter.StopIteration;
  };
  return a;
};
goog.iter.toArray = function(a) {
  if (goog.isArrayLike(a)) {
    return goog.array.toArray(a);
  }
  a = goog.iter.toIterator(a);
  var b = [];
  goog.iter.forEach(a, function(a) {
    b.push(a);
  });
  return b;
};
goog.iter.equals = function(a, b, c) {
  a = goog.iter.zipLongest({}, a, b);
  var d = c || goog.array.defaultCompareEquality;
  return goog.iter.every(a, function(a) {
    return d(a[0], a[1]);
  });
};
goog.iter.nextOrValue = function(a, b) {
  try {
    return goog.iter.toIterator(a).next();
  } catch (c) {
    if (c != goog.iter.StopIteration) {
      throw c;
    }
    return b;
  }
};
goog.iter.product = function(a) {
  if (goog.array.some(arguments, function(a) {
    return !a.length;
  }) || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var b = new goog.iter.Iterator, c = arguments, d = goog.array.repeat(0, c.length);
  b.next = function() {
    if (d) {
      for (var a = goog.array.map(d, function(a, b) {
        return c[b][a];
      }), b = d.length - 1;0 <= b;b--) {
        goog.asserts.assert(d);
        if (d[b] < c[b].length - 1) {
          d[b]++;
          break;
        }
        if (0 == b) {
          d = null;
          break;
        }
        d[b] = 0;
      }
      return a;
    }
    throw goog.iter.StopIteration;
  };
  return b;
};
goog.iter.cycle = function(a) {
  var b = goog.iter.toIterator(a), c = [], d = 0;
  a = new goog.iter.Iterator;
  var e = !1;
  a.next = function() {
    var a = null;
    if (!e) {
      try {
        return a = b.next(), c.push(a), a;
      } catch (g) {
        if (g != goog.iter.StopIteration || goog.array.isEmpty(c)) {
          throw g;
        }
        e = !0;
      }
    }
    a = c[d];
    d = (d + 1) % c.length;
    return a;
  };
  return a;
};
goog.iter.count = function(a, b) {
  var c = a || 0, d = goog.isDef(b) ? b : 1, e = new goog.iter.Iterator;
  e.next = function() {
    var a = c;
    c += d;
    return a;
  };
  return e;
};
goog.iter.repeat = function(a) {
  var b = new goog.iter.Iterator;
  b.next = goog.functions.constant(a);
  return b;
};
goog.iter.accumulate = function(a) {
  var b = goog.iter.toIterator(a), c = 0;
  a = new goog.iter.Iterator;
  a.next = function() {
    return c += b.next();
  };
  return a;
};
goog.iter.zip = function(a) {
  var b = arguments, c = new goog.iter.Iterator;
  if (0 < b.length) {
    var d = goog.array.map(b, goog.iter.toIterator);
    c.next = function() {
      return goog.array.map(d, function(a) {
        return a.next();
      });
    };
  }
  return c;
};
goog.iter.zipLongest = function(a, b) {
  var c = goog.array.slice(arguments, 1), d = new goog.iter.Iterator;
  if (0 < c.length) {
    var e = goog.array.map(c, goog.iter.toIterator);
    d.next = function() {
      var b = !1, c = goog.array.map(e, function(c) {
        var d;
        try {
          d = c.next(), b = !0;
        } catch (e) {
          if (e !== goog.iter.StopIteration) {
            throw e;
          }
          d = a;
        }
        return d;
      });
      if (!b) {
        throw goog.iter.StopIteration;
      }
      return c;
    };
  }
  return d;
};
goog.iter.compress = function(a, b) {
  var c = goog.iter.toIterator(b);
  return goog.iter.filter(a, function() {
    return !!c.next();
  });
};
goog.iter.GroupByIterator_ = function(a, b) {
  this.iterator = goog.iter.toIterator(a);
  this.keyFunc = b || goog.functions.identity;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  for (;this.currentKey == this.targetKey;) {
    this.currentValue = this.iterator.next(), this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return [this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(a) {
  for (var b = [];this.currentKey == a;) {
    b.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (c) {
      if (c !== goog.iter.StopIteration) {
        throw c;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return b;
};
goog.iter.groupBy = function(a, b) {
  return new goog.iter.GroupByIterator_(a, b);
};
goog.iter.starMap = function(a, b, c) {
  var d = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  a.next = function() {
    var a = goog.iter.toArray(d.next());
    return b.apply(c, goog.array.concat(a, void 0, d));
  };
  return a;
};
goog.iter.tee = function(a, b) {
  var c = goog.iter.toIterator(a), d = goog.isNumber(b) ? b : 2, e = goog.array.map(goog.array.range(d), function() {
    return [];
  }), f = function() {
    var a = c.next();
    goog.array.forEach(e, function(b) {
      b.push(a);
    });
  };
  return goog.array.map(e, function(a) {
    var b = new goog.iter.Iterator;
    b.next = function() {
      goog.array.isEmpty(a) && f();
      goog.asserts.assert(!goog.array.isEmpty(a));
      return a.shift();
    };
    return b;
  });
};
goog.iter.enumerate = function(a, b) {
  return goog.iter.zip(goog.iter.count(b), a);
};
goog.iter.limit = function(a, b) {
  goog.asserts.assert(goog.math.isInt(b) && 0 <= b);
  var c = goog.iter.toIterator(a), d = new goog.iter.Iterator, e = b;
  d.next = function() {
    if (0 < e--) {
      return c.next();
    }
    throw goog.iter.StopIteration;
  };
  return d;
};
goog.iter.consume = function(a, b) {
  goog.asserts.assert(goog.math.isInt(b) && 0 <= b);
  for (var c = goog.iter.toIterator(a);0 < b--;) {
    goog.iter.nextOrValue(c, null);
  }
  return c;
};
goog.iter.slice = function(a, b, c) {
  goog.asserts.assert(goog.math.isInt(b) && 0 <= b);
  a = goog.iter.consume(a, b);
  goog.isNumber(c) && (goog.asserts.assert(goog.math.isInt(c) && c >= b), a = goog.iter.limit(a, c - b));
  return a;
};
goog.iter.hasDuplicates_ = function(a) {
  var b = [];
  goog.array.removeDuplicates(a, b);
  return a.length != b.length;
};
goog.iter.permutations = function(a, b) {
  var c = goog.iter.toArray(a), d = goog.isNumber(b) ? b : c.length, c = goog.array.repeat(c, d), c = goog.iter.product.apply(void 0, c);
  return goog.iter.filter(c, function(a) {
    return !goog.iter.hasDuplicates_(a);
  });
};
goog.iter.combinations = function(a, b) {
  function c(a) {
    return d[a];
  }
  var d = goog.iter.toArray(a), e = goog.iter.range(d.length), e = goog.iter.permutations(e, b), f = goog.iter.filter(e, function(a) {
    return goog.array.isSorted(a);
  }), e = new goog.iter.Iterator;
  e.next = function() {
    return goog.array.map(f.next(), c);
  };
  return e;
};
goog.iter.combinationsWithReplacement = function(a, b) {
  function c(a) {
    return d[a];
  }
  var d = goog.iter.toArray(a), e = goog.array.range(d.length), e = goog.array.repeat(e, b), e = goog.iter.product.apply(void 0, e), f = goog.iter.filter(e, function(a) {
    return goog.array.isSorted(a);
  }), e = new goog.iter.Iterator;
  e.next = function() {
    return goog.array.map(f.next(), c);
  };
  return e;
};
goog.structs.Map = function(a, b) {
  this.map_ = {};
  this.keys_ = [];
  this.version_ = this.count_ = 0;
  var c = arguments.length;
  if (1 < c) {
    if (c % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var d = 0;d < c;d += 2) {
      this.set(arguments[d], arguments[d + 1]);
    }
  } else {
    a && this.addAll(a);
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  for (var a = [], b = 0;b < this.keys_.length;b++) {
    a.push(this.map_[this.keys_[b]]);
  }
  return a;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat();
};
goog.structs.Map.prototype.containsKey = function(a) {
  return goog.structs.Map.hasKey_(this.map_, a);
};
goog.structs.Map.prototype.containsValue = function(a) {
  for (var b = 0;b < this.keys_.length;b++) {
    var c = this.keys_[b];
    if (goog.structs.Map.hasKey_(this.map_, c) && this.map_[c] == a) {
      return !0;
    }
  }
  return !1;
};
goog.structs.Map.prototype.equals = function(a, b) {
  if (this === a) {
    return !0;
  }
  if (this.count_ != a.getCount()) {
    return !1;
  }
  var c = b || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var d, e = 0;d = this.keys_[e];e++) {
    if (!c(this.get(d), a.get(d))) {
      return !1;
    }
  }
  return !0;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return 0 == this.count_;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.version_ = this.count_ = this.keys_.length = 0;
};
goog.structs.Map.prototype.remove = function(a) {
  return goog.structs.Map.hasKey_(this.map_, a) ? (delete this.map_[a], this.count_--, this.version_++, this.keys_.length > 2 * this.count_ && this.cleanupKeysArray_(), !0) : !1;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    for (var a = 0, b = 0;a < this.keys_.length;) {
      var c = this.keys_[a];
      goog.structs.Map.hasKey_(this.map_, c) && (this.keys_[b++] = c);
      a++;
    }
    this.keys_.length = b;
  }
  if (this.count_ != this.keys_.length) {
    for (var d = {}, b = a = 0;a < this.keys_.length;) {
      c = this.keys_[a], goog.structs.Map.hasKey_(d, c) || (this.keys_[b++] = c, d[c] = 1), a++;
    }
    this.keys_.length = b;
  }
};
goog.structs.Map.prototype.get = function(a, b) {
  return goog.structs.Map.hasKey_(this.map_, a) ? this.map_[a] : b;
};
goog.structs.Map.prototype.set = function(a, b) {
  goog.structs.Map.hasKey_(this.map_, a) || (this.count_++, this.keys_.push(a), this.version_++);
  this.map_[a] = b;
};
goog.structs.Map.prototype.addAll = function(a) {
  var b;
  a instanceof goog.structs.Map ? (b = a.getKeys(), a = a.getValues()) : (b = goog.object.getKeys(a), a = goog.object.getValues(a));
  for (var c = 0;c < b.length;c++) {
    this.set(b[c], a[c]);
  }
};
goog.structs.Map.prototype.forEach = function(a, b) {
  for (var c = this.getKeys(), d = 0;d < c.length;d++) {
    var e = c[d], f = this.get(e);
    a.call(b, f, e, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  for (var a = new goog.structs.Map, b = 0;b < this.keys_.length;b++) {
    var c = this.keys_[b];
    a.set(this.map_[c], c);
  }
  return a;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  for (var a = {}, b = 0;b < this.keys_.length;b++) {
    var c = this.keys_[b];
    a[c] = this.map_[c];
  }
  return a;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(!0);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(!1);
};
goog.structs.Map.prototype.__iterator__ = function(a) {
  this.cleanupKeysArray_();
  var b = 0, c = this.version_, d = this, e = new goog.iter.Iterator;
  e.next = function() {
    if (c != d.version_) {
      throw Error("The map has changed since the iterator was created");
    }
    if (b >= d.keys_.length) {
      throw goog.iter.StopIteration;
    }
    var e = d.keys_[b++];
    return a ? e : d.map_[e];
  };
  return e;
};
goog.structs.Map.hasKey_ = function(a, b) {
  return Object.prototype.hasOwnProperty.call(a, b);
};
goog.structs.Set = function(a) {
  this.map_ = new goog.structs.Map;
  a && this.addAll(a);
};
goog.structs.Set.getKey_ = function(a) {
  var b = typeof a;
  return "object" == b && a || "function" == b ? "o" + goog.getUid(a) : b.substr(0, 1) + a;
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(a) {
  this.map_.set(goog.structs.Set.getKey_(a), a);
};
goog.structs.Set.prototype.addAll = function(a) {
  a = goog.structs.getValues(a);
  for (var b = a.length, c = 0;c < b;c++) {
    this.add(a[c]);
  }
};
goog.structs.Set.prototype.removeAll = function(a) {
  a = goog.structs.getValues(a);
  for (var b = a.length, c = 0;c < b;c++) {
    this.remove(a[c]);
  }
};
goog.structs.Set.prototype.remove = function(a) {
  return this.map_.remove(goog.structs.Set.getKey_(a));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(a) {
  return this.map_.containsKey(goog.structs.Set.getKey_(a));
};
goog.structs.Set.prototype.containsAll = function(a) {
  return goog.structs.every(a, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(a) {
  var b = new goog.structs.Set;
  a = goog.structs.getValues(a);
  for (var c = 0;c < a.length;c++) {
    var d = a[c];
    this.contains(d) && b.add(d);
  }
  return b;
};
goog.structs.Set.prototype.difference = function(a) {
  var b = this.clone();
  b.removeAll(a);
  return b;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(a) {
  return this.getCount() == goog.structs.getCount(a) && this.isSubsetOf(a);
};
goog.structs.Set.prototype.isSubsetOf = function(a) {
  var b = goog.structs.getCount(a);
  if (this.getCount() > b) {
    return !1;
  }
  !(a instanceof goog.structs.Set) && 5 < b && (a = new goog.structs.Set(a));
  return goog.structs.every(this, function(b) {
    return goog.structs.contains(a, b);
  });
};
goog.structs.Set.prototype.__iterator__ = function(a) {
  return this.map_.__iterator__(!1);
};
goog.debug.LOGGING_ENABLED = goog.DEBUG;
goog.debug.catchErrors = function(a, b, c) {
  c = c || goog.global;
  var d = c.onerror, e = !!b;
  goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3") && (e = !e);
  c.onerror = function(b, c, h, k, m) {
    d && d(b, c, h, k, m);
    a({message:b, fileName:c, line:h, col:k, error:m});
    return e;
  };
};
goog.debug.expose = function(a, b) {
  if ("undefined" == typeof a) {
    return "undefined";
  }
  if (null == a) {
    return "NULL";
  }
  var c = [], d;
  for (d in a) {
    if (b || !goog.isFunction(a[d])) {
      var e = d + " \x3d ";
      try {
        e += a[d];
      } catch (f) {
        e += "*** " + f + " ***";
      }
      c.push(e);
    }
  }
  return c.join("\n");
};
goog.debug.deepExpose = function(a, b) {
  var c = [], d = function(a, f, g) {
    var h = f + "  ";
    g = new goog.structs.Set(g);
    try {
      if (goog.isDef(a)) {
        if (goog.isNull(a)) {
          c.push("NULL");
        } else {
          if (goog.isString(a)) {
            c.push('"' + a.replace(/\n/g, "\n" + f) + '"');
          } else {
            if (goog.isFunction(a)) {
              c.push(String(a).replace(/\n/g, "\n" + f));
            } else {
              if (goog.isObject(a)) {
                if (g.contains(a)) {
                  c.push("*** reference loop detected ***");
                } else {
                  g.add(a);
                  c.push("{");
                  for (var k in a) {
                    if (b || !goog.isFunction(a[k])) {
                      c.push("\n"), c.push(h), c.push(k + " \x3d "), d(a[k], h, g);
                    }
                  }
                  c.push("\n" + f + "}");
                }
              } else {
                c.push(a);
              }
            }
          }
        }
      } else {
        c.push("undefined");
      }
    } catch (m) {
      c.push("*** " + m + " ***");
    }
  };
  d(a, "", new goog.structs.Set);
  return c.join("");
};
goog.debug.exposeArray = function(a) {
  for (var b = [], c = 0;c < a.length;c++) {
    goog.isArray(a[c]) ? b.push(goog.debug.exposeArray(a[c])) : b.push(a[c]);
  }
  return "[ " + b.join(", ") + " ]";
};
goog.debug.exposeException = function(a, b) {
  var c = goog.debug.exposeExceptionAsHtml(a, b);
  return goog.html.SafeHtml.unwrap(c);
};
goog.debug.exposeExceptionAsHtml = function(a, b) {
  try {
    var c = goog.debug.normalizeErrorObject(a), d = goog.debug.createViewSourceUrl_(c.fileName);
    return goog.html.SafeHtml.concat(goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces("Message: " + c.message + "\nUrl: "), goog.html.SafeHtml.create("a", {href:d, target:"_new"}, c.fileName), goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces("\nLine: " + c.lineNumber + "\n\nBrowser stack:\n" + c.stack + "-\x3e [end]\n\nJS stack traversal:\n" + goog.debug.getStacktrace(b) + "-\x3e "));
  } catch (e) {
    return goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces("Exception trying to expose exception! You win, we lose. " + e);
  }
};
goog.debug.createViewSourceUrl_ = function(a) {
  goog.isDefAndNotNull(a) || (a = "");
  if (!/^https?:\/\//i.test(a)) {
    return goog.html.SafeUrl.fromConstant(goog.string.Const.from("sanitizedviewsrc"));
  }
  a = goog.html.SafeUrl.sanitize(a);
  return goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("view-source scheme plus HTTP/HTTPS URL"), "view-source:" + goog.html.SafeUrl.unwrap(a));
};
goog.debug.normalizeErrorObject = function(a) {
  var b = goog.getObjectByName("window.location.href");
  if (goog.isString(a)) {
    return {message:a, name:"Unknown error", lineNumber:"Not available", fileName:b, stack:"Not available"};
  }
  var c, d, e = !1;
  try {
    c = a.lineNumber || a.line || "Not available";
  } catch (f) {
    c = "Not available", e = !0;
  }
  try {
    d = a.fileName || a.filename || a.sourceURL || goog.global.$googDebugFname || b;
  } catch (f) {
    d = "Not available", e = !0;
  }
  return !e && a.lineNumber && a.fileName && a.stack && a.message && a.name ? a : {message:a.message || "Not available", name:a.name || "UnknownError", lineNumber:c, fileName:d, stack:a.stack || "Not available"};
};
goog.debug.enhanceError = function(a, b) {
  var c;
  "string" == typeof a ? (c = Error(a), Error.captureStackTrace && Error.captureStackTrace(c, goog.debug.enhanceError)) : c = a;
  c.stack || (c.stack = goog.debug.getStacktrace(goog.debug.enhanceError));
  if (b) {
    for (var d = 0;c["message" + d];) {
      ++d;
    }
    c["message" + d] = String(b);
  }
  return c;
};
goog.debug.getStacktraceSimple = function(a) {
  if (goog.STRICT_MODE_COMPATIBLE) {
    var b = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);
    if (b) {
      return b;
    }
  }
  for (var b = [], c = arguments.callee.caller, d = 0;c && (!a || d < a);) {
    b.push(goog.debug.getFunctionName(c));
    b.push("()\n");
    try {
      c = c.caller;
    } catch (e) {
      b.push("[exception trying to get caller]\n");
      break;
    }
    d++;
    if (d >= goog.debug.MAX_STACK_DEPTH) {
      b.push("[...long stack...]");
      break;
    }
  }
  a && d >= a ? b.push("[...reached max depth limit...]") : b.push("[end]");
  return b.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getNativeStackTrace_ = function(a) {
  var b = Error();
  if (Error.captureStackTrace) {
    return Error.captureStackTrace(b, a), String(b.stack);
  }
  try {
    throw b;
  } catch (c) {
    b = c;
  }
  return (a = b.stack) ? String(a) : null;
};
goog.debug.getStacktrace = function(a) {
  var b;
  goog.STRICT_MODE_COMPATIBLE && (b = goog.debug.getNativeStackTrace_(a || goog.debug.getStacktrace));
  b || (b = goog.debug.getStacktraceHelper_(a || arguments.callee.caller, []));
  return b;
};
goog.debug.getStacktraceHelper_ = function(a, b) {
  var c = [];
  if (goog.array.contains(b, a)) {
    c.push("[...circular reference...]");
  } else {
    if (a && b.length < goog.debug.MAX_STACK_DEPTH) {
      c.push(goog.debug.getFunctionName(a) + "(");
      for (var d = a.arguments, e = 0;d && e < d.length;e++) {
        0 < e && c.push(", ");
        var f;
        f = d[e];
        switch(typeof f) {
          case "object":
            f = f ? "object" : "null";
            break;
          case "string":
            break;
          case "number":
            f = String(f);
            break;
          case "boolean":
            f = f ? "true" : "false";
            break;
          case "function":
            f = (f = goog.debug.getFunctionName(f)) ? f : "[fn]";
            break;
          default:
            f = typeof f;
        }
        40 < f.length && (f = f.substr(0, 40) + "...");
        c.push(f);
      }
      b.push(a);
      c.push(")\n");
      try {
        c.push(goog.debug.getStacktraceHelper_(a.caller, b));
      } catch (g) {
        c.push("[exception trying to get caller]\n");
      }
    } else {
      a ? c.push("[...long stack...]") : c.push("[end]");
    }
  }
  return c.join("");
};
goog.debug.setFunctionResolver = function(a) {
  goog.debug.fnNameResolver_ = a;
};
goog.debug.getFunctionName = function(a) {
  if (goog.debug.fnNameCache_[a]) {
    return goog.debug.fnNameCache_[a];
  }
  if (goog.debug.fnNameResolver_) {
    var b = goog.debug.fnNameResolver_(a);
    if (b) {
      return goog.debug.fnNameCache_[a] = b;
    }
  }
  a = String(a);
  goog.debug.fnNameCache_[a] || (b = /function ([^\(]+)/.exec(a), goog.debug.fnNameCache_[a] = b ? b[1] : "[Anonymous]");
  return goog.debug.fnNameCache_[a];
};
goog.debug.makeWhitespaceVisible = function(a) {
  return a.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.runtimeType = function(a) {
  return a instanceof Function ? a.displayName || a.name || "unknown type name" : a instanceof Object ? a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a) : null === a ? "null" : typeof a;
};
goog.debug.fnNameCache_ = {};
goog.debug.LogRecord = function(a, b, c, d, e) {
  this.reset(a, b, c, d, e);
};
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = !0;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(a, b, c, d, e) {
  goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS && (this.sequenceNumber_ = "number" == typeof e ? e : goog.debug.LogRecord.nextSequenceNumber_++);
  this.time_ = d || goog.now();
  this.level_ = a;
  this.msg_ = b;
  this.loggerName_ = c;
  delete this.exception_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(a) {
  this.exception_ = a;
};
goog.debug.LogRecord.prototype.setLoggerName = function(a) {
  this.loggerName_ = a;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(a) {
  this.level_ = a;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(a) {
  this.msg_ = a;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(a) {
  this.time_ = a;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  goog.debug.LogBuffer.instance_ || (goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer);
  return goog.debug.LogBuffer.instance_;
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.addRecord = function(a, b, c) {
  var d = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = d;
  if (this.isFull_) {
    return d = this.buffer_[d], d.reset(a, b, c), d;
  }
  this.isFull_ = d == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[d] = new goog.debug.LogRecord(a, b, c);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return 0 < goog.debug.LogBuffer.CAPACITY;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = !1;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(a) {
  var b = this.buffer_;
  if (b[0]) {
    var c = this.curIndex_, d = this.isFull_ ? c : -1;
    do {
      d = (d + 1) % goog.debug.LogBuffer.CAPACITY, a(b[d]);
    } while (d != c);
  }
};
goog.debug.Logger = function(a) {
  this.name_ = a;
  this.handlers_ = this.children_ = this.level_ = this.parent_ = null;
};
goog.debug.Logger.ROOT_LOGGER_NAME = "";
goog.debug.Logger.ENABLE_HIERARCHY = !0;
goog.debug.Logger.ENABLE_HIERARCHY || (goog.debug.Logger.rootHandlers_ = []);
goog.debug.Logger.Level = function(a, b) {
  this.name = a;
  this.value = b;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var a = 0, b;b = goog.debug.Logger.Level.PREDEFINED_LEVELS[a];a++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[b.value] = b, goog.debug.Logger.Level.predefinedLevelsCache_[b.name] = b;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(a) {
  goog.debug.Logger.Level.predefinedLevelsCache_ || goog.debug.Logger.Level.createPredefinedLevelsCache_();
  return goog.debug.Logger.Level.predefinedLevelsCache_[a] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(a) {
  goog.debug.Logger.Level.predefinedLevelsCache_ || goog.debug.Logger.Level.createPredefinedLevelsCache_();
  if (a in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[a];
  }
  for (var b = 0;b < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++b) {
    var c = goog.debug.Logger.Level.PREDEFINED_LEVELS[b];
    if (c.value <= a) {
      return c;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(a) {
  return goog.debug.LogManager.getLogger(a);
};
goog.debug.Logger.logToProfilers = function(a) {
  goog.global.console && (goog.global.console.timeStamp ? goog.global.console.timeStamp(a) : goog.global.console.markTimeline && goog.global.console.markTimeline(a));
  goog.global.msWriteProfilerMark && goog.global.msWriteProfilerMark(a);
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(a) {
  goog.debug.LOGGING_ENABLED && (goog.debug.Logger.ENABLE_HIERARCHY ? (this.handlers_ || (this.handlers_ = []), this.handlers_.push(a)) : (goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when goog.debug.Logger.ENABLE_HIERARCHY is false."), goog.debug.Logger.rootHandlers_.push(a)));
};
goog.debug.Logger.prototype.removeHandler = function(a) {
  if (goog.debug.LOGGING_ENABLED) {
    var b = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return !!b && goog.array.remove(b, a);
  }
  return !1;
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  this.children_ || (this.children_ = {});
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(a) {
  goog.debug.LOGGING_ENABLED && (goog.debug.Logger.ENABLE_HIERARCHY ? this.level_ = a : (goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when goog.debug.Logger.ENABLE_HIERARCHY is false."), goog.debug.Logger.rootLevel_ = a));
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(a) {
  return goog.debug.LOGGING_ENABLED && a.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(a, b, c) {
  goog.debug.LOGGING_ENABLED && this.isLoggable(a) && (goog.isFunction(b) && (b = b()), this.doLogRecord_(this.getLogRecord(a, b, c)));
};
goog.debug.Logger.prototype.getLogRecord = function(a, b, c) {
  a = goog.debug.LogBuffer.isBufferingEnabled() ? goog.debug.LogBuffer.getInstance().addRecord(a, b, this.name_) : new goog.debug.LogRecord(a, String(b), this.name_);
  c && a.setException(c);
  return a;
};
goog.debug.Logger.prototype.shout = function(a, b) {
  goog.debug.LOGGING_ENABLED && this.log(goog.debug.Logger.Level.SHOUT, a, b);
};
goog.debug.Logger.prototype.severe = function(a, b) {
  goog.debug.LOGGING_ENABLED && this.log(goog.debug.Logger.Level.SEVERE, a, b);
};
goog.debug.Logger.prototype.warning = function(a, b) {
  goog.debug.LOGGING_ENABLED && this.log(goog.debug.Logger.Level.WARNING, a, b);
};
goog.debug.Logger.prototype.info = function(a, b) {
  goog.debug.LOGGING_ENABLED && this.log(goog.debug.Logger.Level.INFO, a, b);
};
goog.debug.Logger.prototype.config = function(a, b) {
  goog.debug.LOGGING_ENABLED && this.log(goog.debug.Logger.Level.CONFIG, a, b);
};
goog.debug.Logger.prototype.fine = function(a, b) {
  goog.debug.LOGGING_ENABLED && this.log(goog.debug.Logger.Level.FINE, a, b);
};
goog.debug.Logger.prototype.finer = function(a, b) {
  goog.debug.LOGGING_ENABLED && this.log(goog.debug.Logger.Level.FINER, a, b);
};
goog.debug.Logger.prototype.finest = function(a, b) {
  goog.debug.LOGGING_ENABLED && this.log(goog.debug.Logger.Level.FINEST, a, b);
};
goog.debug.Logger.prototype.logRecord = function(a) {
  goog.debug.LOGGING_ENABLED && this.isLoggable(a.getLevel()) && this.doLogRecord_(a);
};
goog.debug.Logger.prototype.doLogRecord_ = function(a) {
  goog.debug.Logger.logToProfilers("log:" + a.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    for (var b = this;b;) {
      b.callPublish_(a), b = b.getParent();
    }
  } else {
    for (var b = 0, c;c = goog.debug.Logger.rootHandlers_[b++];) {
      c(a);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(a) {
  if (this.handlers_) {
    for (var b = 0, c;c = this.handlers_[b];b++) {
      c(a);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(a) {
  this.parent_ = a;
};
goog.debug.Logger.prototype.addChild_ = function(a, b) {
  this.getChildren()[a] = b;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  goog.debug.LogManager.rootLogger_ || (goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME), goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] = goog.debug.LogManager.rootLogger_, goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG));
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_;
};
goog.debug.LogManager.getLogger = function(a) {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.loggers_[a] || goog.debug.LogManager.createLogger_(a);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(a) {
  return function(b) {
    (a || goog.debug.LogManager.getRoot()).severe("Error: " + b.message + " (" + b.fileName + " @ Line: " + b.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(a) {
  var b = new goog.debug.Logger(a);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var c = a.lastIndexOf("."), d = a.substr(0, c), c = a.substr(c + 1), d = goog.debug.LogManager.getLogger(d);
    d.addChild_(c, b);
    b.setParent_(d);
  }
  return goog.debug.LogManager.loggers_[a] = b;
};
goog.log = {};
goog.log.ENABLED = goog.debug.LOGGING_ENABLED;
goog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(a, b) {
  if (goog.log.ENABLED) {
    var c = goog.debug.LogManager.getLogger(a);
    b && c && c.setLevel(b);
    return c;
  }
  return null;
};
goog.log.addHandler = function(a, b) {
  goog.log.ENABLED && a && a.addHandler(b);
};
goog.log.removeHandler = function(a, b) {
  return goog.log.ENABLED && a ? a.removeHandler(b) : !1;
};
goog.log.log = function(a, b, c, d) {
  goog.log.ENABLED && a && a.log(b, c, d);
};
goog.log.error = function(a, b, c) {
  goog.log.ENABLED && a && a.severe(b, c);
};
goog.log.warning = function(a, b, c) {
  goog.log.ENABLED && a && a.warning(b, c);
};
goog.log.info = function(a, b, c) {
  goog.log.ENABLED && a && a.info(b, c);
};
goog.log.fine = function(a, b, c) {
  goog.log.ENABLED && a && a.fine(b, c);
};
goog.net = {};
goog.net.xpc = {};
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6, DIRECT:7};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport", 7:"DirectTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph", ONE_SIDED_HANDSHAKE:"osh", ROLE:"role", NATIVE_TRANSPORT_PROTOCOL_VERSION:"nativeProtocolVersion", DIRECT_TRANSPORT_SYNC_MODE:"directSyncMode"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_NTPV2 = "SETUP_NTPV2";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.SETUP_ACK_NTPV2 = "SETUP_ACK_NTPV2";
goog.net.xpc.channels = {};
goog.net.xpc.getRandomString = function(a, b) {
  for (var c = b || goog.net.xpc.randomStringCharacters_, d = c.length, e = "";0 < a--;) {
    e += c.charAt(Math.floor(Math.random() * d));
  }
  return e;
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.log.getLogger("goog.net.xpc");
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function(a, b, c) {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(a) {
  goog.exportProperty(a.prototype, "then", a.prototype.then);
  COMPILED ? a.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = !0 : a.prototype.$goog_Thenable = !0;
};
goog.Thenable.isImplementedBy = function(a) {
  if (!a) {
    return !1;
  }
  try {
    return COMPILED ? !!a[goog.Thenable.IMPLEMENTED_BY_PROP] : !!a.$goog_Thenable;
  } catch (b) {
    return !1;
  }
};
goog.async = {};
goog.async.FreeList = function(a, b, c) {
  this.limit_ = c;
  this.create_ = a;
  this.reset_ = b;
  this.occupants_ = 0;
  this.head_ = null;
};
goog.async.FreeList.prototype.get = function() {
  var a;
  0 < this.occupants_ ? (this.occupants_--, a = this.head_, this.head_ = a.next, a.next = null) : a = this.create_();
  return a;
};
goog.async.FreeList.prototype.put = function(a) {
  this.reset_(a);
  this.occupants_ < this.limit_ && (this.occupants_++, a.next = this.head_, this.head_ = a);
};
goog.async.FreeList.prototype.occupants = function() {
  return this.occupants_;
};
goog.async.WorkQueue = function() {
  this.workTail_ = this.workHead_ = null;
};
goog.async.WorkQueue.DEFAULT_MAX_UNUSED = 100;
goog.async.WorkQueue.freelist_ = new goog.async.FreeList(function() {
  return new goog.async.WorkItem;
}, function(a) {
  a.reset();
}, goog.async.WorkQueue.DEFAULT_MAX_UNUSED);
goog.async.WorkQueue.prototype.add = function(a, b) {
  var c = this.getUnusedItem_();
  c.set(a, b);
  this.workTail_ ? this.workTail_.next = c : (goog.asserts.assert(!this.workHead_), this.workHead_ = c);
  this.workTail_ = c;
};
goog.async.WorkQueue.prototype.remove = function() {
  var a = null;
  this.workHead_ && (a = this.workHead_, this.workHead_ = this.workHead_.next, this.workHead_ || (this.workTail_ = null), a.next = null);
  return a;
};
goog.async.WorkQueue.prototype.returnUnused = function(a) {
  goog.async.WorkQueue.freelist_.put(a);
};
goog.async.WorkQueue.prototype.getUnusedItem_ = function() {
  return goog.async.WorkQueue.freelist_.get();
};
goog.async.WorkItem = function() {
  this.next = this.scope = this.fn = null;
};
goog.async.WorkItem.prototype.set = function(a, b) {
  this.fn = a;
  this.scope = b;
  this.next = null;
};
goog.async.WorkItem.prototype.reset = function() {
  this.next = this.scope = this.fn = null;
};
goog.debug.entryPointRegistry = {};
goog.debug.EntryPointMonitor = function() {
};
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = !1;
goog.debug.entryPointRegistry.register = function(a) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = a;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    for (var b = goog.debug.entryPointRegistry.monitors_, c = 0;c < b.length;c++) {
      a(goog.bind(b[c].wrap, b[c]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(a) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = !0;
  for (var b = goog.bind(a.wrap, a), c = 0;c < goog.debug.entryPointRegistry.refList_.length;c++) {
    goog.debug.entryPointRegistry.refList_[c](b);
  }
  goog.debug.entryPointRegistry.monitors_.push(a);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(a) {
  var b = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(a == b[b.length - 1], "Only the most recent monitor can be unwrapped.");
  a = goog.bind(a.unwrap, a);
  for (var c = 0;c < goog.debug.entryPointRegistry.refList_.length;c++) {
    goog.debug.entryPointRegistry.refList_[c](a);
  }
  b.length--;
};
goog.async.throwException = function(a) {
  goog.global.setTimeout(function() {
    throw a;
  }, 0);
};
goog.async.nextTick = function(a, b, c) {
  var d = a;
  b && (d = goog.bind(a, b));
  d = goog.async.nextTick.wrapCallback_(d);
  !goog.isFunction(goog.global.setImmediate) || !c && goog.global.Window && goog.global.Window.prototype && goog.global.Window.prototype.setImmediate == goog.global.setImmediate ? (goog.async.nextTick.setImmediate_ || (goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_()), goog.async.nextTick.setImmediate_(d)) : goog.global.setImmediate(d);
};
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var a = goog.global.MessageChannel;
  "undefined" === typeof a && "undefined" !== typeof window && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto() && (a = function() {
    var a = document.createElement(goog.dom.TagName.IFRAME);
    a.style.display = "none";
    a.src = "";
    document.documentElement.appendChild(a);
    var b = a.contentWindow, a = b.document;
    a.open();
    a.write("");
    a.close();
    var c = "callImmediate" + Math.random(), d = "file:" == b.location.protocol ? "*" : b.location.protocol + "//" + b.location.host, a = goog.bind(function(a) {
      if (("*" == d || a.origin == d) && a.data == c) {
        this.port1.onmessage();
      }
    }, this);
    b.addEventListener("message", a, !1);
    this.port1 = {};
    this.port2 = {postMessage:function() {
      b.postMessage(c, d);
    }};
  });
  if ("undefined" !== typeof a && !goog.labs.userAgent.browser.isIE()) {
    var b = new a, c = {}, d = c;
    b.port1.onmessage = function() {
      if (goog.isDef(c.next)) {
        c = c.next;
        var a = c.cb;
        c.cb = null;
        a();
      }
    };
    return function(a) {
      d.next = {cb:a};
      d = d.next;
      b.port2.postMessage(0);
    };
  }
  return "undefined" !== typeof document && "onreadystatechange" in document.createElement(goog.dom.TagName.SCRIPT) ? function(a) {
    var b = document.createElement(goog.dom.TagName.SCRIPT);
    b.onreadystatechange = function() {
      b.onreadystatechange = null;
      b.parentNode.removeChild(b);
      b = null;
      a();
      a = null;
    };
    document.documentElement.appendChild(b);
  } : function(a) {
    goog.global.setTimeout(a, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(a) {
  goog.async.nextTick.wrapCallback_ = a;
});
goog.async.run = function(a, b) {
  goog.async.run.schedule_ || goog.async.run.initializeRunner_();
  goog.async.run.workQueueScheduled_ || (goog.async.run.schedule_(), goog.async.run.workQueueScheduled_ = !0);
  goog.async.run.workQueue_.add(a, b);
};
goog.async.run.initializeRunner_ = function() {
  if (goog.global.Promise && goog.global.Promise.resolve) {
    var a = goog.global.Promise.resolve(void 0);
    goog.async.run.schedule_ = function() {
      a.then(goog.async.run.processWorkQueue);
    };
  } else {
    goog.async.run.schedule_ = function() {
      goog.async.nextTick(goog.async.run.processWorkQueue);
    };
  }
};
goog.async.run.forceNextTick = function(a) {
  goog.async.run.schedule_ = function() {
    goog.async.nextTick(goog.async.run.processWorkQueue);
    a && a(goog.async.run.processWorkQueue);
  };
};
goog.async.run.workQueueScheduled_ = !1;
goog.async.run.workQueue_ = new goog.async.WorkQueue;
goog.DEBUG && (goog.async.run.resetQueue = function() {
  goog.async.run.workQueueScheduled_ = !1;
  goog.async.run.workQueue_ = new goog.async.WorkQueue;
});
goog.async.run.processWorkQueue = function() {
  for (var a = null;a = goog.async.run.workQueue_.remove();) {
    try {
      a.fn.call(a.scope);
    } catch (b) {
      goog.async.throwException(b);
    }
    goog.async.run.workQueue_.returnUnused(a);
  }
  goog.async.run.workQueueScheduled_ = !1;
};
goog.promise = {};
goog.promise.Resolver = function() {
};
goog.Promise = function(a, b) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = void 0;
  this.callbackEntriesTail_ = this.callbackEntries_ = this.parent_ = null;
  this.executing_ = !1;
  0 < goog.Promise.UNHANDLED_REJECTION_DELAY ? this.unhandledRejectionId_ = 0 : 0 == goog.Promise.UNHANDLED_REJECTION_DELAY && (this.hadUnhandledRejection_ = !1);
  goog.Promise.LONG_STACK_TRACES && (this.stack_ = [], this.addStackTrace_(Error("created")), this.currentStep_ = 0);
  if (a != goog.nullFunction) {
    try {
      var c = this;
      a.call(b, function(a) {
        c.resolve_(goog.Promise.State_.FULFILLED, a);
      }, function(a) {
        if (goog.DEBUG && !(a instanceof goog.Promise.CancellationError)) {
          try {
            if (a instanceof Error) {
              throw a;
            }
            throw Error("Promise rejected.");
          } catch (b) {
          }
        }
        c.resolve_(goog.Promise.State_.REJECTED, a);
      });
    } catch (d) {
      this.resolve_(goog.Promise.State_.REJECTED, d);
    }
  }
};
goog.Promise.LONG_STACK_TRACES = !1;
goog.Promise.UNHANDLED_REJECTION_DELAY = 0;
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_ = function() {
  this.next = this.context = this.onRejected = this.onFulfilled = this.child = null;
  this.always = !1;
};
goog.Promise.CallbackEntry_.prototype.reset = function() {
  this.context = this.onRejected = this.onFulfilled = this.child = null;
  this.always = !1;
};
goog.Promise.DEFAULT_MAX_UNUSED = 100;
goog.Promise.freelist_ = new goog.async.FreeList(function() {
  return new goog.Promise.CallbackEntry_;
}, function(a) {
  a.reset();
}, goog.Promise.DEFAULT_MAX_UNUSED);
goog.Promise.getCallbackEntry_ = function(a, b, c) {
  var d = goog.Promise.freelist_.get();
  d.onFulfilled = a;
  d.onRejected = b;
  d.context = c;
  return d;
};
goog.Promise.returnEntry_ = function(a) {
  goog.Promise.freelist_.put(a);
};
goog.Promise.resolve = function(a) {
  if (a instanceof goog.Promise) {
    return a;
  }
  var b = new goog.Promise(goog.nullFunction);
  b.resolve_(goog.Promise.State_.FULFILLED, a);
  return b;
};
goog.Promise.reject = function(a) {
  return new goog.Promise(function(b, c) {
    c(a);
  });
};
goog.Promise.resolveThen_ = function(a, b, c) {
  goog.Promise.maybeThen_(a, b, c, null) || goog.async.run(goog.partial(b, a));
};
goog.Promise.race = function(a) {
  return new goog.Promise(function(b, c) {
    a.length || b(void 0);
    for (var d = 0, e;d < a.length;d++) {
      e = a[d], goog.Promise.resolveThen_(e, b, c);
    }
  });
};
goog.Promise.all = function(a) {
  return new goog.Promise(function(b, c) {
    var d = a.length, e = [];
    if (d) {
      for (var f = function(a, c) {
        d--;
        e[a] = c;
        0 == d && b(e);
      }, g = function(a) {
        c(a);
      }, h = 0, k;h < a.length;h++) {
        k = a[h], goog.Promise.resolveThen_(k, goog.partial(f, h), g);
      }
    } else {
      b(e);
    }
  });
};
goog.Promise.allSettled = function(a) {
  return new goog.Promise(function(b, c) {
    var d = a.length, e = [];
    if (d) {
      for (var f = function(a, c, f) {
        d--;
        e[a] = c ? {fulfilled:!0, value:f} : {fulfilled:!1, reason:f};
        0 == d && b(e);
      }, g = 0, h;g < a.length;g++) {
        h = a[g], goog.Promise.resolveThen_(h, goog.partial(f, g, !0), goog.partial(f, g, !1));
      }
    } else {
      b(e);
    }
  });
};
goog.Promise.firstFulfilled = function(a) {
  return new goog.Promise(function(b, c) {
    var d = a.length, e = [];
    if (d) {
      for (var f = function(a) {
        b(a);
      }, g = function(a, b) {
        d--;
        e[a] = b;
        0 == d && c(e);
      }, h = 0, k;h < a.length;h++) {
        k = a[h], goog.Promise.resolveThen_(k, f, goog.partial(g, h));
      }
    } else {
      b(void 0);
    }
  });
};
goog.Promise.withResolver = function() {
  var a, b, c = new goog.Promise(function(c, e) {
    a = c;
    b = e;
  });
  return new goog.Promise.Resolver_(c, a, b);
};
goog.Promise.prototype.then = function(a, b, c) {
  null != a && goog.asserts.assertFunction(a, "opt_onFulfilled should be a function.");
  null != b && goog.asserts.assertFunction(b, "opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?");
  goog.Promise.LONG_STACK_TRACES && this.addStackTrace_(Error("then"));
  return this.addChildPromise_(goog.isFunction(a) ? a : null, goog.isFunction(b) ? b : null, c);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenVoid = function(a, b, c) {
  null != a && goog.asserts.assertFunction(a, "opt_onFulfilled should be a function.");
  null != b && goog.asserts.assertFunction(b, "opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?");
  goog.Promise.LONG_STACK_TRACES && this.addStackTrace_(Error("then"));
  this.addCallbackEntry_(goog.Promise.getCallbackEntry_(a || goog.nullFunction, b || null, c));
};
goog.Promise.prototype.thenAlways = function(a, b) {
  goog.Promise.LONG_STACK_TRACES && this.addStackTrace_(Error("thenAlways"));
  var c = goog.Promise.getCallbackEntry_(a, a, b);
  c.always = !0;
  this.addCallbackEntry_(c);
  return this;
};
goog.Promise.prototype.thenCatch = function(a, b) {
  goog.Promise.LONG_STACK_TRACES && this.addStackTrace_(Error("thenCatch"));
  return this.addChildPromise_(null, a, b);
};
goog.Promise.prototype.cancel = function(a) {
  this.state_ == goog.Promise.State_.PENDING && goog.async.run(function() {
    var b = new goog.Promise.CancellationError(a);
    this.cancelInternal_(b);
  }, this);
};
goog.Promise.prototype.cancelInternal_ = function(a) {
  this.state_ == goog.Promise.State_.PENDING && (this.parent_ ? (this.parent_.cancelChild_(this, a), this.parent_ = null) : this.resolve_(goog.Promise.State_.REJECTED, a));
};
goog.Promise.prototype.cancelChild_ = function(a, b) {
  if (this.callbackEntries_) {
    for (var c = 0, d = null, e = null, f = this.callbackEntries_;f && (f.always || (c++, f.child == a && (d = f), !(d && 1 < c)));f = f.next) {
      d || (e = f);
    }
    d && (this.state_ == goog.Promise.State_.PENDING && 1 == c ? this.cancelInternal_(b) : (e ? this.removeEntryAfter_(e) : this.popEntry_(), this.executeCallback_(d, goog.Promise.State_.REJECTED, b)));
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(a) {
  this.hasEntry_() || this.state_ != goog.Promise.State_.FULFILLED && this.state_ != goog.Promise.State_.REJECTED || this.scheduleCallbacks_();
  this.queueEntry_(a);
};
goog.Promise.prototype.addChildPromise_ = function(a, b, c) {
  var d = goog.Promise.getCallbackEntry_(null, null, null);
  d.child = new goog.Promise(function(e, f) {
    d.onFulfilled = a ? function(b) {
      try {
        var d = a.call(c, b);
        e(d);
      } catch (k) {
        f(k);
      }
    } : e;
    d.onRejected = b ? function(a) {
      try {
        var d = b.call(c, a);
        !goog.isDef(d) && a instanceof goog.Promise.CancellationError ? f(a) : e(d);
      } catch (k) {
        f(k);
      }
    } : f;
  });
  d.child.parent_ = this;
  this.addCallbackEntry_(d);
  return d.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(a) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, a);
};
goog.Promise.prototype.unblockAndReject_ = function(a) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, a);
};
goog.Promise.prototype.resolve_ = function(a, b) {
  this.state_ == goog.Promise.State_.PENDING && (this == b && (a = goog.Promise.State_.REJECTED, b = new TypeError("Promise cannot resolve to itself")), this.state_ = goog.Promise.State_.BLOCKED, goog.Promise.maybeThen_(b, this.unblockAndFulfill_, this.unblockAndReject_, this) || (this.result_ = b, this.state_ = a, this.parent_ = null, this.scheduleCallbacks_(), a != goog.Promise.State_.REJECTED || b instanceof goog.Promise.CancellationError || goog.Promise.addUnhandledRejection_(this, b)));
};
goog.Promise.maybeThen_ = function(a, b, c, d) {
  if (a instanceof goog.Promise) {
    return a.thenVoid(b, c, d), !0;
  }
  if (goog.Thenable.isImplementedBy(a)) {
    return a.then(b, c, d), !0;
  }
  if (goog.isObject(a)) {
    try {
      var e = a.then;
      if (goog.isFunction(e)) {
        return goog.Promise.tryThen_(a, e, b, c, d), !0;
      }
    } catch (f) {
      return c.call(d, f), !0;
    }
  }
  return !1;
};
goog.Promise.tryThen_ = function(a, b, c, d, e) {
  var f = !1, g = function(a) {
    f || (f = !0, c.call(e, a));
  }, h = function(a) {
    f || (f = !0, d.call(e, a));
  };
  try {
    b.call(a, g, h);
  } catch (k) {
    h(k);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  this.executing_ || (this.executing_ = !0, goog.async.run(this.executeCallbacks_, this));
};
goog.Promise.prototype.hasEntry_ = function() {
  return !!this.callbackEntries_;
};
goog.Promise.prototype.queueEntry_ = function(a) {
  goog.asserts.assert(null != a.onFulfilled);
  this.callbackEntriesTail_ ? this.callbackEntriesTail_.next = a : this.callbackEntries_ = a;
  this.callbackEntriesTail_ = a;
};
goog.Promise.prototype.popEntry_ = function() {
  var a = null;
  this.callbackEntries_ && (a = this.callbackEntries_, this.callbackEntries_ = a.next, a.next = null);
  this.callbackEntries_ || (this.callbackEntriesTail_ = null);
  null != a && goog.asserts.assert(null != a.onFulfilled);
  return a;
};
goog.Promise.prototype.removeEntryAfter_ = function(a) {
  goog.asserts.assert(this.callbackEntries_);
  goog.asserts.assert(null != a);
  a.next == this.callbackEntriesTail_ && (this.callbackEntriesTail_ = a);
  a.next = a.next.next;
};
goog.Promise.prototype.executeCallbacks_ = function() {
  for (var a = null;a = this.popEntry_();) {
    goog.Promise.LONG_STACK_TRACES && this.currentStep_++, this.executeCallback_(a, this.state_, this.result_);
  }
  this.executing_ = !1;
};
goog.Promise.prototype.executeCallback_ = function(a, b, c) {
  b == goog.Promise.State_.REJECTED && a.onRejected && !a.always && this.removeUnhandledRejection_();
  if (a.child) {
    a.child.parent_ = null, goog.Promise.invokeCallback_(a, b, c);
  } else {
    try {
      a.always ? a.onFulfilled.call(a.context) : goog.Promise.invokeCallback_(a, b, c);
    } catch (d) {
      goog.Promise.handleRejection_.call(null, d);
    }
  }
  goog.Promise.returnEntry_(a);
};
goog.Promise.invokeCallback_ = function(a, b, c) {
  b == goog.Promise.State_.FULFILLED ? a.onFulfilled.call(a.context, c) : a.onRejected && a.onRejected.call(a.context, c);
};
goog.Promise.prototype.addStackTrace_ = function(a) {
  if (goog.Promise.LONG_STACK_TRACES && goog.isString(a.stack)) {
    var b = a.stack.split("\n", 4)[3];
    a = a.message;
    a += Array(11 - a.length).join(" ");
    this.stack_.push(a + b);
  }
};
goog.Promise.prototype.appendLongStack_ = function(a) {
  if (goog.Promise.LONG_STACK_TRACES && a && goog.isString(a.stack) && this.stack_.length) {
    for (var b = ["Promise trace:"], c = this;c;c = c.parent_) {
      for (var d = this.currentStep_;0 <= d;d--) {
        b.push(c.stack_[d]);
      }
      b.push("Value: [" + (c.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] \x3c" + String(c.result_) + "\x3e");
    }
    a.stack += "\n\n" + b.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (0 < goog.Promise.UNHANDLED_REJECTION_DELAY) {
    for (var a = this;a && a.unhandledRejectionId_;a = a.parent_) {
      goog.global.clearTimeout(a.unhandledRejectionId_), a.unhandledRejectionId_ = 0;
    }
  } else {
    if (0 == goog.Promise.UNHANDLED_REJECTION_DELAY) {
      for (a = this;a && a.hadUnhandledRejection_;a = a.parent_) {
        a.hadUnhandledRejection_ = !1;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(a, b) {
  0 < goog.Promise.UNHANDLED_REJECTION_DELAY ? a.unhandledRejectionId_ = goog.global.setTimeout(function() {
    a.appendLongStack_(b);
    goog.Promise.handleRejection_.call(null, b);
  }, goog.Promise.UNHANDLED_REJECTION_DELAY) : 0 == goog.Promise.UNHANDLED_REJECTION_DELAY && (a.hadUnhandledRejection_ = !0, goog.async.run(function() {
    a.hadUnhandledRejection_ && (a.appendLongStack_(b), goog.Promise.handleRejection_.call(null, b));
  }));
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(a) {
  goog.Promise.handleRejection_ = a;
};
goog.Promise.CancellationError = function(a) {
  goog.debug.Error.call(this, a);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(a, b, c) {
  this.promise = a;
  this.resolve = b;
  this.reject = c;
};
goog.disposable = {};
goog.disposable.IDisposable = function() {
};
goog.Disposable = function() {
  goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF && (goog.Disposable.INCLUDE_STACK_ON_CREATION && (this.creationStack = Error().stack), goog.Disposable.instances_[goog.getUid(this)] = this);
  this.disposed_ = this.disposed_;
  this.onDisposeCallbacks_ = this.onDisposeCallbacks_;
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.Disposable.MONITORING_MODE = 0;
goog.Disposable.INCLUDE_STACK_ON_CREATION = !0;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var a = [], b;
  for (b in goog.Disposable.instances_) {
    goog.Disposable.instances_.hasOwnProperty(b) && a.push(goog.Disposable.instances_[Number(b)]);
  }
  return a;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = !1;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_ && (this.disposed_ = !0, this.disposeInternal(), goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF)) {
    var a = goog.getUid(this);
    if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(a)) {
      throw Error(this + " did not call the goog.Disposable base constructor or was disposed of after a clearUndisposedObjects call");
    }
    delete goog.Disposable.instances_[a];
  }
};
goog.Disposable.prototype.registerDisposable = function(a) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, a));
};
goog.Disposable.prototype.addOnDisposeCallback = function(a, b) {
  this.disposed_ ? a.call(b) : (this.onDisposeCallbacks_ || (this.onDisposeCallbacks_ = []), this.onDisposeCallbacks_.push(goog.isDef(b) ? goog.bind(a, b) : a));
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    for (;this.onDisposeCallbacks_.length;) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(a) {
  return a && "function" == typeof a.isDisposed ? a.isDisposed() : !1;
};
goog.dispose = function(a) {
  a && "function" == typeof a.dispose && a.dispose();
};
goog.disposeAll = function(a) {
  for (var b = 0, c = arguments.length;b < c;++b) {
    var d = arguments[b];
    goog.isArrayLike(d) ? goog.disposeAll.apply(null, d) : goog.dispose(d);
  }
};
goog.events = {};
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global.document && document.documentElement && "ontouchstart" in document.documentElement) || !(!goog.global.navigator || 
!goog.global.navigator.msMaxTouchPoints)};
goog.events.EventId = function(a) {
  this.id = a;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.events.Event = function(a, b) {
  this.type = a instanceof goog.events.EventId ? String(a) : a;
  this.currentTarget = this.target = b;
  this.defaultPrevented = this.propagationStopped_ = !1;
  this.returnValue_ = !0;
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = !0;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = !0;
  this.returnValue_ = !1;
};
goog.events.Event.stopPropagation = function(a) {
  a.stopPropagation();
};
goog.events.Event.preventDefault = function(a) {
  a.preventDefault();
};
goog.events.getVendorPrefixedName_ = function(a) {
  return goog.userAgent.WEBKIT ? "webkit" + a : goog.userAgent.OPERA ? "o" + a.toLowerCase() : a.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", WHEEL:"wheel", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", 
CHANGE:"change", RESET:"reset", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", 
LOSECAPTURE:"losecapture", ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), 
ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", 
MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXT:"text", 
TEXTINPUT:"textInput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", 
DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified", BEFOREPRINT:"beforeprint", AFTERPRINT:"afterprint"};
goog.reflect = {};
goog.reflect.object = function(a, b) {
  return b;
};
goog.reflect.sinkValue = function(a) {
  goog.reflect.sinkValue[" "](a);
  return a;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(a, b) {
  try {
    return goog.reflect.sinkValue(a[b]), !0;
  } catch (c) {
  }
  return !1;
};
goog.events.BrowserEvent = function(a, b) {
  goog.events.Event.call(this, a ? a.type : "");
  this.relatedTarget = this.currentTarget = this.target = null;
  this.charCode = this.keyCode = this.button = this.screenY = this.screenX = this.clientY = this.clientX = this.offsetY = this.offsetX = 0;
  this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;
  this.state = null;
  this.platformModifierKey = !1;
  this.event_ = null;
  a && this.init(a, b);
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(a, b) {
  var c = this.type = a.type, d = a.changedTouches ? a.changedTouches[0] : null;
  this.target = a.target || a.srcElement;
  this.currentTarget = b;
  var e = a.relatedTarget;
  e ? goog.userAgent.GECKO && (goog.reflect.canAccessProperty(e, "nodeName") || (e = null)) : c == goog.events.EventType.MOUSEOVER ? e = a.fromElement : c == goog.events.EventType.MOUSEOUT && (e = a.toElement);
  this.relatedTarget = e;
  goog.isNull(d) ? (this.offsetX = goog.userAgent.WEBKIT || void 0 !== a.offsetX ? a.offsetX : a.layerX, this.offsetY = goog.userAgent.WEBKIT || void 0 !== a.offsetY ? a.offsetY : a.layerY, this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX, this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY, this.screenX = a.screenX || 0, this.screenY = a.screenY || 0) : (this.clientX = void 0 !== d.clientX ? d.clientX : d.pageX, this.clientY = void 0 !== d.clientY ? d.clientY : d.pageY, this.screenX = 
  d.screenX || 0, this.screenY = d.screenY || 0);
  this.button = a.button;
  this.keyCode = a.keyCode || 0;
  this.charCode = a.charCode || ("keypress" == c ? a.keyCode : 0);
  this.ctrlKey = a.ctrlKey;
  this.altKey = a.altKey;
  this.shiftKey = a.shiftKey;
  this.metaKey = a.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? a.metaKey : a.ctrlKey;
  this.state = a.state;
  this.event_ = a;
  a.defaultPrevented && this.preventDefault();
};
goog.events.BrowserEvent.prototype.isButton = function(a) {
  return goog.events.BrowserFeature.HAS_W3C_BUTTON ? this.event_.button == a : "click" == this.type ? a == goog.events.BrowserEvent.MouseButton.LEFT : !!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[a]);
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  this.event_.stopPropagation ? this.event_.stopPropagation() : this.event_.cancelBubble = !0;
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var a = this.event_;
  if (a.preventDefault) {
    a.preventDefault();
  } else {
    if (a.returnValue = !1, goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode) {
          a.keyCode = -1;
        }
      } catch (b) {
      }
    }
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (1E6 * Math.random() | 0);
goog.events.Listenable.addImplementation = function(a) {
  a.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = !0;
};
goog.events.Listenable.isImplementedBy = function(a) {
  return !(!a || !a[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return ++goog.events.ListenableKey.counter_;
};
goog.events.Listener = function(a, b, c, d, e, f) {
  goog.events.Listener.ENABLE_MONITORING && (this.creationStack = Error().stack);
  this.listener = a;
  this.proxy = b;
  this.src = c;
  this.type = d;
  this.capture = !!e;
  this.handler = f;
  this.key = goog.events.ListenableKey.reserveKey();
  this.removed = this.callOnce = !1;
};
goog.events.Listener.ENABLE_MONITORING = !1;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = !0;
  this.handler = this.src = this.proxy = this.listener = null;
};
goog.events.ListenerMap = function(a) {
  this.src = a;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var a = 0, b;
  for (b in this.listeners) {
    a += this.listeners[b].length;
  }
  return a;
};
goog.events.ListenerMap.prototype.add = function(a, b, c, d, e) {
  var f = a.toString();
  a = this.listeners[f];
  a || (a = this.listeners[f] = [], this.typeCount_++);
  var g = goog.events.ListenerMap.findListenerIndex_(a, b, d, e);
  -1 < g ? (b = a[g], c || (b.callOnce = !1)) : (b = new goog.events.Listener(b, null, this.src, f, !!d, e), b.callOnce = c, a.push(b));
  return b;
};
goog.events.ListenerMap.prototype.remove = function(a, b, c, d) {
  a = a.toString();
  if (!(a in this.listeners)) {
    return !1;
  }
  var e = this.listeners[a];
  b = goog.events.ListenerMap.findListenerIndex_(e, b, c, d);
  return -1 < b ? (e[b].markAsRemoved(), goog.array.removeAt(e, b), 0 == e.length && (delete this.listeners[a], this.typeCount_--), !0) : !1;
};
goog.events.ListenerMap.prototype.removeByKey = function(a) {
  var b = a.type;
  if (!(b in this.listeners)) {
    return !1;
  }
  var c = goog.array.remove(this.listeners[b], a);
  c && (a.markAsRemoved(), 0 == this.listeners[b].length && (delete this.listeners[b], this.typeCount_--));
  return c;
};
goog.events.ListenerMap.prototype.removeAll = function(a) {
  a = a && a.toString();
  var b = 0, c;
  for (c in this.listeners) {
    if (!a || c == a) {
      for (var d = this.listeners[c], e = 0;e < d.length;e++) {
        ++b, d[e].markAsRemoved();
      }
      delete this.listeners[c];
      this.typeCount_--;
    }
  }
  return b;
};
goog.events.ListenerMap.prototype.getListeners = function(a, b) {
  var c = this.listeners[a.toString()], d = [];
  if (c) {
    for (var e = 0;e < c.length;++e) {
      var f = c[e];
      f.capture == b && d.push(f);
    }
  }
  return d;
};
goog.events.ListenerMap.prototype.getListener = function(a, b, c, d) {
  a = this.listeners[a.toString()];
  var e = -1;
  a && (e = goog.events.ListenerMap.findListenerIndex_(a, b, c, d));
  return -1 < e ? a[e] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(a, b) {
  var c = goog.isDef(a), d = c ? a.toString() : "", e = goog.isDef(b);
  return goog.object.some(this.listeners, function(a, g) {
    for (var h = 0;h < a.length;++h) {
      if (!(c && a[h].type != d || e && a[h].capture != b)) {
        return !0;
      }
    }
    return !1;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(a, b, c, d) {
  for (var e = 0;e < a.length;++e) {
    var f = a[e];
    if (!f.removed && f.listener == b && f.capture == !!c && f.handler == d) {
      return e;
    }
  }
  return -1;
};
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (1E6 * Math.random() | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.events.CAPTURE_SIMULATION_MODE = 2;
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(a, b, c, d, e) {
  if (goog.isArray(b)) {
    for (var f = 0;f < b.length;f++) {
      goog.events.listen(a, b[f], c, d, e);
    }
    return null;
  }
  c = goog.events.wrapListener(c);
  return goog.events.Listenable.isImplementedBy(a) ? a.listen(b, c, d, e) : goog.events.listen_(a, b, c, !1, d, e);
};
goog.events.listen_ = function(a, b, c, d, e, f) {
  if (!b) {
    throw Error("Invalid event type");
  }
  var g = !!e;
  if (g && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      return goog.asserts.fail("Can not register capture listener in IE8-."), null;
    }
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
      return null;
    }
  }
  var h = goog.events.getListenerMap_(a);
  h || (a[goog.events.LISTENER_MAP_PROP_] = h = new goog.events.ListenerMap(a));
  c = h.add(b, c, d, e, f);
  if (c.proxy) {
    return c;
  }
  d = goog.events.getProxy();
  c.proxy = d;
  d.src = a;
  d.listener = c;
  if (a.addEventListener) {
    a.addEventListener(b.toString(), d, g);
  } else {
    if (a.attachEvent) {
      a.attachEvent(goog.events.getOnString_(b.toString()), d);
    } else {
      throw Error("addEventListener and attachEvent are unavailable.");
    }
  }
  goog.events.listenerCountEstimate_++;
  return c;
};
goog.events.getProxy = function() {
  var a = goog.events.handleBrowserEvent_, b = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(c) {
    return a.call(b.src, b.listener, c);
  } : function(c) {
    c = a.call(b.src, b.listener, c);
    if (!c) {
      return c;
    }
  };
  return b;
};
goog.events.listenOnce = function(a, b, c, d, e) {
  if (goog.isArray(b)) {
    for (var f = 0;f < b.length;f++) {
      goog.events.listenOnce(a, b[f], c, d, e);
    }
    return null;
  }
  c = goog.events.wrapListener(c);
  return goog.events.Listenable.isImplementedBy(a) ? a.listenOnce(b, c, d, e) : goog.events.listen_(a, b, c, !0, d, e);
};
goog.events.listenWithWrapper = function(a, b, c, d, e) {
  b.listen(a, c, d, e);
};
goog.events.unlisten = function(a, b, c, d, e) {
  if (goog.isArray(b)) {
    for (var f = 0;f < b.length;f++) {
      goog.events.unlisten(a, b[f], c, d, e);
    }
    return null;
  }
  c = goog.events.wrapListener(c);
  if (goog.events.Listenable.isImplementedBy(a)) {
    return a.unlisten(b, c, d, e);
  }
  if (!a) {
    return !1;
  }
  d = !!d;
  if (a = goog.events.getListenerMap_(a)) {
    if (b = a.getListener(b, c, d, e)) {
      return goog.events.unlistenByKey(b);
    }
  }
  return !1;
};
goog.events.unlistenByKey = function(a) {
  if (goog.isNumber(a) || !a || a.removed) {
    return !1;
  }
  var b = a.src;
  if (goog.events.Listenable.isImplementedBy(b)) {
    return b.unlistenByKey(a);
  }
  var c = a.type, d = a.proxy;
  b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent && b.detachEvent(goog.events.getOnString_(c), d);
  goog.events.listenerCountEstimate_--;
  (c = goog.events.getListenerMap_(b)) ? (c.removeByKey(a), 0 == c.getTypeCount() && (c.src = null, b[goog.events.LISTENER_MAP_PROP_] = null)) : a.markAsRemoved();
  return !0;
};
goog.events.unlistenWithWrapper = function(a, b, c, d, e) {
  b.unlisten(a, c, d, e);
};
goog.events.removeAll = function(a, b) {
  if (!a) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(a)) {
    return a.removeAllListeners(b);
  }
  var c = goog.events.getListenerMap_(a);
  if (!c) {
    return 0;
  }
  var d = 0, e = b && b.toString(), f;
  for (f in c.listeners) {
    if (!e || f == e) {
      for (var g = c.listeners[f].concat(), h = 0;h < g.length;++h) {
        goog.events.unlistenByKey(g[h]) && ++d;
      }
    }
  }
  return d;
};
goog.events.getListeners = function(a, b, c) {
  return goog.events.Listenable.isImplementedBy(a) ? a.getListeners(b, c) : a ? (a = goog.events.getListenerMap_(a)) ? a.getListeners(b, c) : [] : [];
};
goog.events.getListener = function(a, b, c, d, e) {
  c = goog.events.wrapListener(c);
  d = !!d;
  return goog.events.Listenable.isImplementedBy(a) ? a.getListener(b, c, d, e) : a ? (a = goog.events.getListenerMap_(a)) ? a.getListener(b, c, d, e) : null : null;
};
goog.events.hasListener = function(a, b, c) {
  if (goog.events.Listenable.isImplementedBy(a)) {
    return a.hasListener(b, c);
  }
  a = goog.events.getListenerMap_(a);
  return !!a && a.hasListener(b, c);
};
goog.events.expose = function(a) {
  var b = [], c;
  for (c in a) {
    a[c] && a[c].id ? b.push(c + " \x3d " + a[c] + " (" + a[c].id + ")") : b.push(c + " \x3d " + a[c]);
  }
  return b.join("\n");
};
goog.events.getOnString_ = function(a) {
  return a in goog.events.onStringMap_ ? goog.events.onStringMap_[a] : goog.events.onStringMap_[a] = goog.events.onString_ + a;
};
goog.events.fireListeners = function(a, b, c, d) {
  return goog.events.Listenable.isImplementedBy(a) ? a.fireListeners(b, c, d) : goog.events.fireListeners_(a, b, c, d);
};
goog.events.fireListeners_ = function(a, b, c, d) {
  var e = !0;
  if (a = goog.events.getListenerMap_(a)) {
    if (b = a.listeners[b.toString()]) {
      for (b = b.concat(), a = 0;a < b.length;a++) {
        var f = b[a];
        f && f.capture == c && !f.removed && (f = goog.events.fireListener(f, d), e = e && !1 !== f);
      }
    }
  }
  return e;
};
goog.events.fireListener = function(a, b) {
  var c = a.listener, d = a.handler || a.src;
  a.callOnce && goog.events.unlistenByKey(a);
  return c.call(d, b);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(a, b) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(a), "Can not use goog.events.dispatchEvent with non-goog.events.Listenable instance.");
  return a.dispatchEvent(b);
};
goog.events.protectBrowserEventEntryPoint = function(a) {
  goog.events.handleBrowserEvent_ = a.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(a, b) {
  if (a.removed) {
    return !0;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var c = b || goog.getObjectByName("window.event"), d = new goog.events.BrowserEvent(c, this), e = !0;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(c)) {
        goog.events.markIeEvent_(c);
        for (var c = [], f = d.currentTarget;f;f = f.parentNode) {
          c.push(f);
        }
        for (var f = a.type, g = c.length - 1;!d.propagationStopped_ && 0 <= g;g--) {
          d.currentTarget = c[g];
          var h = goog.events.fireListeners_(c[g], f, !0, d), e = e && h;
        }
        for (g = 0;!d.propagationStopped_ && g < c.length;g++) {
          d.currentTarget = c[g], h = goog.events.fireListeners_(c[g], f, !1, d), e = e && h;
        }
      }
    } else {
      e = goog.events.fireListener(a, d);
    }
    return e;
  }
  return goog.events.fireListener(a, new goog.events.BrowserEvent(b, this));
};
goog.events.markIeEvent_ = function(a) {
  var b = !1;
  if (0 == a.keyCode) {
    try {
      a.keyCode = -1;
      return;
    } catch (c) {
      b = !0;
    }
  }
  if (b || void 0 == a.returnValue) {
    a.returnValue = !0;
  }
};
goog.events.isMarkedIeEvent_ = function(a) {
  return 0 > a.keyCode || void 0 != a.returnValue;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(a) {
  return a + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(a) {
  a = a[goog.events.LISTENER_MAP_PROP_];
  return a instanceof goog.events.ListenerMap ? a : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (1E9 * Math.random() >>> 0);
goog.events.wrapListener = function(a) {
  goog.asserts.assert(a, "Listener can not be null.");
  if (goog.isFunction(a)) {
    return a;
  }
  goog.asserts.assert(a.handleEvent, "An object listener must have handleEvent method.");
  a[goog.events.LISTENER_WRAPPER_PROP_] || (a[goog.events.LISTENER_WRAPPER_PROP_] = function(b) {
    return a.handleEvent(b);
  });
  return a[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(a) {
  goog.events.handleBrowserEvent_ = a(goog.events.handleBrowserEvent_);
});
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(a) {
  this.parentEventTarget_ = a;
};
goog.events.EventTarget.prototype.addEventListener = function(a, b, c, d) {
  goog.events.listen(this, a, b, c, d);
};
goog.events.EventTarget.prototype.removeEventListener = function(a, b, c, d) {
  goog.events.unlisten(this, a, b, c, d);
};
goog.events.EventTarget.prototype.dispatchEvent = function(a) {
  this.assertInitialized_();
  var b, c = this.getParentEventTarget();
  if (c) {
    b = [];
    for (var d = 1;c;c = c.getParentEventTarget()) {
      b.push(c), goog.asserts.assert(++d < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, a, b);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(a, b, c, d) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(a), b, !1, c, d);
};
goog.events.EventTarget.prototype.listenOnce = function(a, b, c, d) {
  return this.eventTargetListeners_.add(String(a), b, !0, c, d);
};
goog.events.EventTarget.prototype.unlisten = function(a, b, c, d) {
  return this.eventTargetListeners_.remove(String(a), b, c, d);
};
goog.events.EventTarget.prototype.unlistenByKey = function(a) {
  return this.eventTargetListeners_.removeByKey(a);
};
goog.events.EventTarget.prototype.removeAllListeners = function(a) {
  return this.eventTargetListeners_ ? this.eventTargetListeners_.removeAll(a) : 0;
};
goog.events.EventTarget.prototype.fireListeners = function(a, b, c) {
  a = this.eventTargetListeners_.listeners[String(a)];
  if (!a) {
    return !0;
  }
  a = a.concat();
  for (var d = !0, e = 0;e < a.length;++e) {
    var f = a[e];
    if (f && !f.removed && f.capture == b) {
      var g = f.listener, h = f.handler || f.src;
      f.callOnce && this.unlistenByKey(f);
      d = !1 !== g.call(h, c) && d;
    }
  }
  return d && 0 != c.returnValue_;
};
goog.events.EventTarget.prototype.getListeners = function(a, b) {
  return this.eventTargetListeners_.getListeners(String(a), b);
};
goog.events.EventTarget.prototype.getListener = function(a, b, c, d) {
  return this.eventTargetListeners_.getListener(String(a), b, c, d);
};
goog.events.EventTarget.prototype.hasListener = function(a, b) {
  var c = goog.isDef(a) ? String(a) : void 0;
  return this.eventTargetListeners_.hasListener(c, b);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(a) {
  this.actualEventTarget_ = a;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass (goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(a, b, c) {
  var d = b.type || b;
  if (goog.isString(b)) {
    b = new goog.events.Event(b, a);
  } else {
    if (b instanceof goog.events.Event) {
      b.target = b.target || a;
    } else {
      var e = b;
      b = new goog.events.Event(d, a);
      goog.object.extend(b, e);
    }
  }
  var e = !0, f;
  if (c) {
    for (var g = c.length - 1;!b.propagationStopped_ && 0 <= g;g--) {
      f = b.currentTarget = c[g], e = f.fireListeners(d, !0, b) && e;
    }
  }
  b.propagationStopped_ || (f = b.currentTarget = a, e = f.fireListeners(d, !0, b) && e, b.propagationStopped_ || (e = f.fireListeners(d, !1, b) && e));
  if (c) {
    for (g = 0;!b.propagationStopped_ && g < c.length;g++) {
      f = b.currentTarget = c[g], e = f.fireListeners(d, !1, b) && e;
    }
  }
  return e;
};
goog.Timer = function(a, b) {
  goog.events.EventTarget.call(this);
  this.interval_ = a || 1;
  this.timerObject_ = b || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.INVALID_TIMEOUT_ID_ = -1;
goog.Timer.prototype.enabled = !1;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = .8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(a) {
  this.interval_ = a;
  this.timer_ && this.enabled ? (this.stop(), this.start()) : this.timer_ && this.stop();
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var a = goog.now() - this.last_;
    0 < a && a < this.interval_ * goog.Timer.intervalScale ? this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - a) : (this.timer_ && (this.timerObject_.clearTimeout(this.timer_), this.timer_ = null), this.dispatchTick(), this.enabled && (this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_), this.last_ = goog.now()));
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = !0;
  this.timer_ || (this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_), this.last_ = goog.now());
};
goog.Timer.prototype.stop = function() {
  this.enabled = !1;
  this.timer_ && (this.timerObject_.clearTimeout(this.timer_), this.timer_ = null);
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(a, b, c) {
  if (goog.isFunction(a)) {
    c && (a = goog.bind(a, c));
  } else {
    if (a && "function" == typeof a.handleEvent) {
      a = goog.bind(a.handleEvent, a);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  return b > goog.Timer.MAX_TIMEOUT_ ? goog.Timer.INVALID_TIMEOUT_ID_ : goog.Timer.defaultTimerObject.setTimeout(a, b || 0);
};
goog.Timer.clear = function(a) {
  goog.Timer.defaultTimerObject.clearTimeout(a);
};
goog.Timer.promise = function(a, b) {
  var c = null;
  return (new goog.Promise(function(d, e) {
    c = goog.Timer.callOnce(function() {
      d(b);
    }, a);
    c == goog.Timer.INVALID_TIMEOUT_ID_ && e(Error("Failed to schedule timer."));
  })).thenCatch(function(a) {
    goog.Timer.clear(c);
    throw a;
  });
};
goog.json = {};
goog.json.USE_NATIVE_JSON = !1;
goog.json.isValid = function(a) {
  return /^\s*$/.test(a) ? !1 : /^[\],:{}\s\u2028\u2029]*$/.test(a.replace(/\\["\\\/bfnrtu]/g, "@").replace(/"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g, ""));
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? goog.global.JSON.parse : function(a) {
  a = String(a);
  if (goog.json.isValid(a)) {
    try {
      return eval("(" + a + ")");
    } catch (b) {
    }
  }
  throw Error("Invalid JSON string: " + a);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? goog.global.JSON.parse : function(a) {
  return eval("(" + a + ")");
};
goog.json.serialize = goog.json.USE_NATIVE_JSON ? goog.global.JSON.stringify : function(a, b) {
  return (new goog.json.Serializer(b)).serialize(a);
};
goog.json.Serializer = function(a) {
  this.replacer_ = a;
};
goog.json.Serializer.prototype.serialize = function(a) {
  var b = [];
  this.serializeInternal(a, b);
  return b.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(a, b) {
  if (null == a) {
    b.push("null");
  } else {
    if ("object" == typeof a) {
      if (goog.isArray(a)) {
        this.serializeArray(a, b);
        return;
      }
      if (a instanceof String || a instanceof Number || a instanceof Boolean) {
        a = a.valueOf();
      } else {
        this.serializeObject_(a, b);
        return;
      }
    }
    switch(typeof a) {
      case "string":
        this.serializeString_(a, b);
        break;
      case "number":
        this.serializeNumber_(a, b);
        break;
      case "boolean":
        b.push(String(a));
        break;
      case "function":
        b.push("null");
        break;
      default:
        throw Error("Unknown type: " + typeof a);;
    }
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(a, b) {
  b.push('"', a.replace(goog.json.Serializer.charsToReplace_, function(a) {
    var b = goog.json.Serializer.charToJsonCharCache_[a];
    b || (b = "\\u" + (a.charCodeAt(0) | 65536).toString(16).substr(1), goog.json.Serializer.charToJsonCharCache_[a] = b);
    return b;
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(a, b) {
  b.push(isFinite(a) && !isNaN(a) ? String(a) : "null");
};
goog.json.Serializer.prototype.serializeArray = function(a, b) {
  var c = a.length;
  b.push("[");
  for (var d = "", e = 0;e < c;e++) {
    b.push(d), d = a[e], this.serializeInternal(this.replacer_ ? this.replacer_.call(a, String(e), d) : d, b), d = ",";
  }
  b.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(a, b) {
  b.push("{");
  var c = "", d;
  for (d in a) {
    if (Object.prototype.hasOwnProperty.call(a, d)) {
      var e = a[d];
      "function" != typeof e && (b.push(c), this.serializeString_(d, b), b.push(":"), this.serializeInternal(this.replacer_ ? this.replacer_.call(a, d, e) : e, b), c = ",");
    }
  }
  b.push("}");
};
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(a) {
  switch(a) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress", DOWNLOAD_PROGRESS:"downloadprogress", UPLOAD_PROGRESS:"uploadprogress"};
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, PRECONDITION_REQUIRED:428, TOO_MANY_REQUESTS:429, REQUEST_HEADER_FIELDS_TOO_LARGE:431, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, NETWORK_AUTHENTICATION_REQUIRED:511, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(a) {
  switch(a) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return !0;
    default:
      return !1;
  }
};
goog.net.XhrLike = function() {
};
goog.net.XhrLike.prototype.open = function(a, b, c, d, e) {
};
goog.net.XhrLike.prototype.send = function(a) {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function(a, b) {
};
goog.net.XhrLike.prototype.getResponseHeader = function(a) {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.WrapperXmlHttpFactory = function(a, b) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = a;
  this.optionsFactory_ = b;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.net.XmlHttp.ASSUME_NATIVE_XHR = !1;
goog.net.XmlHttpDefines = {};
goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR = !1;
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.setFactory = function(a, b) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(a), goog.asserts.assert(b)));
};
goog.net.XmlHttp.setGlobalFactory = function(a) {
  goog.net.XmlHttp.factory_ = a;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var a = this.getProgId_();
  return a ? new ActiveXObject(a) : new XMLHttpRequest;
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var a = {};
  this.getProgId_() && (a[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = !0, a[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = !0);
  return a;
};
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && "undefined" == typeof XMLHttpRequest && "undefined" != typeof ActiveXObject) {
    for (var a = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"], b = 0;b < a.length;b++) {
      var c = a[b];
      try {
        return new ActiveXObject(c), this.ieProgId_ = c;
      } catch (d) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed");
  }
  return this.ieProgId_;
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.uri = {};
goog.uri.utils = {};
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(a, b, c, d, e, f, g) {
  var h = "";
  a && (h += a + ":");
  c && (h += "//", b && (h += b + "@"), h += c, d && (h += ":" + d));
  e && (h += e);
  f && (h += "?" + f);
  g && (h += "#" + g);
  return h;
};
goog.uri.utils.splitRe_ = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#(.*))?$/;
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(a) {
  return a.match(goog.uri.utils.splitRe_);
};
goog.uri.utils.decodeIfPossible_ = function(a, b) {
  return a ? b ? decodeURI(a) : decodeURIComponent(a) : a;
};
goog.uri.utils.getComponentByIndex_ = function(a, b) {
  return goog.uri.utils.split(b)[a] || null;
};
goog.uri.utils.getScheme = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, a);
};
goog.uri.utils.getEffectiveScheme = function(a) {
  a = goog.uri.utils.getScheme(a);
  !a && goog.global.self && goog.global.self.location && (a = goog.global.self.location.protocol, a = a.substr(0, a.length - 1));
  return a ? a.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, a);
};
goog.uri.utils.getUserInfo = function(a) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(a));
};
goog.uri.utils.getDomainEncoded = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, a);
};
goog.uri.utils.getDomain = function(a) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(a), !0);
};
goog.uri.utils.getPort = function(a) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, a)) || null;
};
goog.uri.utils.getPathEncoded = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, a);
};
goog.uri.utils.getPath = function(a) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(a), !0);
};
goog.uri.utils.getQueryData = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, a);
};
goog.uri.utils.getFragmentEncoded = function(a) {
  var b = a.indexOf("#");
  return 0 > b ? null : a.substr(b + 1);
};
goog.uri.utils.setFragmentEncoded = function(a, b) {
  return goog.uri.utils.removeFragment(a) + (b ? "#" + b : "");
};
goog.uri.utils.getFragment = function(a) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(a));
};
goog.uri.utils.getHost = function(a) {
  a = goog.uri.utils.split(a);
  return goog.uri.utils.buildFromEncodedParts(a[goog.uri.utils.ComponentIndex.SCHEME], a[goog.uri.utils.ComponentIndex.USER_INFO], a[goog.uri.utils.ComponentIndex.DOMAIN], a[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(a) {
  a = goog.uri.utils.split(a);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, a[goog.uri.utils.ComponentIndex.PATH], a[goog.uri.utils.ComponentIndex.QUERY_DATA], a[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(a) {
  var b = a.indexOf("#");
  return 0 > b ? a : a.substr(0, b);
};
goog.uri.utils.haveSameDomain = function(a, b) {
  var c = goog.uri.utils.split(a), d = goog.uri.utils.split(b);
  return c[goog.uri.utils.ComponentIndex.DOMAIN] == d[goog.uri.utils.ComponentIndex.DOMAIN] && c[goog.uri.utils.ComponentIndex.SCHEME] == d[goog.uri.utils.ComponentIndex.SCHEME] && c[goog.uri.utils.ComponentIndex.PORT] == d[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(a) {
  if (goog.DEBUG && (0 <= a.indexOf("#") || 0 <= a.indexOf("?"))) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not supported: [" + a + "]");
  }
};
goog.uri.utils.parseQueryData = function(a, b) {
  if (a) {
    for (var c = a.split("\x26"), d = 0;d < c.length;d++) {
      var e = c[d].indexOf("\x3d"), f = null, g = null;
      0 <= e ? (f = c[d].substring(0, e), g = c[d].substring(e + 1)) : f = c[d];
      b(f, g ? goog.string.urlDecode(g) : "");
    }
  }
};
goog.uri.utils.appendQueryData_ = function(a) {
  if (a[1]) {
    var b = a[0], c = b.indexOf("#");
    0 <= c && (a.push(b.substr(c)), a[0] = b = b.substr(0, c));
    c = b.indexOf("?");
    0 > c ? a[1] = "?" : c == b.length - 1 && (a[1] = void 0);
  }
  return a.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(a, b, c) {
  if (goog.isArray(b)) {
    goog.asserts.assertArray(b);
    for (var d = 0;d < b.length;d++) {
      goog.uri.utils.appendKeyValuePairs_(a, String(b[d]), c);
    }
  } else {
    null != b && c.push("\x26", a, "" === b ? "" : "\x3d", goog.string.urlEncode(b));
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(a, b, c) {
  goog.asserts.assert(0 == Math.max(b.length - (c || 0), 0) % 2, "goog.uri.utils: Key/value lists must be even in length.");
  for (c = c || 0;c < b.length;c += 2) {
    goog.uri.utils.appendKeyValuePairs_(b[c], b[c + 1], a);
  }
  return a;
};
goog.uri.utils.buildQueryData = function(a, b) {
  var c = goog.uri.utils.buildQueryDataBuffer_([], a, b);
  c[0] = "";
  return c.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(a, b) {
  for (var c in b) {
    goog.uri.utils.appendKeyValuePairs_(c, b[c], a);
  }
  return a;
};
goog.uri.utils.buildQueryDataFromMap = function(a) {
  a = goog.uri.utils.buildQueryDataBufferFromMap_([], a);
  a[0] = "";
  return a.join("");
};
goog.uri.utils.appendParams = function(a, b) {
  return goog.uri.utils.appendQueryData_(2 == arguments.length ? goog.uri.utils.buildQueryDataBuffer_([a], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([a], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(a, b) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([a], b));
};
goog.uri.utils.appendParam = function(a, b, c) {
  a = [a, "\x26", b];
  goog.isDefAndNotNull(c) && a.push("\x3d", goog.string.urlEncode(c));
  return goog.uri.utils.appendQueryData_(a);
};
goog.uri.utils.findParam_ = function(a, b, c, d) {
  for (var e = c.length;0 <= (b = a.indexOf(c, b)) && b < d;) {
    var f = a.charCodeAt(b - 1);
    if (f == goog.uri.utils.CharCode_.AMPERSAND || f == goog.uri.utils.CharCode_.QUESTION) {
      if (f = a.charCodeAt(b + e), !f || f == goog.uri.utils.CharCode_.EQUAL || f == goog.uri.utils.CharCode_.AMPERSAND || f == goog.uri.utils.CharCode_.HASH) {
        return b;
      }
    }
    b += e + 1;
  }
  return -1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(a, b) {
  return 0 <= goog.uri.utils.findParam_(a, 0, b, a.search(goog.uri.utils.hashOrEndRe_));
};
goog.uri.utils.getParamValue = function(a, b) {
  var c = a.search(goog.uri.utils.hashOrEndRe_), d = goog.uri.utils.findParam_(a, 0, b, c);
  if (0 > d) {
    return null;
  }
  var e = a.indexOf("\x26", d);
  if (0 > e || e > c) {
    e = c;
  }
  d += b.length + 1;
  return goog.string.urlDecode(a.substr(d, e - d));
};
goog.uri.utils.getParamValues = function(a, b) {
  for (var c = a.search(goog.uri.utils.hashOrEndRe_), d = 0, e, f = [];0 <= (e = goog.uri.utils.findParam_(a, d, b, c));) {
    d = a.indexOf("\x26", e);
    if (0 > d || d > c) {
      d = c;
    }
    e += b.length + 1;
    f.push(goog.string.urlDecode(a.substr(e, d - e)));
  }
  return f;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(a, b) {
  for (var c = a.search(goog.uri.utils.hashOrEndRe_), d = 0, e, f = [];0 <= (e = goog.uri.utils.findParam_(a, d, b, c));) {
    f.push(a.substring(d, e)), d = Math.min(a.indexOf("\x26", e) + 1 || c, c);
  }
  f.push(a.substr(d));
  return f.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(a, b, c) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(a, b), b, c);
};
goog.uri.utils.appendPath = function(a, b) {
  goog.uri.utils.assertNoFragmentsOrQueries_(a);
  goog.string.endsWith(a, "/") && (a = a.substr(0, a.length - 1));
  goog.string.startsWith(b, "/") && (b = b.substr(1));
  return goog.string.buildString(a, "/", b);
};
goog.uri.utils.setPath = function(a, b) {
  goog.string.startsWith(b, "/") || (b = "/" + b);
  var c = goog.uri.utils.split(a);
  return goog.uri.utils.buildFromEncodedParts(c[goog.uri.utils.ComponentIndex.SCHEME], c[goog.uri.utils.ComponentIndex.USER_INFO], c[goog.uri.utils.ComponentIndex.DOMAIN], c[goog.uri.utils.ComponentIndex.PORT], b, c[goog.uri.utils.ComponentIndex.QUERY_DATA], c[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(a) {
  return goog.uri.utils.setParam(a, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.net.XhrIo = function(a) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = a || null;
  this.active_ = !1;
  this.xhrOptions_ = this.xhr_ = null;
  this.lastMethod_ = this.lastUri_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastError_ = "";
  this.inAbort_ = this.inOpen_ = this.inSend_ = this.errorDispatched_ = !1;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.useXhr2Timeout_ = this.progressEventsEnabled_ = this.withCredentials_ = !1;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(a, b, c, d, e, f, g) {
  var h = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(h);
  b && h.listen(goog.net.EventType.COMPLETE, b);
  h.listenOnce(goog.net.EventType.READY, h.cleanupSend_);
  f && h.setTimeoutInterval(f);
  g && h.setWithCredentials(g);
  h.send(a, c, d, e);
  return h;
};
goog.net.XhrIo.cleanup = function() {
  for (var a = goog.net.XhrIo.sendInstances_;a.length;) {
    a.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(a) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = a.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this);
};
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(a) {
  this.timeoutInterval_ = Math.max(0, a);
};
goog.net.XhrIo.prototype.setResponseType = function(a) {
  this.responseType_ = a;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(a) {
  this.withCredentials_ = a;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.setProgressEventsEnabled = function(a) {
  this.progressEventsEnabled_ = a;
};
goog.net.XhrIo.prototype.getProgressEventsEnabled = function() {
  return this.progressEventsEnabled_;
};
goog.net.XhrIo.prototype.send = function(a, b, c, d) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + a);
  }
  b = b ? b.toUpperCase() : "GET";
  this.lastUri_ = a;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = b;
  this.errorDispatched_ = !1;
  this.active_ = !0;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  this.getProgressEventsEnabled() && "onprogress" in this.xhr_ && (this.xhr_.onprogress = goog.bind(function(a) {
    this.onProgressHandler_(a, !0);
  }, this), this.xhr_.upload && (this.xhr_.upload.onprogress = goog.bind(this.onProgressHandler_, this)));
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr")), this.inOpen_ = !0, this.xhr_.open(b, String(a), !0), this.inOpen_ = !1;
  } catch (f) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + f.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, f);
    return;
  }
  a = c || "";
  var e = this.headers.clone();
  d && goog.structs.forEach(d, function(a, b) {
    e.set(b, a);
  });
  d = goog.array.find(e.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
  c = goog.global.FormData && a instanceof goog.global.FormData;
  !goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, b) || d || c || e.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  e.forEach(function(a, b) {
    this.xhr_.setRequestHeader(b, a);
  }, this);
  this.responseType_ && (this.xhr_.responseType = this.responseType_);
  goog.object.containsKey(this.xhr_, "withCredentials") && (this.xhr_.withCredentials = this.withCredentials_);
  try {
    this.cleanUpTimeoutTimer_(), 0 < this.timeoutInterval_ && (this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_), goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_)), this.useXhr2Timeout_ ? (this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_, this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this)) : this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, 
    this)), goog.log.fine(this.logger_, this.formatMsg_("Sending request")), this.inSend_ = !0, this.xhr_.send(a), this.inSend_ = !1;
  } catch (f) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + f.message)), this.error_(goog.net.ErrorCode.EXCEPTION, f);
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(a) {
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && goog.isNumber(a[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(a[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);
};
goog.net.XhrIo.isContentTypeHeader_ = function(a) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, a);
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  "undefined" != typeof goog && this.xhr_ && (this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting", this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT, goog.log.fine(this.logger_, this.formatMsg_(this.lastError_)), this.dispatchEvent(goog.net.EventType.TIMEOUT), this.abort(goog.net.ErrorCode.TIMEOUT));
};
goog.net.XhrIo.prototype.error_ = function(a, b) {
  this.active_ = !1;
  this.xhr_ && (this.inAbort_ = !0, this.xhr_.abort(), this.inAbort_ = !1);
  this.lastError_ = b;
  this.lastErrorCode_ = a;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  this.errorDispatched_ || (this.errorDispatched_ = !0, this.dispatchEvent(goog.net.EventType.COMPLETE), this.dispatchEvent(goog.net.EventType.ERROR));
};
goog.net.XhrIo.prototype.abort = function(a) {
  this.xhr_ && this.active_ && (goog.log.fine(this.logger_, this.formatMsg_("Aborting")), this.active_ = !1, this.inAbort_ = !0, this.xhr_.abort(), this.inAbort_ = !1, this.lastErrorCode_ = a || goog.net.ErrorCode.ABORT, this.dispatchEvent(goog.net.EventType.COMPLETE), this.dispatchEvent(goog.net.EventType.ABORT), this.cleanUpXhr_());
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  this.xhr_ && (this.active_ && (this.active_ = !1, this.inAbort_ = !0, this.xhr_.abort(), this.inAbort_ = !1), this.cleanUpXhr_(!0));
  goog.net.XhrIo.superClass_.disposeInternal.call(this);
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (!this.isDisposed()) {
    if (this.inOpen_ || this.inSend_ || this.inAbort_) {
      this.onReadyStateChangeHelper_();
    } else {
      this.onReadyStateChangeEntryPoint_();
    }
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (this.active_ && "undefined" != typeof goog) {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && 2 == this.getStatus()) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
      } else {
        if (this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE), this.isComplete()) {
          goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
          this.active_ = !1;
          try {
            this.isSuccess() ? (this.dispatchEvent(goog.net.EventType.COMPLETE), this.dispatchEvent(goog.net.EventType.SUCCESS)) : (this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR, this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]", this.dispatchErrors_());
          } finally {
            this.cleanUpXhr_();
          }
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.onProgressHandler_ = function(a, b) {
  goog.asserts.assert(a.type === goog.net.EventType.PROGRESS, "goog.net.EventType.PROGRESS is of the same type as raw XHR progress.");
  this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(a, goog.net.EventType.PROGRESS));
  this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(a, b ? goog.net.EventType.DOWNLOAD_PROGRESS : goog.net.EventType.UPLOAD_PROGRESS));
};
goog.net.XhrIo.buildProgressEvent_ = function(a, b) {
  return {type:b, lengthComputable:a.lengthComputable, loaded:a.loaded, total:a.total};
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(a) {
  if (this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var b = this.xhr_, c = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhrOptions_ = this.xhr_ = null;
    a || this.dispatchEvent(goog.net.EventType.READY);
    try {
      b.onreadystatechange = c;
    } catch (d) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + d.message);
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  this.xhr_ && this.useXhr2Timeout_ && (this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null);
  goog.isNumber(this.timeoutId_) && (goog.Timer.clear(this.timeoutId_), this.timeoutId_ = null);
};
goog.net.XhrIo.prototype.isActive = function() {
  return !!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var a = this.getStatus();
  return goog.net.HttpStatus.isSuccess(a) || 0 === a && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var a = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(a);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (a) {
    return -1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (a) {
    return goog.log.fine(this.logger_, "Can not get status: " + a.message), "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (a) {
    return goog.log.fine(this.logger_, "Can not get responseText: " + a.message), "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_.responseBody;
    }
  } catch (a) {
    goog.log.fine(this.logger_, "Can not get responseBody: " + a.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (a) {
    return goog.log.fine(this.logger_, "Can not get responseXML: " + a.message), null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(a) {
  if (this.xhr_) {
    var b = this.xhr_.responseText;
    a && 0 == b.indexOf(a) && (b = b.substring(a.length));
    return goog.json.parse(b);
  }
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not supported on this browser");
    return null;
  } catch (a) {
    return goog.log.fine(this.logger_, "Can not get response: " + a.message), null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(a) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(a) : void 0;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getResponseHeaders = function() {
  for (var a = {}, b = this.getAllResponseHeaders().split("\r\n"), c = 0;c < b.length;c++) {
    if (!goog.string.isEmptyOrWhitespace(b[c])) {
      var d = goog.string.splitLimit(b[c], ": ", 2);
      a[d[0]] = a[d[0]] ? a[d[0]] + (", " + d[1]) : d[1];
    }
  }
  return a;
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(a) {
  return a + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(a) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = a(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.Uri = function(a, b) {
  this.domain_ = this.userInfo_ = this.scheme_ = "";
  this.port_ = null;
  this.fragment_ = this.path_ = "";
  this.ignoreCase_ = this.isReadOnly_ = !1;
  var c;
  a instanceof goog.Uri ? (this.ignoreCase_ = goog.isDef(b) ? b : a.getIgnoreCase(), this.setScheme(a.getScheme()), this.setUserInfo(a.getUserInfo()), this.setDomain(a.getDomain()), this.setPort(a.getPort()), this.setPath(a.getPath()), this.setQueryData(a.getQueryData().clone()), this.setFragment(a.getFragment())) : a && (c = goog.uri.utils.split(String(a))) ? (this.ignoreCase_ = !!b, this.setScheme(c[goog.uri.utils.ComponentIndex.SCHEME] || "", !0), this.setUserInfo(c[goog.uri.utils.ComponentIndex.USER_INFO] || 
  "", !0), this.setDomain(c[goog.uri.utils.ComponentIndex.DOMAIN] || "", !0), this.setPort(c[goog.uri.utils.ComponentIndex.PORT]), this.setPath(c[goog.uri.utils.ComponentIndex.PATH] || "", !0), this.setQueryData(c[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", !0), this.setFragment(c[goog.uri.utils.ComponentIndex.FRAGMENT] || "", !0)) : (this.ignoreCase_ = !!b, this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_));
};
goog.Uri.preserveParameterTypesCompatibilityFlag = !1;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString = function() {
  var a = [], b = this.getScheme();
  b && a.push(goog.Uri.encodeSpecialChars_(b, goog.Uri.reDisallowedInSchemeOrUserInfo_, !0), ":");
  var c = this.getDomain();
  if (c || "file" == b) {
    a.push("//"), (b = this.getUserInfo()) && a.push(goog.Uri.encodeSpecialChars_(b, goog.Uri.reDisallowedInSchemeOrUserInfo_, !0), "@"), a.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(c))), c = this.getPort(), null != c && a.push(":", String(c));
  }
  if (c = this.getPath()) {
    this.hasDomain() && "/" != c.charAt(0) && a.push("/"), a.push(goog.Uri.encodeSpecialChars_(c, "/" == c.charAt(0) ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, !0));
  }
  (c = this.getEncodedQuery()) && a.push("?", c);
  (c = this.getFragment()) && a.push("#", goog.Uri.encodeSpecialChars_(c, goog.Uri.reDisallowedInFragment_));
  return a.join("");
};
goog.Uri.prototype.resolve = function(a) {
  var b = this.clone(), c = a.hasScheme();
  c ? b.setScheme(a.getScheme()) : c = a.hasUserInfo();
  c ? b.setUserInfo(a.getUserInfo()) : c = a.hasDomain();
  c ? b.setDomain(a.getDomain()) : c = a.hasPort();
  var d = a.getPath();
  if (c) {
    b.setPort(a.getPort());
  } else {
    if (c = a.hasPath()) {
      if ("/" != d.charAt(0)) {
        if (this.hasDomain() && !this.hasPath()) {
          d = "/" + d;
        } else {
          var e = b.getPath().lastIndexOf("/");
          -1 != e && (d = b.getPath().substr(0, e + 1) + d);
        }
      }
      d = goog.Uri.removeDotSegments(d);
    }
  }
  c ? b.setPath(d) : c = a.hasQuery();
  c ? b.setQueryData(a.getDecodedQuery()) : c = a.hasFragment();
  c && b.setFragment(a.getFragment());
  return b;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(a, b) {
  this.enforceReadOnly();
  if (this.scheme_ = b ? goog.Uri.decodeOrEmpty_(a, !0) : a) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return !!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(a, b) {
  this.enforceReadOnly();
  this.userInfo_ = b ? goog.Uri.decodeOrEmpty_(a) : a;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return !!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(a, b) {
  this.enforceReadOnly();
  this.domain_ = b ? goog.Uri.decodeOrEmpty_(a, !0) : a;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return !!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(a) {
  this.enforceReadOnly();
  if (a) {
    a = Number(a);
    if (isNaN(a) || 0 > a) {
      throw Error("Bad port number " + a);
    }
    this.port_ = a;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return null != this.port_;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(a, b) {
  this.enforceReadOnly();
  this.path_ = b ? goog.Uri.decodeOrEmpty_(a, !0) : a;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return !!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return "" !== this.queryData_.toString();
};
goog.Uri.prototype.setQueryData = function(a, b) {
  this.enforceReadOnly();
  a instanceof goog.Uri.QueryData ? (this.queryData_ = a, this.queryData_.setIgnoreCase(this.ignoreCase_)) : (b || (a = goog.Uri.encodeSpecialChars_(a, goog.Uri.reDisallowedInQuery_)), this.queryData_ = new goog.Uri.QueryData(a, null, this.ignoreCase_));
  return this;
};
goog.Uri.prototype.setQuery = function(a, b) {
  return this.setQueryData(a, b);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(a, b) {
  this.enforceReadOnly();
  this.queryData_.set(a, b);
  return this;
};
goog.Uri.prototype.setParameterValues = function(a, b) {
  this.enforceReadOnly();
  goog.isArray(b) || (b = [String(b)]);
  this.queryData_.setValues(a, b);
  return this;
};
goog.Uri.prototype.getParameterValues = function(a) {
  return this.queryData_.getValues(a);
};
goog.Uri.prototype.getParameterValue = function(a) {
  return this.queryData_.get(a);
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(a, b) {
  this.enforceReadOnly();
  this.fragment_ = b ? goog.Uri.decodeOrEmpty_(a) : a;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return !!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(a) {
  return (!this.hasDomain() && !a.hasDomain() || this.getDomain() == a.getDomain()) && (!this.hasPort() && !a.hasPort() || this.getPort() == a.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(a) {
  this.enforceReadOnly();
  this.queryData_.remove(a);
  return this;
};
goog.Uri.prototype.setReadOnly = function(a) {
  this.isReadOnly_ = a;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(a) {
  this.ignoreCase_ = a;
  this.queryData_ && this.queryData_.setIgnoreCase(a);
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(a, b) {
  return a instanceof goog.Uri ? a.clone() : new goog.Uri(a, b);
};
goog.Uri.create = function(a, b, c, d, e, f, g, h) {
  h = new goog.Uri(null, h);
  a && h.setScheme(a);
  b && h.setUserInfo(b);
  c && h.setDomain(c);
  d && h.setPort(d);
  e && h.setPath(e);
  f && h.setQueryData(f);
  g && h.setFragment(g);
  return h;
};
goog.Uri.resolve = function(a, b) {
  a instanceof goog.Uri || (a = goog.Uri.parse(a));
  b instanceof goog.Uri || (b = goog.Uri.parse(b));
  return a.resolve(b);
};
goog.Uri.removeDotSegments = function(a) {
  if (".." == a || "." == a) {
    return "";
  }
  if (goog.string.contains(a, "./") || goog.string.contains(a, "/.")) {
    var b = goog.string.startsWith(a, "/");
    a = a.split("/");
    for (var c = [], d = 0;d < a.length;) {
      var e = a[d++];
      "." == e ? b && d == a.length && c.push("") : ".." == e ? ((1 < c.length || 1 == c.length && "" != c[0]) && c.pop(), b && d == a.length && c.push("")) : (c.push(e), b = !0);
    }
    return c.join("/");
  }
  return a;
};
goog.Uri.decodeOrEmpty_ = function(a, b) {
  return a ? b ? decodeURI(a.replace(/%25/g, "%2525")) : decodeURIComponent(a) : "";
};
goog.Uri.encodeSpecialChars_ = function(a, b, c) {
  return goog.isString(a) ? (a = encodeURI(a).replace(b, goog.Uri.encodeChar_), c && (a = goog.Uri.removeDoubleEncoding_(a)), a) : null;
};
goog.Uri.encodeChar_ = function(a) {
  a = a.charCodeAt(0);
  return "%" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);
};
goog.Uri.removeDoubleEncoding_ = function(a) {
  return a.replace(/%25([0-9a-fA-F]{2})/g, "%$1");
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(a, b) {
  var c = goog.uri.utils.split(a), d = goog.uri.utils.split(b);
  return c[goog.uri.utils.ComponentIndex.DOMAIN] == d[goog.uri.utils.ComponentIndex.DOMAIN] && c[goog.uri.utils.ComponentIndex.PORT] == d[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(a, b, c) {
  this.count_ = this.keyMap_ = null;
  this.encodedQuery_ = a || null;
  this.ignoreCase_ = !!c;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_ && (this.keyMap_ = new goog.structs.Map, this.count_ = 0, this.encodedQuery_)) {
    var a = this;
    goog.uri.utils.parseQueryData(this.encodedQuery_, function(b, c) {
      a.add(goog.string.urlDecode(b), c);
    });
  }
};
goog.Uri.QueryData.createFromMap = function(a, b, c) {
  b = goog.structs.getKeys(a);
  if ("undefined" == typeof b) {
    throw Error("Keys are undefined");
  }
  c = new goog.Uri.QueryData(null, null, c);
  a = goog.structs.getValues(a);
  for (var d = 0;d < b.length;d++) {
    var e = b[d], f = a[d];
    goog.isArray(f) ? c.setValues(e, f) : c.add(e, f);
  }
  return c;
};
goog.Uri.QueryData.createFromKeysValues = function(a, b, c, d) {
  if (a.length != b.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  c = new goog.Uri.QueryData(null, null, d);
  for (d = 0;d < a.length;d++) {
    c.add(a[d], b[d]);
  }
  return c;
};
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(a, b) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  a = this.getKeyName_(a);
  var c = this.keyMap_.get(a);
  c || this.keyMap_.set(a, c = []);
  c.push(b);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(a) {
  this.ensureKeyMapInitialized_();
  a = this.getKeyName_(a);
  return this.keyMap_.containsKey(a) ? (this.invalidateCache_(), this.count_ -= this.keyMap_.get(a).length, this.keyMap_.remove(a)) : !1;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return 0 == this.count_;
};
goog.Uri.QueryData.prototype.containsKey = function(a) {
  this.ensureKeyMapInitialized_();
  a = this.getKeyName_(a);
  return this.keyMap_.containsKey(a);
};
goog.Uri.QueryData.prototype.containsValue = function(a) {
  var b = this.getValues();
  return goog.array.contains(b, a);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  for (var a = this.keyMap_.getValues(), b = this.keyMap_.getKeys(), c = [], d = 0;d < b.length;d++) {
    for (var e = a[d], f = 0;f < e.length;f++) {
      c.push(b[d]);
    }
  }
  return c;
};
goog.Uri.QueryData.prototype.getValues = function(a) {
  this.ensureKeyMapInitialized_();
  var b = [];
  if (goog.isString(a)) {
    this.containsKey(a) && (b = goog.array.concat(b, this.keyMap_.get(this.getKeyName_(a))));
  } else {
    a = this.keyMap_.getValues();
    for (var c = 0;c < a.length;c++) {
      b = goog.array.concat(b, a[c]);
    }
  }
  return b;
};
goog.Uri.QueryData.prototype.set = function(a, b) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  a = this.getKeyName_(a);
  this.containsKey(a) && (this.count_ -= this.keyMap_.get(a).length);
  this.keyMap_.set(a, [b]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(a, b) {
  var c = a ? this.getValues(a) : [];
  return goog.Uri.preserveParameterTypesCompatibilityFlag ? 0 < c.length ? c[0] : b : 0 < c.length ? String(c[0]) : b;
};
goog.Uri.QueryData.prototype.setValues = function(a, b) {
  this.remove(a);
  0 < b.length && (this.invalidateCache_(), this.keyMap_.set(this.getKeyName_(a), goog.array.clone(b)), this.count_ += b.length);
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  for (var a = [], b = this.keyMap_.getKeys(), c = 0;c < b.length;c++) {
    for (var d = b[c], e = goog.string.urlEncode(d), d = this.getValues(d), f = 0;f < d.length;f++) {
      var g = e;
      "" !== d[f] && (g += "\x3d" + goog.string.urlEncode(d[f]));
      a.push(g);
    }
  }
  return this.encodedQuery_ = a.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(a) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(b, c) {
    goog.array.contains(a, c) || this.remove(c);
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var a = new goog.Uri.QueryData;
  a.encodedQuery_ = this.encodedQuery_;
  this.keyMap_ && (a.keyMap_ = this.keyMap_.clone(), a.count_ = this.count_);
  return a;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(a) {
  a = String(a);
  this.ignoreCase_ && (a = a.toLowerCase());
  return a;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(a) {
  a && !this.ignoreCase_ && (this.ensureKeyMapInitialized_(), this.invalidateCache_(), this.keyMap_.forEach(function(a, c) {
    var d = c.toLowerCase();
    c != d && (this.remove(c), this.setValues(d, a));
  }, this));
  this.ignoreCase_ = a;
};
goog.Uri.QueryData.prototype.extend = function(a) {
  for (var b = 0;b < arguments.length;b++) {
    goog.structs.forEach(arguments[b], function(a, b) {
      this.add(b, a);
    }, this);
  }
};
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.async.Deferred = function(a, b) {
  this.sequence_ = [];
  this.onCancelFunction_ = a;
  this.defaultScope_ = b || null;
  this.hadError_ = this.fired_ = !1;
  this.result_ = void 0;
  this.silentlyCanceled_ = this.blocking_ = this.blocked_ = !1;
  this.unhandledErrorId_ = 0;
  this.parent_ = null;
  this.branches_ = 0;
  if (goog.async.Deferred.LONG_STACK_TRACES && (this.constructorStack_ = null, Error.captureStackTrace)) {
    var c = {stack:""};
    Error.captureStackTrace(c, goog.async.Deferred);
    "string" == typeof c.stack && (this.constructorStack_ = c.stack.replace(/^[^\n]*\n/, ""));
  }
};
goog.async.Deferred.STRICT_ERRORS = !1;
goog.async.Deferred.LONG_STACK_TRACES = !1;
goog.async.Deferred.prototype.cancel = function(a) {
  if (this.hasFired()) {
    this.result_ instanceof goog.async.Deferred && this.result_.cancel();
  } else {
    if (this.parent_) {
      var b = this.parent_;
      delete this.parent_;
      a ? b.cancel(a) : b.branchCancel_();
    }
    this.onCancelFunction_ ? this.onCancelFunction_.call(this.defaultScope_, this) : this.silentlyCanceled_ = !0;
    this.hasFired() || this.errback(new goog.async.Deferred.CanceledError(this));
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  0 >= this.branches_ && this.cancel();
};
goog.async.Deferred.prototype.continue_ = function(a, b) {
  this.blocked_ = !1;
  this.updateResult_(a, b);
};
goog.async.Deferred.prototype.updateResult_ = function(a, b) {
  this.fired_ = !0;
  this.result_ = b;
  this.hadError_ = !a;
  this.fire_();
};
goog.async.Deferred.prototype.check_ = function() {
  if (this.hasFired()) {
    if (!this.silentlyCanceled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCanceled_ = !1;
  }
};
goog.async.Deferred.prototype.callback = function(a) {
  this.check_();
  this.assertNotDeferred_(a);
  this.updateResult_(!0, a);
};
goog.async.Deferred.prototype.errback = function(a) {
  this.check_();
  this.assertNotDeferred_(a);
  this.makeStackTraceLong_(a);
  this.updateResult_(!1, a);
};
goog.async.Deferred.prototype.makeStackTraceLong_ = function(a) {
  goog.async.Deferred.LONG_STACK_TRACES && this.constructorStack_ && goog.isObject(a) && a.stack && /^[^\n]+(\n   [^\n]+)+/.test(a.stack) && (a.stack = a.stack + "\nDEFERRED OPERATION:\n" + this.constructorStack_);
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(a) {
  goog.asserts.assert(!(a instanceof goog.async.Deferred), "An execution sequence may not be initiated with a blocking Deferred.");
};
goog.async.Deferred.prototype.addCallback = function(a, b) {
  return this.addCallbacks(a, null, b);
};
goog.async.Deferred.prototype.addErrback = function(a, b) {
  return this.addCallbacks(null, a, b);
};
goog.async.Deferred.prototype.addBoth = function(a, b) {
  return this.addCallbacks(a, a, b);
};
goog.async.Deferred.prototype.addFinally = function(a, b) {
  var c = this;
  return this.addCallbacks(a, function(b) {
    var e = a.call(c, b);
    if (!goog.isDef(e)) {
      throw b;
    }
    return e;
  }, b);
};
goog.async.Deferred.prototype.addCallbacks = function(a, b, c) {
  goog.asserts.assert(!this.blocking_, "Blocking Deferreds can not be re-used");
  this.sequence_.push([a, b, c]);
  this.hasFired() && this.fire_();
  return this;
};
goog.async.Deferred.prototype.then = function(a, b, c) {
  var d, e, f = new goog.Promise(function(a, b) {
    d = a;
    e = b;
  });
  this.addCallbacks(d, function(a) {
    a instanceof goog.async.Deferred.CanceledError ? f.cancel() : e(a);
  });
  return f.then(a, b, c);
};
goog.Thenable.addImplementation(goog.async.Deferred);
goog.async.Deferred.prototype.chainDeferred = function(a) {
  this.addCallbacks(a.callback, a.errback, a);
  return this;
};
goog.async.Deferred.prototype.awaitDeferred = function(a) {
  return a instanceof goog.async.Deferred ? this.addCallback(goog.bind(a.branch, a)) : this.addCallback(function() {
    return a;
  });
};
goog.async.Deferred.prototype.branch = function(a) {
  var b = new goog.async.Deferred;
  this.chainDeferred(b);
  a && (b.parent_ = this, this.branches_++);
  return b;
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_;
};
goog.async.Deferred.prototype.isError = function(a) {
  return a instanceof Error;
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.sequence_, function(a) {
    return goog.isFunction(a[1]);
  });
};
goog.async.Deferred.prototype.fire_ = function() {
  this.unhandledErrorId_ && this.hasFired() && this.hasErrback_() && (goog.async.Deferred.unscheduleError_(this.unhandledErrorId_), this.unhandledErrorId_ = 0);
  this.parent_ && (this.parent_.branches_--, delete this.parent_);
  for (var a = this.result_, b = !1, c = !1;this.sequence_.length && !this.blocked_;) {
    var d = this.sequence_.shift(), e = d[0], f = d[1], d = d[2];
    if (e = this.hadError_ ? f : e) {
      try {
        var g = e.call(d || this.defaultScope_, a);
        goog.isDef(g) && (this.hadError_ = this.hadError_ && (g == a || this.isError(g)), this.result_ = a = g);
        if (goog.Thenable.isImplementedBy(a) || "function" === typeof goog.global.Promise && a instanceof goog.global.Promise) {
          this.blocked_ = c = !0;
        }
      } catch (h) {
        a = h, this.hadError_ = !0, this.makeStackTraceLong_(a), this.hasErrback_() || (b = !0);
      }
    }
  }
  this.result_ = a;
  c ? (c = goog.bind(this.continue_, this, !0), g = goog.bind(this.continue_, this, !1), a instanceof goog.async.Deferred ? (a.addCallbacks(c, g), a.blocking_ = !0) : a.then(c, g)) : !goog.async.Deferred.STRICT_ERRORS || !this.isError(a) || a instanceof goog.async.Deferred.CanceledError || (b = this.hadError_ = !0);
  b && (this.unhandledErrorId_ = goog.async.Deferred.scheduleError_(a));
};
goog.async.Deferred.succeed = function(a) {
  var b = new goog.async.Deferred;
  b.callback(a);
  return b;
};
goog.async.Deferred.fromPromise = function(a) {
  var b = new goog.async.Deferred;
  b.callback();
  b.addCallback(function() {
    return a;
  });
  return b;
};
goog.async.Deferred.fail = function(a) {
  var b = new goog.async.Deferred;
  b.errback(a);
  return b;
};
goog.async.Deferred.canceled = function() {
  var a = new goog.async.Deferred;
  a.cancel();
  return a;
};
goog.async.Deferred.when = function(a, b, c) {
  return a instanceof goog.async.Deferred ? a.branch(!0).addCallback(b, c) : goog.async.Deferred.succeed(a).addCallback(b, c);
};
goog.async.Deferred.AlreadyCalledError = function(a) {
  goog.debug.Error.call(this);
  this.deferred = a;
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Deferred has already fired";
goog.async.Deferred.AlreadyCalledError.prototype.name = "AlreadyCalledError";
goog.async.Deferred.CanceledError = function(a) {
  goog.debug.Error.call(this);
  this.deferred = a;
};
goog.inherits(goog.async.Deferred.CanceledError, goog.debug.Error);
goog.async.Deferred.CanceledError.prototype.message = "Deferred was canceled";
goog.async.Deferred.CanceledError.prototype.name = "CanceledError";
goog.async.Deferred.Error_ = function(a) {
  this.id_ = goog.global.setTimeout(goog.bind(this.throwError, this), 0);
  this.error_ = a;
};
goog.async.Deferred.Error_.prototype.throwError = function() {
  goog.asserts.assert(goog.async.Deferred.errorMap_[this.id_], "Cannot throw an error that is not scheduled.");
  delete goog.async.Deferred.errorMap_[this.id_];
  throw this.error_;
};
goog.async.Deferred.Error_.prototype.resetTimer = function() {
  goog.global.clearTimeout(this.id_);
};
goog.async.Deferred.errorMap_ = {};
goog.async.Deferred.scheduleError_ = function(a) {
  a = new goog.async.Deferred.Error_(a);
  goog.async.Deferred.errorMap_[a.id_] = a;
  return a.id_;
};
goog.async.Deferred.unscheduleError_ = function(a) {
  var b = goog.async.Deferred.errorMap_[a];
  b && (b.resetTimer(), delete goog.async.Deferred.errorMap_[a]);
};
goog.async.Deferred.assertNoErrors = function() {
  var a = goog.async.Deferred.errorMap_, b;
  for (b in a) {
    var c = a[b];
    c.resetTimer();
    c.throwError();
  }
};
goog.async.Delay = function(a, b, c) {
  goog.Disposable.call(this);
  this.listener_ = a;
  this.interval_ = b || 0;
  this.handler_ = c;
  this.callback_ = goog.bind(this.doAction_, this);
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_;
};
goog.async.Delay.prototype.start = function(a) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(a) ? a : this.interval_);
};
goog.async.Delay.prototype.startIfNotActive = function(a) {
  this.isActive() || this.start(a);
};
goog.async.Delay.prototype.stop = function() {
  this.isActive() && goog.Timer.clear(this.id_);
  this.id_ = 0;
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_();
};
goog.async.Delay.prototype.fireIfActive = function() {
  this.isActive() && this.fire();
};
goog.async.Delay.prototype.isActive = function() {
  return 0 != this.id_;
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  this.listener_ && this.listener_.call(this.handler_);
};
goog.events.EventHandler = function(a) {
  goog.Disposable.call(this);
  this.handler_ = a;
  this.keys_ = {};
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(a, b, c, d) {
  return this.listen_(a, b, c, d);
};
goog.events.EventHandler.prototype.listenWithScope = function(a, b, c, d, e) {
  return this.listen_(a, b, c, d, e);
};
goog.events.EventHandler.prototype.listen_ = function(a, b, c, d, e) {
  goog.isArray(b) || (b && (goog.events.EventHandler.typeArray_[0] = b.toString()), b = goog.events.EventHandler.typeArray_);
  for (var f = 0;f < b.length;f++) {
    var g = goog.events.listen(a, b[f], c || this.handleEvent, d || !1, e || this.handler_ || this);
    if (!g) {
      break;
    }
    this.keys_[g.key] = g;
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(a, b, c, d) {
  return this.listenOnce_(a, b, c, d);
};
goog.events.EventHandler.prototype.listenOnceWithScope = function(a, b, c, d, e) {
  return this.listenOnce_(a, b, c, d, e);
};
goog.events.EventHandler.prototype.listenOnce_ = function(a, b, c, d, e) {
  if (goog.isArray(b)) {
    for (var f = 0;f < b.length;f++) {
      this.listenOnce_(a, b[f], c, d, e);
    }
  } else {
    a = goog.events.listenOnce(a, b, c || this.handleEvent, d, e || this.handler_ || this);
    if (!a) {
      return this;
    }
    this.keys_[a.key] = a;
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(a, b, c, d) {
  return this.listenWithWrapper_(a, b, c, d);
};
goog.events.EventHandler.prototype.listenWithWrapperAndScope = function(a, b, c, d, e) {
  return this.listenWithWrapper_(a, b, c, d, e);
};
goog.events.EventHandler.prototype.listenWithWrapper_ = function(a, b, c, d, e) {
  b.listen(a, c, d, e || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  var a = 0, b;
  for (b in this.keys_) {
    Object.prototype.hasOwnProperty.call(this.keys_, b) && a++;
  }
  return a;
};
goog.events.EventHandler.prototype.unlisten = function(a, b, c, d, e) {
  if (goog.isArray(b)) {
    for (var f = 0;f < b.length;f++) {
      this.unlisten(a, b[f], c, d, e);
    }
  } else {
    if (a = goog.events.getListener(a, b, c || this.handleEvent, d, e || this.handler_ || this)) {
      goog.events.unlistenByKey(a), delete this.keys_[a.key];
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(a, b, c, d, e) {
  b.unlisten(a, c, d, e || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.object.forEach(this.keys_, function(a, b) {
    this.keys_.hasOwnProperty(b) && goog.events.unlistenByKey(a);
  }, this);
  this.keys_ = {};
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(a) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.messaging = {};
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(a) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(a, b, c) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(a) {
};
goog.messaging.MessageChannel.prototype.send = function(a, b) {
};
goog.messaging.AbstractChannel = function() {
  goog.Disposable.call(this);
  this.services_ = {};
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.logger = goog.log.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(a) {
  a && a();
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return !0;
};
goog.messaging.AbstractChannel.prototype.registerService = function(a, b, c) {
  this.services_[a] = {callback:b, objectPayload:!!c};
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(a) {
  this.defaultService_ = a;
};
goog.messaging.AbstractChannel.prototype.deliver = function(a, b) {
  var c = this.getService(a, b);
  if (c) {
    var d = this.decodePayload(a, b, c.objectPayload);
    goog.isDefAndNotNull(d) && c.callback(d);
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(a, b) {
  var c = this.services_[a];
  if (c) {
    return c;
  }
  if (this.defaultService_) {
    var c = goog.partial(this.defaultService_, a), d = goog.isObject(b);
    return {callback:c, objectPayload:d};
  }
  goog.log.warning(this.logger, 'Unknown service name "' + a + '"');
  return null;
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(a, b, c) {
  if (c && goog.isString(b)) {
    try {
      return goog.json.parse(b);
    } catch (d) {
      return goog.log.warning(this.logger, "Expected JSON payload for " + a + ', was "' + b + '"'), null;
    }
  } else {
    if (!c && !goog.isString(b)) {
      return goog.json.serialize(b);
    }
  }
  return b;
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.messaging.AbstractChannel.superClass_.disposeInternal.call(this);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_;
};
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.net.xpc.Transport = function(a) {
  goog.Disposable.call(this);
  this.domHelper_ = a || goog.dom.getDomHelper();
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType;
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow();
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[String(this.transportType)] || "";
};
goog.net.xpc.DirectTransport = function(a, b) {
  goog.net.xpc.Transport.call(this, b);
  this.channel_ = a;
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.registerDisposable(this.eventHandler_);
  this.maybeAttemptToConnectTimer_ = new goog.Timer(goog.net.xpc.DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_, this.getWindow());
  this.registerDisposable(this.maybeAttemptToConnectTimer_);
  this.setupAckReceived_ = new goog.async.Deferred;
  this.setupAckSent_ = new goog.async.Deferred;
  this.connected_ = new goog.async.Deferred;
  this.endpointId_ = goog.net.xpc.getRandomString(10);
  this.peerEndpointId_ = null;
  this.asyncSendsMap_ = {};
  this.originalChannelName_ = this.channel_.name;
  this.channel_.updateChannelNameAndCatalog(goog.net.xpc.DirectTransport.getRoledChannelName_(this.channel_.name, this.channel_.getRole()));
  this.initialized_ = !1;
  this.connected_.awaitDeferred(this.setupAckReceived_);
  this.connected_.awaitDeferred(this.setupAckSent_);
  this.connected_.addCallback(this.notifyConnected_, this);
  this.connected_.callback(!0);
  this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, goog.Timer.TICK, this.maybeAttemptToConnect_);
  goog.log.info(goog.net.xpc.logger, "DirectTransport created. role\x3d" + this.channel_.getRole());
};
goog.inherits(goog.net.xpc.DirectTransport, goog.net.xpc.Transport);
goog.net.xpc.DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_ = 100;
goog.net.xpc.DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ = 0;
goog.net.xpc.DirectTransport.isSupported = function(a) {
  try {
    return window.document.domain == a.document.domain;
  } catch (b) {
    return !1;
  }
};
goog.net.xpc.DirectTransport.activeCount_ = {};
goog.net.xpc.DirectTransport.GLOBAL_TRANPORT_PATH_ = "crosswindowmessaging.channel";
goog.net.xpc.DirectTransport.MESSAGE_DELIMITER_ = ",";
goog.net.xpc.DirectTransport.initialize_ = function(a) {
  var b = goog.getUid(a);
  0 == (goog.net.xpc.DirectTransport.activeCount_[b] || 0) && null == goog.getObjectByName(goog.net.xpc.DirectTransport.GLOBAL_TRANPORT_PATH_, a) && goog.exportSymbol(goog.net.xpc.DirectTransport.GLOBAL_TRANPORT_PATH_, goog.net.xpc.DirectTransport.messageReceivedHandler_, a);
  goog.net.xpc.DirectTransport.activeCount_[b]++;
};
goog.net.xpc.DirectTransport.getRoledChannelName_ = function(a, b) {
  return a + "_" + b;
};
goog.net.xpc.DirectTransport.messageReceivedHandler_ = function(a) {
  var b = goog.net.xpc.DirectTransport.Message_.fromLiteral(a);
  a = b.channelName;
  var c = b.service, b = b.payload;
  goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + a + ", service\x3d" + c + ", payload\x3d" + b);
  var d = goog.net.xpc.channels[a];
  if (d) {
    return d.xpcDeliver(c, b), !0;
  }
  var d = goog.net.xpc.DirectTransport.parseTransportPayload_(b)[0], e;
  for (e in goog.net.xpc.channels) {
    var f = goog.net.xpc.channels[e];
    if (f.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !f.isConnected() && c == goog.net.xpc.TRANSPORT_SERVICE_ && d == goog.net.xpc.SETUP) {
      return f.updateChannelNameAndCatalog(a), f.xpcDeliver(c, b), !0;
    }
  }
  goog.log.info(goog.net.xpc.logger, "channel name mismatch; message ignored.");
  return !1;
};
goog.net.xpc.DirectTransport.prototype.transportType = goog.net.xpc.TransportTypes.DIRECT;
goog.net.xpc.DirectTransport.prototype.transportServiceHandler = function(a) {
  a = goog.net.xpc.DirectTransport.parseTransportPayload_(a);
  var b = a[1];
  switch(a[0]) {
    case goog.net.xpc.SETUP_ACK_:
      this.setupAckReceived_.hasFired() || this.setupAckReceived_.callback(!0);
      break;
    case goog.net.xpc.SETUP:
      this.sendSetupAckMessage_(), null != this.peerEndpointId_ && this.peerEndpointId_ != b && (goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + b), this.sendSetupMessage_()), this.peerEndpointId_ = b;
  }
};
goog.net.xpc.DirectTransport.prototype.sendSetupMessage_ = function() {
  var a = goog.net.xpc.SETUP, a = a + goog.net.xpc.DirectTransport.MESSAGE_DELIMITER_, a = a + this.endpointId_;
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, a);
};
goog.net.xpc.DirectTransport.prototype.sendSetupAckMessage_ = function() {
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
  this.setupAckSent_.hasFired() || this.setupAckSent_.callback(!0);
};
goog.net.xpc.DirectTransport.prototype.connect = function() {
  var a = this.getWindow();
  a ? (goog.net.xpc.DirectTransport.initialize_(a), this.initialized_ = !0, this.maybeAttemptToConnect_()) : goog.log.fine(goog.net.xpc.logger, "connect(): no window to initialize.");
};
goog.net.xpc.DirectTransport.prototype.maybeAttemptToConnect_ = function() {
  this.channel_.getRole();
  this.channel_.isConnected() ? this.maybeAttemptToConnectTimer_.stop() : (this.maybeAttemptToConnectTimer_.start(), this.sendSetupMessage_());
};
goog.net.xpc.DirectTransport.prototype.send = function(a, b) {
  if (this.channel_.getPeerWindowObject()) {
    var c = goog.net.xpc.DirectTransport.getRoledChannelName_(this.originalChannelName_, this.getPeerRole_()), c = new goog.net.xpc.DirectTransport.Message_(c, a, b);
    this.channel_.getConfig()[goog.net.xpc.CfgFields.DIRECT_TRANSPORT_SYNC_MODE] ? this.executeScheduledSend_(c) : this.asyncSendsMap_[goog.getUid(c)] = goog.Timer.callOnce(goog.bind(this.executeScheduledSend_, this, c), 0);
  } else {
    goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
  }
};
goog.net.xpc.DirectTransport.prototype.executeScheduledSend_ = function(a) {
  var b = goog.getUid(a);
  this.asyncSendsMap_[b] && delete this.asyncSendsMap_[b];
  try {
    var c = goog.getObjectByName(goog.net.xpc.DirectTransport.GLOBAL_TRANPORT_PATH_, this.channel_.getPeerWindowObject());
  } catch (d) {
    goog.log.warning(goog.net.xpc.logger, "Can't access other window, ignoring.", d);
    return;
  }
  if (goog.isNull(c)) {
    goog.log.warning(goog.net.xpc.logger, "Peer window had no global function.");
  } else {
    try {
      c(a.toLiteral()), goog.log.info(goog.net.xpc.logger, "send(): channelName\x3d" + a.channelName + " service\x3d" + a.service + " payload\x3d" + a.payload);
    } catch (d) {
      goog.log.warning(goog.net.xpc.logger, "Error performing call, ignoring.", d);
    }
  }
};
goog.net.xpc.DirectTransport.prototype.getPeerRole_ = function() {
  return this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
};
goog.net.xpc.DirectTransport.prototype.notifyConnected_ = function() {
  this.channel_.notifyConnected(this.channel_.getConfig()[goog.net.xpc.CfgFields.DIRECT_TRANSPORT_SYNC_MODE] ? goog.net.xpc.DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ : 0);
};
goog.net.xpc.DirectTransport.prototype.disposeInternal = function() {
  if (this.initialized_) {
    var a = this.getWindow(), b = goog.getUid(a);
    1 == --goog.net.xpc.DirectTransport.activeCount_[b] && goog.exportSymbol(goog.net.xpc.DirectTransport.GLOBAL_TRANPORT_PATH_, null, a);
  }
  this.asyncSendsMap_ && (goog.object.forEach(this.asyncSendsMap_, function(a) {
    goog.Timer.clear(a);
  }), this.asyncSendsMap_ = null);
  this.setupAckReceived_ && (this.setupAckReceived_.cancel(), delete this.setupAckReceived_);
  this.setupAckSent_ && (this.setupAckSent_.cancel(), delete this.setupAckSent_);
  this.connected_ && (this.connected_.cancel(), delete this.connected_);
  goog.net.xpc.DirectTransport.superClass_.disposeInternal.call(this);
};
goog.net.xpc.DirectTransport.parseTransportPayload_ = function(a) {
  a = a.split(goog.net.xpc.DirectTransport.MESSAGE_DELIMITER_);
  a[1] = a[1] || null;
  return a;
};
goog.net.xpc.DirectTransport.Message_ = function(a, b, c) {
  this.channelName = a;
  this.service = b;
  this.payload = c;
};
goog.net.xpc.DirectTransport.Message_.prototype.toLiteral = function() {
  return {channelName:this.channelName, service:this.service, payload:this.payload};
};
goog.net.xpc.DirectTransport.Message_.fromLiteral = function(a) {
  return new goog.net.xpc.DirectTransport.Message_(a.channelName, a.service, a.payload);
};
goog.net.xpc.FrameElementMethodTransport = function(a, b) {
  goog.net.xpc.Transport.call(this, b);
  this.channel_ = a;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this);
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = !1;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER ? (this.iframeElm_ = this.channel_.getIframeElement(), this.iframeElm_.XPC_toOuter = goog.bind(this.incoming_, this)) : this.attemptSetup_();
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var a = !0;
  try {
    this.iframeElm_ || (this.iframeElm_ = this.getWindow().frameElement), this.iframeElm_ && this.iframeElm_.XPC_toOuter && (this.outgoing_ = this.iframeElm_.XPC_toOuter, this.iframeElm_.XPC_toOuter.XPC_toInner = goog.bind(this.incoming_, this), a = !1, this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_), this.channel_.notifyConnected());
  } catch (b) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + b);
  }
  a && (this.attemptSetupCb_ || (this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)), this.getWindow().setTimeout(this.attemptSetupCb_, 100));
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(a) {
  if (this.channel_.getRole() != goog.net.xpc.CrossPageChannelRole.OUTER || this.channel_.isConnected() || a != goog.net.xpc.SETUP_ACK_) {
    throw Error("Got unexpected transport message.");
  }
  this.outgoing_ = this.iframeElm_.XPC_toOuter.XPC_toInner;
  this.channel_.notifyConnected();
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(a, b) {
  this.recursive_ || 0 != this.queue_.length ? (this.queue_.push({serviceName:a, payload:b}), 1 == this.queue_.length && (this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1))) : this.channel_.xpcDeliver(a, b);
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  for (;this.queue_.length;) {
    var a = this.queue_.shift();
    this.channel_.xpcDeliver(a.serviceName, a.payload);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(a, b) {
  this.recursive_ = !0;
  this.outgoing_(a, b);
  this.recursive_ = !1;
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.iframeElm_ = this.outgoing_ = null;
};
goog.net.xpc.IframePollingTransport = function(a, b) {
  goog.net.xpc.Transport.call(this, b);
  this.channel_ = a;
  this.sendUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = [];
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.pollsBeforeReconnect_ = 5;
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = !1;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = !1;
goog.net.xpc.IframePollingTransport.prototype.reconnectFrame_ = null;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg";
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack";
};
goog.net.xpc.IframePollingTransport.prototype.isChannelAvailable = function() {
  return !this.isDisposed() && this.channel_.isPeerAvailable();
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrames_ = function() {
  try {
    if (this.isChannelAvailable()) {
      return this.channel_.getPeerWindowObject().frames || {};
    }
  } catch (a) {
    goog.log.fine(goog.net.xpc.logger, "error retrieving peer frames");
  }
  return {};
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrame_ = function(a) {
  return this.getPeerFrames_()[a];
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  this.isChannelAvailable() && (goog.log.fine(goog.net.xpc.logger, "transport connect called"), this.initialized_ || (goog.log.fine(goog.net.xpc.logger, "initializing..."), this.constructSenderFrames_(), this.initialized_ = !0), this.checkForeignFramesReady_());
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var a = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(a);
  this.msgWinObj_ = this.getWindow().frames[a];
  a = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(a);
  this.ackWinObj_ = this.getWindow().frames[a];
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(a) {
  goog.log.log(goog.net.xpc.logger, goog.debug.Logger.Level.FINEST, "constructing sender frame: " + a);
  var b = goog.dom.createElement(goog.dom.TagName.IFRAME), c = b.style;
  c.position = "absolute";
  c.top = "-10px";
  c.left = "10px";
  c.width = "1px";
  c.height = "1px";
  b.id = b.name = a;
  b.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(b);
  return b;
};
goog.net.xpc.IframePollingTransport.prototype.maybeInnerPeerReconnect_ = function() {
  this.reconnectFrame_ || 0 < this.pollsBeforeReconnect_-- || (goog.log.log(goog.net.xpc.logger, goog.debug.Logger.Level.FINEST, "Inner peer reconnect triggered."), this.channel_.updateChannelNameAndCatalog(goog.net.xpc.getRandomString(10)), goog.log.log(goog.net.xpc.logger, goog.debug.Logger.Level.FINEST, "switching channels: " + this.channel_.name), this.deconstructSenderFrames_(), this.initialized_ = !1, this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + 
  "_reconnect_" + this.channel_.name));
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.debug.Logger.Level.FINEST, "outerPeerReconnect called");
  for (var a = this.getPeerFrames_(), b = a.length, c = 0;c < b;c++) {
    var d;
    try {
      a[c] && a[c].name && (d = a[c].name);
    } catch (f) {
    }
    if (d) {
      var e = d.split("_");
      if (3 == e.length && e[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && "reconnect" == e[1]) {
        this.channel_.name = e[2];
        this.deconstructSenderFrames_();
        this.initialized_ = !1;
        break;
      }
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.debug.Logger.Level.FINEST, "deconstructSenderFrames called");
  this.msgIframeElm_ && (this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_), this.msgWinObj_ = this.msgIframeElm_ = null);
  this.ackIframeElm_ && (this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_), this.ackWinObj_ = this.ackIframeElm_ = null);
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()) ? (goog.log.fine(goog.net.xpc.logger, "foreign frames present"), this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getMsgFrameName_()), goog.bind(this.processIncomingMsg, this)), this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getAckFrameName_()), goog.bind(this.processIncomingAck, this)), this.checkLocalFramesPresent_()) : 
  (goog.log.log(goog.net.xpc.logger, goog.debug.Logger.Level.FINEST, "foreign frames not (yet) present"), this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER ? this.maybeInnerPeerReconnect_() : this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && this.outerPeerReconnect_(), this.getWindow().setTimeout(goog.bind(this.connect, this), 100));
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(a) {
  goog.log.log(goog.net.xpc.logger, goog.debug.Logger.Level.FINEST, "checking for receive frame: " + a);
  try {
    var b = this.getPeerFrame_(a);
    if (!b || 0 != b.location.href.indexOf(this.rcvUri_)) {
      return !1;
    }
  } catch (c) {
    return !1;
  }
  return !0;
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var a = this.getPeerFrames_();
  a[this.getAckFrameName_()] && a[this.getMsgFrameName_()] ? (this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_), this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_), goog.log.fine(goog.net.xpc.logger, "local frames ready"), this.getWindow().setTimeout(goog.bind(function() {
    this.msgSender_.send(goog.net.xpc.SETUP);
    this.waitForAck_ = this.sentConnectionSetup_ = !0;
    goog.log.fine(goog.net.xpc.logger, "SETUP sent");
  }, this), 100)) : (this.checkLocalFramesPresentCb_ || (this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)), this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100), goog.log.fine(goog.net.xpc.logger, "local frames not (yet) present"));
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if (this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    if (this.channel_.notifyConnected(), this.deliveryQueue_) {
      goog.log.fine(goog.net.xpc.logger, "delivering queued messages (" + this.deliveryQueue_.length + ")");
      for (var a = 0, b;a < this.deliveryQueue_.length;a++) {
        b = this.deliveryQueue_[a], this.channel_.xpcDeliver(b.service, b.payload);
      }
      delete this.deliveryQueue_;
    }
  } else {
    goog.log.log(goog.net.xpc.logger, goog.debug.Logger.Level.FINEST, "checking if connected: ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_);
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(a) {
  goog.log.log(goog.net.xpc.logger, goog.debug.Logger.Level.FINEST, "msg received: " + a);
  if (a == goog.net.xpc.SETUP) {
    this.ackSender_ && (this.ackSender_.send(goog.net.xpc.SETUP_ACK_), goog.log.log(goog.net.xpc.logger, goog.debug.Logger.Level.FINEST, "SETUP_ACK sent"), this.sentConnectionSetupAck_ = !0, this.checkIfConnected_());
  } else {
    if (this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var b = a.indexOf("|"), c = a.substring(0, b);
      a = a.substring(b + 1);
      b = c.indexOf(",");
      if (-1 == b) {
        var d;
        this.ackSender_.send("ACK:" + c);
        this.deliverPayload_(a);
      } else {
        d = c.substring(0, b), this.ackSender_.send("ACK:" + d), c = c.substring(b + 1).split("/"), b = parseInt(c[0], 10), c = parseInt(c[1], 10), 1 == b && (this.parts_ = []), this.parts_.push(a), b == c && (this.deliverPayload_(this.parts_.join("")), delete this.parts_);
      }
    } else {
      goog.log.warning(goog.net.xpc.logger, "received msg, but channel is not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(a) {
  goog.log.log(goog.net.xpc.logger, goog.debug.Logger.Level.FINEST, "ack received: " + a);
  a == goog.net.xpc.SETUP_ACK_ ? (this.waitForAck_ = !1, this.rcvdConnectionSetupAck_ = !0, this.checkIfConnected_()) : this.channel_.isConnected() ? this.waitForAck_ ? parseInt(a.split(":")[1], 10) == this.sequence_ ? (this.waitForAck_ = !1, this.sendNextFrame_()) : goog.log.warning(goog.net.xpc.logger, "got ack with wrong sequence") : goog.log.warning(goog.net.xpc.logger, "got unexpected ack") : goog.log.warning(goog.net.xpc.logger, "received ack, but channel not connected");
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if (!this.waitForAck_ && this.sendQueue_.length) {
    var a = this.sendQueue_.shift();
    ++this.sequence_;
    this.msgSender_.send(this.sequence_ + a);
    goog.log.log(goog.net.xpc.logger, goog.debug.Logger.Level.FINEST, "msg sent: " + this.sequence_ + a);
    this.waitForAck_ = !0;
  }
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(a) {
  var b = a.indexOf(":"), c = a.substr(0, b);
  a = a.substring(b + 1);
  this.channel_.isConnected() ? this.channel_.xpcDeliver(c, a) : ((this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:c, payload:a}), goog.log.log(goog.net.xpc.logger, goog.debug.Logger.Level.FINEST, "queued delivery"));
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(a, b) {
  var c = a + ":" + b;
  if (!goog.userAgent.IE || b.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + c);
  } else {
    for (var d = b.length, e = Math.ceil(d / this.MAX_FRAME_LENGTH_), f = 0, g = 1;f < d;) {
      this.sendQueue_.push("," + g + "/" + e + "|" + c.substr(f, this.MAX_FRAME_LENGTH_)), g++, f += this.MAX_FRAME_LENGTH_;
    }
  }
  this.sendNextFrame_();
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframePollingTransport.superClass_.disposeInternal.call(this);
  var a = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(a, this.msgReceiver_);
  goog.array.remove(a, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgWinObj_ = this.ackWinObj_ = this.msgIframeElm_ = this.ackIframeElm_ = null;
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var a = goog.net.xpc.IframePollingTransport.receivers_, b, c = !1;
  try {
    for (var d = 0;b = a[d];d++) {
      c = c || b.receive();
    }
  } catch (e) {
    if (goog.log.info(goog.net.xpc.logger, "receive_() failed: " + e), b.transport_.channel_.notifyTransportError(), !a.length) {
      return;
    }
  }
  a = goog.now();
  c && (goog.net.xpc.IframePollingTransport.lastActivity_ = a);
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, a - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_);
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.log.fine(goog.net.xpc.logger, "starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  goog.net.xpc.IframePollingTransport.rcvTimer_ && window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_);
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_);
};
goog.net.xpc.IframePollingTransport.Sender = function(a, b) {
  if (!/^https?:\/\//.test(a)) {
    throw Error("URL " + a + " is invalid");
  }
  this.sanitizedSendUri_ = a;
  this.sendFrame_ = b;
  this.cycle_ = 0;
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(a) {
  this.cycle_ = ++this.cycle_ % 2;
  a = this.sanitizedSendUri_ + "#" + this.cycle_ + encodeURIComponent(a);
  try {
    goog.userAgent.WEBKIT ? this.sendFrame_.location.href = a : this.sendFrame_.location.replace(a);
  } catch (b) {
    goog.log.error(goog.net.xpc.logger, "sending failed", b);
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver = function(a, b, c) {
  this.transport_ = a;
  this.rcvFrame_ = b;
  this.cb_ = c;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var a = this.rcvFrame_.location.href;
  if (a != this.currentLoc_) {
    this.currentLoc_ = a;
    if (a = a.split("#")[1]) {
      a = a.substr(1), this.cb_(decodeURIComponent(a));
    }
    return !0;
  }
  return !1;
};
goog.net.xpc.IframeRelayTransport = function(a, b) {
  goog.net.xpc.Transport.call(this, b);
  this.channel_ = a;
  this.peerRelayUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.IFRAME_ID];
  goog.userAgent.WEBKIT && goog.net.xpc.IframeRelayTransport.startCleanupTimer_();
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
goog.userAgent.WEBKIT && (goog.net.xpc.IframeRelayTransport.iframeRefs_ = [], goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3, goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3, goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0, goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ || (goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
    goog.net.xpc.IframeRelayTransport.cleanup_();
  }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_));
}, goog.net.xpc.IframeRelayTransport.cleanup_ = function(a) {
  var b = goog.now();
  for (a = a || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;goog.net.xpc.IframeRelayTransport.iframeRefs_.length && b - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= a;) {
    var c = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
    goog.dom.removeNode(c);
    goog.log.log(goog.net.xpc.logger, goog.debug.Logger.Level.FINEST, "iframe removed");
  }
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
}, goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
  goog.net.xpc.IframeRelayTransport.cleanup_();
});
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  this.getWindow().xpcRelay || (this.getWindow().xpcRelay = goog.net.xpc.IframeRelayTransport.receiveMessage_);
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(a, b) {
  var c = b.indexOf(":"), d = b.substr(0, c), e = b.substr(c + 1);
  if (goog.userAgent.IE && -1 != (c = d.indexOf("|"))) {
    var f = d.substr(0, c), d = d.substr(c + 1), c = d.indexOf("+"), g = d.substr(0, c), c = parseInt(d.substr(c + 1), 10), h = goog.net.xpc.IframeRelayTransport.fragmentMap_[g];
    h || (h = goog.net.xpc.IframeRelayTransport.fragmentMap_[g] = {fragments:[], received:0, expected:0});
    goog.string.contains(d, "++") && (h.expected = c + 1);
    h.fragments[c] = e;
    h.received++;
    if (h.received != h.expected) {
      return;
    }
    e = h.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[g];
  } else {
    var f = d
  }
  goog.net.xpc.channels[a].xpcDeliver(f, decodeURIComponent(e));
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(a) {
  a == goog.net.xpc.SETUP ? (this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_), this.channel_.notifyConnected()) : a == goog.net.xpc.SETUP_ACK_ && this.channel_.notifyConnected();
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(a, b) {
  var c = encodeURIComponent(b), d = c.length, e = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if (goog.userAgent.IE && d > e) {
    for (var f = goog.string.getRandomString(), g = 0, h = 0;g < d;h++) {
      var k = c.substr(g, e), g = g + e;
      this.send_(a, k, f + (g >= d ? "++" : "+") + h);
    }
  } else {
    this.send_(a, c);
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(a, b, c) {
  if (goog.userAgent.IE) {
    var d = this.getWindow().document.createElement(goog.dom.TagName.DIV);
    goog.dom.safe.setInnerHtml(d, goog.html.SafeHtml.createIframe(null, null, {onload:goog.string.Const.from("this.xpcOnload()"), sandbox:null}));
    d = d.childNodes[0];
    d.xpcOnload = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_;
  } else {
    d = this.getWindow().document.createElement(goog.dom.TagName.IFRAME), goog.userAgent.WEBKIT ? goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:d}) : goog.events.listen(d, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_);
  }
  var e = d.style;
  e.visibility = "hidden";
  e.width = d.style.height = "0px";
  e.position = "absolute";
  e = this.peerRelayUri_;
  e += "#" + this.channel_.name;
  this.peerIframeId_ && (e += "," + this.peerIframeId_);
  e += "|" + a;
  c && (e += "|" + c);
  e += ":" + b;
  d.src = e;
  this.getWindow().document.body.appendChild(d);
  goog.log.log(goog.net.xpc.logger, goog.debug.Logger.Level.FINEST, "msg sent: " + e);
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.debug.Logger.Level.FINEST, "iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null;
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframeRelayTransport.superClass_.disposeInternal.call(this);
  goog.userAgent.WEBKIT && goog.net.xpc.IframeRelayTransport.cleanup_(0);
};
goog.net.xpc.NativeMessagingTransport = function(a, b, c, d, e) {
  goog.net.xpc.Transport.call(this, c);
  this.channel_ = a;
  this.protocolVersion_ = e || 2;
  goog.asserts.assert(1 <= this.protocolVersion_);
  goog.asserts.assert(2 >= this.protocolVersion_);
  this.peerHostname_ = b || "*";
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.maybeAttemptToConnectTimer_ = new goog.Timer(100, this.getWindow());
  this.oneSidedHandshake_ = !!d;
  this.setupAckReceived_ = new goog.async.Deferred;
  this.setupAckSent_ = new goog.async.Deferred;
  this.connected_ = new goog.async.Deferred;
  this.endpointId_ = goog.net.xpc.getRandomString(10);
  this.peerEndpointId_ = null;
  this.oneSidedHandshake_ ? this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER ? this.connected_.awaitDeferred(this.setupAckReceived_) : this.connected_.awaitDeferred(this.setupAckSent_) : (this.connected_.awaitDeferred(this.setupAckReceived_), 2 == this.protocolVersion_ && this.connected_.awaitDeferred(this.setupAckSent_));
  this.connected_.addCallback(this.notifyConnected_, this);
  this.connected_.callback(!0);
  this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, goog.Timer.TICK, this.maybeAttemptToConnect_);
  goog.log.info(goog.net.xpc.logger, "NativeMessagingTransport created.  protocolVersion\x3d" + this.protocolVersion_ + ", oneSidedHandshake\x3d" + this.oneSidedHandshake_ + ", role\x3d" + this.channel_.getRole());
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ = 200;
goog.net.xpc.NativeMessagingTransport.prototype.peerProtocolVersion_ = null;
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = !1;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_ = ",";
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.prototype.sendTimerId_ = 0;
goog.net.xpc.NativeMessagingTransport.prototype.couldPeerVersionBe_ = function(a) {
  return null == this.peerProtocolVersion_ || this.peerProtocolVersion_ == a;
};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(a) {
  var b = goog.getUid(a), c = goog.net.xpc.NativeMessagingTransport.activeCount_[b];
  goog.isNumber(c) || (c = 0);
  0 == c && goog.events.listen(a.postMessage ? a : a.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, !1, goog.net.xpc.NativeMessagingTransport);
  goog.net.xpc.NativeMessagingTransport.activeCount_[b] = c + 1;
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(a) {
  var b = a.getBrowserEvent().data;
  if (!goog.isString(b)) {
    return !1;
  }
  var c = b.indexOf("|"), d = b.indexOf(":");
  if (-1 == c || -1 == d) {
    return !1;
  }
  var e = b.substring(0, c), c = b.substring(c + 1, d), b = b.substring(d + 1);
  goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + e + ", service\x3d" + c + ", payload\x3d" + b);
  if (d = goog.net.xpc.channels[e]) {
    return d.xpcDeliver(c, b, a.getBrowserEvent().origin), !0;
  }
  a = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(b)[0];
  for (var f in goog.net.xpc.channels) {
    if (d = goog.net.xpc.channels[f], d.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !d.isConnected() && c == goog.net.xpc.TRANSPORT_SERVICE_ && (a == goog.net.xpc.SETUP || a == goog.net.xpc.SETUP_NTPV2)) {
      return d.updateChannelNameAndCatalog(e), d.xpcDeliver(c, b), !0;
    }
  }
  goog.log.info(goog.net.xpc.logger, 'channel name mismatch; message ignored"');
  return !1;
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(a) {
  var b = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(a);
  a = b[1];
  switch(b[0]) {
    case goog.net.xpc.SETUP_ACK_:
      this.setPeerProtocolVersion_(1);
      this.setupAckReceived_.hasFired() || this.setupAckReceived_.callback(!0);
      break;
    case goog.net.xpc.SETUP_ACK_NTPV2:
      2 == this.protocolVersion_ && (this.setPeerProtocolVersion_(2), this.setupAckReceived_.hasFired() || this.setupAckReceived_.callback(!0));
      break;
    case goog.net.xpc.SETUP:
      this.setPeerProtocolVersion_(1);
      this.sendSetupAckMessage_(1);
      break;
    case goog.net.xpc.SETUP_NTPV2:
      2 == this.protocolVersion_ && (b = this.peerProtocolVersion_, this.setPeerProtocolVersion_(2), this.sendSetupAckMessage_(2), 1 != b && null == this.peerEndpointId_ || this.peerEndpointId_ == a || (goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + a), this.sendSetupMessage_()), this.peerEndpointId_ = a);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupMessage_ = function() {
  goog.asserts.assert(!(1 == this.protocolVersion_ && 2 == this.peerProtocolVersion_));
  if (2 == this.protocolVersion_ && this.couldPeerVersionBe_(2)) {
    var a = goog.net.xpc.SETUP_NTPV2, a = a + goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_, a = a + this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, a);
  }
  this.couldPeerVersionBe_(1) && this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupAckMessage_ = function(a) {
  goog.asserts.assert(1 != this.protocolVersion_ || 2 != a, "Shouldn't try to send a v2 setup ack in v1 mode.");
  if (2 == this.protocolVersion_ && this.couldPeerVersionBe_(2) && 2 == a) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_NTPV2);
  } else {
    if (this.couldPeerVersionBe_(1) && 1 == a) {
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    } else {
      return;
    }
  }
  this.setupAckSent_.hasFired() || this.setupAckSent_.callback(!0);
};
goog.net.xpc.NativeMessagingTransport.prototype.setPeerProtocolVersion_ = function(a) {
  a > this.peerProtocolVersion_ && (this.peerProtocolVersion_ = a);
  1 == this.peerProtocolVersion_ && (this.setupAckSent_.hasFired() || this.oneSidedHandshake_ || this.setupAckSent_.callback(!0), this.peerEndpointId_ = null);
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = !0;
  this.maybeAttemptToConnect_();
};
goog.net.xpc.NativeMessagingTransport.prototype.maybeAttemptToConnect_ = function() {
  var a = this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER;
  this.oneSidedHandshake_ && a || this.channel_.isConnected() || this.isDisposed() ? this.maybeAttemptToConnectTimer_.stop() : (this.maybeAttemptToConnectTimer_.start(), this.sendSetupMessage_());
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(a, b) {
  var c = this.channel_.getPeerWindowObject();
  c ? (this.send = function(a, b) {
    var f = this, g = this.channel_.name;
    this.sendTimerId_ = goog.Timer.callOnce(function() {
      f.sendTimerId_ = 0;
      try {
        var h = c.postMessage ? c : c.document;
        h.postMessage ? (h.postMessage(g + "|" + a + ":" + b, f.peerHostname_), goog.log.fine(goog.net.xpc.logger, "send(): service\x3d" + a + " payload\x3d" + b + " to hostname\x3d" + f.peerHostname_)) : goog.log.warning(goog.net.xpc.logger, "Peer window had no postMessage function.");
      } catch (k) {
        goog.log.warning(goog.net.xpc.logger, "Error performing postMessage, ignoring.", k);
      }
    }, 0);
  }, this.send(a, b)) : goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
};
goog.net.xpc.NativeMessagingTransport.prototype.notifyConnected_ = function() {
  this.channel_.notifyConnected(1 == this.protocolVersion_ || 1 == this.peerProtocolVersion_ ? goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ : void 0);
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  if (this.initialized_) {
    var a = this.getWindow(), b = goog.getUid(a), c = goog.net.xpc.NativeMessagingTransport.activeCount_[b];
    goog.net.xpc.NativeMessagingTransport.activeCount_[b] = c - 1;
    1 == c && goog.events.unlisten(a.postMessage ? a : a.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, !1, goog.net.xpc.NativeMessagingTransport);
  }
  this.sendTimerId_ && (goog.Timer.clear(this.sendTimerId_), this.sendTimerId_ = 0);
  goog.dispose(this.eventHandler_);
  delete this.eventHandler_;
  goog.dispose(this.maybeAttemptToConnectTimer_);
  delete this.maybeAttemptToConnectTimer_;
  this.setupAckReceived_.cancel();
  delete this.setupAckReceived_;
  this.setupAckSent_.cancel();
  delete this.setupAckSent_;
  this.connected_.cancel();
  delete this.connected_;
  delete this.send;
  goog.net.xpc.NativeMessagingTransport.superClass_.disposeInternal.call(this);
};
goog.net.xpc.NativeMessagingTransport.parseTransportPayload_ = function(a) {
  a = a.split(goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_);
  a[1] = a[1] || null;
  return a;
};
goog.net.xpc.NixTransport = function(a, b) {
  goog.net.xpc.Transport.call(this, b);
  this.channel_ = a;
  this.authToken_ = a[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = a[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_;
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var a = !1;
  try {
    var b = window.opener;
    window.opener = {};
    a = goog.reflect.canAccessProperty(window, "opener");
    window.opener = b;
  } catch (c) {
  }
  return a;
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(a) {
  if (!a.nix_setup_complete) {
    var b = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n Private m_Transport\nPrivate m_Auth\nPublic Sub SetTransport(transport)\nIf isEmpty(m_Transport) Then\nSet m_Transport \x3d transport\nEnd If\nEnd Sub\nPublic Sub SetAuth(auth)\nIf isEmpty(m_Auth) Then\nm_Auth \x3d auth\nEnd If\nEnd Sub\nPublic Function GetAuthToken()\n GetAuthToken \x3d m_Auth\nEnd Function\nPublic Sub SendMessage(service, payload)\n Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\nEnd Sub\nPublic Sub CreateChannel(channel)\n Call m_Transport." + 
    goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\nEnd Sub\nPublic Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n End Sub\nEnd Class\n Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\nDim wrap\nSet wrap \x3d New " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\nwrap.SetTransport transport\nwrap.SetAuth auth\nSet " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " \x3d wrap\nEnd Function";
    try {
      a.execScript(b, "vbscript"), a.nix_setup_complete = !0;
    } catch (c) {
      goog.log.error(goog.net.xpc.logger, "exception caught while attempting global setup: " + c);
    }
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = !1;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER ? this.attemptOuterSetup_() : this.attemptInnerSetup_();
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if (!this.localSetupCompleted_) {
    var a = this.channel_.getIframeElement();
    try {
      var b = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
      a.contentWindow.opener = b(this, this.authToken_);
      this.localSetupCompleted_ = !0;
    } catch (c) {
      goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + c);
    }
    this.localSetupCompleted_ || this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if (!this.localSetupCompleted_) {
    try {
      var a = this.getWindow().opener;
      if (a && goog.net.xpc.NixTransport.NIX_ID_FIELD in a) {
        this.nixChannel_ = a;
        if (this.nixChannel_.GetAuthToken() != this.remoteAuthToken_) {
          goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party");
          return;
        }
        var b = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
        this.nixChannel_.CreateChannel(b(this, this.authToken_));
        this.localSetupCompleted_ = !0;
        this.channel_.notifyConnected();
      }
    } catch (c) {
      goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + c);
      return;
    }
    this.localSetupCompleted_ || this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(a) {
  "unknown" == typeof a && goog.net.xpc.NixTransport.NIX_ID_FIELD in a || goog.log.error(goog.net.xpc.logger, "Invalid NIX channel given to createChannel_");
  this.nixChannel_ = a;
  this.nixChannel_.GetAuthToken() != this.remoteAuthToken_ ? goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party") : this.channel_.notifyConnected();
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(a, b) {
  this.getWindow().setTimeout(goog.bind(function() {
    this.channel_.xpcDeliver(a, b);
  }, this), 1);
};
goog.net.xpc.NixTransport.prototype.send = function(a, b) {
  "unknown" !== typeof this.nixChannel_ && goog.log.error(goog.net.xpc.logger, "NIX channel not connected");
  this.nixChannel_.SendMessage(a, b);
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.net.xpc.NixTransport.superClass_.disposeInternal.call(this);
  this.nixChannel_ = null;
};
goog.net.xpc.CrossPageChannel = function(a, b) {
  goog.messaging.AbstractChannel.call(this);
  for (var c = 0, d;d = goog.net.xpc.UriCfgFields[c];c++) {
    if (d in a && !/^https?:\/\//.test(a[d])) {
      throw Error("URI " + a[d] + " is invalid for field " + d);
    }
  }
  this.cfg_ = a;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = b || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  this.peerLoadHandler_ = new goog.events.EventHandler(this);
  a[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = a[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  a[goog.net.xpc.CfgFields.PEER_POLL_URI] = a[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(a[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels[this.name] = this;
  goog.events.getListener(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_) || goog.events.listenOnce(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.log.info(goog.net.xpc.logger, "CrossPageChannel created: " + this.name);
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.connectionDelay_ = null;
goog.net.xpc.CrossPageChannel.prototype.peerWindowDeferred_ = null;
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED;
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.getConfig = function() {
  return this.cfg_;
};
goog.net.xpc.CrossPageChannel.prototype.getIframeElement = function() {
  return this.iframeElement_;
};
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(a) {
  this.peerWindowObject_ = a;
};
goog.net.xpc.CrossPageChannel.prototype.getPeerWindowObject = function() {
  return this.peerWindowObject_;
};
goog.net.xpc.CrossPageChannel.prototype.isPeerAvailable = function() {
  try {
    return !!this.peerWindowObject_ && !Boolean(this.peerWindowObject_.closed);
  } catch (a) {
    return !1;
  }
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  return goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage ? goog.net.xpc.TransportTypes.NATIVE_MESSAGING : goog.userAgent.GECKO ? goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD : goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI] ? goog.net.xpc.TransportTypes.IFRAME_RELAY : goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported() ? goog.net.xpc.TransportTypes.NIX : goog.net.xpc.TransportTypes.IFRAME_POLLING;
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if (!this.transport_) {
    var a = goog.net.xpc.CfgFields;
    this.cfg_[a.TRANSPORT] || (this.cfg_[a.TRANSPORT] = this.determineTransportType_());
    switch(this.cfg_[a.TRANSPORT]) {
      case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
        this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[a.PEER_HOSTNAME], this.domHelper_, !!this.cfg_[a.ONE_SIDED_HANDSHAKE], this.cfg_[a.NATIVE_TRANSPORT_PROTOCOL_VERSION] || 2);
        break;
      case goog.net.xpc.TransportTypes.NIX:
        this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
        break;
      case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
        this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
        break;
      case goog.net.xpc.TransportTypes.IFRAME_RELAY:
        this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
        break;
      case goog.net.xpc.TransportTypes.IFRAME_POLLING:
        this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
        break;
      case goog.net.xpc.TransportTypes.DIRECT:
        this.peerWindowObject_ && goog.net.xpc.DirectTransport.isSupported(this.peerWindowObject_) ? this.transport_ = new goog.net.xpc.DirectTransport(this, this.domHelper_) : goog.log.info(goog.net.xpc.logger, "DirectTransport not supported for this window, peer window in different security context or not set yet.");
    }
    if (this.transport_) {
      goog.log.info(goog.net.xpc.logger, "Transport created: " + this.transport_.getName());
    } else {
      throw Error("CrossPageChannel: No suitable transport found!");
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType();
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var a = {};
  a[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  a[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  a[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE] = this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE];
  this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI] && (a[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]);
  this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI] && (a[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]);
  this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI] && (a[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]);
  var b = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  b && (a[goog.net.xpc.CfgFields.ROLE] = b == goog.net.xpc.CrossPageChannelRole.INNER ? goog.net.xpc.CrossPageChannelRole.OUTER : goog.net.xpc.CrossPageChannelRole.INNER);
  return a;
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(a, b, c) {
  goog.log.info(goog.net.xpc.logger, "createPeerIframe()");
  var d = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  d || (d = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4));
  var e = goog.dom.getDomHelper(a).createElement(goog.dom.TagName.IFRAME);
  e.id = e.name = d;
  b ? b(e) : e.style.width = e.style.height = "100%";
  this.cleanUpIncompleteConnection_();
  this.peerWindowDeferred_ = new goog.async.Deferred(void 0, this);
  var f = this.getPeerUri(c);
  this.peerLoadHandler_.listenOnceWithScope(e, "load", this.peerWindowDeferred_.callback, !1, this.peerWindowDeferred_);
  goog.userAgent.GECKO || goog.userAgent.WEBKIT ? window.setTimeout(goog.bind(function() {
    a.appendChild(e);
    e.src = f.toString();
    goog.log.info(goog.net.xpc.logger, "peer iframe created (" + d + ")");
  }, this), 1) : (e.src = f.toString(), a.appendChild(e), goog.log.info(goog.net.xpc.logger, "peer iframe created (" + d + ")"));
  return e;
};
goog.net.xpc.CrossPageChannel.prototype.cleanUpIncompleteConnection_ = function() {
  this.peerWindowDeferred_ && (this.peerWindowDeferred_.cancel(), this.peerWindowDeferred_ = null);
  this.deferredDeliveries_.length = 0;
  this.peerLoadHandler_.removeAll();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerUri = function(a) {
  var b = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  goog.isString(b) && (b = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(b));
  !1 !== a && b.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()));
  return b;
};
goog.net.xpc.CrossPageChannel.prototype.connect = function(a) {
  this.connectCb_ = a || goog.nullFunction;
  this.state_ == goog.net.xpc.ChannelStates.CLOSED && (this.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED);
  this.peerWindowDeferred_ ? this.peerWindowDeferred_.addCallback(this.continueConnection_) : this.continueConnection_();
};
goog.net.xpc.CrossPageChannel.prototype.continueConnection_ = function() {
  goog.log.info(goog.net.xpc.logger, "continueConnection_()");
  this.peerWindowDeferred_ = null;
  this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] && (this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]));
  if (this.iframeElement_) {
    var a = this.iframeElement_.contentWindow;
    a || (a = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]);
    this.setPeerWindowObject(a);
  }
  if (!this.peerWindowObject_) {
    if (window == window.top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }
    this.setPeerWindowObject(window.parent);
  }
  this.createTransport_();
  for (this.transport_.connect();0 < this.deferredDeliveries_.length;) {
    this.deferredDeliveries_.shift()();
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  this.cleanUpIncompleteConnection_();
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  goog.dispose(this.transport_);
  this.connectCb_ = this.transport_ = null;
  goog.dispose(this.connectionDelay_);
  this.connectionDelay_ = null;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" closed');
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected = function(a) {
  this.isConnected() || this.connectionDelay_ && this.connectionDelay_.isActive() || (this.state_ = goog.net.xpc.ChannelStates.CONNECTED, goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" connected'), goog.dispose(this.connectionDelay_), goog.isDef(a) ? (this.connectionDelay_ = new goog.async.Delay(this.connectCb_, a), this.connectionDelay_.start()) : (this.connectionDelay_ = null, this.connectCb_()));
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError = function() {
  goog.log.info(goog.net.xpc.logger, "Transport Error");
  this.close();
};
goog.net.xpc.CrossPageChannel.prototype.send = function(a, b) {
  this.isConnected() ? this.isPeerAvailable() ? (goog.isObject(b) && (b = goog.json.serialize(b)), this.transport_.send(this.escapeServiceName_(a), b)) : (goog.log.error(goog.net.xpc.logger, "Peer has disappeared."), this.close()) : goog.log.error(goog.net.xpc.logger, "Can't send. Channel not connected.");
};
goog.net.xpc.CrossPageChannel.prototype.xpcDeliver = function(a, b, c) {
  this.peerWindowDeferred_ ? this.deferredDeliveries_.push(goog.bind(this.xpcDeliver, this, a, b, c)) : this.isMessageOriginAcceptable_(c) ? this.isDisposed() || this.state_ == goog.net.xpc.ChannelStates.CLOSED ? goog.log.warning(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Channel closed.") : a && a != goog.net.xpc.TRANSPORT_SERVICE_ ? this.isConnected() ? this.deliver(this.unescapeServiceName_(a), b) : goog.log.info(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Not connected.") : 
  this.transport_.transportServiceHandler(b) : goog.log.warning(goog.net.xpc.logger, 'Message received from unapproved origin "' + c + '" - rejected.');
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(a) {
  goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(a) && (a = "%" + a);
  return a.replace(/[%:|]/g, encodeURIComponent);
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(a) {
  a = a.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  return goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(a) ? a.substring(1) : a;
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  var a = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  return goog.isNumber(a) ? a : window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
};
goog.net.xpc.CrossPageChannel.prototype.updateChannelNameAndCatalog = function(a) {
  goog.log.fine(goog.net.xpc.logger, "changing channel name to " + a);
  delete goog.net.xpc.channels[this.name];
  this.name = a;
  goog.net.xpc.channels[a] = this;
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(a) {
  var b = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a)) || goog.string.isEmptyOrWhitespace(goog.string.makeSafe(b)) || a == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  this.close();
  this.iframeElement_ = this.peerWindowObject_ = null;
  delete goog.net.xpc.channels[this.name];
  goog.dispose(this.peerLoadHandler_);
  delete this.peerLoadHandler_;
  goog.net.xpc.CrossPageChannel.superClass_.disposeInternal.call(this);
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for (var a in goog.net.xpc.channels) {
    goog.dispose(goog.net.xpc.channels[a]);
  }
};
goog.net.WebSocket = function(a, b) {
  goog.events.EventTarget.call(this);
  this.autoReconnect_ = goog.isDef(a) ? a : !0;
  this.getNextReconnect_ = b || goog.net.WebSocket.EXPONENTIAL_BACKOFF_;
  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
};
goog.inherits(goog.net.WebSocket, goog.events.EventTarget);
goog.net.WebSocket.prototype.webSocket_ = null;
goog.net.WebSocket.prototype.url_ = null;
goog.net.WebSocket.prototype.protocol_ = void 0;
goog.net.WebSocket.prototype.closeExpected_ = !1;
goog.net.WebSocket.prototype.reconnectAttempt_ = 0;
goog.net.WebSocket.prototype.reconnectTimer_ = null;
goog.net.WebSocket.prototype.logger_ = goog.log.getLogger("goog.net.WebSocket");
goog.net.WebSocket.EventType = {CLOSED:goog.events.getUniqueId("closed"), ERROR:goog.events.getUniqueId("error"), MESSAGE:goog.events.getUniqueId("message"), OPENED:goog.events.getUniqueId("opened")};
goog.net.WebSocket.ReadyState_ = {CONNECTING:0, OPEN:1, CLOSING:2, CLOSED:3};
goog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_ = 6E4;
goog.net.WebSocket.EXPONENTIAL_BACKOFF_ = function(a) {
  return Math.min(1E3 * Math.pow(2, a), goog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_);
};
goog.net.WebSocket.protectEntryPoints = function(a) {
  goog.net.WebSocket.prototype.onOpen_ = a.protectEntryPoint(goog.net.WebSocket.prototype.onOpen_);
  goog.net.WebSocket.prototype.onClose_ = a.protectEntryPoint(goog.net.WebSocket.prototype.onClose_);
  goog.net.WebSocket.prototype.onMessage_ = a.protectEntryPoint(goog.net.WebSocket.prototype.onMessage_);
  goog.net.WebSocket.prototype.onError_ = a.protectEntryPoint(goog.net.WebSocket.prototype.onError_);
};
goog.net.WebSocket.prototype.open = function(a, b) {
  goog.asserts.assert(goog.global.WebSocket, "This browser does not support WebSocket");
  goog.asserts.assert(!this.isOpen(), "The WebSocket is already open");
  this.clearReconnectTimer_();
  this.url_ = a;
  (this.protocol_ = b) ? (goog.log.info(this.logger_, "Opening the WebSocket on " + this.url_ + " with protocol " + this.protocol_), this.webSocket_ = new WebSocket(this.url_, this.protocol_)) : (goog.log.info(this.logger_, "Opening the WebSocket on " + this.url_), this.webSocket_ = new WebSocket(this.url_));
  this.webSocket_.onopen = goog.bind(this.onOpen_, this);
  this.webSocket_.onclose = goog.bind(this.onClose_, this);
  this.webSocket_.onmessage = goog.bind(this.onMessage_, this);
  this.webSocket_.onerror = goog.bind(this.onError_, this);
};
goog.net.WebSocket.prototype.close = function() {
  this.clearReconnectTimer_();
  this.webSocket_ && (goog.log.info(this.logger_, "Closing the WebSocket."), this.closeExpected_ = !0, this.webSocket_.close(), this.webSocket_ = null);
};
goog.net.WebSocket.prototype.send = function(a) {
  goog.asserts.assert(this.isOpen(), "Cannot send without an open socket");
  this.webSocket_.send(a);
};
goog.net.WebSocket.prototype.isOpen = function() {
  return !!this.webSocket_ && this.webSocket_.readyState == goog.net.WebSocket.ReadyState_.OPEN;
};
goog.net.WebSocket.prototype.getBufferedAmount = function() {
  return this.webSocket_.bufferedAmount;
};
goog.net.WebSocket.prototype.onOpen_ = function() {
  goog.log.info(this.logger_, "WebSocket opened on " + this.url_);
  this.dispatchEvent(goog.net.WebSocket.EventType.OPENED);
  this.reconnectAttempt_ = 0;
  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
};
goog.net.WebSocket.prototype.onClose_ = function(a) {
  goog.log.info(this.logger_, "The WebSocket on " + this.url_ + " closed.");
  this.dispatchEvent(goog.net.WebSocket.EventType.CLOSED);
  this.webSocket_ = null;
  this.closeExpected_ ? (goog.log.info(this.logger_, "The WebSocket closed normally."), this.url_ = null, this.protocol_ = void 0) : (goog.log.error(this.logger_, "The WebSocket disconnected unexpectedly: " + a.data), this.autoReconnect_ && (goog.log.info(this.logger_, "Seconds until next reconnect attempt: " + Math.floor(this.nextReconnect_ / 1E3)), this.reconnectTimer_ = goog.Timer.callOnce(goog.bind(this.open, this, this.url_, this.protocol_), this.nextReconnect_, this), this.reconnectAttempt_++, 
  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_)));
  this.closeExpected_ = !1;
};
goog.net.WebSocket.prototype.onMessage_ = function(a) {
  this.dispatchEvent(new goog.net.WebSocket.MessageEvent(a.data));
};
goog.net.WebSocket.prototype.onError_ = function(a) {
  a = a.data;
  goog.log.error(this.logger_, "An error occurred: " + a);
  this.dispatchEvent(new goog.net.WebSocket.ErrorEvent(a));
};
goog.net.WebSocket.prototype.clearReconnectTimer_ = function() {
  goog.isDefAndNotNull(this.reconnectTimer_) && goog.Timer.clear(this.reconnectTimer_);
  this.reconnectTimer_ = null;
};
goog.net.WebSocket.prototype.disposeInternal = function() {
  goog.net.WebSocket.superClass_.disposeInternal.call(this);
  this.close();
};
goog.net.WebSocket.MessageEvent = function(a) {
  goog.events.Event.call(this, goog.net.WebSocket.EventType.MESSAGE);
  this.message = a;
};
goog.inherits(goog.net.WebSocket.MessageEvent, goog.events.Event);
goog.net.WebSocket.ErrorEvent = function(a) {
  goog.events.Event.call(this, goog.net.WebSocket.EventType.ERROR);
  this.data = a;
};
goog.inherits(goog.net.WebSocket.ErrorEvent, goog.events.Event);
goog.debug.entryPointRegistry.register(function(a) {
  goog.net.WebSocket.prototype.onOpen_ = a(goog.net.WebSocket.prototype.onOpen_);
  goog.net.WebSocket.prototype.onClose_ = a(goog.net.WebSocket.prototype.onClose_);
  goog.net.WebSocket.prototype.onMessage_ = a(goog.net.WebSocket.prototype.onMessage_);
  goog.net.WebSocket.prototype.onError_ = a(goog.net.WebSocket.prototype.onError_);
});
var clojure = {browser:{}};
clojure.browser.event = {};
clojure.browser.event.IEventType = function() {
};
clojure.browser.event.event_types = function(a) {
  if (null != a && null != a.clojure$browser$event$IEventType$event_types$arity$1) {
    return a.clojure$browser$event$IEventType$event_types$arity$1(a);
  }
  var b = clojure.browser.event.event_types[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = clojure.browser.event.event_types._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IEventType.event-types", a);
};
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$ = !0;
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(a) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a) {
    return function(a) {
      var b = cljs.core.nth.call(null, a, 0, null);
      a = cljs.core.nth.call(null, a, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, b.toLowerCase()), a], null);
    };
  }(this), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
};
"undefined" !== typeof Element && (Element.prototype.clojure$browser$event$IEventType$ = !0, Element.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(a) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a) {
    return function(a) {
      var b = cljs.core.nth.call(null, a, 0, null);
      a = cljs.core.nth.call(null, a, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, b.toLowerCase()), a], null);
    };
  }(this), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
});
clojure.browser.event.listen = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return clojure.browser.event.listen.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return clojure.browser.event.listen.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
clojure.browser.event.listen.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return clojure.browser.event.listen.call(null, a, b, c, !1);
};
clojure.browser.event.listen.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return goog.events.listen(a, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, a), b, b), c, d);
};
clojure.browser.event.listen.cljs$lang$maxFixedArity = 4;
clojure.browser.event.listen_once = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return clojure.browser.event.listen_once.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return clojure.browser.event.listen_once.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
clojure.browser.event.listen_once.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return clojure.browser.event.listen_once.call(null, a, b, c, !1);
};
clojure.browser.event.listen_once.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return goog.events.listenOnce(a, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, a), b, b), c, d);
};
clojure.browser.event.listen_once.cljs$lang$maxFixedArity = 4;
clojure.browser.event.unlisten = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return clojure.browser.event.unlisten.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return clojure.browser.event.unlisten.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
clojure.browser.event.unlisten.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return clojure.browser.event.unlisten.call(null, a, b, c, !1);
};
clojure.browser.event.unlisten.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return goog.events.unlisten(a, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, a), b, b), c, d);
};
clojure.browser.event.unlisten.cljs$lang$maxFixedArity = 4;
clojure.browser.event.unlisten_by_key = function(a) {
  return goog.events.unlistenByKey(a);
};
clojure.browser.event.dispatch_event = function(a, b) {
  return goog.events.dispatchEvent(a, b);
};
clojure.browser.event.expose = function(a) {
  return goog.events.expose(a);
};
clojure.browser.event.fire_listeners = function(a, b, c, d) {
  return null;
};
clojure.browser.event.total_listener_count = function() {
  return goog.events.getTotalListenerCount();
};
clojure.browser.event.get_listener = function(a, b, c, d, e) {
  return null;
};
clojure.browser.event.all_listeners = function(a, b, c) {
  return null;
};
clojure.browser.event.unique_event_id = function(a) {
  return null;
};
clojure.browser.event.has_listener = function(a, b, c) {
  return null;
};
clojure.browser.event.remove_all = function(a, b, c) {
  return null;
};
clojure.browser.net = {};
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a) {
  var b = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, b.toLowerCase()), a], null);
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = function() {
};
clojure.browser.net.connect = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if (null != a && null != a.clojure$browser$net$IConnection$connect$arity$1) {
    return a.clojure$browser$net$IConnection$connect$arity$1(a);
  }
  var b = clojure.browser.net.connect[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = clojure.browser.net.connect._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IConnection.connect", a);
};
clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.clojure$browser$net$IConnection$connect$arity$2) {
    return a.clojure$browser$net$IConnection$connect$arity$2(a, b);
  }
  var c = clojure.browser.net.connect[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = clojure.browser.net.connect._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IConnection.connect", a);
};
clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.clojure$browser$net$IConnection$connect$arity$3) {
    return a.clojure$browser$net$IConnection$connect$arity$3(a, b, c);
  }
  var d = clojure.browser.net.connect[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = clojure.browser.net.connect._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "IConnection.connect", a);
};
clojure.browser.net.connect.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  if (null != a && null != a.clojure$browser$net$IConnection$connect$arity$4) {
    return a.clojure$browser$net$IConnection$connect$arity$4(a, b, c, d);
  }
  var e = clojure.browser.net.connect[goog.typeOf(null == a ? null : a)];
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  e = clojure.browser.net.connect._;
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  throw cljs.core.missing_protocol.call(null, "IConnection.connect", a);
};
clojure.browser.net.connect.cljs$lang$maxFixedArity = 4;
clojure.browser.net.transmit = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.clojure$browser$net$IConnection$transmit$arity$2) {
    return a.clojure$browser$net$IConnection$transmit$arity$2(a, b);
  }
  var c = clojure.browser.net.transmit[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = clojure.browser.net.transmit._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IConnection.transmit", a);
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.clojure$browser$net$IConnection$transmit$arity$3) {
    return a.clojure$browser$net$IConnection$transmit$arity$3(a, b, c);
  }
  var d = clojure.browser.net.transmit[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = clojure.browser.net.transmit._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "IConnection.transmit", a);
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  if (null != a && null != a.clojure$browser$net$IConnection$transmit$arity$4) {
    return a.clojure$browser$net$IConnection$transmit$arity$4(a, b, c, d);
  }
  var e = clojure.browser.net.transmit[goog.typeOf(null == a ? null : a)];
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  e = clojure.browser.net.transmit._;
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  throw cljs.core.missing_protocol.call(null, "IConnection.transmit", a);
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  if (null != a && null != a.clojure$browser$net$IConnection$transmit$arity$5) {
    return a.clojure$browser$net$IConnection$transmit$arity$5(a, b, c, d, e);
  }
  var f = clojure.browser.net.transmit[goog.typeOf(null == a ? null : a)];
  if (null != f) {
    return f.call(null, a, b, c, d, e);
  }
  f = clojure.browser.net.transmit._;
  if (null != f) {
    return f.call(null, a, b, c, d, e);
  }
  throw cljs.core.missing_protocol.call(null, "IConnection.transmit", a);
};
clojure.browser.net.transmit.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  if (null != a && null != a.clojure$browser$net$IConnection$transmit$arity$6) {
    return a.clojure$browser$net$IConnection$transmit$arity$6(a, b, c, d, e, f);
  }
  var g = clojure.browser.net.transmit[goog.typeOf(null == a ? null : a)];
  if (null != g) {
    return g.call(null, a, b, c, d, e, f);
  }
  g = clojure.browser.net.transmit._;
  if (null != g) {
    return g.call(null, a, b, c, d, e, f);
  }
  throw cljs.core.missing_protocol.call(null, "IConnection.transmit", a);
};
clojure.browser.net.transmit.cljs$lang$maxFixedArity = 6;
clojure.browser.net.close = function(a) {
  if (null != a && null != a.clojure$browser$net$IConnection$close$arity$1) {
    return a.clojure$browser$net$IConnection$close$arity$1(a);
  }
  var b = clojure.browser.net.close[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = clojure.browser.net.close._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IConnection.close", a);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = !0;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(a, b) {
  return clojure.browser.net.transmit.call(null, this, b, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(a, b, c) {
  return clojure.browser.net.transmit.call(null, this, b, c, null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(a, b, c, d) {
  return clojure.browser.net.transmit.call(null, this, b, c, d, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(a, b, c, d, e) {
  return clojure.browser.net.transmit.call(null, this, b, c, d, e, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(a, b, c, d, e, f) {
  this.setTimeoutInterval(f);
  return this.send(b, c, d, e);
};
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$ = !0;
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(a) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a) {
    return function(a) {
      var b = cljs.core.nth.call(null, a, 0, null);
      a = cljs.core.nth.call(null, a, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, b.toLowerCase()), a], null);
    };
  }(this), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a) {
  var b = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, b.toLowerCase()), a], null);
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function() {
  return new goog.net.XhrIo;
};
clojure.browser.net.ICrossPageChannel = function() {
};
clojure.browser.net.register_service = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return clojure.browser.net.register_service.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return clojure.browser.net.register_service.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
clojure.browser.net.register_service.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.clojure$browser$net$ICrossPageChannel$register_service$arity$3) {
    return a.clojure$browser$net$ICrossPageChannel$register_service$arity$3(a, b, c);
  }
  var d = clojure.browser.net.register_service[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = clojure.browser.net.register_service._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", a);
};
clojure.browser.net.register_service.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  if (null != a && null != a.clojure$browser$net$ICrossPageChannel$register_service$arity$4) {
    return a.clojure$browser$net$ICrossPageChannel$register_service$arity$4(a, b, c, d);
  }
  var e = clojure.browser.net.register_service[goog.typeOf(null == a ? null : a)];
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  e = clojure.browser.net.register_service._;
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", a);
};
clojure.browser.net.register_service.cljs$lang$maxFixedArity = 4;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = !0;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(a, b, c) {
  return clojure.browser.net.register_service.call(null, this, b, c, !1);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(a, b, c, d) {
  return this.registerService(cljs.core.name.call(null, b), c, d);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = !0;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(a) {
  return clojure.browser.net.connect.call(null, this, null);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(a, b) {
  return this.connect(b);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(a, b, c) {
  return clojure.browser.net.connect.call(null, this, b, c, document.body);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(a, b, c, d) {
  this.createPeerIframe(d, c);
  return this.connect(b);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(a, b, c) {
  return this.send(cljs.core.name.call(null, b), c);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(a) {
  return this.close();
};
clojure.browser.net.xpc_connection = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return clojure.browser.net.xpc_connection.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return clojure.browser.net.xpc_connection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
clojure.browser.net.xpc_connection.cljs$core$IFn$_invoke$arity$0 = function() {
  var a = (new goog.Uri(window.location.href)).getParameterValue("xpc");
  return cljs.core.truth_(a) ? new goog.net.xpc.CrossPageChannel(goog.json.parse(a)) : null;
};
clojure.browser.net.xpc_connection.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(a, c) {
    var d = cljs.core.nth.call(null, c, 0, null), e = cljs.core.nth.call(null, c, 1, null), d = cljs.core.get.call(null, clojure.browser.net.xpc_config_fields, d);
    cljs.core.truth_(d) && (a[d] = e);
    return a;
  }, {}, a));
};
clojure.browser.net.xpc_connection.cljs$lang$maxFixedArity = 1;
clojure.browser.net.IWebSocket = function() {
};
clojure.browser.net.open_QMARK_ = function(a) {
  if (null != a && null != a.clojure$browser$net$IWebSocket$open_QMARK_$arity$1) {
    return a.clojure$browser$net$IWebSocket$open_QMARK_$arity$1(a);
  }
  var b = clojure.browser.net.open_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = clojure.browser.net.open_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IWebSocket.open?", a);
};
goog.net.WebSocket.prototype.clojure$browser$net$IWebSocket$ = !0;
goog.net.WebSocket.prototype.clojure$browser$net$IWebSocket$open_QMARK_$arity$1 = function(a) {
  return this.isOpen(cljs.core.List.EMPTY);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$ = !0;
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(a, b) {
  return clojure.browser.net.connect.call(null, this, b, null);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(a, b, c) {
  return this.open(b, c);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(a, b) {
  return this.send(b);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$close$arity$1 = function(a) {
  return this.close(cljs.core.List.EMPTY);
};
goog.net.WebSocket.prototype.clojure$browser$event$IEventType$ = !0;
goog.net.WebSocket.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(a) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a) {
    return function(a) {
      var b = cljs.core.nth.call(null, a, 0, null);
      a = cljs.core.nth.call(null, a, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, b.toLowerCase()), a], null);
    };
  }(this), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.WebSocket.EventType))));
};
clojure.browser.net.websocket_connection = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$0 = function() {
  return clojure.browser.net.websocket_connection.call(null, null, null);
};
clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return clojure.browser.net.websocket_connection.call(null, a, null);
};
clojure.browser.net.websocket_connection.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new goog.net.WebSocket(a, b);
};
clojure.browser.net.websocket_connection.cljs$lang$maxFixedArity = 2;
cljs.repl = {};
cljs.repl.print_doc = function(a) {
  cljs.core.println.call(null, "-------------------------");
  cljs.core.println.call(null, [cljs.core.str(function() {
    var b = (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? [cljs.core.str(b), cljs.core.str("/")].join("") : null;
  }()), cljs.core.str((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(a))].join(""));
  cljs.core.truth_((new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(a)) && cljs.core.println.call(null, "Protocol");
  if (cljs.core.truth_((new cljs.core.Keyword(null, "forms", "forms", 2045992350)).cljs$core$IFn$_invoke$arity$1(a))) {
    for (var b = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "forms", "forms", 2045992350)).cljs$core$IFn$_invoke$arity$1(a)), c = null, d = 0, e = 0;;) {
      if (e < d) {
        var f = cljs.core._nth.call(null, c, e);
        cljs.core.println.call(null, "  ", f);
        e += 1;
      } else {
        if (b = cljs.core.seq.call(null, b)) {
          c = b, cljs.core.chunked_seq_QMARK_.call(null, c) ? (b = cljs.core.chunk_first.call(null, c), e = cljs.core.chunk_rest.call(null, c), c = b, d = cljs.core.count.call(null, b), b = e) : (b = cljs.core.first.call(null, c), cljs.core.println.call(null, "  ", b), b = cljs.core.next.call(null, c), c = null, d = 0), e = 0;
        } else {
          break;
        }
      }
    }
  } else {
    cljs.core.truth_((new cljs.core.Keyword(null, "arglists", "arglists", 1661989754)).cljs$core$IFn$_invoke$arity$1(a)) && (b = (new cljs.core.Keyword(null, "arglists", "arglists", 1661989754)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.truth_(function() {
      var b = (new cljs.core.Keyword(null, "macro", "macro", -867863404)).cljs$core$IFn$_invoke$arity$1(a);
      return cljs.core.truth_(b) ? b : (new cljs.core.Keyword(null, "repl-special-function", "repl-special-function", 1262603725)).cljs$core$IFn$_invoke$arity$1(a);
    }()) ? cljs.core.prn.call(null, b) : cljs.core.prn.call(null, cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.first.call(null, b)) ? cljs.core.second.call(null, b) : b));
  }
  if (cljs.core.truth_((new cljs.core.Keyword(null, "special-form", "special-form", -1326536374)).cljs$core$IFn$_invoke$arity$1(a))) {
    return cljs.core.println.call(null, "Special Form"), cljs.core.println.call(null, " ", (new cljs.core.Keyword(null, "doc", "doc", 1913296891)).cljs$core$IFn$_invoke$arity$1(a)), cljs.core.contains_QMARK_.call(null, a, new cljs.core.Keyword(null, "url", "url", 276297046)) ? cljs.core.truth_((new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.println.call(null, [cljs.core.str("\n  Please see http://clojure.org/"), cljs.core.str((new cljs.core.Keyword(null, 
    "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(a))].join("")) : null : cljs.core.println.call(null, [cljs.core.str("\n  Please see http://clojure.org/special_forms#"), cljs.core.str((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(a))].join(""));
  }
  cljs.core.truth_((new cljs.core.Keyword(null, "macro", "macro", -867863404)).cljs$core$IFn$_invoke$arity$1(a)) && cljs.core.println.call(null, "Macro");
  cljs.core.truth_((new cljs.core.Keyword(null, "repl-special-function", "repl-special-function", 1262603725)).cljs$core$IFn$_invoke$arity$1(a)) && cljs.core.println.call(null, "REPL Special Function");
  cljs.core.println.call(null, " ", (new cljs.core.Keyword(null, "doc", "doc", 1913296891)).cljs$core$IFn$_invoke$arity$1(a));
  if (cljs.core.truth_((new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(a))) {
    for (c = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "methods", "methods", 453930866)).cljs$core$IFn$_invoke$arity$1(a)), d = null, f = e = 0;;) {
      if (f < e) {
        var g = cljs.core._nth.call(null, d, f), b = cljs.core.nth.call(null, g, 0, null), g = cljs.core.nth.call(null, g, 1, null), h = null != g && (g.cljs$lang$protocol_mask$partition0$ & 64 || g.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, g) : g, g = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "doc", "doc", 1913296891)), h = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754));
        cljs.core.println.call(null);
        cljs.core.println.call(null, " ", b);
        cljs.core.println.call(null, " ", h);
        cljs.core.truth_(g) && cljs.core.println.call(null, " ", g);
        f += 1;
      } else {
        if (b = cljs.core.seq.call(null, c)) {
          c = b, cljs.core.chunked_seq_QMARK_.call(null, c) ? (d = cljs.core.chunk_first.call(null, c), c = cljs.core.chunk_rest.call(null, c), b = d, e = cljs.core.count.call(null, d), d = b) : (d = cljs.core.first.call(null, c), b = cljs.core.nth.call(null, d, 0, null), d = cljs.core.nth.call(null, d, 1, null), d = null != d && (d.cljs$lang$protocol_mask$partition0$ & 64 || d.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, d) : d, g = cljs.core.get.call(null, d, new cljs.core.Keyword(null, 
          "doc", "doc", 1913296891)), h = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754)), cljs.core.println.call(null), cljs.core.println.call(null, " ", b), cljs.core.println.call(null, " ", h), cljs.core.truth_(g) && cljs.core.println.call(null, " ", g), c = cljs.core.next.call(null, c), d = null, e = 0), f = 0;
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
clojure.browser.repl = {};
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.print_queue = [];
clojure.browser.repl.flush_print_queue_BANG_ = function(a) {
  for (var b = cljs.core.seq.call(null, clojure.browser.repl.print_queue), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = cljs.core._nth.call(null, c, e);
      clojure.browser.net.transmit.call(null, a, new cljs.core.Keyword(null, "print", "print", 1299562414), f);
      e += 1;
    } else {
      if (b = cljs.core.seq.call(null, b)) {
        c = b, cljs.core.chunked_seq_QMARK_.call(null, c) ? (b = cljs.core.chunk_first.call(null, c), e = cljs.core.chunk_rest.call(null, c), c = b, d = cljs.core.count.call(null, b), b = e) : (b = cljs.core.first.call(null, c), clojure.browser.net.transmit.call(null, a, new cljs.core.Keyword(null, "print", "print", 1299562414), b), b = cljs.core.next.call(null, c), c = null, d = 0), e = 0;
      } else {
        break;
      }
    }
  }
  return goog.array.clear(clojure.browser.repl.print_queue);
};
clojure.browser.repl.repl_print = function(a) {
  clojure.browser.repl.print_queue.push(cljs.core.pr_str.call(null, a));
  a = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  return cljs.core.truth_(a) ? clojure.browser.repl.flush_print_queue_BANG_.call(null, a) : null;
};
cljs.core._STAR_print_fn_STAR_ = clojure.browser.repl.repl_print;
cljs.core._STAR_print_err_fn_STAR_ = clojure.browser.repl.repl_print;
cljs.core._STAR_print_newline_STAR_ = !0;
clojure.browser.repl.get_ua_product = function() {
  return cljs.core.truth_(goog.userAgent.product.SAFARI) ? new cljs.core.Keyword(null, "safari", "safari", 497115653) : cljs.core.truth_(goog.userAgent.product.CHROME) ? new cljs.core.Keyword(null, "chrome", "chrome", 1718738387) : cljs.core.truth_(goog.userAgent.product.FIREFOX) ? new cljs.core.Keyword(null, "firefox", "firefox", 1283768880) : cljs.core.truth_(goog.userAgent.product.IE) ? new cljs.core.Keyword(null, "ie", "ie", 2038473780) : null;
};
clojure.browser.repl.evaluate_javascript = function(a, b) {
  var c = function() {
    try {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "success", "success", 1890645906), new cljs.core.Keyword(null, "value", "value", 305978217), "" + cljs.core.str(eval(b))], null);
    } catch (a) {
      return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "exception", "exception", -335277064), new cljs.core.Keyword(null, "ua-product", "ua-product", 938384227), clojure.browser.repl.get_ua_product.call(null), new cljs.core.Keyword(null, "value", "value", 305978217), "" + cljs.core.str(a), new cljs.core.Keyword(null, "stacktrace", "stacktrace", -95588394), cljs.core.truth_(a.hasOwnProperty("stack")) ? a.stack : 
      "No stacktrace available."], null);
    }
  }();
  return cljs.core.pr_str.call(null, c);
};
clojure.browser.repl.send_result = function(a, b, c) {
  return clojure.browser.net.transmit.call(null, a, b, "POST", c, null, 0);
};
clojure.browser.repl.send_print = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return clojure.browser.repl.send_print.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.browser.repl.send_print.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
clojure.browser.repl.send_print.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return clojure.browser.repl.send_print.call(null, a, b, 0);
};
clojure.browser.repl.send_print.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = clojure.browser.net.xhr_connection.call(null);
  clojure.browser.event.listen.call(null, d, new cljs.core.Keyword(null, "error", "error", -978969032), function(d) {
    return function(d) {
      return 10 > c ? clojure.browser.repl.send_print.call(null, a, b, c + 1) : console.log([cljs.core.str("Could not send "), cljs.core.str(b), cljs.core.str(" after "), cljs.core.str(c), cljs.core.str(" attempts.")].join(""));
    };
  }(d));
  return clojure.browser.net.transmit.call(null, d, a, "POST", b, null, 0);
};
clojure.browser.repl.send_print.cljs$lang$maxFixedArity = 3;
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function(a, b) {
  return cljs.core.pr_str.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), a, new cljs.core.Keyword(null, "content", "content", 15833224), b, new cljs.core.Keyword(null, "order", "order", -1254677256), cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)], null));
};
clojure.browser.repl.start_evaluator = function(a) {
  var b = clojure.browser.net.xpc_connection.call(null);
  if (cljs.core.truth_(b)) {
    var c = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, c, new cljs.core.Keyword(null, "success", "success", 1890645906), function(a, b, c) {
      return function(a) {
        return clojure.browser.net.transmit.call(null, b, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", -315749780), a.currentTarget.getResponseText(cljs.core.List.EMPTY));
      };
    }(c, b, b));
    clojure.browser.net.register_service.call(null, b, new cljs.core.Keyword(null, "send-result", "send-result", 35388249), function(b, c, f) {
      return function(c) {
        return clojure.browser.repl.send_result.call(null, b, a, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "result", "result", 1415092211), c));
      };
    }(c, b, b));
    clojure.browser.net.register_service.call(null, b, new cljs.core.Keyword(null, "print", "print", 1299562414), function(b, c, f) {
      return function(b) {
        return clojure.browser.repl.send_print.call(null, a, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "print", "print", 1299562414), b));
      };
    }(c, b, b));
    clojure.browser.net.connect.call(null, b, cljs.core.constantly.call(null, null));
    return setTimeout(function(b, c, f) {
      return function() {
        return clojure.browser.repl.send_result.call(null, b, a, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "ready", "ready", 1086465795), "ready"));
      };
    }(c, b, b), 50);
  }
  return alert("No 'xpc' param provided to child iframe.");
};
clojure.browser.repl.load_queue = null;
clojure.browser.repl.bootstrap = function() {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  }
  goog.require__ = goog.require;
  goog.isProvided_ = function(a) {
    return !1;
  };
  goog.constructNamespace_("cljs.user");
  goog.writeScriptTag__ = function(a, b) {
    var c = function(a) {
      return function() {
        return cljs.core.truth_(function() {
          var b = clojure.browser.repl.load_queue;
          return cljs.core.truth_(b) ? !1 === cljs.core.deref.call(null, a) : b;
        }()) ? (cljs.core.swap_BANG_.call(null, a, cljs.core.not), 0 === clojure.browser.repl.load_queue.length ? clojure.browser.repl.load_queue = null : goog.writeScriptTag__.apply(null, clojure.browser.repl.load_queue.shift())) : null;
      };
    }(cljs.core.atom.call(null, !1));
    return document.body.appendChild(function() {
      var d = document.createElement("script");
      goog.object.set(d, "type", "text/javascript");
      goog.object.set(d, "onload", c);
      goog.object.set(d, "onreadystatechange", c);
      null == b ? goog.object.set(d, "src", a) : goog.dom.setTextContext(d, b);
      return d;
    }());
  };
  goog.writeScriptTag_ = function(a, b) {
    if (cljs.core.truth_(clojure.browser.repl.load_queue)) {
      return clojure.browser.repl.load_queue.push([a, b]);
    }
    clojure.browser.repl.load_queue = [];
    return goog.writeScriptTag__(a, b);
  };
  return goog.require = function(a, b) {
    cljs.core._EQ_.call(null, b, "reload-all") && (goog.cljsReloadAll_ = !0);
    var c;
    c = cljs.core.truth_(b) ? b : goog.cljsReloadAll__;
    cljs.core.truth_(c) && (c = goog.dependencies_.nameToPath[a], goog.object.remove(goog.dependencies_.visited, c), goog.object.remove(goog.dependencies_.written, c), goog.object.remove(goog.dependencies_.written, [cljs.core.str(goog.basePath), cljs.core.str(c)].join("")));
    c = goog.require__(a);
    cljs.core._EQ_.call(null, b, "reload-all") && (goog.cljsReloadAll_ = !1);
    return c;
  };
};
clojure.browser.repl.connect = function(a) {
  a = clojure.browser.net.xpc_connection.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "peer_uri", "peer_uri", 910305997), a], null));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, a));
  clojure.browser.net.register_service.call(null, a, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", -315749780), function(a) {
    return function(c) {
      return clojure.browser.net.transmit.call(null, a, new cljs.core.Keyword(null, "send-result", "send-result", 35388249), clojure.browser.repl.evaluate_javascript.call(null, a, c));
    };
  }(a));
  clojure.browser.net.connect.call(null, a, cljs.core.constantly.call(null, null), function(a) {
    return function(a) {
      return a.style.display = "none";
    };
  }(a));
  clojure.browser.repl.bootstrap.call(null);
  return a;
};
var weasel = {impls:{}};
weasel.impls.websocket = {};
weasel.impls.websocket.IWebSocket = function() {
};
weasel.impls.websocket.open_QMARK_ = function(a) {
  if (null != a && null != a.weasel$impls$websocket$IWebSocket$open_QMARK_$arity$1) {
    return a.weasel$impls$websocket$IWebSocket$open_QMARK_$arity$1(a);
  }
  var b = weasel.impls.websocket.open_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = weasel.impls.websocket.open_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IWebSocket.open?", a);
};
weasel.impls.websocket.websocket_connection = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return weasel.impls.websocket.websocket_connection.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return weasel.impls.websocket.websocket_connection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return weasel.impls.websocket.websocket_connection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
weasel.impls.websocket.websocket_connection.cljs$core$IFn$_invoke$arity$0 = function() {
  return weasel.impls.websocket.websocket_connection.call(null, null, null);
};
weasel.impls.websocket.websocket_connection.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return weasel.impls.websocket.websocket_connection.call(null, a, null);
};
weasel.impls.websocket.websocket_connection.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new goog.net.WebSocket(a, b);
};
weasel.impls.websocket.websocket_connection.cljs$lang$maxFixedArity = 2;
goog.net.WebSocket.prototype.weasel$impls$websocket$IWebSocket$ = !0;
goog.net.WebSocket.prototype.weasel$impls$websocket$IWebSocket$open_QMARK_$arity$1 = function(a) {
  return this.isOpen(cljs.core.List.EMPTY);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$ = !0;
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(a, b) {
  return clojure.browser.net.connect.call(null, this, b, null);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(a, b, c) {
  return this.open(b, c);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(a, b) {
  return this.send(b);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$close$arity$1 = function(a) {
  return this.close(cljs.core.List.EMPTY);
};
goog.net.WebSocket.prototype.clojure$browser$event$IEventType$ = !0;
goog.net.WebSocket.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(a) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a) {
    return function(a) {
      var b = cljs.core.nth.call(null, a, 0, null);
      a = cljs.core.nth.call(null, a, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, b.toLowerCase()), a], null);
    };
  }(this), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.WebSocket.EventType))));
};
cljs.reader = {};
cljs.reader.PushbackReader = function() {
};
cljs.reader.read_char = function(a) {
  if (null != a && null != a.cljs$reader$PushbackReader$read_char$arity$1) {
    return a.cljs$reader$PushbackReader$read_char$arity$1(a);
  }
  var b = cljs.reader.read_char[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.reader.read_char._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", a);
};
cljs.reader.unread = function(a, b) {
  if (null != a && null != a.cljs$reader$PushbackReader$unread$arity$2) {
    return a.cljs$reader$PushbackReader$unread$arity$2(a, b);
  }
  var c = cljs.reader.unread[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.reader.unread._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", a);
};
cljs.reader.StringPushbackReader = function(a, b, c) {
  this.s = a;
  this.buffer = b;
  this.idx = c;
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = !0;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(a) {
  return 0 === this.buffer.length ? (this.idx += 1, this.s[this.idx]) : this.buffer.pop();
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(a, b) {
  return this.buffer.push(b);
};
cljs.reader.StringPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null), cljs.core.with_meta(new cljs.core.Symbol(null, "idx", "idx", -1600747296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.reader.StringPushbackReader.cljs$lang$type = !0;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.reader/StringPushbackReader");
};
cljs.reader.__GT_StringPushbackReader = function(a, b, c) {
  return new cljs.reader.StringPushbackReader(a, b, c);
};
cljs.reader.push_back_reader = function(a) {
  return new cljs.reader.StringPushbackReader(a, [], -1);
};
cljs.reader.whitespace_QMARK_ = function(a) {
  var b = goog.string.isBreakingWhitespace(a);
  return cljs.core.truth_(b) ? b : "," === a;
};
cljs.reader.numeric_QMARK_ = function(a) {
  return goog.string.isNumeric(a);
};
cljs.reader.comment_prefix_QMARK_ = function(a) {
  return ";" === a;
};
cljs.reader.number_literal_QMARK_ = function(a, b) {
  return cljs.reader.numeric_QMARK_.call(null, b) || ("+" === b || "-" === b) && cljs.reader.numeric_QMARK_.call(null, function() {
    var b = cljs.reader.read_char.call(null, a);
    cljs.reader.unread.call(null, a, b);
    return b;
  }());
};
cljs.reader.read;
cljs.reader.macros;
cljs.reader.dispatch_macros;
cljs.reader.reader_error = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  throw Error(cljs.core.apply.call(null, cljs.core.str, b));
};
cljs.reader.reader_error.cljs$lang$maxFixedArity = 1;
cljs.reader.reader_error.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.reader.macro_terminating_QMARK_ = function(a) {
  var b = "#" !== a;
  return b && (b = "'" !== a) ? (b = ":" !== a) ? cljs.reader.macros.call(null, a) : b : b;
};
cljs.reader.read_token = function(a, b) {
  for (var c = new goog.string.StringBuffer(b), d = cljs.reader.read_char.call(null, a);;) {
    if (null == d || cljs.reader.whitespace_QMARK_.call(null, d) || cljs.reader.macro_terminating_QMARK_.call(null, d)) {
      return cljs.reader.unread.call(null, a, d), c.toString();
    }
    c.append(d);
    d = cljs.reader.read_char.call(null, a);
  }
};
cljs.reader.skip_line = function(a, b) {
  for (;;) {
    var c = cljs.reader.read_char.call(null, a);
    if ("\n" === c || "\r" === c || null == c) {
      return a;
    }
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function(a, b) {
  var c = a.exec(b);
  return null != c && c[0] === b ? 1 === c.length ? c[0] : c : null;
};
cljs.reader.match_int = function(a) {
  a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, a);
  var b = a[2];
  if (null != (cljs.core._EQ_.call(null, b, "") ? null : b)) {
    return 0;
  }
  var b = cljs.core.truth_(a[3]) ? [a[3], 10] : cljs.core.truth_(a[4]) ? [a[4], 16] : cljs.core.truth_(a[5]) ? [a[5], 8] : cljs.core.truth_(a[6]) ? [a[7], parseInt(a[6], 10)] : [null, null], c = b[0];
  if (null == c) {
    return null;
  }
  b = parseInt(c, b[1]);
  return "-" === a[1] ? -b : b;
};
cljs.reader.match_ratio = function(a) {
  a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, a);
  var b = a[2];
  return parseInt(a[1], 10) / parseInt(b, 10);
};
cljs.reader.match_float = function(a) {
  return parseFloat(a);
};
cljs.reader.match_number = function(a) {
  return cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, a)) ? cljs.reader.match_int.call(null, a) : cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, a)) ? cljs.reader.match_ratio.call(null, a) : cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, a)) ? cljs.reader.match_float.call(null, a) : null;
};
cljs.reader.escape_char_map = function(a) {
  return "t" === a ? "\t" : "r" === a ? "\r" : "n" === a ? "\n" : "\\" === a ? "\\" : '"' === a ? '"' : "b" === a ? "\b" : "f" === a ? "\f" : null;
};
cljs.reader.read_2_chars = function(a) {
  return (new goog.string.StringBuffer(cljs.reader.read_char.call(null, a), cljs.reader.read_char.call(null, a))).toString();
};
cljs.reader.read_4_chars = function(a) {
  return (new goog.string.StringBuffer(cljs.reader.read_char.call(null, a), cljs.reader.read_char.call(null, a), cljs.reader.read_char.call(null, a), cljs.reader.read_char.call(null, a))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function(a, b, c, d) {
  return cljs.core.truth_(cljs.core.re_matches.call(null, a, d)) ? d : cljs.reader.reader_error.call(null, b, "Unexpected unicode escape \\", c, d);
};
cljs.reader.make_unicode_char = function(a) {
  a = parseInt(a, 16);
  return String.fromCharCode(a);
};
cljs.reader.escape_char = function(a, b) {
  var c = cljs.reader.read_char.call(null, b), d = cljs.reader.escape_char_map.call(null, c);
  return cljs.core.truth_(d) ? d : "x" === c ? cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, b, c, cljs.reader.read_2_chars.call(null, b))) : "u" === c ? cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, b, c, cljs.reader.read_4_chars.call(null, b))) : cljs.reader.numeric_QMARK_.call(null, c) ? String.fromCharCode(c) : cljs.reader.reader_error.call(null, b, 
  "Unexpected unicode escape \\", c);
};
cljs.reader.read_past = function(a, b) {
  for (var c = cljs.reader.read_char.call(null, b);;) {
    if (cljs.core.truth_(a.call(null, c))) {
      c = cljs.reader.read_char.call(null, b);
    } else {
      return c;
    }
  }
};
cljs.reader.read_delimited_list = function(a, b, c) {
  for (var d = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);;) {
    var e = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, b);
    cljs.core.truth_(e) || cljs.reader.reader_error.call(null, b, "EOF while reading");
    if (a === e) {
      return cljs.core.persistent_BANG_.call(null, d);
    }
    var f = cljs.reader.macros.call(null, e);
    cljs.core.truth_(f) ? e = f.call(null, b, e) : (cljs.reader.unread.call(null, b, e), e = cljs.reader.read.call(null, b, !0, null, c));
    d = e === b ? d : cljs.core.conj_BANG_.call(null, d, e);
  }
};
cljs.reader.not_implemented = function(a, b) {
  return cljs.reader.reader_error.call(null, a, "Reader for ", b, " not implemented yet");
};
cljs.reader.maybe_read_tagged_type;
cljs.reader.read_dispatch = function(a, b) {
  var c = cljs.reader.read_char.call(null, a), d = cljs.reader.dispatch_macros.call(null, c);
  if (cljs.core.truth_(d)) {
    return d.call(null, a, b);
  }
  d = cljs.reader.maybe_read_tagged_type.call(null, a, c);
  return cljs.core.truth_(d) ? d : cljs.reader.reader_error.call(null, a, "No dispatch macro for ", c);
};
cljs.reader.read_unmatched_delimiter = function(a, b) {
  return cljs.reader.reader_error.call(null, a, "Unmatched delimiter ", b);
};
cljs.reader.read_list = function(a, b) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", a, !0));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function(a, b) {
  return cljs.reader.read_delimited_list.call(null, "]", a, !0);
};
cljs.reader.read_map = function(a, b) {
  var c = cljs.reader.read_delimited_list.call(null, "}", a, !0);
  cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, c)) && cljs.reader.reader_error.call(null, a, "Map literal must contain an even number of forms");
  return cljs.core.apply.call(null, cljs.core.hash_map, c);
};
cljs.reader.read_number = function(a, b) {
  for (var c = new goog.string.StringBuffer(b), d = cljs.reader.read_char.call(null, a);;) {
    if (cljs.core.truth_(function() {
      var a = null == d;
      return a ? a : (a = cljs.reader.whitespace_QMARK_.call(null, d)) ? a : cljs.reader.macros.call(null, d);
    }())) {
      cljs.reader.unread.call(null, a, d);
      var e = c.toString(), c = cljs.reader.match_number.call(null, e);
      return cljs.core.truth_(c) ? c : cljs.reader.reader_error.call(null, a, "Invalid number format [", e, "]");
    }
    c.append(d);
    d = e = cljs.reader.read_char.call(null, a);
  }
};
cljs.reader.read_string_STAR_ = function(a, b) {
  for (var c = new goog.string.StringBuffer, d = cljs.reader.read_char.call(null, a);;) {
    if (null == d) {
      return cljs.reader.reader_error.call(null, a, "EOF while reading");
    }
    if ("\\" === d) {
      c.append(cljs.reader.escape_char.call(null, c, a));
    } else {
      if ('"' === d) {
        return c.toString();
      }
      c.append(d);
    }
    d = cljs.reader.read_char.call(null, a);
  }
};
cljs.reader.read_raw_string_STAR_ = function(a, b) {
  for (var c = new goog.string.StringBuffer, d = cljs.reader.read_char.call(null, a);;) {
    if (null == d) {
      return cljs.reader.reader_error.call(null, a, "EOF while reading");
    }
    if ("\\" === d) {
      c.append(d);
      var e = cljs.reader.read_char.call(null, a);
      if (null == e) {
        return cljs.reader.reader_error.call(null, a, "EOF while reading");
      }
      var f = function() {
        var a = c;
        a.append(e);
        return a;
      }(), g = cljs.reader.read_char.call(null, a);
    } else {
      if ('"' === d) {
        return c.toString();
      }
      f = function() {
        var a = c;
        a.append(d);
        return a;
      }();
      g = cljs.reader.read_char.call(null, a);
    }
    c = f;
    d = g;
  }
};
cljs.reader.special_symbols = function(a, b) {
  return "nil" === a ? null : "true" === a ? !0 : "false" === a ? !1 : "/" === a ? new cljs.core.Symbol(null, "/", "/", -1371932971, null) : b;
};
cljs.reader.read_symbol = function(a, b) {
  var c = cljs.reader.read_token.call(null, a, b);
  return cljs.core.truth_(function() {
    var a = goog.string.contains(c, "/");
    return cljs.core.truth_(a) ? 1 !== c.length : a;
  }()) ? cljs.core.symbol.call(null, cljs.core.subs.call(null, c, 0, c.indexOf("/")), cljs.core.subs.call(null, c, c.indexOf("/") + 1, c.length)) : cljs.reader.special_symbols.call(null, c, cljs.core.symbol.call(null, c));
};
cljs.reader.read_literal = function(a, b) {
  var c = cljs.reader.read_token.call(null, a, b), d = cljs.core.subs.call(null, c, 1);
  return 1 === d.length ? d : "tab" === d ? "\t" : "return" === d ? "\r" : "newline" === d ? "\n" : "space" === d ? " " : "backspace" === d ? "\b" : "formfeed" === d ? "\f" : "u" === d.charAt(0) ? cljs.reader.make_unicode_char.call(null, cljs.core.subs.call(null, d, 1)) : "o" === d.charAt(0) ? cljs.reader.not_implemented.call(null, a, c) : cljs.reader.reader_error.call(null, a, "Unknown character literal: ", c);
};
cljs.reader.read_keyword = function(a, b) {
  var c = cljs.reader.read_token.call(null, a, cljs.reader.read_char.call(null, a)), d = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, c), c = d[0], e = d[1], d = d[2];
  return void 0 !== e && ":/" === e.substring(e.length - 2, e.length) || ":" === d[d.length - 1] || -1 !== c.indexOf("::", 1) ? cljs.reader.reader_error.call(null, a, "Invalid token: ", c) : null != e && 0 < e.length ? cljs.core.keyword.call(null, e.substring(0, e.indexOf("/")), d) : cljs.core.keyword.call(null, c);
};
cljs.reader.desugar_meta = function(a) {
  return a instanceof cljs.core.Symbol ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), a], null) : "string" === typeof a ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), a], null) : a instanceof cljs.core.Keyword ? cljs.core.PersistentArrayMap.fromArray([a, !0], !0, !1) : a;
};
cljs.reader.wrapping_reader = function(a) {
  return function(b, c) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, b, !0, null, !0)), a);
  };
};
cljs.reader.throwing_reader = function(a) {
  return function(b, c) {
    return cljs.reader.reader_error.call(null, b, a);
  };
};
cljs.reader.read_meta = function(a, b) {
  var c = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, a, !0, null, !0));
  cljs.core.map_QMARK_.call(null, c) || cljs.reader.reader_error.call(null, a, "Metadata must be Symbol,Keyword,String or Map");
  var d = cljs.reader.read.call(null, a, !0, null, !0);
  return (null != d ? d.cljs$lang$protocol_mask$partition0$ & 262144 || d.cljs$core$IWithMeta$ || (d.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, d)) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, d)) ? cljs.core.with_meta.call(null, d, cljs.core.merge.call(null, cljs.core.meta.call(null, d), c)) : cljs.reader.reader_error.call(null, a, "Metadata can only be applied to IWithMetas");
};
cljs.reader.read_set = function(a, b) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", a, !0));
};
cljs.reader.read_regex = function(a, b) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_raw_string_STAR_.call(null, a, b));
};
cljs.reader.read_discard = function(a, b) {
  cljs.reader.read.call(null, a, !0, null, !0);
  return a;
};
cljs.reader.macros = function(a) {
  return '"' === a ? cljs.reader.read_string_STAR_ : ":" === a ? cljs.reader.read_keyword : ";" === a ? cljs.reader.read_comment : "'" === a ? cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)) : "@" === a ? cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null)) : "^" === a ? cljs.reader.read_meta : "`" === a ? cljs.reader.not_implemented : "~" === a ? cljs.reader.not_implemented : "(" === a ? cljs.reader.read_list : 
  ")" === a ? cljs.reader.read_unmatched_delimiter : "[" === a ? cljs.reader.read_vector : "]" === a ? cljs.reader.read_unmatched_delimiter : "{" === a ? cljs.reader.read_map : "}" === a ? cljs.reader.read_unmatched_delimiter : "\\" === a ? cljs.reader.read_literal : "#" === a ? cljs.reader.read_dispatch : null;
};
cljs.reader.dispatch_macros = function(a) {
  return "{" === a ? cljs.reader.read_set : "\x3c" === a ? cljs.reader.throwing_reader.call(null, "Unreadable form") : '"' === a ? cljs.reader.read_regex : "!" === a ? cljs.reader.read_comment : "_" === a ? cljs.reader.read_discard : null;
};
cljs.reader.read = function(a, b, c, d) {
  for (;;) {
    d = cljs.reader.read_char.call(null, a);
    if (null == d) {
      return cljs.core.truth_(b) ? cljs.reader.reader_error.call(null, a, "EOF while reading") : c;
    }
    if (!cljs.reader.whitespace_QMARK_.call(null, d)) {
      if (cljs.reader.comment_prefix_QMARK_.call(null, d)) {
        a = cljs.reader.read_comment.call(null, a, d);
      } else {
        var e = cljs.reader.macros.call(null, d);
        d = cljs.core.truth_(e) ? e.call(null, a, d) : cljs.reader.number_literal_QMARK_.call(null, a, d) ? cljs.reader.read_number.call(null, a, d) : cljs.reader.read_symbol.call(null, a, d);
        if (d !== a) {
          return d;
        }
      }
    }
  }
};
cljs.reader.read_string = function(a) {
  if ("string" !== typeof a) {
    throw Error("Cannot read from non-string object.");
  }
  a = cljs.reader.push_back_reader.call(null, a);
  return cljs.reader.read.call(null, a, !1, null, !1);
};
cljs.reader.zero_fill_right_and_truncate = function(a, b) {
  if (cljs.core._EQ_.call(null, b, cljs.core.count.call(null, a))) {
    return a;
  }
  if (b < cljs.core.count.call(null, a)) {
    return cljs.core.subs.call(null, a, 0, b);
  }
  for (var c = new goog.string.StringBuffer(a);;) {
    if (c.getLength() < b) {
      c = c.append("0");
    } else {
      return c.toString();
    }
  }
};
cljs.reader.divisible_QMARK_ = function(a, b) {
  return 0 === cljs.core.mod.call(null, a, b);
};
cljs.reader.indivisible_QMARK_ = function(a, b) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, a, b));
};
cljs.reader.leap_year_QMARK_ = function(a) {
  var b = cljs.reader.divisible_QMARK_.call(null, a, 4);
  return cljs.core.truth_(b) ? (b = cljs.reader.indivisible_QMARK_.call(null, a, 100), cljs.core.truth_(b) ? b : cljs.reader.divisible_QMARK_.call(null, a, 400)) : b;
};
cljs.reader.days_in_month = function() {
  var a = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null), b = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(a, b) {
    return function(e, f) {
      return cljs.core.get.call(null, cljs.core.truth_(f) ? b : a, e);
    };
  }(a, b);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function(a) {
  a = parseInt(a, 10);
  return cljs.core.not.call(null, isNaN(a)) ? a : null;
};
cljs.reader.check = function(a, b, c, d) {
  a <= b && b <= c || cljs.reader.reader_error.call(null, null, [cljs.core.str(d), cljs.core.str(" Failed:  "), cljs.core.str(a), cljs.core.str("\x3c\x3d"), cljs.core.str(b), cljs.core.str("\x3c\x3d"), cljs.core.str(c)].join(""));
  return b;
};
cljs.reader.parse_and_validate_timestamp = function(a) {
  var b = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, a);
  cljs.core.nth.call(null, b, 0, null);
  var c = cljs.core.nth.call(null, b, 1, null), d = cljs.core.nth.call(null, b, 2, null), e = cljs.core.nth.call(null, b, 3, null), f = cljs.core.nth.call(null, b, 4, null), g = cljs.core.nth.call(null, b, 5, null), h = cljs.core.nth.call(null, b, 6, null), k = cljs.core.nth.call(null, b, 7, null), m = cljs.core.nth.call(null, b, 8, null), l = cljs.core.nth.call(null, b, 9, null), n = cljs.core.nth.call(null, b, 10, null);
  if (cljs.core.not.call(null, b)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(a)].join(""));
  }
  a = cljs.reader.parse_int.call(null, c);
  var b = function() {
    var a = cljs.reader.parse_int.call(null, d);
    return cljs.core.truth_(a) ? a : 1;
  }(), c = function() {
    var a = cljs.reader.parse_int.call(null, e);
    return cljs.core.truth_(a) ? a : 1;
  }(), p = function() {
    var a = cljs.reader.parse_int.call(null, f);
    return cljs.core.truth_(a) ? a : 0;
  }(), q = function() {
    var a = cljs.reader.parse_int.call(null, g);
    return cljs.core.truth_(a) ? a : 0;
  }(), r = function() {
    var a = cljs.reader.parse_int.call(null, h);
    return cljs.core.truth_(a) ? a : 0;
  }(), t = function() {
    var a = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, k, 3));
    return cljs.core.truth_(a) ? a : 0;
  }(), m = cljs.core._EQ_.call(null, m, "-") ? -1 : 1, u = function() {
    var a = cljs.reader.parse_int.call(null, l);
    return cljs.core.truth_(a) ? a : 0;
  }(), v = function() {
    var a = cljs.reader.parse_int.call(null, n);
    return cljs.core.truth_(a) ? a : 0;
  }(), m = m * (60 * u + v);
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, cljs.reader.check.call(null, 1, b, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, c, cljs.reader.days_in_month.call(null, b, cljs.reader.leap_year_QMARK_.call(null, a)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, p, 23, "timestamp hour field must be in range 0..23"), cljs.reader.check.call(null, 0, q, 59, "timestamp minute field must be in range 0..59"), 
  cljs.reader.check.call(null, 0, r, cljs.core._EQ_.call(null, q, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, t, 999, "timestamp millisecond field must be in range 0..999"), m], null);
};
cljs.reader.parse_timestamp = function(a) {
  var b = cljs.reader.parse_and_validate_timestamp.call(null, a);
  if (cljs.core.truth_(b)) {
    a = cljs.core.nth.call(null, b, 0, null);
    var c = cljs.core.nth.call(null, b, 1, null), d = cljs.core.nth.call(null, b, 2, null), e = cljs.core.nth.call(null, b, 3, null), f = cljs.core.nth.call(null, b, 4, null), g = cljs.core.nth.call(null, b, 5, null), h = cljs.core.nth.call(null, b, 6, null), b = cljs.core.nth.call(null, b, 7, null);
    return new Date(Date.UTC(a, c - 1, d, e, f, g, h) - 6E4 * b);
  }
  return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(a)].join(""));
};
cljs.reader.read_date = function(a) {
  return "string" === typeof a ? cljs.reader.parse_timestamp.call(null, a) : cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
};
cljs.reader.read_queue = function(a) {
  return cljs.core.vector_QMARK_.call(null, a) ? cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, a) : cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
};
cljs.reader.read_js = function(a) {
  if (cljs.core.vector_QMARK_.call(null, a)) {
    var b = [];
    a = cljs.core.seq.call(null, a);
    for (var c = null, d = 0, e = 0;;) {
      if (e < d) {
        var f = cljs.core._nth.call(null, c, e);
        b.push(f);
        e += 1;
      } else {
        if (a = cljs.core.seq.call(null, a)) {
          c = a, cljs.core.chunked_seq_QMARK_.call(null, c) ? (a = cljs.core.chunk_first.call(null, c), e = cljs.core.chunk_rest.call(null, c), c = a, d = cljs.core.count.call(null, a), a = e) : (a = cljs.core.first.call(null, c), b.push(a), a = cljs.core.next.call(null, c), c = null, d = 0), e = 0;
        } else {
          break;
        }
      }
    }
    return b;
  }
  if (cljs.core.map_QMARK_.call(null, a)) {
    b = {};
    a = cljs.core.seq.call(null, a);
    c = null;
    for (e = d = 0;;) {
      if (e < d) {
        var g = cljs.core._nth.call(null, c, e), f = cljs.core.nth.call(null, g, 0, null), g = cljs.core.nth.call(null, g, 1, null);
        b[cljs.core.name.call(null, f)] = g;
        e += 1;
      } else {
        if (a = cljs.core.seq.call(null, a)) {
          cljs.core.chunked_seq_QMARK_.call(null, a) ? (d = cljs.core.chunk_first.call(null, a), a = cljs.core.chunk_rest.call(null, a), c = d, d = cljs.core.count.call(null, d)) : (d = cljs.core.first.call(null, a), c = cljs.core.nth.call(null, d, 0, null), d = cljs.core.nth.call(null, d, 1, null), b[cljs.core.name.call(null, c)] = d, a = cljs.core.next.call(null, a), c = null, d = 0), e = 0;
        } else {
          break;
        }
      }
    }
    return b;
  }
  return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
};
cljs.reader.read_uuid = function(a) {
  return "string" === typeof a ? cljs.core.uuid.call(null, a) : cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function(a, b) {
  var c = cljs.reader.read_symbol.call(null, a, b), d = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), "" + cljs.core.str(c)), e = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  return cljs.core.truth_(d) ? d.call(null, cljs.reader.read.call(null, a, !0, null, !1)) : cljs.core.truth_(e) ? e.call(null, c, cljs.reader.read.call(null, a, !0, null, !1)) : cljs.reader.reader_error.call(null, a, "Could not find tag parser for ", "" + cljs.core.str(c), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
};
cljs.reader.register_tag_parser_BANG_ = function(a, b) {
  var c = "" + cljs.core.str(a), d = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), c);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, c, b);
  return d;
};
cljs.reader.deregister_tag_parser_BANG_ = function(a) {
  a = "" + cljs.core.str(a);
  var b = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), a);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, a);
  return b;
};
cljs.reader.register_default_tag_parser_BANG_ = function(a) {
  var b = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(b) {
    return function(b) {
      return a;
    };
  }(b));
  return b;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function() {
  var a = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(a) {
    return function(a) {
      return null;
    };
  }(a));
  return a;
};
weasel.repl = {};
weasel.repl.ws_connection = cljs.core.atom.call(null, null);
weasel.repl.alive_QMARK_ = function() {
  return null != cljs.core.deref.call(null, weasel.repl.ws_connection);
};
"undefined" === typeof weasel.repl.process_message && (weasel.repl.process_message = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "weasel.repl", "process-message"), new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.core._add_method.call(null, weasel.repl.process_message, new cljs.core.Keyword(null, "error", "error", -978969032), function(a) {
  return console.error([cljs.core.str("Websocket REPL error "), cljs.core.str((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(a))].join(""));
});
cljs.core._add_method.call(null, weasel.repl.process_message, new cljs.core.Keyword(null, "eval-js", "eval-js", 760905924), function(a) {
  var b = (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(a);
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "result", "result", 1415092211), new cljs.core.Keyword(null, "value", "value", 305978217), function() {
    try {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "success", "success", 1890645906), new cljs.core.Keyword(null, "value", "value", 305978217), "" + cljs.core.str(eval(b))], null);
    } catch (a) {
      if (a instanceof Error) {
        var c = a;
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "exception", "exception", -335277064), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.pr_str.call(null, c), new cljs.core.Keyword(null, "stacktrace", "stacktrace", -95588394), cljs.core.truth_(c.hasOwnProperty("stack")) ? c.stack : "No stacktrace available."], null);
      }
      c = a;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "exception", "exception", -335277064), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.pr_str.call(null, c), new cljs.core.Keyword(null, "stacktrace", "stacktrace", -95588394), "No stacktrace available."], null);
    }
  }()], null);
});
weasel.repl.repl_print = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return weasel.repl.repl_print.cljs$core$IFn$_invoke$arity$variadic(b);
};
weasel.repl.repl_print.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  var b = cljs.core.deref.call(null, weasel.repl.ws_connection);
  return cljs.core.truth_(b) ? clojure.browser.net.transmit.call(null, cljs.core.deref.call(null, weasel.repl.ws_connection), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "print", "print", 1299562414), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.apply.call(null, cljs.core.pr_str, a)], null)) : null;
};
weasel.repl.repl_print.cljs$lang$maxFixedArity = 0;
weasel.repl.repl_print.cljs$lang$applyTo = function(a) {
  return weasel.repl.repl_print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
weasel.repl.console_print = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return weasel.repl.console_print.cljs$core$IFn$_invoke$arity$variadic(b);
};
weasel.repl.console_print.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return console.log.apply(console, cljs.core.into_array.call(null, a));
};
weasel.repl.console_print.cljs$lang$maxFixedArity = 0;
weasel.repl.console_print.cljs$lang$applyTo = function(a) {
  return weasel.repl.console_print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
weasel.repl.print_fns = cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "repl", "repl", -35398667), weasel.repl.repl_print, new cljs.core.Keyword(null, "console", "console", 1228072057), weasel.repl.console_print, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "repl", "repl", -35398667), null, new cljs.core.Keyword(null, "console", "console", 1228072057), null], null), null), function() {
  var a = function(a) {
    cljs.core.apply.call(null, weasel.repl.console_print, a);
    return cljs.core.apply.call(null, weasel.repl.repl_print, a);
  }, b = function(b) {
    var d = null;
    if (0 < arguments.length) {
      for (var d = 0, e = Array(arguments.length - 0);d < e.length;) {
        e[d] = arguments[d + 0], ++d;
      }
      d = new cljs.core.IndexedSeq(e, 0);
    }
    return a.call(this, d);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(b) {
    b = cljs.core.seq(b);
    return a(b);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()], !0, !1);
weasel.repl.connect = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return weasel.repl.connect.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
weasel.repl.connect.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "verbose", "verbose", 1694226060), !0), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "on-open", "on-open", -1391088163)), f = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "on-error", "on-error", 1728533530)), g = cljs.core.get.call(null, c, new cljs.core.Keyword(null, 
  "on-close", "on-close", -761178394)), h = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "print", "print", 1299562414), new cljs.core.Keyword(null, "repl", "repl", -35398667)), k = weasel.impls.websocket.websocket_connection.call(null);
  cljs.core.swap_BANG_.call(null, weasel.repl.ws_connection, cljs.core.constantly.call(null, k));
  clojure.browser.event.listen.call(null, k, new cljs.core.Keyword(null, "opened", "opened", -1451743091), function(a, b, c, d, e, f, g, h) {
    return function(b) {
      cljs.core.set_print_fn_BANG_.call(null, cljs.core.fn_QMARK_.call(null, h) ? h : cljs.core.get.call(null, weasel.repl.print_fns, h));
      clojure.browser.net.transmit.call(null, a, cljs.core.pr_str.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "ready", "ready", 1086465795)], null)));
      cljs.core.truth_(d) && console.info("Opened Websocket REPL connection");
      return cljs.core.fn_QMARK_.call(null, e) ? e.call(null) : null;
    };
  }(k, b, c, d, e, f, g, h));
  clojure.browser.event.listen.call(null, k, new cljs.core.Keyword(null, "message", "message", -406056002), function(a, b, c, d, e, f, g, h) {
    return function(b) {
      b = cljs.reader.read_string.call(null, b.message);
      b = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
      cljs.core.get.call(null, b, new cljs.core.Keyword(null, "op", "op", -1882987955));
      b = cljs.core.pr_str.call(null, weasel.repl.process_message.call(null, b));
      return clojure.browser.net.transmit.call(null, a, b);
    };
  }(k, b, c, d, e, f, g, h));
  clojure.browser.event.listen.call(null, k, new cljs.core.Keyword(null, "closed", "closed", -919675359), function(a, b, c, d, e, f, g, h) {
    return function(a) {
      cljs.core.reset_BANG_.call(null, weasel.repl.ws_connection, null);
      cljs.core.truth_(d) && console.info("Closed Websocket REPL connection");
      return cljs.core.fn_QMARK_.call(null, g) ? g.call(null) : null;
    };
  }(k, b, c, d, e, f, g, h));
  clojure.browser.event.listen.call(null, k, new cljs.core.Keyword(null, "error", "error", -978969032), function(a, b, c, d, e, f, g, h) {
    return function(a) {
      cljs.core.truth_(d) && console.error("WebSocket error", a);
      return cljs.core.fn_QMARK_.call(null, f) ? f.call(null, a) : null;
    };
  }(k, b, c, d, e, f, g, h));
  clojure.browser.repl.bootstrap.call(null);
  return clojure.browser.net.connect.call(null, k, a);
};
weasel.repl.connect.cljs$lang$maxFixedArity = 1;
weasel.repl.connect.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return weasel.repl.connect.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
clojure.string = {};
clojure.string.seq_reverse = function(a) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, a);
};
clojure.string.re_surrogate_pair = RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function(a) {
  return a.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function(a, b, c) {
  return a.replace(new RegExp(b.source, "g"), c);
};
clojure.string.replace_with = function(a) {
  return function() {
    var b = function(b) {
      b = cljs.core.drop_last.call(null, 2, b);
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, b), 1) ? a.call(null, cljs.core.first.call(null, b)) : a.call(null, cljs.core.vec.call(null, b));
    }, c = function(a) {
      var c = null;
      if (0 < arguments.length) {
        for (var c = 0, f = Array(arguments.length - 0);c < f.length;) {
          f[c] = arguments[c + 0], ++c;
        }
        c = new cljs.core.IndexedSeq(f, 0);
      }
      return b.call(this, c);
    };
    c.cljs$lang$maxFixedArity = 0;
    c.cljs$lang$applyTo = function(a) {
      a = cljs.core.seq(a);
      return b(a);
    };
    c.cljs$core$IFn$_invoke$arity$variadic = b;
    return c;
  }();
};
clojure.string.replace = function(a, b, c) {
  if ("string" === typeof b) {
    return a.replace(new RegExp(goog.string.regExpEscape(b), "g"), c);
  }
  if (b instanceof RegExp) {
    return "string" === typeof c ? clojure.string.replace_all.call(null, a, b, c) : clojure.string.replace_all.call(null, a, b, clojure.string.replace_with.call(null, c));
  }
  throw [cljs.core.str("Invalid match arg: "), cljs.core.str(b)].join("");
};
clojure.string.replace_first = function(a, b, c) {
  return a.replace(b, c);
};
clojure.string.join = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var b = new goog.string.StringBuffer;
  for (a = cljs.core.seq.call(null, a);;) {
    if (null != a) {
      b = b.append("" + cljs.core.str(cljs.core.first.call(null, a))), a = cljs.core.next.call(null, a);
    } else {
      return b.toString();
    }
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  for (var c = new goog.string.StringBuffer, d = cljs.core.seq.call(null, b);;) {
    if (null != d) {
      c.append("" + cljs.core.str(cljs.core.first.call(null, d))), d = cljs.core.next.call(null, d), null != d && c.append(a);
    } else {
      return c.toString();
    }
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function(a) {
  return a.toUpperCase();
};
clojure.string.lower_case = function(a) {
  return a.toLowerCase();
};
clojure.string.capitalize = function(a) {
  return 2 > cljs.core.count.call(null, a) ? clojure.string.upper_case.call(null, a) : [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, a, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, a, 1)))].join("");
};
clojure.string.pop_last_while_empty = function(a) {
  for (;;) {
    if ("" === cljs.core.peek.call(null, a)) {
      a = cljs.core.pop.call(null, a);
    } else {
      return a;
    }
  }
};
clojure.string.discard_trailing_if_needed = function(a, b) {
  return 0 === a ? clojure.string.pop_last_while_empty.call(null, b) : b;
};
clojure.string.split_with_empty_regex = function(a, b) {
  if (0 >= b || b >= 2 + cljs.core.count.call(null, a)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, a)))), "");
  }
  var c = cljs.core._EQ__EQ_;
  if (cljs.core.truth_(c.call(null, 1, b))) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null);
  }
  if (cljs.core.truth_(c.call(null, 2, b))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", a], null);
  }
  c = b - 2;
  return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, a))), 0, c))), cljs.core.subs.call(null, a, c));
};
clojure.string.split = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return clojure.string.split.call(null, a, b, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return clojure.string.discard_trailing_if_needed.call(null, c, "/(?:)/" === "" + cljs.core.str(b) ? clojure.string.split_with_empty_regex.call(null, a, c) : 1 > c ? cljs.core.vec.call(null, ("" + cljs.core.str(a)).split(b)) : function() {
    for (var d = a, e = c, f = cljs.core.PersistentVector.EMPTY;;) {
      if (1 === e) {
        return cljs.core.conj.call(null, f, d);
      }
      var g = cljs.core.re_find.call(null, b, d);
      if (null != g) {
        var h = d.indexOf(g), g = d.substring(h + cljs.core.count.call(null, g)), e = e - 1, f = cljs.core.conj.call(null, f, d.substring(0, h)), d = g
      } else {
        return cljs.core.conj.call(null, f, d);
      }
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function(a) {
  return clojure.string.split.call(null, a, /\n|\r\n/);
};
clojure.string.trim = function(a) {
  return goog.string.trim(a);
};
clojure.string.triml = function(a) {
  return goog.string.trimLeft(a);
};
clojure.string.trimr = function(a) {
  return goog.string.trimRight(a);
};
clojure.string.trim_newline = function(a) {
  for (var b = a.length;;) {
    if (0 === b) {
      return "";
    }
    var c = cljs.core.get.call(null, a, b - 1);
    if ("\n" === c || "\r" === c) {
      --b;
    } else {
      return a.substring(0, b);
    }
  }
};
clojure.string.blank_QMARK_ = function(a) {
  return goog.string.isEmptySafe(a);
};
clojure.string.escape = function(a, b) {
  for (var c = new goog.string.StringBuffer, d = a.length, e = 0;;) {
    if (d === e) {
      return c.toString();
    }
    var f = a.charAt(e), g = cljs.core.get.call(null, b, f);
    null != g ? c.append("" + cljs.core.str(g)) : c.append(f);
    e += 1;
  }
};
clojure.string.index_of = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = a.indexOf(b);
  return 0 > c ? null : c;
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = a.indexOf(b, c);
  return 0 > a ? null : a;
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = a.lastIndexOf(b);
  return 0 > c ? null : c;
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = a.lastIndexOf(b, c);
  return 0 > a ? null : a;
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function(a, b) {
  return goog.string.startsWith(a, b);
};
clojure.string.ends_with_QMARK_ = function(a, b) {
  return goog.string.endsWith(a, b);
};
clojure.string.includes_QMARK_ = function(a, b) {
  return goog.string.contains(a, b);
};
cljs.pprint = {};
cljs.pprint.print = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.print_str, a));
};
cljs.pprint.print.cljs$lang$maxFixedArity = 0;
cljs.pprint.print.cljs$lang$applyTo = function(a) {
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs.pprint.println = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  cljs.core.apply.call(null, cljs.pprint.print, a);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.println.cljs$lang$maxFixedArity = 0;
cljs.pprint.println.cljs$lang$applyTo = function(a) {
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs.pprint.print_char = function(a) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, function() {
    var b = cljs.core._EQ_;
    return cljs.core.truth_(b.call(null, "\b", a)) ? "\\backspace" : cljs.core.truth_(b.call(null, "\t", a)) ? "\\tab" : cljs.core.truth_(b.call(null, "\n", a)) ? "\\newline" : cljs.core.truth_(b.call(null, "\f", a)) ? "\\formfeed" : cljs.core.truth_(b.call(null, "\r", a)) ? "\\return" : cljs.core.truth_(b.call(null, '"', a)) ? '\\"' : cljs.core.truth_(b.call(null, "\\", a)) ? "\\\\" : [cljs.core.str("\\"), cljs.core.str(a)].join("");
  }());
};
cljs.pprint.pr = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.pr_str, a));
};
cljs.pprint.pr.cljs$lang$maxFixedArity = 0;
cljs.pprint.pr.cljs$lang$applyTo = function(a) {
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs.pprint.prn = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  cljs.core.apply.call(null, cljs.pprint.pr, a);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.prn.cljs$lang$maxFixedArity = 0;
cljs.pprint.prn.cljs$lang$applyTo = function(a) {
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs.pprint.float_QMARK_ = function(a) {
  return "number" === typeof a && !isNaN(a) && Infinity !== a && parseFloat(a) !== parseInt(a, 10);
};
cljs.pprint.char_code = function(a) {
  if ("number" === typeof a) {
    return a;
  }
  if ("string" === typeof a && 1 === a.length) {
    return a.charCodeAt(0);
  }
  throw Error("Argument to char must be a character or number");
};
cljs.pprint.map_passing_context = function(a, b, c) {
  var d = c;
  for (c = cljs.core.PersistentVector.EMPTY;;) {
    if (cljs.core.empty_QMARK_.call(null, d)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null);
    }
    var e = cljs.core.first.call(null, d), d = cljs.core.next.call(null, d), e = cljs.core.apply.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, b], null));
    b = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    c = cljs.core.conj.call(null, c, b);
    b = e;
  }
};
cljs.pprint.consume = function(a, b) {
  for (var c = b, d = cljs.core.PersistentVector.EMPTY;;) {
    var e = cljs.core.apply.call(null, a, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null)), c = cljs.core.nth.call(null, e, 0, null), e = cljs.core.nth.call(null, e, 1, null);
    if (cljs.core.not.call(null, c)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, e], null);
    }
    d = cljs.core.conj.call(null, d, c);
    c = e;
  }
};
cljs.pprint.consume_while = function(a, b) {
  for (var c = b, d = cljs.core.PersistentVector.EMPTY;;) {
    var e = cljs.core.apply.call(null, a, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null)), f = cljs.core.nth.call(null, e, 0, null), g = cljs.core.nth.call(null, e, 1, null), e = cljs.core.nth.call(null, e, 2, null);
    if (cljs.core.not.call(null, g)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, c], null);
    }
    c = e;
    d = cljs.core.conj.call(null, d, f);
  }
};
cljs.pprint.unzip_map = function(a) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    return function c(a) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var e = cljs.core.seq.call(null, a);
          if (e) {
            if (cljs.core.chunked_seq_QMARK_.call(null, e)) {
              var f = cljs.core.chunk_first.call(null, e), g = cljs.core.count.call(null, f), h = cljs.core.chunk_buffer.call(null, g);
              a: {
                for (var k = 0;;) {
                  if (k < g) {
                    var m = cljs.core._nth.call(null, f, k), l = cljs.core.nth.call(null, m, 0, null), m = cljs.core.nth.call(null, m, 1, null), n = cljs.core.nth.call(null, m, 0, null);
                    cljs.core.nth.call(null, m, 1, null);
                    cljs.core.chunk_append.call(null, h, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [l, n], null));
                    k += 1;
                  } else {
                    f = !0;
                    break a;
                  }
                }
              }
              return f ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), c.call(null, cljs.core.chunk_rest.call(null, e))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), null);
            }
            f = cljs.core.first.call(null, e);
            h = cljs.core.nth.call(null, f, 0, null);
            f = cljs.core.nth.call(null, f, 1, null);
            g = cljs.core.nth.call(null, f, 0, null);
            cljs.core.nth.call(null, f, 1, null);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, g], null), c.call(null, cljs.core.rest.call(null, e)));
          }
          return null;
        }
      }, null, null);
    }.call(null, a);
  }()), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    return function c(a) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var e = cljs.core.seq.call(null, a);
          if (e) {
            if (cljs.core.chunked_seq_QMARK_.call(null, e)) {
              var f = cljs.core.chunk_first.call(null, e), g = cljs.core.count.call(null, f), h = cljs.core.chunk_buffer.call(null, g);
              a: {
                for (var k = 0;;) {
                  if (k < g) {
                    var m = cljs.core._nth.call(null, f, k), l = cljs.core.nth.call(null, m, 0, null), m = cljs.core.nth.call(null, m, 1, null);
                    cljs.core.nth.call(null, m, 0, null);
                    m = cljs.core.nth.call(null, m, 1, null);
                    cljs.core.chunk_append.call(null, h, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [l, m], null));
                    k += 1;
                  } else {
                    f = !0;
                    break a;
                  }
                }
              }
              return f ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), c.call(null, cljs.core.chunk_rest.call(null, e))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), null);
            }
            f = cljs.core.first.call(null, e);
            h = cljs.core.nth.call(null, f, 0, null);
            f = cljs.core.nth.call(null, f, 1, null);
            cljs.core.nth.call(null, f, 0, null);
            f = cljs.core.nth.call(null, f, 1, null);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, f], null), c.call(null, cljs.core.rest.call(null, e)));
          }
          return null;
        }
      }, null, null);
    }.call(null, a);
  }())], null);
};
cljs.pprint.tuple_map = function(a, b) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    return function d(a) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var f = cljs.core.seq.call(null, a);
          if (f) {
            if (cljs.core.chunked_seq_QMARK_.call(null, f)) {
              var g = cljs.core.chunk_first.call(null, f), h = cljs.core.count.call(null, g), k = cljs.core.chunk_buffer.call(null, h);
              a: {
                for (var m = 0;;) {
                  if (m < h) {
                    var l = cljs.core._nth.call(null, g, m), n = cljs.core.nth.call(null, l, 0, null), l = cljs.core.nth.call(null, l, 1, null);
                    cljs.core.chunk_append.call(null, k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [n, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [l, b], null)], null));
                    m += 1;
                  } else {
                    g = !0;
                    break a;
                  }
                }
              }
              return g ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), d.call(null, cljs.core.chunk_rest.call(null, f))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), null);
            }
            g = cljs.core.first.call(null, f);
            k = cljs.core.nth.call(null, g, 0, null);
            g = cljs.core.nth.call(null, g, 1, null);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [g, b], null)], null), d.call(null, cljs.core.rest.call(null, f)));
          }
          return null;
        }
      }, null, null);
    }.call(null, a);
  }());
};
cljs.pprint.rtrim = function(a, b) {
  var c = cljs.core.count.call(null, a);
  if (0 < c && cljs.core._EQ_.call(null, cljs.core.nth.call(null, a, cljs.core.count.call(null, a) - 1), b)) {
    for (--c;;) {
      if (0 > c) {
        return "";
      }
      if (cljs.core._EQ_.call(null, cljs.core.nth.call(null, a, c), b)) {
        --c;
      } else {
        return cljs.core.subs.call(null, a, 0, c + 1);
      }
    }
  } else {
    return a;
  }
};
cljs.pprint.ltrim = function(a, b) {
  var c = cljs.core.count.call(null, a);
  if (0 < c && cljs.core._EQ_.call(null, cljs.core.nth.call(null, a, 0), b)) {
    for (var d = 0;;) {
      if (cljs.core._EQ_.call(null, d, c) || !cljs.core._EQ_.call(null, cljs.core.nth.call(null, a, d), b)) {
        return cljs.core.subs.call(null, a, d);
      }
      d += 1;
    }
  } else {
    return a;
  }
};
cljs.pprint.prefix_count = function(a, b) {
  for (var c = cljs.core.coll_QMARK_.call(null, b) ? cljs.core.set.call(null, b) : cljs.core.PersistentHashSet.fromArray([b], !0), d = 0;;) {
    if (cljs.core._EQ_.call(null, d, cljs.core.count.call(null, a)) || cljs.core.not.call(null, c.call(null, cljs.core.nth.call(null, a, d)))) {
      return d;
    }
    d += 1;
  }
};
cljs.pprint.IPrettyFlush = function() {
};
cljs.pprint._ppflush = function(a) {
  if (null != a && null != a.cljs$pprint$IPrettyFlush$_ppflush$arity$1) {
    return a.cljs$pprint$IPrettyFlush$_ppflush$arity$1(a);
  }
  var b = cljs.pprint._ppflush[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.pprint._ppflush._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IPrettyFlush.-ppflush", a);
};
cljs.pprint._STAR_default_page_width_STAR_ = 72;
cljs.pprint.get_field = function(a, b) {
  return b.call(null, cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
};
cljs.pprint.set_field = function(a, b, c) {
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, b, c);
};
cljs.pprint.get_column = function(a) {
  return cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "cur", "cur", 1153190599));
};
cljs.pprint.get_line = function(a) {
  return cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "line", "line", 212345235));
};
cljs.pprint.get_max_column = function(a) {
  return cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "max", "max", 61366548));
};
cljs.pprint.set_max_column = function(a, b) {
  cljs.pprint.set_field.call(null, a, new cljs.core.Keyword(null, "max", "max", 61366548), b);
  return null;
};
cljs.pprint.get_writer = function(a) {
  return cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "base", "base", 185279322));
};
cljs.pprint.c_write_char = function(a, b) {
  cljs.core._EQ_.call(null, b, "\n") ? (cljs.pprint.set_field.call(null, a, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0), cljs.pprint.set_field.call(null, a, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "line", "line", 212345235)) + 1)) : cljs.pprint.set_field.call(null, a, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + 
  1);
  return cljs.core._write.call(null, cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "base", "base", 185279322)), b);
};
cljs.pprint.column_writer = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.pprint.column_writer.call(null, a, cljs.pprint._STAR_default_page_width_STAR_);
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max", "max", 61366548), b, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0, new cljs.core.Keyword(null, "line", "line", 212345235), 0, new cljs.core.Keyword(null, "base", "base", 185279322), a], null));
  "undefined" === typeof cljs.pprint.t_cljs$pprint20178 && (cljs.pprint.t_cljs$pprint20178 = function(a, b, c, g) {
    this.writer = a;
    this.max_columns = b;
    this.fields = c;
    this.meta20179 = g;
    this.cljs$lang$protocol_mask$partition0$ = 1074167808;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.pprint.t_cljs$pprint20178.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
    return function(a, b) {
      return new cljs.pprint.t_cljs$pprint20178(this.writer, this.max_columns, this.fields, b);
    };
  }(c), cljs.pprint.t_cljs$pprint20178.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return function(a) {
      return this.meta20179;
    };
  }(c), cljs.pprint.t_cljs$pprint20178.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
    return function(a) {
      return this.fields;
    };
  }(c), cljs.pprint.t_cljs$pprint20178.prototype.cljs$core$IWriter$_flush$arity$1 = function(a) {
    return function(a) {
      return cljs.core._flush.call(null, this.writer);
    };
  }(c), cljs.pprint.t_cljs$pprint20178.prototype.cljs$core$IWriter$_write$arity$2 = function(a) {
    return function(b, c) {
      var g = cljs.core._EQ_, h = cljs.core.type.call(null, c);
      if (cljs.core.truth_(g.call(null, String, h))) {
        var k = c.lastIndexOf("\n");
        0 > k ? cljs.pprint.set_field.call(null, this, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + cljs.core.count.call(null, c)) : (cljs.pprint.set_field.call(null, this, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.core.count.call(null, c) - k - 1), cljs.pprint.set_field.call(null, this, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, 
        this, new cljs.core.Keyword(null, "line", "line", 212345235)) + cljs.core.count.call(null, cljs.core.filter.call(null, function(a, b, c, d, e, f) {
          return function(a) {
            return cljs.core._EQ_.call(null, a, "\n");
          };
        }(c, k, g, h, this, a), c))));
        return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this, new cljs.core.Keyword(null, "base", "base", 185279322)), c);
      }
      if (cljs.core.truth_(g.call(null, Number, h))) {
        return cljs.pprint.c_write_char.call(null, this, c);
      }
      throw Error([cljs.core.str("No matching clause: "), cljs.core.str(h)].join(""));
    };
  }(c), cljs.pprint.t_cljs$pprint20178.getBasis = function(a) {
    return function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta20179", "meta20179", -458939620, null)], null);
    };
  }(c), cljs.pprint.t_cljs$pprint20178.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint20178.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint20178", cljs.pprint.t_cljs$pprint20178.cljs$lang$ctorPrWriter = function(a) {
    return function(a, b, c) {
      return cljs.core._write.call(null, b, "cljs.pprint/t_cljs$pprint20178");
    };
  }(c), cljs.pprint.__GT_t_cljs$pprint20178 = function(a) {
    return function(a, b, c, d) {
      return new cljs.pprint.t_cljs$pprint20178(a, b, c, d);
    };
  }(c));
  return new cljs.pprint.t_cljs$pprint20178(a, b, c, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.column_writer.cljs$lang$maxFixedArity = 2;
cljs.pprint.get_miser_width;
cljs.pprint.logical_block = function(a, b, c, d, e, f, g, h, k, m, l, n, p) {
  this.parent = a;
  this.section = b;
  this.start_col = c;
  this.indent = d;
  this.done_nl = e;
  this.intra_block_nl = f;
  this.prefix = g;
  this.per_line_prefix = h;
  this.suffix = k;
  this.logical_block_callback = m;
  this.__meta = l;
  this.__extmap = n;
  this.__hash = p;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.call(null, this, b, null);
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "suffix":
      return this.suffix;
    case "indent":
      return this.indent;
    case "parent":
      return this.parent;
    case "section":
      return this.section;
    case "done-nl":
      return this.done_nl;
    case "start-col":
      return this.start_col;
    case "prefix":
      return this.prefix;
    case "per-line-prefix":
      return this.per_line_prefix;
    case "logical-block-callback":
      return this.logical_block_callback;
    case "intra-block-nl":
      return this.intra_block_nl;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.pprint.logical-block{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), this.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", 
  "section", -300141526), this.section], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), this.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), this.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "done-nl", 
  "done-nl", -381024340), this.done_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), this.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), this.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "per-line-prefix", "per-line-prefix", 846941813), this.per_line_prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), this.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), this.logical_block_callback], null)], null), this.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IIterable$ = !0;
cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
  1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], null), cljs.core._iterator.call(null, this.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 10 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_imap.call(null, this);
};
cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  var c = this;
  return cljs.core.truth_(function() {
    if (cljs.core.truth_(b)) {
      var a = c.constructor === b.constructor;
      return a ? cljs.core.equiv_map.call(null, c, b) : a;
    }
    return b;
  }()) ? !0 : !1;
};
cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "indent", "indent", -148200125), null, new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), null, new cljs.core.Keyword(null, "start-col", 
  "start-col", 668080143), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, 
  this), this.__meta), b) : new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), b)) ? new cljs.pprint.logical_block(c, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "section", "section", -300141526), b)) ? new cljs.pprint.logical_block(this.parent, c, this.start_col, this.indent, 
  this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "start-col", "start-col", 668080143), b)) ? new cljs.pprint.logical_block(this.parent, this.section, c, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "indent", "indent", -148200125), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, c, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, c, this.intra_block_nl, 
  this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, c, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "prefix", "prefix", -265908465), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, c, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, 
  c, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, c, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 
  1612691194), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, c, this.__meta, this.__extmap, null) : new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), this.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), this.section], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), this.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), this.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), this.done_nl], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), this.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), this.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), this.per_line_prefix], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), this.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), this.logical_block_callback], null)], null), this.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, b, this.__extmap, this.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? cljs.core._assoc.call(null, this, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.logical_block.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "section", "section", 1340390001, null), new cljs.core.Symbol(null, "start-col", "start-col", -1986355626, null), new cljs.core.Symbol(null, "indent", "indent", 1492331402, null), new cljs.core.Symbol(null, "done-nl", "done-nl", 1259507187, null), new cljs.core.Symbol(null, "intra-block-nl", "intra-block-nl", -845608894, 
  null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "per-line-prefix", "per-line-prefix", -1807493956, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "logical-block-callback", "logical-block-callback", -1041744575, null)], null);
};
cljs.pprint.logical_block.cljs$lang$type = !0;
cljs.pprint.logical_block.cljs$lang$ctorPrSeq = function(a) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/logical-block");
};
cljs.pprint.logical_block.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/logical-block");
};
cljs.pprint.__GT_logical_block = function(a, b, c, d, e, f, g, h, k, m) {
  return new cljs.pprint.logical_block(a, b, c, d, e, f, g, h, k, m, null, null, null);
};
cljs.pprint.map__GT_logical_block = function(a) {
  return new cljs.pprint.logical_block((new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "section", "section", -300141526)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(a), 
  null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, 
  "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)), null);
};
cljs.pprint.ancestor_QMARK_ = function(a, b) {
  for (var c = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(b);;) {
    if (null == c) {
      return !1;
    }
    if (a === c) {
      return !0;
    }
    c = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(c);
  }
};
cljs.pprint.buffer_length = function(a) {
  return (a = cljs.core.seq.call(null, a)) ? (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, a)) - (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, a)) : 0;
};
cljs.pprint.buffer_blob = function(a, b, c, d, e, f, g, h) {
  this.type_tag = a;
  this.data = b;
  this.trailing_white_space = c;
  this.start_pos = d;
  this.end_pos = e;
  this.__meta = f;
  this.__extmap = g;
  this.__hash = h;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.call(null, this, b, null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
      return this.type_tag;
    case "data":
      return this.data;
    case "trailing-white-space":
      return this.trailing_white_space;
    case "start-pos":
      return this.start_pos;
    case "end-pos":
      return this.end_pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.pprint.buffer-blob{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", 
  "data", -232669377), this.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), this.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), this.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$ = !0;
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  this.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, this.start_pos, this.end_pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 5 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_imap.call(null, this);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  var c = this;
  return cljs.core.truth_(function() {
    if (cljs.core.truth_(b)) {
      var a = c.constructor === b.constructor;
      return a ? cljs.core.equiv_map.call(null, c, b) : a;
    }
    return b;
  }()) ? !0 : !1;
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null, new cljs.core.Keyword(null, "data", "data", -232669377), null], null), 
  null), b) ? cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, this.start_pos, this.end_pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), b)) ? new cljs.pprint.buffer_blob(c, this.data, this.trailing_white_space, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "data", "data", -232669377), b)) ? new cljs.pprint.buffer_blob(this.type_tag, c, this.trailing_white_space, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), b)) ? new cljs.pprint.buffer_blob(this.type_tag, this.data, c, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), b)) ? new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, c, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926), b)) ? new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, this.start_pos, c, this.__meta, this.__extmap, null) : new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, this.start_pos, this.end_pos, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), this.data], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), this.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], 
  null)], null), this.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, this.start_pos, this.end_pos, b, this.__extmap, this.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? cljs.core._assoc.call(null, this, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.buffer_blob.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "trailing-white-space", "trailing-white-space", -1158428773, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.buffer_blob.cljs$lang$type = !0;
cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq = function(a) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/buffer-blob");
};
cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/buffer-blob");
};
cljs.pprint.__GT_buffer_blob = function(a, b, c, d, e) {
  return new cljs.pprint.buffer_blob(a, b, c, d, e, null, null, null);
};
cljs.pprint.map__GT_buffer_blob = function(a) {
  return new cljs.pprint.buffer_blob((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "end-pos", "end-pos", 
  -1643883926)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_buffer_blob = function(a, b, c, d) {
  return new cljs.pprint.buffer_blob(new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), a, b, c, d, null, null, null);
};
cljs.pprint.buffer_blob_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173));
};
cljs.pprint.nl_t = function(a, b, c, d, e, f, g, h) {
  this.type_tag = a;
  this.type = b;
  this.logical_block = c;
  this.start_pos = d;
  this.end_pos = e;
  this.__meta = f;
  this.__extmap = g;
  this.__hash = h;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.call(null, this, b, null);
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
      return this.type_tag;
    case "type":
      return this.type;
    case "logical-block":
      return this.logical_block;
    case "start-pos":
      return this.start_pos;
    case "end-pos":
      return this.end_pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.pprint.nl-t{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 
  1174270348), this.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), this.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IIterable$ = !0;
cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, this.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.nl_t(this.type_tag, this.type, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 5 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_imap.call(null, this);
};
cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  var c = this;
  return cljs.core.truth_(function() {
    if (cljs.core.truth_(b)) {
      var a = c.constructor === b.constructor;
      return a ? cljs.core.equiv_map.call(null, c, b) : a;
    }
    return b;
  }()) ? !0 : !1;
};
cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), b) ? 
  cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.nl_t(this.type_tag, this.type, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), b)) ? new cljs.pprint.nl_t(c, this.type, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), b)) ? new cljs.pprint.nl_t(this.type_tag, c, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "logical-block", "logical-block", -581022564), b)) ? new cljs.pprint.nl_t(this.type_tag, this.type, c, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), b)) ? new cljs.pprint.nl_t(this.type_tag, this.type, this.logical_block, c, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), b)) ? new cljs.pprint.nl_t(this.type_tag, 
  this.type, this.logical_block, this.start_pos, c, this.__meta, this.__extmap, null) : new cljs.pprint.nl_t(this.type_tag, this.type, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 1174270348), this.type], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), 
  this.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.nl_t(this.type_tag, this.type, this.logical_block, this.start_pos, this.end_pos, b, this.__extmap, this.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? cljs.core._assoc.call(null, this, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.nl_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.nl_t.cljs$lang$type = !0;
cljs.pprint.nl_t.cljs$lang$ctorPrSeq = function(a) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/nl-t");
};
cljs.pprint.nl_t.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/nl-t");
};
cljs.pprint.__GT_nl_t = function(a, b, c, d, e) {
  return new cljs.pprint.nl_t(a, b, c, d, e, null, null, null);
};
cljs.pprint.map__GT_nl_t = function(a) {
  return new cljs.pprint.nl_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(a), 
  null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_nl_t = function(a, b, c, d) {
  return new cljs.pprint.nl_t(new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), a, b, c, d, null, null, null);
};
cljs.pprint.nl_t_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114));
};
cljs.pprint.start_block_t = function(a, b, c, d, e, f, g) {
  this.type_tag = a;
  this.logical_block = b;
  this.start_pos = c;
  this.end_pos = d;
  this.__meta = e;
  this.__extmap = f;
  this.__hash = g;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.call(null, this, b, null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
      return this.type_tag;
    case "logical-block":
      return this.logical_block;
    case "start-pos":
      return this.start_pos;
    case "end-pos":
      return this.end_pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.pprint.start-block-t{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", 
  "logical-block", -581022564), this.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), this.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$ = !0;
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, this.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.start_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 4 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_imap.call(null, this);
};
cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  var c = this;
  return cljs.core.truth_(function() {
    if (cljs.core.truth_(b)) {
      var a = c.constructor === b.constructor;
      return a ? cljs.core.equiv_map.call(null, c, b) : a;
    }
    return b;
  }()) ? !0 : !1;
};
cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, 
  cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.start_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), b)) ? new cljs.pprint.start_block_t(c, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), b)) ? new cljs.pprint.start_block_t(this.type_tag, c, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), b)) ? new cljs.pprint.start_block_t(this.type_tag, this.logical_block, c, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), b)) ? new cljs.pprint.start_block_t(this.type_tag, this.logical_block, this.start_pos, c, this.__meta, this.__extmap, null) : new cljs.pprint.start_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.assoc.call(null, 
  this.__extmap, b, c), null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), this.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.start_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, b, this.__extmap, this.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? cljs.core._assoc.call(null, this, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.start_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.start_block_t.cljs$lang$type = !0;
cljs.pprint.start_block_t.cljs$lang$ctorPrSeq = function(a) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/start-block-t");
};
cljs.pprint.start_block_t.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/start-block-t");
};
cljs.pprint.__GT_start_block_t = function(a, b, c, d) {
  return new cljs.pprint.start_block_t(a, b, c, d, null, null, null);
};
cljs.pprint.map__GT_start_block_t = function(a) {
  return new cljs.pprint.start_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, 
  "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_start_block_t = function(a, b, c) {
  return new cljs.pprint.start_block_t(new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), a, b, c, null, null, null);
};
cljs.pprint.start_block_t_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594));
};
cljs.pprint.end_block_t = function(a, b, c, d, e, f, g) {
  this.type_tag = a;
  this.logical_block = b;
  this.start_pos = c;
  this.end_pos = d;
  this.__meta = e;
  this.__extmap = f;
  this.__hash = g;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.call(null, this, b, null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
      return this.type_tag;
    case "logical-block":
      return this.logical_block;
    case "start-pos":
      return this.start_pos;
    case "end-pos":
      return this.end_pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.pprint.end-block-t{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", 
  "logical-block", -581022564), this.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), this.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$ = !0;
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, this.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.end_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 4 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_imap.call(null, this);
};
cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  var c = this;
  return cljs.core.truth_(function() {
    if (cljs.core.truth_(b)) {
      var a = c.constructor === b.constructor;
      return a ? cljs.core.equiv_map.call(null, c, b) : a;
    }
    return b;
  }()) ? !0 : !1;
};
cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, 
  cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.end_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), b)) ? new cljs.pprint.end_block_t(c, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), b)) ? new cljs.pprint.end_block_t(this.type_tag, c, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), b)) ? new cljs.pprint.end_block_t(this.type_tag, this.logical_block, c, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), b)) ? new cljs.pprint.end_block_t(this.type_tag, this.logical_block, this.start_pos, c, this.__meta, this.__extmap, null) : new cljs.pprint.end_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.assoc.call(null, 
  this.__extmap, b, c), null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), this.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.end_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, b, this.__extmap, this.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? cljs.core._assoc.call(null, this, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.end_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.end_block_t.cljs$lang$type = !0;
cljs.pprint.end_block_t.cljs$lang$ctorPrSeq = function(a) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/end-block-t");
};
cljs.pprint.end_block_t.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/end-block-t");
};
cljs.pprint.__GT_end_block_t = function(a, b, c, d) {
  return new cljs.pprint.end_block_t(a, b, c, d, null, null, null);
};
cljs.pprint.map__GT_end_block_t = function(a) {
  return new cljs.pprint.end_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, 
  "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_end_block_t = function(a, b, c) {
  return new cljs.pprint.end_block_t(new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), a, b, c, null, null, null);
};
cljs.pprint.end_block_t_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735));
};
cljs.pprint.indent_t = function(a, b, c, d, e, f, g, h, k) {
  this.type_tag = a;
  this.logical_block = b;
  this.relative_to = c;
  this.offset = d;
  this.start_pos = e;
  this.end_pos = f;
  this.__meta = g;
  this.__extmap = h;
  this.__hash = k;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.call(null, this, b, null);
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
      return this.type_tag;
    case "logical-block":
      return this.logical_block;
    case "relative-to":
      return this.relative_to;
    case "offset":
      return this.offset;
    case "start-pos":
      return this.start_pos;
    case "end-pos":
      return this.end_pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.pprint.indent-t{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", 
  "logical-block", -581022564), this.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), this.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), this.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), this.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IIterable$ = !0;
cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", 
  "end-pos", -1643883926)], null), cljs.core._iterator.call(null, this.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, this.offset, this.start_pos, this.end_pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 6 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_imap.call(null, this);
};
cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  var c = this;
  return cljs.core.truth_(function() {
    if (cljs.core.truth_(b)) {
      var a = c.constructor === b.constructor;
      return a ? cljs.core.equiv_map.call(null, c, b) : a;
    }
    return b;
  }()) ? !0 : !1;
};
cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, this.offset, this.start_pos, this.end_pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), b)) ? new cljs.pprint.indent_t(c, this.logical_block, this.relative_to, this.offset, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), b)) ? new cljs.pprint.indent_t(this.type_tag, c, this.relative_to, this.offset, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : 
  cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), b)) ? new cljs.pprint.indent_t(this.type_tag, this.logical_block, c, this.offset, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), b)) ? new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, c, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), b)) ? new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, this.offset, c, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), b)) ? new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, this.offset, this.start_pos, c, this.__meta, this.__extmap, null) : new cljs.pprint.indent_t(this.type_tag, 
  this.logical_block, this.relative_to, this.offset, this.start_pos, this.end_pos, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), this.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), this.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), this.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, this.offset, this.start_pos, this.end_pos, b, this.__extmap, this.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? cljs.core._assoc.call(null, this, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.indent_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "relative-to", "relative-to", 1170431476, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", 
  -3352399, null)], null);
};
cljs.pprint.indent_t.cljs$lang$type = !0;
cljs.pprint.indent_t.cljs$lang$ctorPrSeq = function(a) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/indent-t");
};
cljs.pprint.indent_t.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/indent-t");
};
cljs.pprint.__GT_indent_t = function(a, b, c, d, e, f) {
  return new cljs.pprint.indent_t(a, b, c, d, e, f, null, null, null);
};
cljs.pprint.map__GT_indent_t = function(a) {
  return new cljs.pprint.indent_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-pos", "start-pos", 
  668789086)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 
  668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_indent_t = function(a, b, c, d, e) {
  return new cljs.pprint.indent_t(new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), a, b, c, d, e, null, null, null);
};
cljs.pprint.indent_t_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969));
};
cljs.pprint.pp_newline = function() {
  return "\n";
};
cljs.pprint.emit_nl;
"undefined" === typeof cljs.pprint.write_token && (cljs.pprint.write_token = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "write-token"), function(a, b, c, d, e) {
    return function(a, b) {
      return (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(b);
    };
  }(a, b, c, d, e), new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), function(a, b) {
  var c = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  cljs.core.truth_(c) && c.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
  var c = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b), d = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(c);
  cljs.core.truth_(d) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), d);
  d = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(c), d);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(c), d);
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), function(a, b) {
  var c = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  cljs.core.truth_(c) && c.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  c = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b));
  return cljs.core.truth_(c) ? cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c) : null;
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), function(a, b) {
  var c = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(c), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(b) + function() {
    var d = cljs.core._EQ_, e = (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(b);
    if (cljs.core.truth_(d.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), e))) {
      return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(c));
    }
    if (cljs.core.truth_(d.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), e))) {
      return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))));
    }
    throw Error([cljs.core.str("No matching clause: "), cljs.core.str(e)].join(""));
  }());
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), function(a, b) {
  return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(b));
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), function(a, b) {
  if (cljs.core.truth_(function() {
    var a = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(b), new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336));
    return a ? a : (a = !cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(b), new cljs.core.Keyword(null, "fill", "fill", 883462889))) ? cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b))) : a;
  }())) {
    cljs.pprint.emit_nl.call(null, a, b);
  } else {
    var c = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
    cljs.core.truth_(c) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c);
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
});
cljs.pprint.write_tokens = function(a, b, c) {
  b = cljs.core.seq.call(null, b);
  for (var d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = cljs.core._nth.call(null, d, f);
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(g), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
        var h = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
        cljs.core.truth_(h) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), h);
      }
      cljs.pprint.write_token.call(null, a, g);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(g));
      g = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
      cljs.core.truth_(cljs.core.truth_(c) ? g : c) && (cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), g), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null));
      f += 1;
    } else {
      if (b = cljs.core.seq.call(null, b)) {
        cljs.core.chunked_seq_QMARK_.call(null, b) ? (d = cljs.core.chunk_first.call(null, b), b = cljs.core.chunk_rest.call(null, b), g = d, e = cljs.core.count.call(null, d), d = g) : (g = cljs.core.first.call(null, b), cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(g), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114)) || (d = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
        cljs.core.deref.call(null, a))), cljs.core.truth_(d) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), d)), cljs.pprint.write_token.call(null, a, g), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", 
        "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(g)), g = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), cljs.core.truth_(cljs.core.truth_(c) ? g : c) && (cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), g), cljs.core.swap_BANG_.call(null, 
        cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null)), b = cljs.core.next.call(null, b), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.pprint.tokens_fit_QMARK_ = function(a, b) {
  var c = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))));
  return null == c || cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)))) + cljs.pprint.buffer_length.call(null, b) < c;
};
cljs.pprint.linear_nl_QMARK_ = function(a, b, c) {
  b = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(b));
  return cljs.core.truth_(b) ? b : cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, a, c));
};
cljs.pprint.miser_nl_QMARK_ = function(a, b, c) {
  var d = cljs.pprint.get_miser_width.call(null, a), e = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))));
  return cljs.core.truth_(d) ? cljs.core.truth_(e) ? (d = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(b)) >= e - d) ? cljs.pprint.linear_nl_QMARK_.call(null, a, b, c) : d : e : d;
};
"undefined" === typeof cljs.pprint.emit_nl_QMARK_ && (cljs.pprint.emit_nl_QMARK_ = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "emit-nl?"), function(a, b, c, d, e) {
    return function(a, b, c, d) {
      return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(a);
    };
  }(a, b, c, d, e), new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "linear", "linear", 872268697), function(a, b, c, d) {
  a = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a);
  return cljs.pprint.linear_nl_QMARK_.call(null, b, a, c);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "miser", "miser", -556060186), function(a, b, c, d) {
  a = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a);
  return cljs.pprint.miser_nl_QMARK_.call(null, b, a, c);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "fill", "fill", 883462889), function(a, b, c, d) {
  a = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a);
  var e = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(a));
  return cljs.core.truth_(e) ? e : (d = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, b, d))) ? d : cljs.pprint.miser_nl_QMARK_.call(null, b, a, c);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), function(a, b, c, d) {
  return !0;
});
cljs.pprint.get_section = function(a) {
  var b = cljs.core.first.call(null, a), c = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b), b = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(a, b) {
    return function(a) {
      return cljs.core.not.call(null, function() {
        var c = cljs.pprint.nl_t_QMARK_.call(null, a);
        return cljs.core.truth_(c) ? cljs.pprint.ancestor_QMARK_.call(null, (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a), b) : c;
      }());
    };
  }(b, c), cljs.core.next.call(null, a)));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, b) + 1, a))], null);
};
cljs.pprint.get_sub_section = function(a) {
  var b = cljs.core.first.call(null, a), c = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b);
  return cljs.core.seq.call(null, cljs.core.take_while.call(null, function(a, b) {
    return function(a) {
      var c = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a);
      return cljs.core.not.call(null, function() {
        var d = cljs.pprint.nl_t_QMARK_.call(null, a);
        return cljs.core.truth_(d) ? (d = cljs.core._EQ_.call(null, c, b)) ? d : cljs.pprint.ancestor_QMARK_.call(null, c, b) : d;
      }());
    };
  }(b, c), cljs.core.next.call(null, a)));
};
cljs.pprint.update_nl_state = function(a) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(a), !0);
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(a), !0);
  for (a = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(a);;) {
    if (cljs.core.truth_(a)) {
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(a), !0), cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(a), !0), a = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(a);
    } else {
      return null;
    }
  }
};
cljs.pprint.emit_nl = function(a, b) {
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), cljs.pprint.pp_newline.call(null));
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  var c = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b), d = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(c);
  cljs.core.truth_(d) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), d);
  d = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(c)) - cljs.core.count.call(null, d), " "));
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), d);
  return cljs.pprint.update_nl_state.call(null, c);
};
cljs.pprint.split_at_newline = function(a) {
  var b = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(a) {
    return cljs.core.not.call(null, cljs.pprint.nl_t_QMARK_.call(null, a));
  }, a));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, b), a))], null);
};
cljs.pprint.write_token_string = function cljs$pprint$write_token_string(b, c) {
  var d = cljs.pprint.split_at_newline.call(null, c), e = cljs.core.nth.call(null, d, 0, null), f = cljs.core.nth.call(null, d, 1, null);
  cljs.core.truth_(e) && cljs.pprint.write_tokens.call(null, b, e, !1);
  if (cljs.core.truth_(f)) {
    var d = cljs.pprint.get_section.call(null, f), e = cljs.core.nth.call(null, d, 0, null), d = cljs.core.nth.call(null, d, 1, null), g = cljs.core.first.call(null, f), h = cljs.pprint.emit_nl_QMARK_.call(null, g, b, e, cljs.pprint.get_sub_section.call(null, f));
    cljs.core.truth_(h) && (cljs.pprint.emit_nl.call(null, b, g), f = cljs.core.next.call(null, f));
    cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, b, f)) ? (f = cljs$pprint$write_token_string.call(null, b, e), cljs.core._EQ_.call(null, f, e) ? (cljs.pprint.write_tokens.call(null, b, e, !1), e = d) : e = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, f, d))) : e = f;
    return e;
  }
  return null;
};
cljs.pprint.write_line = function(a) {
  for (var b = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));;) {
    if (cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, b)), cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, a, b))) {
      var c = cljs.pprint.write_token_string.call(null, a, b);
      if (b !== c) {
        b = c;
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.pprint.add_to_buffer = function(a, b) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), b));
  return cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, a, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))))) ? cljs.pprint.write_line.call(null, a) : null;
};
cljs.pprint.write_buffered_output = function(a) {
  cljs.pprint.write_line.call(null, a);
  var b = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  return cljs.core.truth_(b) ? (cljs.pprint.write_tokens.call(null, a, b, !0), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY)) : null;
};
cljs.pprint.write_white_space = function(a) {
  var b = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  return cljs.core.truth_(b) ? (cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), b), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null)) : null;
};
cljs.pprint.write_initial_lines = function(a, b) {
  var c = clojure.string.split.call(null, b, "\n", -1);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, c), 1)) {
    return b;
  }
  var d = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))))), e = cljs.core.first.call(null, c);
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))))) {
    var f = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), g = f + cljs.core.count.call(null, e);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), g);
    cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_buffer_blob.call(null, e, null, f, g));
    cljs.pprint.write_buffered_output.call(null, a);
  } else {
    cljs.pprint.write_white_space.call(null, a), cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), e);
  }
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), "\n");
  for (var e = cljs.core.seq.call(null, cljs.core.next.call(null, cljs.core.butlast.call(null, c))), f = null, h = g = 0;;) {
    if (h < g) {
      var k = cljs.core._nth.call(null, f, h);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), k);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), cljs.pprint.pp_newline.call(null));
      cljs.core.truth_(d) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), d);
      h += 1;
    } else {
      if (e = cljs.core.seq.call(null, e)) {
        f = e, cljs.core.chunked_seq_QMARK_.call(null, f) ? (e = cljs.core.chunk_first.call(null, f), h = cljs.core.chunk_rest.call(null, f), f = e, g = cljs.core.count.call(null, e), e = h) : (e = cljs.core.first.call(null, f), cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), e), cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
        cljs.core.deref.call(null, a))), cljs.pprint.pp_newline.call(null)), cljs.core.truth_(d) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), d), e = cljs.core.next.call(null, f), f = null, g = 0), h = 0;
      } else {
        break;
      }
    }
  }
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), new cljs.core.Keyword(null, "writing", "writing", -1486865108));
  return cljs.core.last.call(null, c);
};
cljs.pprint.p_write_char = function(a, b) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    return cljs.pprint.write_white_space.call(null, a), cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), b);
  }
  if (cljs.core._EQ_.call(null, b, "\n")) {
    return cljs.pprint.write_initial_lines.call(null, a, "\n");
  }
  var c = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), d = c + 1;
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), d);
  return cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_buffer_blob.call(null, cljs.core.char$.call(null, b), null, c, d));
};
cljs.pprint.pretty_writer = function cljs$pprint$pretty_writer(b, c, d) {
  var e = new cljs.pprint.logical_block(null, null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, !1), cljs.core.atom.call(null, !1), null, null, null, null, null, null, null), f = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "buffer-block", "buffer-block", -10937307), 
  new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267), new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "pos", "pos", -864607220), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "buffer-level", "buffer-level", 928864731), new cljs.core.Keyword(null, "buffer", 
  "buffer", 617295198)], [e, d, e, !0, null, new cljs.core.Keyword(null, "writing", "writing", -1486865108), 0, null, cljs.pprint.column_writer.call(null, b, c), 1, cljs.core.PersistentVector.EMPTY]));
  "undefined" === typeof cljs.pprint.t_cljs$pprint20323 && (cljs.pprint.t_cljs$pprint20323 = function(b, c, d, e, f, n, p) {
    this.pretty_writer = b;
    this.writer = c;
    this.max_columns = d;
    this.miser_width = e;
    this.lb = f;
    this.fields = n;
    this.meta20324 = p;
    this.cljs$lang$protocol_mask$partition0$ = 1074167808;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.pprint.t_cljs$pprint20323.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b, c) {
    return function(b, c) {
      return new cljs.pprint.t_cljs$pprint20323(this.pretty_writer, this.writer, this.max_columns, this.miser_width, this.lb, this.fields, c);
    };
  }(e, f), cljs.pprint.t_cljs$pprint20323.prototype.cljs$core$IMeta$_meta$arity$1 = function(b, c) {
    return function(b) {
      return this.meta20324;
    };
  }(e, f), cljs.pprint.t_cljs$pprint20323.prototype.cljs$core$IDeref$_deref$arity$1 = function(b, c) {
    return function(b) {
      return this.fields;
    };
  }(e, f), cljs.pprint.t_cljs$pprint20323.prototype.cljs$core$IWriter$_write$arity$2 = function(b, c) {
    return function(b, c) {
      var d = cljs.core._EQ_, e = cljs.core.type.call(null, c);
      if (cljs.core.truth_(d.call(null, String, e))) {
        var f = cljs.pprint.write_initial_lines.call(null, this, c), d = clojure.string.replace_first.call(null, f, /\s+$/, ""), e = cljs.core.subs.call(null, f, cljs.core.count.call(null, d)), g = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this)));
        if (cljs.core._EQ_.call(null, g, new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
          return cljs.pprint.write_white_space.call(null, this), cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this))), d), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), e);
        }
        g = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this)));
        f = g + cljs.core.count.call(null, f);
        cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), f);
        return cljs.pprint.add_to_buffer.call(null, this, cljs.pprint.make_buffer_blob.call(null, d, e, g, f));
      }
      if (cljs.core.truth_(d.call(null, Number, e))) {
        return cljs.pprint.p_write_char.call(null, this, c);
      }
      throw Error([cljs.core.str("No matching clause: "), cljs.core.str(e)].join(""));
    };
  }(e, f), cljs.pprint.t_cljs$pprint20323.prototype.cljs$core$IWriter$_flush$arity$1 = function(b, c) {
    return function(b) {
      cljs.pprint._ppflush.call(null, this);
      return cljs.core._flush.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this))));
    };
  }(e, f), cljs.pprint.t_cljs$pprint20323.prototype.cljs$pprint$IPrettyFlush$ = !0, cljs.pprint.t_cljs$pprint20323.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 = function(b, c) {
    return function(b) {
      return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this))), new cljs.core.Keyword(null, "buffering", "buffering", -876713613)) ? (cljs.pprint.write_tokens.call(null, this, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this))), !0), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, 
      this), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY)) : cljs.pprint.write_white_space.call(null, this);
    };
  }(e, f), cljs.pprint.t_cljs$pprint20323.getBasis = function(b, c) {
    return function() {
      return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "pretty-writer", "pretty-writer", 417697260, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), !0, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null)], null)))], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null), 
      new cljs.core.Symbol(null, "lb", "lb", 950310490, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta20324", "meta20324", 1128071656, null)], null);
    };
  }(e, f), cljs.pprint.t_cljs$pprint20323.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint20323.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint20323", cljs.pprint.t_cljs$pprint20323.cljs$lang$ctorPrWriter = function(b, c) {
    return function(b, c, d) {
      return cljs.core._write.call(null, c, "cljs.pprint/t_cljs$pprint20323");
    };
  }(e, f), cljs.pprint.__GT_t_cljs$pprint20323 = function(b, c) {
    return function(b, c, d, e, f, g, h) {
      return new cljs.pprint.t_cljs$pprint20323(b, c, d, e, f, g, h);
    };
  }(e, f));
  return new cljs.pprint.t_cljs$pprint20323(cljs$pprint$pretty_writer, b, c, d, e, f, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.start_block = function(a, b, c, d) {
  c = new cljs.pprint.logical_block((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, !1), cljs.core.atom.call(null, !1), b, c, d, null, null, null, null);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), c);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    return cljs.pprint.write_white_space.call(null, a), d = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), cljs.core.truth_(d) && d.call(null, new cljs.core.Keyword(null, "start", "start", -355208981)), cljs.core.truth_(b) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
    cljs.core.deref.call(null, a))), b), a = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)))), cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(c), a), cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(c), a);
  }
  d = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  b = d + (cljs.core.truth_(b) ? cljs.core.count.call(null, b) : 0);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), b);
  return cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_start_block_t.call(null, c, d, b));
};
cljs.pprint.end_block = function(a) {
  var b = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(b);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, a);
    cljs.core.truth_(c) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c);
    var d = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
    cljs.core.truth_(d) && d.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  } else {
    d = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c = d + (cljs.core.truth_(c) ? cljs.core.count.call(null, c) : 0), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), c), cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_end_block_t.call(null, b, d, c));
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(b));
};
cljs.pprint.nl = function(a, b) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "buffering", "buffering", -876713613));
  var c = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  return cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_nl_t.call(null, b, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c, c));
};
cljs.pprint.indent = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    return cljs.pprint.write_white_space.call(null, a), cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(d), c + function() {
      var c = cljs.core._EQ_;
      if (cljs.core.truth_(c.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), b))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(d));
      }
      if (cljs.core.truth_(c.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), b))) {
        return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))));
      }
      throw Error([cljs.core.str("No matching clause: "), cljs.core.str(b)].join(""));
    }());
  }
  var e = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  return cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_indent_t.call(null, d, b, c, e, e));
};
cljs.pprint.get_miser_width = function(a) {
  return (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
};
cljs.pprint._STAR_print_pretty_STAR_ = !0;
"undefined" === typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ && (cljs.pprint._STAR_print_pprint_dispatch_STAR_ = null);
cljs.pprint._STAR_print_right_margin_STAR_ = 72;
cljs.pprint._STAR_print_miser_width_STAR_ = 40;
cljs.pprint._STAR_print_lines_STAR_ = null;
cljs.pprint._STAR_print_circle_STAR_ = null;
cljs.pprint._STAR_print_shared_STAR_ = null;
cljs.pprint._STAR_print_suppress_namespaces_STAR_ = null;
cljs.pprint._STAR_print_radix_STAR_ = null;
cljs.pprint._STAR_print_base_STAR_ = 10;
cljs.pprint._STAR_current_level_STAR_ = 0;
cljs.pprint._STAR_current_length_STAR_ = null;
cljs.pprint.format_simple_number;
cljs.pprint.write_option_table = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306), new cljs.core.Keyword(null, "circle", "circle", 1903212362), new cljs.core.Keyword(null, "lines", "lines", -700165781), new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956), new cljs.core.Keyword(null, "radix", "radix", 857016463), new cljs.core.Keyword(null, 
"level", "level", 1290497552), new cljs.core.Keyword(null, "readably", "readably", 1129599760), new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009), new cljs.core.Keyword(null, "length", "length", 588987862), new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), new cljs.core.Keyword(null, "base", "base", 185279322)], [new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_miser_width_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-miser-width*", "cljs.pprint/*print-miser-width*", 1588913450, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-miser-width*", "*print-miser-width*", 
1206624211, null), "/Users/collinbell/Projects/t-413/face/target/cljsbuild-compiler-0/cljs/pprint.cljs", 21, 1, !0, 632, 637, cljs.core.List.EMPTY, "The column at which to enter miser style. Depending on the dispatch table,\nmiser style add newlines in more places to try to keep lines short allowing for further\nlevels of nesting.", cljs.core.truth_(cljs.pprint._STAR_print_miser_width_STAR_) ? cljs.pprint._STAR_print_miser_width_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_right_margin_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-right-margin*", "cljs.pprint/*print-right-margin*", -56183119, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-right-margin*", "*print-right-margin*", 
-437272454, null), "/Users/collinbell/Projects/t-413/face/target/cljsbuild-compiler-0/cljs/pprint.cljs", 22, 1, !0, 625, 630, cljs.core.List.EMPTY, "Pretty printing will try to avoid anything going beyond this column.\nSet it to nil to have pprint let the line be arbitrarily long. This will ignore all\nnon-mandatory newlines.", cljs.core.truth_(cljs.pprint._STAR_print_right_margin_STAR_) ? cljs.pprint._STAR_print_right_margin_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_circle_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-circle*", "cljs.pprint/*print-circle*", 1606185849, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [!0, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-circle*", "*print-circle*", 
1148404994, null), "/Users/collinbell/Projects/t-413/face/target/cljsbuild-compiler-0/cljs/pprint.cljs", 15, 1, !0, 646, 649, cljs.core.List.EMPTY, "Mark circular structures (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_circle_STAR_) ? cljs.pprint._STAR_print_circle_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_lines_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-lines*", "cljs.pprint/*print-lines*", 534683484, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [!0, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-lines*", "*print-lines*", 
75920659, null), "/Users/collinbell/Projects/t-413/face/target/cljsbuild-compiler-0/cljs/pprint.cljs", 14, 1, !0, 640, 643, cljs.core.List.EMPTY, "Maximum number of lines to print in a pretty print instance (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_lines_STAR_) ? cljs.pprint._STAR_print_lines_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_suppress_namespaces_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-suppress-namespaces*", "cljs.pprint/*print-suppress-namespaces*", 1649488204, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", 
"column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-suppress-namespaces*", 
"*print-suppress-namespaces*", 1795828355, null), "/Users/collinbell/Projects/t-413/face/target/cljsbuild-compiler-0/cljs/pprint.cljs", 28, 1, !0, 657, 661, cljs.core.List.EMPTY, "Don't print namespaces with symbols. This is particularly useful when\npretty printing the results of macro expansions", cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_) ? cljs.pprint._STAR_print_suppress_namespaces_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_radix_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-radix*", "cljs.pprint/*print-radix*", 1558253641, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-radix*", "*print-radix*", 1168517744, null), "/Users/collinbell/Projects/t-413/face/target/cljsbuild-compiler-0/cljs/pprint.cljs", 
14, 1, !0, 665, 670, cljs.core.List.EMPTY, "Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\nor 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\nradix specifier is in the form #XXr where XX is the decimal value of *print-base* ", cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? cljs.pprint._STAR_print_radix_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_level_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-level*", "cljs.core/*print-level*", 65848482, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-level*", "*print-level*", -634488505, null), "cljs/core.cljs", 16, 
1, !0, 114, 125, cljs.core.List.EMPTY, "*print-level* controls how many levels deep the printer will\n  print nested objects. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  level to print. Each argument to print is at level 0; if an argument is a\n  collection, its items are at level 1; and so on. If an object is a\n  collection and is at a level greater than or equal to the value bound to\n  *print-level*, the printer prints '#' to represent it. The root binding\n  is nil indicating no limit.", 
new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["@type {null|number}"], null), cljs.core.truth_(cljs.core._STAR_print_level_STAR_) ? cljs.core._STAR_print_level_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_readably_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-readably*", "cljs.core/*print-readably*", -354670250, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-readably*", "*print-readably*", -761361221, null), "cljs/core.cljs", 19, 1, !0, 81, 87, cljs.core.List.EMPTY, 
"When set to logical false, strings and characters will be printed with\n  non-alphanumeric characters converted to the appropriate escape sequences.\n\n  Defaults to true", cljs.core.truth_(cljs.core._STAR_print_readably_STAR_) ? cljs.core._STAR_print_readably_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pprint_dispatch_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pprint-dispatch*", "cljs.pprint/*print-pprint-dispatch*", -1820734013, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pprint-dispatch*", 
"*print-pprint-dispatch*", -1709114492, null), "/Users/collinbell/Projects/t-413/face/target/cljsbuild-compiler-0/cljs/pprint.cljs", 25, 1, !0, 619, 623, cljs.core.List.EMPTY, "The pretty print dispatch function. Use with-pprint-dispatch or\nset-pprint-dispatch to modify.", cljs.core.truth_(cljs.pprint._STAR_print_pprint_dispatch_STAR_) ? cljs.pprint._STAR_print_pprint_dispatch_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_length_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-length*", "cljs.core/*print-length*", -20766927, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-length*", "*print-length*", -687693654, null), "cljs/core.cljs", 
17, 1, !0, 105, 112, cljs.core.List.EMPTY, "When set to logical true, objects will be printed in a way that preserves\n  their type when read in later.\n\n  Defaults to false.", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["@type {null|number}"], null), cljs.core.truth_(cljs.core._STAR_print_length_STAR_) ? cljs.core._STAR_print_length_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pretty_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pretty*", "cljs.pprint/*print-pretty*", -762636861, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pretty*", "*print-pretty*", 726795140, null), "/Users/collinbell/Projects/t-413/face/target/cljsbuild-compiler-0/cljs/pprint.cljs", 
16, 1, !0, 615, 617, cljs.core.List.EMPTY, "Bind to true if you want write to use pretty printing", cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_) ? cljs.pprint._STAR_print_pretty_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_base_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-base*", "cljs.pprint/*print-base*", 1887526790, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-base*", "*print-base*", 2037937791, null), "/Users/collinbell/Projects/t-413/face/target/cljsbuild-compiler-0/cljs/pprint.cljs", 
13, 1, !0, 672, 675, cljs.core.List.EMPTY, "The base to use for printing integers and rationals.", cljs.core.truth_(cljs.pprint._STAR_print_base_STAR_) ? cljs.pprint._STAR_print_base_STAR_.cljs$lang$test : null]))]);
cljs.pprint.table_ize = function(a, b) {
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(b) {
    var d = cljs.core.get.call(null, a, cljs.core.key.call(null, b));
    return cljs.core.truth_(d) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, cljs.core.val.call(null, b)], null) : null;
  }, b));
};
cljs.pprint.pretty_writer_QMARK_ = function(a) {
  var b = null != a ? a.cljs$lang$protocol_mask$partition0$ & 32768 || a.cljs$core$IDeref$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, a) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, a);
  return b ? (new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))) : b;
};
cljs.pprint.make_pretty_writer = function(a, b, c) {
  return cljs.pprint.pretty_writer.call(null, a, b, c);
};
cljs.pprint.write_out = function(a) {
  var b;
  b = cljs.pprint._STAR_current_length_STAR_;
  cljs.core.truth_(b) && (b = cljs.core._STAR_print_length_STAR_, b = cljs.core.truth_(b) ? cljs.pprint._STAR_current_length_STAR_ >= cljs.core._STAR_print_length_STAR_ : b);
  cljs.core.not.call(null, cljs.pprint._STAR_print_pretty_STAR_) ? cljs.pprint.pr.call(null, a) : cljs.core.truth_(b) ? cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...") : (cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_) && (cljs.pprint._STAR_current_length_STAR_ += 1), cljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null, a));
  return b;
};
cljs.pprint.write = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stream", "stream", 1534941648), !0], null), cljs.core.apply.call(null, cljs.core.hash_map, b)), d = cljs.pprint._STAR_print_base_STAR_, e = cljs.pprint._STAR_print_circle_STAR_, f = cljs.core._STAR_print_length_STAR_, g = cljs.core._STAR_print_level_STAR_, h = cljs.pprint._STAR_print_lines_STAR_, k = cljs.pprint._STAR_print_miser_width_STAR_, m = cljs.pprint._STAR_print_pprint_dispatch_STAR_, 
  l = cljs.pprint._STAR_print_pretty_STAR_, n = cljs.pprint._STAR_print_radix_STAR_, p = cljs.core._STAR_print_readably_STAR_, q = cljs.pprint._STAR_print_right_margin_STAR_, r = cljs.pprint._STAR_print_suppress_namespaces_STAR_;
  cljs.pprint._STAR_print_base_STAR_ = (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$2(c, cljs.pprint._STAR_print_base_STAR_);
  cljs.pprint._STAR_print_circle_STAR_ = (new cljs.core.Keyword(null, "circle", "circle", 1903212362)).cljs$core$IFn$_invoke$arity$2(c, cljs.pprint._STAR_print_circle_STAR_);
  cljs.core._STAR_print_length_STAR_ = (new cljs.core.Keyword(null, "length", "length", 588987862)).cljs$core$IFn$_invoke$arity$2(c, cljs.core._STAR_print_length_STAR_);
  cljs.core._STAR_print_level_STAR_ = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$2(c, cljs.core._STAR_print_level_STAR_);
  cljs.pprint._STAR_print_lines_STAR_ = (new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$2(c, cljs.pprint._STAR_print_lines_STAR_);
  cljs.pprint._STAR_print_miser_width_STAR_ = (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$2(c, cljs.pprint._STAR_print_miser_width_STAR_);
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$2(c, cljs.pprint._STAR_print_pprint_dispatch_STAR_);
  cljs.pprint._STAR_print_pretty_STAR_ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$2(c, cljs.pprint._STAR_print_pretty_STAR_);
  cljs.pprint._STAR_print_radix_STAR_ = (new cljs.core.Keyword(null, "radix", "radix", 857016463)).cljs$core$IFn$_invoke$arity$2(c, cljs.pprint._STAR_print_radix_STAR_);
  cljs.core._STAR_print_readably_STAR_ = (new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$2(c, cljs.core._STAR_print_readably_STAR_);
  cljs.pprint._STAR_print_right_margin_STAR_ = (new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306)).cljs$core$IFn$_invoke$arity$2(c, cljs.pprint._STAR_print_right_margin_STAR_);
  cljs.pprint._STAR_print_suppress_namespaces_STAR_ = (new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956)).cljs$core$IFn$_invoke$arity$2(c, cljs.pprint._STAR_print_suppress_namespaces_STAR_);
  try {
    var t = new goog.string.StringBuffer, u = cljs.core.contains_QMARK_.call(null, c, new cljs.core.Keyword(null, "stream", "stream", 1534941648)) ? (new cljs.core.Keyword(null, "stream", "stream", 1534941648)).cljs$core$IFn$_invoke$arity$1(c) : !0, v = !0 === u || null == u ? new cljs.core.StringBufferWriter(t) : u;
    if (cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)) {
      var w = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, v)), x = cljs.core._STAR_out_STAR_;
      cljs.core._STAR_out_STAR_ = w ? cljs.pprint.make_pretty_writer.call(null, v, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : v;
      try {
        cljs.pprint.write_out.call(null, a), cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.core._STAR_out_STAR_ = x;
      }
    } else {
      var y = cljs.core._STAR_out_STAR_;
      cljs.core._STAR_out_STAR_ = v;
      try {
        cljs.pprint.pr.call(null, a);
      } finally {
        cljs.core._STAR_out_STAR_ = y;
      }
    }
    !0 === u && cljs.core._STAR_print_fn_STAR_.call(null, "" + cljs.core.str(t));
    return null == u ? "" + cljs.core.str(t) : null;
  } finally {
    cljs.pprint._STAR_print_suppress_namespaces_STAR_ = r, cljs.pprint._STAR_print_right_margin_STAR_ = q, cljs.core._STAR_print_readably_STAR_ = p, cljs.pprint._STAR_print_radix_STAR_ = n, cljs.pprint._STAR_print_pretty_STAR_ = l, cljs.pprint._STAR_print_pprint_dispatch_STAR_ = m, cljs.pprint._STAR_print_miser_width_STAR_ = k, cljs.pprint._STAR_print_lines_STAR_ = h, cljs.core._STAR_print_level_STAR_ = g, cljs.core._STAR_print_length_STAR_ = f, cljs.pprint._STAR_print_circle_STAR_ = e, cljs.pprint._STAR_print_base_STAR_ = 
    d;
  }
};
cljs.pprint.write.cljs$lang$maxFixedArity = 1;
cljs.pprint.write.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.pprint.pprint = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var b = new goog.string.StringBuffer, c = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(b);
  try {
    return cljs.pprint.pprint.call(null, a, cljs.core._STAR_out_STAR_), cljs.core._STAR_print_fn_STAR_.call(null, "" + cljs.core.str(b));
  } finally {
    cljs.core._STAR_out_STAR_ = c;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, b)), d = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = c ? cljs.pprint.make_pretty_writer.call(null, b, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : b;
  try {
    var e = cljs.pprint._STAR_print_pretty_STAR_;
    cljs.pprint._STAR_print_pretty_STAR_ = !0;
    try {
      cljs.pprint.write_out.call(null, a);
    } finally {
      cljs.pprint._STAR_print_pretty_STAR_ = e;
    }
    cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, cljs.core._STAR_out_STAR_)) || cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
    return cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
  } finally {
    cljs.core._STAR_out_STAR_ = d;
  }
};
cljs.pprint.pprint.cljs$lang$maxFixedArity = 2;
cljs.pprint.set_pprint_dispatch = function(a) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = a;
  return null;
};
cljs.pprint.check_enumerated_arg = function(a, b) {
  if (cljs.core.not.call(null, b.call(null, a))) {
    throw Error([cljs.core.str("Bad argument: "), cljs.core.str(a), cljs.core.str(". It must be one of "), cljs.core.str(b)].join(""));
  }
  return null;
};
cljs.pprint.level_exceeded = function() {
  var a = cljs.core._STAR_print_level_STAR_;
  return cljs.core.truth_(a) ? cljs.pprint._STAR_current_level_STAR_ >= cljs.core._STAR_print_level_STAR_ : a;
};
cljs.pprint.pprint_newline = function(a) {
  cljs.pprint.check_enumerated_arg.call(null, a, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), null, new cljs.core.Keyword(null, "miser", "miser", -556060186), null, new cljs.core.Keyword(null, "fill", "fill", 883462889), null, new cljs.core.Keyword(null, "linear", "linear", 872268697), null], null), null));
  return cljs.pprint.nl.call(null, cljs.core._STAR_out_STAR_, a);
};
cljs.pprint.pprint_indent = function(a, b) {
  cljs.pprint.check_enumerated_arg.call(null, a, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "block", "block", 664686210), null, new cljs.core.Keyword(null, "current", "current", -1088038603), null], null), null));
  return cljs.pprint.indent.call(null, cljs.core._STAR_out_STAR_, a, b);
};
cljs.pprint.pprint_tab = function(a, b, c) {
  cljs.pprint.check_enumerated_arg.call(null, a, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "line", "line", 212345235), null, new cljs.core.Keyword(null, "line-relative", "line-relative", 1149548219), null, new cljs.core.Keyword(null, "section-relative", "section-relative", -658298724), null], null), null));
  throw Error("pprint-tab is not yet implemented");
};
cljs.pprint.compile_format;
cljs.pprint.execute_format;
cljs.pprint.init_navigator;
cljs.pprint.cl_format = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  b = "string" === typeof b ? cljs.pprint.compile_format.call(null, b) : b;
  c = cljs.pprint.init_navigator.call(null, c);
  return cljs.pprint.execute_format.call(null, a, b, c);
};
cljs.pprint.cl_format.cljs$lang$maxFixedArity = 2;
cljs.pprint.cl_format.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.pprint._STAR_format_str_STAR_ = null;
cljs.pprint.format_error = function(a, b) {
  var c = [cljs.core.str(a), cljs.core.str("\n"), cljs.core.str(cljs.pprint._STAR_format_str_STAR_), cljs.core.str("\n"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, b, " "))), cljs.core.str("^"), cljs.core.str("\n")].join("");
  throw Error(c);
};
cljs.pprint.arg_navigator = function(a, b, c, d, e, f) {
  this.seq = a;
  this.rest = b;
  this.pos = c;
  this.__meta = d;
  this.__extmap = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.call(null, this, b, null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "seq":
      return this.seq;
    case "rest":
      return this.rest;
    case "pos":
      return this.pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.pprint.arg-navigator{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), this.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rest", "rest", -1241696419), 
  this.rest], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), this.pos], null)], null), this.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$ = !0;
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], null), cljs.core._iterator.call(null, this.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.arg_navigator(this.seq, this.rest, this.pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 3 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_imap.call(null, this);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  var c = this;
  return cljs.core.truth_(function() {
    if (cljs.core.truth_(b)) {
      var a = c.constructor === b.constructor;
      return a ? cljs.core.equiv_map.call(null, c, b) : a;
    }
    return b;
  }()) ? !0 : !1;
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pos", "pos", -864607220), null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.arg_navigator(this.seq, 
  this.rest, this.pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), b)) ? new cljs.pprint.arg_navigator(c, this.rest, this.pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), b)) ? new cljs.pprint.arg_navigator(this.seq, c, this.pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "pos", "pos", -864607220), b)) ? new cljs.pprint.arg_navigator(this.seq, 
  this.rest, c, this.__meta, this.__extmap, null) : new cljs.pprint.arg_navigator(this.seq, this.rest, this.pos, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), this.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rest", "rest", -1241696419), this.rest], null), new cljs.core.PersistentVector(null, 2, 
  5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), this.pos], null)], null), this.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.arg_navigator(this.seq, this.rest, this.pos, b, this.__extmap, this.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? cljs.core._assoc.call(null, this, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.arg_navigator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "pos", "pos", 775924307, null)], null);
};
cljs.pprint.arg_navigator.cljs$lang$type = !0;
cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq = function(a) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/arg-navigator");
};
cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/arg-navigator");
};
cljs.pprint.__GT_arg_navigator = function(a, b, c) {
  return new cljs.pprint.arg_navigator(a, b, c, null, null, null);
};
cljs.pprint.map__GT_arg_navigator = function(a) {
  return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", 
  -864607220)), null);
};
cljs.pprint.init_navigator = function(a) {
  a = cljs.core.seq.call(null, a);
  return new cljs.pprint.arg_navigator(a, a, 0, null, null, null);
};
cljs.pprint.next_arg = function(a) {
  var b = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(a);
  if (cljs.core.truth_(b)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, b), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.next.call(null, b), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a) + 1, null, null, null)], null);
  }
  throw Error("Not enough arguments for format definition");
};
cljs.pprint.next_arg_or_nil = function(a) {
  var b = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(a);
  return cljs.core.truth_(b) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, b), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.next.call(null, b), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a) + 1, null, null, null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 
  a], null);
};
cljs.pprint.get_format_arg = function(a) {
  var b = cljs.pprint.next_arg.call(null, a);
  a = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  a = "string" === typeof a ? cljs.pprint.compile_format.call(null, a) : a;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null);
};
cljs.pprint.relative_reposition;
cljs.pprint.absolute_reposition = function(a, b) {
  return b >= (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a) ? cljs.pprint.relative_reposition.call(null, a, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a) - b) : new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.drop.call(null, b, (new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a)), b, null, null, 
  null);
};
cljs.pprint.relative_reposition = function(a, b) {
  var c = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a) + b;
  return 0 > b ? cljs.pprint.absolute_reposition.call(null, a, c) : new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.drop.call(null, b, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(a)), c, null, null, null);
};
cljs.pprint.compiled_directive = function(a, b, c, d, e, f, g) {
  this.func = a;
  this.def = b;
  this.params = c;
  this.offset = d;
  this.__meta = e;
  this.__extmap = f;
  this.__hash = g;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.call(null, this, b, null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "func":
      return this.func;
    case "def":
      return this.def;
    case "params":
      return this.params;
    case "offset":
      return this.offset;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.pprint.compiled-directive{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), this.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "def", "def", 
  -1043430536), this.def], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), this.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), this.offset], null)], null), this.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$ = !0;
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core._iterator.call(null, this.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.compiled_directive(this.func, this.def, this.params, this.offset, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 4 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_imap.call(null, this);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  var c = this;
  return cljs.core.truth_(function() {
    if (cljs.core.truth_(b)) {
      var a = c.constructor === b.constructor;
      return a ? cljs.core.equiv_map.call(null, c, b) : a;
    }
    return b;
  }()) ? !0 : !1;
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "func", "func", -238706040), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "def", "def", -1043430536), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, 
  this), this.__meta), b) : new cljs.pprint.compiled_directive(this.func, this.def, this.params, this.offset, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "func", "func", -238706040), b)) ? new cljs.pprint.compiled_directive(c, this.def, this.params, this.offset, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "def", "def", -1043430536), b)) ? new cljs.pprint.compiled_directive(this.func, c, this.params, this.offset, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), 
  b)) ? new cljs.pprint.compiled_directive(this.func, this.def, c, this.offset, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), b)) ? new cljs.pprint.compiled_directive(this.func, this.def, this.params, c, this.__meta, this.__extmap, null) : new cljs.pprint.compiled_directive(this.func, this.def, this.params, this.offset, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), this.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "def", "def", -1043430536), this.def], null), new cljs.core.PersistentVector(null, 2, 
  5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), this.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), this.offset], null)], null), this.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.compiled_directive(this.func, this.def, this.params, this.offset, b, this.__extmap, this.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? cljs.core._assoc.call(null, this, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.compiled_directive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null)], null);
};
cljs.pprint.compiled_directive.cljs$lang$type = !0;
cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq = function(a) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/compiled-directive");
};
cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/compiled-directive");
};
cljs.pprint.__GT_compiled_directive = function(a, b, c, d) {
  return new cljs.pprint.compiled_directive(a, b, c, d, null, null, null);
};
cljs.pprint.map__GT_compiled_directive = function(a) {
  return new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "func", "func", -238706040), 
  new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)), null);
};
cljs.pprint.realize_parameter = function(a, b) {
  var c = cljs.core.nth.call(null, a, 0, null), d = cljs.core.nth.call(null, a, 1, null), e = cljs.core.nth.call(null, d, 0, null), d = cljs.core.nth.call(null, d, 1, null), f = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), c) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [e, b], null) : cljs.core._EQ_.call(null, e, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196)) ? cljs.pprint.next_arg.call(null, b) : cljs.core._EQ_.call(null, e, new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(b)), b], null) : 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, b], null), e = cljs.core.nth.call(null, f, 0, null), f = cljs.core.nth.call(null, f, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, d], null)], null), f], null);
};
cljs.pprint.realize_parameter_list = function(a, b) {
  var c = cljs.pprint.map_passing_context.call(null, cljs.pprint.realize_parameter, b, a), d = cljs.core.nth.call(null, c, 0, null), c = cljs.core.nth.call(null, c, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, d), c], null);
};
cljs.pprint.opt_base_str;
cljs.pprint.special_radix_markers = new cljs.core.PersistentArrayMap(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
cljs.pprint.format_simple_number = function(a) {
  return cljs.core.integer_QMARK_.call(null, a) ? cljs.core._EQ_.call(null, cljs.pprint._STAR_print_base_STAR_, 10) ? [cljs.core.str(a), cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? "." : null)].join("") : [cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? function() {
    var a = cljs.core.get.call(null, cljs.pprint.special_radix_markers, cljs.pprint._STAR_print_base_STAR_);
    return cljs.core.truth_(a) ? a : [cljs.core.str("#"), cljs.core.str(cljs.pprint._STAR_print_base_STAR_), cljs.core.str("r")].join("");
  }() : null), cljs.core.str(cljs.pprint.opt_base_str.call(null, cljs.pprint._STAR_print_base_STAR_, a))].join("") : null;
};
cljs.pprint.format_ascii = function(a, b, c, d) {
  c = cljs.pprint.next_arg.call(null, c);
  d = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  var e = cljs.pprint.format_simple_number.call(null, d);
  a = cljs.core.truth_(e) ? e : a.call(null, d);
  d = a.length;
  e = d + (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(b);
  e = e >= (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(b) ? e : e + (cljs.core.quot.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(b) - e - 1, (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(b)) + 1) * (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(b);
  d = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, e - d, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(b)));
  cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b)) ? cljs.pprint.print.call(null, [cljs.core.str(d), cljs.core.str(a)].join("")) : cljs.pprint.print.call(null, [cljs.core.str(a), cljs.core.str(d)].join(""));
  return c;
};
cljs.pprint.integral_QMARK_ = function(a) {
  return cljs.core.integer_QMARK_.call(null, a) ? !0 : cljs.pprint.float_QMARK_.call(null, a) ? cljs.core._EQ_.call(null, a, Math.floor(a)) : !1;
};
cljs.pprint.remainders = function(a, b) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(b) {
    return 0 < b ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem.call(null, b, a), cljs.core.quot.call(null, b, a)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
  }, b)));
};
cljs.pprint.base_str = function(a, b) {
  return 0 === b ? "0" : cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(a) {
    return function(a) {
      return 10 > a ? cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "0") + a) : cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "a") + (a - 10));
    };
  }(b), cljs.pprint.remainders.call(null, a, b)));
};
cljs.pprint.javascript_base_formats = new cljs.core.PersistentArrayMap(null, 3, [8, "%o", 10, "%d", 16, "%x"], null);
cljs.pprint.opt_base_str = function(a, b) {
  return cljs.pprint.base_str.call(null, a, b);
};
cljs.pprint.group_by_STAR_ = function(a, b) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(b) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.reverse.call(null, cljs.core.take.call(null, a, b))), cljs.core.seq.call(null, cljs.core.drop.call(null, a, b))], null);
  }, cljs.core.reverse.call(null, b))));
};
cljs.pprint.format_integer = function(a, b, c, d) {
  var e = cljs.pprint.next_arg.call(null, c), f = cljs.core.nth.call(null, e, 0, null), g = cljs.core.nth.call(null, e, 1, null);
  if (cljs.core.truth_(cljs.pprint.integral_QMARK_.call(null, f))) {
    var h = 0 > f, k = h ? -f : f, m = cljs.pprint.opt_base_str.call(null, a, k);
    a = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(b)) ? function() {
      var a = cljs.core.map.call(null, function(a, b, c, d, e, f) {
        return function(a) {
          return cljs.core.apply.call(null, cljs.core.str, a);
        };
      }(h, k, m, e, f, g), cljs.pprint.group_by_STAR_.call(null, (new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083)).cljs$core$IFn$_invoke$arity$1(b), m)), c = cljs.core.repeat.call(null, cljs.core.count.call(null, a), (new cljs.core.Keyword(null, "commachar", "commachar", 652859327)).cljs$core$IFn$_invoke$arity$1(b));
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.next.call(null, cljs.core.interleave.call(null, c, a)));
    }() : m;
    a = h ? [cljs.core.str("-"), cljs.core.str(a)].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b)) ? [cljs.core.str("+"), cljs.core.str(a)].join("") : a;
    a = a.length < (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(b) ? [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(b) - a.length, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(b)))), cljs.core.str(a)].join("") : a;
    cljs.pprint.print.call(null, a);
  } else {
    cljs.pprint.format_ascii.call(null, cljs.core.print_str, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(b), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), 1, new cljs.core.Keyword(null, "minpad", "minpad", 323570901), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530)).cljs$core$IFn$_invoke$arity$1(b), new cljs.core.Keyword(null, "at", "at", 1476951349), !0], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f], null)), null);
  }
  return g;
};
cljs.pprint.english_cardinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, "zero one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen".split(" "), null);
cljs.pprint.english_ordinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, "zeroth first second third fourth fifth sixth seventh eighth ninth tenth eleventh twelfth thirteenth fourteenth fifteenth sixteenth seventeenth eighteenth nineteenth".split(" "), null);
cljs.pprint.english_cardinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, "  twenty thirty forty fifty sixty seventy eighty ninety".split(" "), null);
cljs.pprint.english_ordinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, "  twentieth thirtieth fortieth fiftieth sixtieth seventieth eightieth ninetieth".split(" "), null);
cljs.pprint.english_scale_numbers = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, " thousand million billion trillion quadrillion quintillion sextillion septillion octillion nonillion decillion undecillion duodecillion tredecillion quattuordecillion quindecillion sexdecillion septendecillion octodecillion novemdecillion vigintillion".split(" "), null);
cljs.pprint.format_simple_cardinal = function(a) {
  var b = cljs.core.quot.call(null, a, 100), c = cljs.core.rem.call(null, a, 100);
  return [cljs.core.str(0 < b ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, b)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(0 < b && 0 < c ? " " : null), cljs.core.str(0 < c ? 20 > c ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, c) : function() {
    var a = cljs.core.quot.call(null, c, 10), b = cljs.core.rem.call(null, c, 10);
    return [cljs.core.str(0 < a ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, a) : null), cljs.core.str(0 < a && 0 < b ? "-" : null), cljs.core.str(0 < b ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, b) : null)].join("");
  }() : null)].join("");
};
cljs.pprint.add_english_scales = function(a, b) {
  for (var c = cljs.core.count.call(null, a), d = cljs.core.PersistentVector.EMPTY, c = c - 1, e = cljs.core.first.call(null, a), f = cljs.core.next.call(null, a);;) {
    if (null == f) {
      return [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, ", ", d))), cljs.core.str(cljs.core.empty_QMARK_.call(null, e) || cljs.core.empty_QMARK_.call(null, d) ? null : ", "), cljs.core.str(e), cljs.core.str(!cljs.core.empty_QMARK_.call(null, e) && 0 < c + b ? [cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, c + b))].join("") : null)].join("");
    }
    d = cljs.core.empty_QMARK_.call(null, e) ? d : cljs.core.conj.call(null, d, [cljs.core.str(e), cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, c + b))].join(""));
    --c;
    e = cljs.core.first.call(null, f);
    f = cljs.core.next.call(null, f);
  }
};
cljs.pprint.format_cardinal_english = function(a, b, c) {
  b = cljs.pprint.next_arg.call(null, b);
  a = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  cljs.core._EQ_.call(null, 0, a) ? cljs.pprint.print.call(null, "zero") : (c = cljs.pprint.remainders.call(null, 1E3, 0 > a ? -a : a), cljs.core.count.call(null, c) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers) ? (c = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, c), c = cljs.pprint.add_english_scales.call(null, c, 0), cljs.pprint.print.call(null, [cljs.core.str(0 > a ? "minus " : null), cljs.core.str(c)].join(""))) : cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 
  5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), !0], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null)), new cljs.core.PersistentArrayMap(null, 
  4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null)));
  return b;
};
cljs.pprint.format_simple_ordinal = function(a) {
  var b = cljs.core.quot.call(null, a, 100), c = cljs.core.rem.call(null, a, 100);
  return [cljs.core.str(0 < b ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, b)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(0 < b && 0 < c ? " " : null), cljs.core.str(0 < c ? 20 > c ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, c) : function() {
    var a = cljs.core.quot.call(null, c, 10), b = cljs.core.rem.call(null, c, 10);
    return 0 < a && !(0 < b) ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_tens, a) : [cljs.core.str(0 < a ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, a) : null), cljs.core.str(0 < a && 0 < b ? "-" : null), cljs.core.str(0 < b ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, b) : null)].join("");
  }() : 0 < b ? "th" : null)].join("");
};
cljs.pprint.format_ordinal_english = function(a, b, c) {
  a = cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  if (cljs.core._EQ_.call(null, 0, b)) {
    cljs.pprint.print.call(null, "zeroth");
  } else {
    if (c = cljs.pprint.remainders.call(null, 1E3, 0 > b ? -b : b), cljs.core.count.call(null, c) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var d = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, cljs.core.drop_last.call(null, c)), d = cljs.pprint.add_english_scales.call(null, d, 1);
      c = cljs.pprint.format_simple_ordinal.call(null, cljs.core.last.call(null, c));
      cljs.pprint.print.call(null, [cljs.core.str(0 > b ? "minus " : null), cljs.core.str(cljs.core.empty_QMARK_.call(null, d) || cljs.core.empty_QMARK_.call(null, c) ? cljs.core.empty_QMARK_.call(null, d) ? c : [cljs.core.str(d), cljs.core.str("th")].join("") : [cljs.core.str(d), cljs.core.str(", "), cljs.core.str(c)].join(""))].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), !0], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null)), c = cljs.core.rem.call(null, b, 100), b = 11 < c || 19 > c, c = cljs.core.rem.call(null, c, 10), cljs.pprint.print.call(null, 
      1 === c && b ? "st" : 2 === c && b ? "nd" : 3 === c && b ? "rd" : "th");
    }
  }
  return a;
};
cljs.pprint.old_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "I II III IIII V VI VII VIII VIIII".split(" "), null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "X XX XXX XXXX L LX LXX LXXX LXXXX".split(" "), null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "C CC CCC CCCC D DC DCC DCCC DCCCC".split(" "), 
null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.new_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "I II III IV V VI VII VIII IX".split(" "), null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "X XX XXX XL L LX LXX LXXX XC".split(" "), null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "C CC CCC CD D DC DCC DCCC CM".split(" "), 
null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.format_roman = function(a, b, c, d) {
  b = cljs.pprint.next_arg.call(null, c);
  c = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  if ("number" === typeof c && 0 < c && 4E3 > c) {
    var e = cljs.pprint.remainders.call(null, 10, c);
    c = cljs.core.PersistentVector.EMPTY;
    for (d = cljs.core.count.call(null, e) - 1;;) {
      if (cljs.core.empty_QMARK_.call(null, e)) {
        cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, c));
        break;
      } else {
        var f = cljs.core.first.call(null, e);
        c = cljs.core._EQ_.call(null, 0, f) ? c : cljs.core.conj.call(null, c, cljs.core.nth.call(null, cljs.core.nth.call(null, a, d), f - 1));
        --d;
        e = cljs.core.next.call(null, e);
      }
    }
  } else {
    cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), !0], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
  }
  return b;
};
cljs.pprint.format_old_roman = function(a, b, c) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.old_roman_table, a, b, c);
};
cljs.pprint.format_new_roman = function(a, b, c) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.new_roman_table, a, b, c);
};
cljs.pprint.special_chars = new cljs.core.PersistentArrayMap(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
cljs.pprint.pretty_character = function(a, b, c) {
  a = cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  c = cljs.pprint.char_code.call(null, b);
  b = c & 127;
  c &= 128;
  var d = cljs.core.get.call(null, cljs.pprint.special_chars, b);
  0 < c && cljs.pprint.print.call(null, "Meta-");
  cljs.pprint.print.call(null, cljs.core.truth_(d) ? d : 32 > b ? [cljs.core.str("Control-"), cljs.core.str(cljs.core.char$.call(null, b + 64))].join("") : cljs.core._EQ_.call(null, b, 127) ? "Control-?" : cljs.core.char$.call(null, b));
  return a;
};
cljs.pprint.readable_character = function(a, b, c) {
  c = cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  var d = cljs.core._EQ_;
  a = (new cljs.core.Keyword(null, "char-format", "char-format", -1016499218)).cljs$core$IFn$_invoke$arity$1(a);
  if (cljs.core.truth_(d.call(null, "o", a))) {
    cljs.pprint.cl_format.call(null, !0, "\\o~3, '0o", cljs.pprint.char_code.call(null, b));
  } else {
    if (cljs.core.truth_(d.call(null, "u", a))) {
      cljs.pprint.cl_format.call(null, !0, "\\u~4, '0x", cljs.pprint.char_code.call(null, b));
    } else {
      if (cljs.core.truth_(d.call(null, null, a))) {
        cljs.pprint.print_char.call(null, b);
      } else {
        throw Error([cljs.core.str("No matching clause: "), cljs.core.str(a)].join(""));
      }
    }
  }
  return c;
};
cljs.pprint.plain_character = function(a, b, c) {
  b = cljs.pprint.next_arg.call(null, b);
  a = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  cljs.pprint.print.call(null, a);
  return b;
};
cljs.pprint.abort_QMARK_ = function(a) {
  a = cljs.core.first.call(null, a);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), a) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), a);
};
cljs.pprint.execute_sub_format = function(a, b, c) {
  return cljs.core.second.call(null, cljs.pprint.map_passing_context.call(null, function(a, b) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, b))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, b], null);
    }
    var f = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a), b), g = cljs.core.nth.call(null, f, 0, null), f = cljs.core.nth.call(null, f, 1, null), h = cljs.pprint.unzip_map.call(null, g), g = cljs.core.nth.call(null, h, 0, null), h = cljs.core.nth.call(null, h, 1, null), g = cljs.core.assoc.call(null, g, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), c);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [g, f, h], null))], null);
  }, b, a));
};
cljs.pprint.float_parts_base = function(a) {
  a = clojure.string.lower_case.call(null, "" + cljs.core.str(a));
  var b = a.indexOf("e"), c = a.indexOf(".");
  return 0 > b ? 0 > c ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, "" + cljs.core.str(cljs.core.count.call(null, a) - 1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, a, 0, c)), cljs.core.str(cljs.core.subs.call(null, a, c + 1))].join(""), "" + cljs.core.str(c - 1)], null) : 0 > c ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, 
  a, 0, b), cljs.core.subs.call(null, a, b + 1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, a, 0, 1)), cljs.core.str(cljs.core.subs.call(null, a, 2, b))].join(""), cljs.core.subs.call(null, a, b + 1)], null);
};
cljs.pprint.float_parts = function(a) {
  a = cljs.pprint.float_parts_base.call(null, a);
  var b = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  var c = cljs.pprint.rtrim.call(null, b, "0"), b = cljs.pprint.ltrim.call(null, c, "0"), c = cljs.core.count.call(null, c) - cljs.core.count.call(null, b);
  a = 0 < cljs.core.count.call(null, a) && cljs.core._EQ_.call(null, cljs.core.nth.call(null, a, 0), "+") ? cljs.core.subs.call(null, a, 1) : a;
  return cljs.core.empty_QMARK_.call(null, b) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, parseInt(a, 10) - c], null);
};
cljs.pprint.inc_s = function(a) {
  for (var b = cljs.core.count.call(null, a) - 1, c = b | 0;;) {
    if (0 > c) {
      return cljs.core.apply.call(null, cljs.core.str, "1", cljs.core.repeat.call(null, b + 1, "0"));
    }
    if (cljs.core._EQ_.call(null, "9", a.charAt(c))) {
      --c;
    } else {
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.subs.call(null, a, 0, c), cljs.core.char$.call(null, cljs.pprint.char_code.call(null, a.charAt(c)) + 1), cljs.core.repeat.call(null, b - c, "0"));
    }
  }
};
cljs.pprint.round_str = function(a, b, c, d) {
  if (cljs.core.truth_(cljs.core.truth_(c) ? c : d)) {
    var e = cljs.core.count.call(null, a);
    d = cljs.core.truth_(d) ? 2 > d ? 2 : d : 0;
    cljs.core.truth_(c) ? c = b + c + 1 : 0 <= b ? (c = b + 1, --d, c = c > d ? c : d) : c = d + b;
    var f = cljs.core._EQ_.call(null, c, 0) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("0"), cljs.core.str(a)].join(""), b + 1, 1, e + 1], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, c, e], null);
    c = cljs.core.nth.call(null, f, 0, null);
    e = cljs.core.nth.call(null, f, 1, null);
    d = cljs.core.nth.call(null, f, 2, null);
    f = cljs.core.nth.call(null, f, 3, null);
    if (cljs.core.truth_(d)) {
      if (0 > d) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0, !1], null);
      }
      if (f > d) {
        return a = cljs.core.nth.call(null, c, d), b = cljs.core.subs.call(null, c, 0, d), cljs.pprint.char_code.call(null, a) >= cljs.pprint.char_code.call(null, "5") ? (a = cljs.pprint.inc_s.call(null, b), b = cljs.core.count.call(null, a) > cljs.core.count.call(null, b), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b ? cljs.core.subs.call(null, a, 0, cljs.core.count.call(null, a) - 1) : a, e, b], null)) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
        [b, e, !1], null);
      }
    }
  }
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, !1], null);
};
cljs.pprint.expand_fixed = function(a, b, c) {
  b = 0 > b ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -b - 1, "0"))), cljs.core.str(a)].join(""), -1], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null);
  a = cljs.core.nth.call(null, b, 0, null);
  var d = cljs.core.nth.call(null, b, 1, null);
  b = cljs.core.count.call(null, a);
  c = cljs.core.truth_(c) ? d + c + 1 : d + 1;
  return b < c ? [cljs.core.str(a), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, c - b, "0")))].join("") : a;
};
cljs.pprint.insert_decimal = function(a, b) {
  if (0 > b) {
    return [cljs.core.str("."), cljs.core.str(a)].join("");
  }
  var c = b + 1;
  return [cljs.core.str(cljs.core.subs.call(null, a, 0, c)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, a, c))].join("");
};
cljs.pprint.get_fixed = function(a, b, c) {
  return cljs.pprint.insert_decimal.call(null, cljs.pprint.expand_fixed.call(null, a, b, c), b);
};
cljs.pprint.insert_scaled_decimal = function(a, b) {
  return 0 > b ? [cljs.core.str("."), cljs.core.str(a)].join("") : [cljs.core.str(cljs.core.subs.call(null, a, 0, b)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, a, b))].join("");
};
cljs.pprint.convert_ratio = function(a) {
  return a;
};
cljs.pprint.fixed_float = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(a), e = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(a);
  b = cljs.pprint.next_arg.call(null, b);
  var f = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  var g = 0 > f ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-", -f], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["+", f], null);
  c = cljs.core.nth.call(null, g, 0, null);
  var g = cljs.core.nth.call(null, g, 1, null), g = cljs.pprint.convert_ratio.call(null, g), g = cljs.pprint.float_parts.call(null, g), h = cljs.core.nth.call(null, g, 0, null), k = cljs.core.nth.call(null, g, 1, null) + (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(a), g = function() {
    var b = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? b : 0 > f;
  }(), m = cljs.core.not.call(null, e) && cljs.core.count.call(null, h) - 1 <= k, l = cljs.pprint.round_str.call(null, h, k, e, cljs.core.truth_(d) ? d - (cljs.core.truth_(g) ? 1 : 0) : null), h = cljs.core.nth.call(null, l, 0, null), k = cljs.core.nth.call(null, l, 1, null), l = cljs.core.nth.call(null, l, 2, null), h = cljs.pprint.get_fixed.call(null, h, cljs.core.truth_(l) ? k + 1 : k, e), e = cljs.core.truth_(cljs.core.truth_(d) ? cljs.core.truth_(e) ? 1 <= e && cljs.core._EQ_.call(null, h.charAt(0), 
  "0") && cljs.core._EQ_.call(null, h.charAt(1), ".") && cljs.core.count.call(null, h) > d - (cljs.core.truth_(g) ? 1 : 0) : e : d) ? cljs.core.subs.call(null, h, 1) : h, k = cljs.core._EQ_.call(null, cljs.core.first.call(null, e), ".");
  if (cljs.core.truth_(d)) {
    var h = cljs.core.count.call(null, e), h = cljs.core.truth_(g) ? h + 1 : h, k = k && !(h >= d), m = m && !(h >= d), n = k || m ? h + 1 : h;
    cljs.core.truth_(function() {
      var b = n > d;
      return b ? (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(a) : b;
    }()) ? cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(a)))) : cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d - n, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a)))), cljs.core.str(cljs.core.truth_(g) ? c : null), cljs.core.str(k ? 
    "0" : null), cljs.core.str(e), cljs.core.str(m ? "0" : null)].join(""));
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(g) ? c : null), cljs.core.str(k ? "0" : null), cljs.core.str(e), cljs.core.str(m ? "0" : null)].join(""));
  }
  return b;
};
cljs.pprint.exponential_float = function(a, b, c) {
  b = cljs.pprint.next_arg.call(null, b);
  c = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  var d = cljs.pprint.convert_ratio.call(null, c);
  c = cljs.pprint.float_parts.call(null, 0 > d ? -d : d);
  cljs.core.nth.call(null, c, 0, null);
  for (cljs.core.nth.call(null, c, 1, null);;) {
    var e = cljs.core.nth.call(null, c, 0, null), f = cljs.core.nth.call(null, c, 1, null), g = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(a), h = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(a), k = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(a), m = (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(a), l = function() {
      var b = (new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222)).cljs$core$IFn$_invoke$arity$1(a);
      return cljs.core.truth_(b) ? b : "E";
    }();
    c = function() {
      var b = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
      return cljs.core.truth_(b) ? b : 0 > d;
    }();
    var n = 0 >= m, p = f - (m - 1), q = "" + cljs.core.str(Math.abs(p)), l = [cljs.core.str(l), cljs.core.str(0 > p ? "-" : "+"), cljs.core.str(cljs.core.truth_(k) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, k - cljs.core.count.call(null, q), "0")) : null), cljs.core.str(q)].join(""), r = cljs.core.count.call(null, l), p = cljs.core.count.call(null, e), e = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -m, "0"))), cljs.core.str(e), 
    cljs.core.str(cljs.core.truth_(h) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, h - (p - 1) - (0 > m ? -m : 0), "0")) : null)].join(""), p = cljs.core.truth_(g) ? g - r : null, e = cljs.pprint.round_str.call(null, e, 0, cljs.core._EQ_.call(null, m, 0) ? h - 1 : 0 < m ? h : 0 > m ? h - 1 : null, cljs.core.truth_(p) ? p - (cljs.core.truth_(c) ? 1 : 0) : null), p = cljs.core.nth.call(null, e, 0, null);
    cljs.core.nth.call(null, e, 1, null);
    q = cljs.core.nth.call(null, e, 2, null);
    e = cljs.pprint.insert_scaled_decimal.call(null, p, m);
    h = cljs.core._EQ_.call(null, m, cljs.core.count.call(null, p)) && null == h;
    if (cljs.core.not.call(null, q)) {
      if (cljs.core.truth_(g)) {
        var f = cljs.core.count.call(null, e) + r, f = cljs.core.truth_(c) ? f + 1 : f, t = (n = n && !cljs.core._EQ_.call(null, f, g)) ? f + 1 : f, f = h && t < g;
        cljs.core.truth_(function() {
          var b;
          b = t > g;
          b || (b = k, b = cljs.core.truth_(b) ? r - 2 > k : b);
          return cljs.core.truth_(b) ? (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(a) : b;
        }()) ? cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, g, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(a)))) : cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, g - t - (f ? 1 : 0), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a)))), cljs.core.str(cljs.core.truth_(c) ? 
        0 > d ? "-" : "+" : null), cljs.core.str(n ? "0" : null), cljs.core.str(e), cljs.core.str(f ? "0" : null), cljs.core.str(l)].join(""));
      } else {
        cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(c) ? 0 > d ? "-" : "+" : null), cljs.core.str(n ? "0" : null), cljs.core.str(e), cljs.core.str(h ? "0" : null), cljs.core.str(l)].join(""));
      }
      break;
    } else {
      c = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, f + 1], null);
    }
  }
  return b;
};
cljs.pprint.general_float = function(a, b, c) {
  var d = cljs.pprint.next_arg.call(null, b), e = cljs.core.nth.call(null, d, 0, null);
  cljs.core.nth.call(null, d, 1, null);
  var d = cljs.pprint.convert_ratio.call(null, e), e = cljs.pprint.float_parts.call(null, 0 > d ? -d : d), f = cljs.core.nth.call(null, e, 0, null), e = cljs.core.nth.call(null, e, 1, null), g = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(a), h = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(a), k = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(a), e = cljs.core._EQ_.call(null, d, 0) ? 0 : 
  e + 1, d = cljs.core.truth_(k) ? k + 2 : 4, g = cljs.core.truth_(g) ? g - d : null;
  cljs.core.truth_(h) ? f = h : (f = cljs.core.count.call(null, f), h = 7 > e ? e : 7, f = f > h ? f : h);
  e = f - e;
  return 0 <= e && e <= f ? (a = cljs.pprint.fixed_float.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "w", "w", 354169001), g, new cljs.core.Keyword(null, "d", "d", 1972142424), e, new cljs.core.Keyword(null, "k", "k", -2146297393), 0, new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "padchar", "padchar", 
  2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "at", "at", 1476951349), (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)], null), b, c), cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d, " "))), a) : cljs.pprint.exponential_float.call(null, a, b, c);
};
cljs.pprint.dollar_float = function(a, b, c) {
  b = cljs.pprint.next_arg.call(null, b);
  var d = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  c = cljs.pprint.float_parts.call(null, Math.abs(d));
  var e = cljs.core.nth.call(null, c, 0, null), f = cljs.core.nth.call(null, c, 1, null), g = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(a), h = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(a);
  c = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(a);
  var k = function() {
    var b = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? b : 0 > d;
  }(), m = cljs.pprint.round_str.call(null, e, f, g, null), e = cljs.core.nth.call(null, m, 0, null), f = cljs.core.nth.call(null, m, 1, null), m = cljs.core.nth.call(null, m, 2, null), g = cljs.pprint.get_fixed.call(null, e, cljs.core.truth_(m) ? f + 1 : f, g), h = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, h - g.indexOf("."), "0"))), cljs.core.str(g)].join(""), g = cljs.core.count.call(null, h) + (cljs.core.truth_(k) ? 1 : 0);
  cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(function() {
    var b = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? k : b;
  }()) ? 0 > d ? "-" : "+" : null), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, c - g, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a)))), cljs.core.str(cljs.core.truth_(function() {
    var b = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a));
    return b ? k : b;
  }()) ? 0 > d ? "-" : "+" : null), cljs.core.str(h)].join(""));
  return b;
};
cljs.pprint.choice_conditional = function(a, b, c) {
  c = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(a);
  c = cljs.core.truth_(c) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null) : cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  var d = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a);
  b = 0 > b || b >= cljs.core.count.call(null, d) ? cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(a)) : cljs.core.nth.call(null, d, b);
  return cljs.core.truth_(b) ? cljs.pprint.execute_sub_format.call(null, b, c, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a)) : c;
};
cljs.pprint.boolean_conditional = function(a, b, c) {
  c = cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  var d = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a);
  b = cljs.core.truth_(b) ? cljs.core.second.call(null, d) : cljs.core.first.call(null, d);
  return cljs.core.truth_(b) ? cljs.pprint.execute_sub_format.call(null, b, c, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a)) : c;
};
cljs.pprint.check_arg_conditional = function(a, b, c) {
  var d = cljs.pprint.next_arg.call(null, b);
  c = cljs.core.nth.call(null, d, 0, null);
  var d = cljs.core.nth.call(null, d, 1, null), e = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a), e = cljs.core.truth_(c) ? cljs.core.first.call(null, e) : null;
  return cljs.core.truth_(c) ? cljs.core.truth_(e) ? cljs.pprint.execute_sub_format.call(null, e, b, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a)) : b : d;
};
cljs.pprint.iterate_sublist = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(a);
  c = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a));
  c = cljs.core.empty_QMARK_.call(null, c) ? cljs.pprint.get_format_arg.call(null, b) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  c = cljs.pprint.next_arg.call(null, c);
  var e = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  for (var f = 0, g = cljs.pprint.init_navigator.call(null, e), e = -1;;) {
    if (cljs.core.not.call(null, d) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(g), e) && 1 < f) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    }
    if (cljs.core.truth_(function() {
      var b = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(g)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(a))) || 0 < f);
      return b ? b : cljs.core.truth_(d) ? f >= d : d;
    }())) {
      return c;
    }
    var h = cljs.pprint.execute_sub_format.call(null, b, g, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a));
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, h))) {
      return c;
    }
    var e = f + 1, k = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(g), f = e, g = h, e = k;
  }
};
cljs.pprint.iterate_list_of_sublists = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(a);
  c = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a));
  c = cljs.core.empty_QMARK_.call(null, c) ? cljs.pprint.get_format_arg.call(null, b) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  c = cljs.pprint.next_arg.call(null, c);
  var e = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  for (var f = 0, g = e;;) {
    if (cljs.core.truth_(function() {
      var b = cljs.core.empty_QMARK_.call(null, g) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(a))) || 0 < f);
      return b ? b : cljs.core.truth_(d) ? f >= d : d;
    }())) {
      return c;
    }
    e = cljs.pprint.execute_sub_format.call(null, b, cljs.pprint.init_navigator.call(null, cljs.core.first.call(null, g)), cljs.pprint.init_navigator.call(null, cljs.core.next.call(null, g)));
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, e))) {
      return c;
    }
    var e = f + 1, h = cljs.core.next.call(null, g), f = e, g = h;
  }
};
cljs.pprint.iterate_main_list = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(a);
  c = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a));
  c = cljs.core.empty_QMARK_.call(null, c) ? cljs.pprint.get_format_arg.call(null, b) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null);
  b = cljs.core.nth.call(null, c, 0, null);
  var e = 0, f = cljs.core.nth.call(null, c, 1, null);
  for (c = -1;;) {
    if (cljs.core.not.call(null, d) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(f), c) && 1 < e) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    }
    if (cljs.core.truth_(function() {
      var b = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(f)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(a))) || 0 < e);
      return b ? b : cljs.core.truth_(d) ? e >= d : d;
    }())) {
      return f;
    }
    var g = cljs.pprint.execute_sub_format.call(null, b, f, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a));
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, g))) {
      return cljs.core.second.call(null, g);
    }
    c = e + 1;
    var h = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(f), e = c, f = g;
    c = h;
  }
};
cljs.pprint.iterate_main_sublists = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(a);
  c = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a));
  c = cljs.core.empty_QMARK_.call(null, c) ? cljs.pprint.get_format_arg.call(null, b) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null);
  b = cljs.core.nth.call(null, c, 0, null);
  for (var e = 0, f = cljs.core.nth.call(null, c, 1, null);;) {
    if (cljs.core.truth_(function() {
      var b = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(f)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(a))) || 0 < e);
      return b ? b : cljs.core.truth_(d) ? e >= d : d;
    }())) {
      return f;
    }
    var g = cljs.pprint.next_arg_or_nil.call(null, f);
    c = cljs.core.nth.call(null, g, 0, null);
    g = cljs.core.nth.call(null, g, 1, null);
    c = cljs.pprint.execute_sub_format.call(null, b, cljs.pprint.init_navigator.call(null, c), g);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, c))) {
      return g;
    }
    c = g;
    e += 1;
    f = c;
  }
};
cljs.pprint.format_logical_block;
cljs.pprint.justify_clauses;
cljs.pprint.logical_block_or_justify = function(a, b, c) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(a))) ? cljs.pprint.format_logical_block.call(null, a, b, c) : cljs.pprint.justify_clauses.call(null, a, b, c);
};
cljs.pprint.render_clauses = function(a, b, c) {
  for (var d = cljs.core.PersistentVector.EMPTY;;) {
    if (cljs.core.empty_QMARK_.call(null, a)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, b], null);
    }
    var e = cljs.core.first.call(null, a), f;
    a: {
      var g = new goog.string.StringBuffer, h = cljs.core._STAR_out_STAR_;
      cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(g);
      try {
        f = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format.call(null, e, b, c), "" + cljs.core.str(g)], null);
        break a;
      } finally {
        cljs.core._STAR_out_STAR_ = h;
      }
      f = void 0;
    }
    b = cljs.core.nth.call(null, f, 0, null);
    e = cljs.core.nth.call(null, f, 1, null);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, b))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, cljs.core.second.call(null, b)], null);
    }
    a = cljs.core.next.call(null, a);
    d = cljs.core.conj.call(null, d, e);
  }
};
cljs.pprint.justify_clauses = function(a, b, c) {
  var d = function() {
    var c = (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(c) ? cljs.pprint.render_clauses.call(null, c, b, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a)) : null;
  }();
  c = cljs.core.nth.call(null, d, 0, null);
  c = cljs.core.nth.call(null, c, 0, null);
  var d = cljs.core.nth.call(null, d, 1, null), e = cljs.core.truth_(d) ? d : b, d = function() {
    var b = (new cljs.core.Keyword(null, "else-params", "else-params", -832171646)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? cljs.pprint.realize_parameter_list.call(null, b, e) : null;
  }(), f = cljs.core.nth.call(null, d, 0, null), d = cljs.core.nth.call(null, d, 1, null), g = cljs.core.truth_(d) ? d : e, d = function() {
    var a = cljs.core.first.call(null, (new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677)).cljs$core$IFn$_invoke$arity$1(f));
    return cljs.core.truth_(a) ? a : 0;
  }(), h = function() {
    var a = cljs.core.first.call(null, (new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262)).cljs$core$IFn$_invoke$arity$1(f));
    return cljs.core.truth_(a) ? a : cljs.pprint.get_max_column.call(null, cljs.core._STAR_out_STAR_);
  }(), k = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a), g = cljs.pprint.render_clauses.call(null, k, g, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a)), m = cljs.core.nth.call(null, g, 0, null), g = cljs.core.nth.call(null, g, 1, null), l = function() {
    var b = cljs.core.count.call(null, m) - 1 + (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? 1 : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? 1 : 0);
    return 1 > b ? 1 : b;
  }(), k = cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, m)), n = (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(a), p = (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(a), q = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(a), r = k + l * p, n = r <= n ? n : n + q * (1 + cljs.core.quot.call(null, r - n - 1, q)), t = n - k, 
  k = function() {
    var a = cljs.core.quot.call(null, t, l);
    return p > a ? p : a;
  }(), q = t - k * l, k = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, k, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a)));
  cljs.core.truth_(cljs.core.truth_(c) ? cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))) + d + n > h : c) && cljs.pprint.print.call(null, c);
  for (var d = q, u = m, v = function() {
    var b = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? b : cljs.core._EQ_.call(null, cljs.core.count.call(null, u), 1) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a));
  }();;) {
    if (cljs.core.seq.call(null, u)) {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.not.call(null, v) ? cljs.core.first.call(null, u) : null), cljs.core.str(cljs.core.truth_(function() {
        var b = v;
        return cljs.core.truth_(b) ? b : (b = cljs.core.next.call(null, u)) ? b : (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
      }()) ? k : null), cljs.core.str(0 < d ? (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a) : null)].join("")), --d, u = c = cljs.core.truth_(v) ? u : cljs.core.next.call(null, u), v = !1;
    } else {
      break;
    }
  }
  return g;
};
cljs.pprint.downcase_writer = function cljs$pprint$downcase_writer(b) {
  "undefined" === typeof cljs.pprint.t_cljs$pprint20609 && (cljs.pprint.t_cljs$pprint20609 = function(b, d, e) {
    this.downcase_writer = b;
    this.writer = d;
    this.meta20610 = e;
    this.cljs$lang$protocol_mask$partition0$ = 1074135040;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.pprint.t_cljs$pprint20609.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b, d) {
    return new cljs.pprint.t_cljs$pprint20609(this.downcase_writer, this.writer, d);
  }, cljs.pprint.t_cljs$pprint20609.prototype.cljs$core$IMeta$_meta$arity$1 = function(b) {
    return this.meta20610;
  }, cljs.pprint.t_cljs$pprint20609.prototype.cljs$core$IWriter$_flush$arity$1 = function(b) {
    return cljs.core._flush.call(null, this.writer);
  }, cljs.pprint.t_cljs$pprint20609.prototype.cljs$core$IWriter$_write$arity$2 = function(b, d) {
    var e = cljs.core._EQ_, f = cljs.core.type.call(null, d);
    if (cljs.core.truth_(e.call(null, String, f))) {
      return cljs.core._write.call(null, this.writer, clojure.string.lower_case.call(null, d));
    }
    if (cljs.core.truth_(e.call(null, Number, f))) {
      return cljs.core._write.call(null, this.writer, clojure.string.lower_case.call(null, cljs.core.char$.call(null, d)));
    }
    throw Error([cljs.core.str("No matching clause: "), cljs.core.str(f)].join(""));
  }, cljs.pprint.t_cljs$pprint20609.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "downcase-writer", "downcase-writer", 37286911, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), !0, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to lower case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta20610", "meta20610", 1969848881, null)], null);
  }, cljs.pprint.t_cljs$pprint20609.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint20609.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint20609", cljs.pprint.t_cljs$pprint20609.cljs$lang$ctorPrWriter = function(b, d, e) {
    return cljs.core._write.call(null, d, "cljs.pprint/t_cljs$pprint20609");
  }, cljs.pprint.__GT_t_cljs$pprint20609 = function(b, d, e) {
    return new cljs.pprint.t_cljs$pprint20609(b, d, e);
  });
  return new cljs.pprint.t_cljs$pprint20609(cljs$pprint$downcase_writer, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.upcase_writer = function cljs$pprint$upcase_writer(b) {
  "undefined" === typeof cljs.pprint.t_cljs$pprint20621 && (cljs.pprint.t_cljs$pprint20621 = function(b, d, e) {
    this.upcase_writer = b;
    this.writer = d;
    this.meta20622 = e;
    this.cljs$lang$protocol_mask$partition0$ = 1074135040;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.pprint.t_cljs$pprint20621.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b, d) {
    return new cljs.pprint.t_cljs$pprint20621(this.upcase_writer, this.writer, d);
  }, cljs.pprint.t_cljs$pprint20621.prototype.cljs$core$IMeta$_meta$arity$1 = function(b) {
    return this.meta20622;
  }, cljs.pprint.t_cljs$pprint20621.prototype.cljs$core$IWriter$_flush$arity$1 = function(b) {
    return cljs.core._flush.call(null, this.writer);
  }, cljs.pprint.t_cljs$pprint20621.prototype.cljs$core$IWriter$_write$arity$2 = function(b, d) {
    var e = cljs.core._EQ_, f = cljs.core.type.call(null, d);
    if (cljs.core.truth_(e.call(null, String, f))) {
      return cljs.core._write.call(null, this.writer, clojure.string.upper_case.call(null, d));
    }
    if (cljs.core.truth_(e.call(null, Number, f))) {
      return cljs.core._write.call(null, this.writer, clojure.string.upper_case.call(null, cljs.core.char$.call(null, d)));
    }
    throw Error([cljs.core.str("No matching clause: "), cljs.core.str(f)].join(""));
  }, cljs.pprint.t_cljs$pprint20621.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "upcase-writer", "upcase-writer", 51077317, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), !0, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 
    5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to upper case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta20622", "meta20622", 1308702870, null)], null);
  }, cljs.pprint.t_cljs$pprint20621.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint20621.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint20621", cljs.pprint.t_cljs$pprint20621.cljs$lang$ctorPrWriter = function(b, d, e) {
    return cljs.core._write.call(null, d, "cljs.pprint/t_cljs$pprint20621");
  }, cljs.pprint.__GT_t_cljs$pprint20621 = function(b, d, e) {
    return new cljs.pprint.t_cljs$pprint20621(b, d, e);
  });
  return new cljs.pprint.t_cljs$pprint20621(cljs$pprint$upcase_writer, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.capitalize_string = function(a, b) {
  var c = cljs.core.first.call(null, a), d = cljs.core.truth_(cljs.core.truth_(b) ? cljs.core.truth_(c) ? goog.string.isUnicodeChar(c) : c : b) ? [cljs.core.str(clojure.string.upper_case.call(null, c)), cljs.core.str(cljs.core.subs.call(null, a, 1))].join("") : a;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(a, b) {
    return function(a) {
      if (cljs.core.empty_QMARK_.call(null, a)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
      }
      var b = RegExp("\\W\\w", "g").exec(a);
      b = cljs.core.truth_(b) ? b.index + 1 : b;
      return cljs.core.truth_(b) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, a, 0, b)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, a, b)))].join(""), cljs.core.subs.call(null, a, b + 1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, null], null);
    };
  }(c, d), d)));
};
cljs.pprint.capitalize_word_writer = function cljs$pprint$capitalize_word_writer(b) {
  var c = cljs.core.atom.call(null, !0);
  "undefined" === typeof cljs.pprint.t_cljs$pprint20633 && (cljs.pprint.t_cljs$pprint20633 = function(b, c, f, g) {
    this.capitalize_word_writer = b;
    this.writer = c;
    this.last_was_whitespace_QMARK_ = f;
    this.meta20634 = g;
    this.cljs$lang$protocol_mask$partition0$ = 1074135040;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.pprint.t_cljs$pprint20633.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b) {
    return function(b, c) {
      return new cljs.pprint.t_cljs$pprint20633(this.capitalize_word_writer, this.writer, this.last_was_whitespace_QMARK_, c);
    };
  }(c), cljs.pprint.t_cljs$pprint20633.prototype.cljs$core$IMeta$_meta$arity$1 = function(b) {
    return function(b) {
      return this.meta20634;
    };
  }(c), cljs.pprint.t_cljs$pprint20633.prototype.cljs$core$IWriter$_flush$arity$1 = function(b) {
    return function(b) {
      return cljs.core._flush.call(null, this.writer);
    };
  }(c), cljs.pprint.t_cljs$pprint20633.prototype.cljs$core$IWriter$_write$arity$2 = function(b) {
    return function(b, c) {
      var d = cljs.core._EQ_, h = cljs.core.type.call(null, c);
      if (cljs.core.truth_(d.call(null, String, h))) {
        return cljs.core._write.call(null, this.writer, cljs.pprint.capitalize_string.call(null, c.toLowerCase(), cljs.core.deref.call(null, this.last_was_whitespace_QMARK_))), 0 < c.length ? cljs.core.reset_BANG_.call(null, this.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(cljs.core.nth.call(null, c, cljs.core.count.call(null, c) - 1))) : null;
      }
      if (cljs.core.truth_(d.call(null, Number, h))) {
        return d = cljs.core.char$.call(null, c), h = cljs.core.truth_(cljs.core.deref.call(null, this.last_was_whitespace_QMARK_)) ? clojure.string.upper_case.call(null, d) : d, cljs.core._write.call(null, this.writer, h), cljs.core.reset_BANG_.call(null, this.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(d));
      }
      throw Error([cljs.core.str("No matching clause: "), cljs.core.str(h)].join(""));
    };
  }(c), cljs.pprint.t_cljs$pprint20633.getBasis = function(b) {
    return function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "capitalize-word-writer", "capitalize-word-writer", 196688059, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), !0, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing all words"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), new cljs.core.Symbol(null, "meta20634", "meta20634", -1924843919, null)], null);
    };
  }(c), cljs.pprint.t_cljs$pprint20633.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint20633.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint20633", cljs.pprint.t_cljs$pprint20633.cljs$lang$ctorPrWriter = function(b) {
    return function(b, c, d) {
      return cljs.core._write.call(null, c, "cljs.pprint/t_cljs$pprint20633");
    };
  }(c), cljs.pprint.__GT_t_cljs$pprint20633 = function(b) {
    return function(b, c, d, h) {
      return new cljs.pprint.t_cljs$pprint20633(b, c, d, h);
    };
  }(c));
  return new cljs.pprint.t_cljs$pprint20633(cljs$pprint$capitalize_word_writer, b, c, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.init_cap_writer = function cljs$pprint$init_cap_writer(b) {
  var c = cljs.core.atom.call(null, !1);
  "undefined" === typeof cljs.pprint.t_cljs$pprint20645 && (cljs.pprint.t_cljs$pprint20645 = function(b, c, f, g) {
    this.init_cap_writer = b;
    this.writer = c;
    this.capped = f;
    this.meta20646 = g;
    this.cljs$lang$protocol_mask$partition0$ = 1074135040;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.pprint.t_cljs$pprint20645.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b) {
    return function(b, c) {
      return new cljs.pprint.t_cljs$pprint20645(this.init_cap_writer, this.writer, this.capped, c);
    };
  }(c), cljs.pprint.t_cljs$pprint20645.prototype.cljs$core$IMeta$_meta$arity$1 = function(b) {
    return function(b) {
      return this.meta20646;
    };
  }(c), cljs.pprint.t_cljs$pprint20645.prototype.cljs$core$IWriter$_flush$arity$1 = function(b) {
    return function(b) {
      return cljs.core._flush.call(null, this.writer);
    };
  }(c), cljs.pprint.t_cljs$pprint20645.prototype.cljs$core$IWriter$_write$arity$2 = function(b) {
    return function(b, c) {
      var d = this, h = cljs.core._EQ_, k = cljs.core.type.call(null, c);
      if (cljs.core.truth_(h.call(null, String, k))) {
        return h = clojure.string.lower_case.call(null, c), cljs.core.not.call(null, cljs.core.deref.call(null, d.capped)) ? (k = RegExp("\\S", "g").exec(h), k = cljs.core.truth_(k) ? k.index : k, cljs.core.truth_(k) ? (cljs.core._write.call(null, d.writer, [cljs.core.str(cljs.core.subs.call(null, h, 0, k)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, h, k))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, h, k + 1)))].join("")), cljs.core.reset_BANG_.call(null, 
        d.capped, !0)) : cljs.core._write.call(null, d.writer, h)) : cljs.core._write.call(null, d.writer, clojure.string.lower_case.call(null, h));
      }
      if (cljs.core.truth_(h.call(null, Number, k))) {
        var m = cljs.core.char$.call(null, c);
        return cljs.core.truth_(function() {
          var b = cljs.core.not.call(null, cljs.core.deref.call(null, d.capped));
          return b ? goog.string.isUnicodeChar(m) : b;
        }()) ? (cljs.core.reset_BANG_.call(null, d.capped, !0), cljs.core._write.call(null, d.writer, clojure.string.upper_case.call(null, m))) : cljs.core._write.call(null, d.writer, clojure.string.lower_case.call(null, m));
      }
      throw Error([cljs.core.str("No matching clause: "), cljs.core.str(k)].join(""));
    };
  }(c), cljs.pprint.t_cljs$pprint20645.getBasis = function(b) {
    return function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "init-cap-writer", "init-cap-writer", -861558336, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), !0, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing the first word"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "capped", "capped", -1650988402, null), new cljs.core.Symbol(null, "meta20646", "meta20646", 752441631, null)], null);
    };
  }(c), cljs.pprint.t_cljs$pprint20645.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint20645.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint20645", cljs.pprint.t_cljs$pprint20645.cljs$lang$ctorPrWriter = function(b) {
    return function(b, c, d) {
      return cljs.core._write.call(null, c, "cljs.pprint/t_cljs$pprint20645");
    };
  }(c), cljs.pprint.__GT_t_cljs$pprint20645 = function(b) {
    return function(b, c, d, h) {
      return new cljs.pprint.t_cljs$pprint20645(b, c, d, h);
    };
  }(c));
  return new cljs.pprint.t_cljs$pprint20645(cljs$pprint$init_cap_writer, b, c, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.modify_case = function(a, b, c, d) {
  d = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(b));
  var e = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = a.call(null, cljs.core._STAR_out_STAR_);
  try {
    return cljs.pprint.execute_sub_format.call(null, d, c, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(b));
  } finally {
    cljs.core._STAR_out_STAR_ = e;
  }
};
cljs.pprint.get_pretty_writer = function(a) {
  return cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_.call(null, a)) ? a : cljs.pprint.pretty_writer.call(null, a, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_);
};
cljs.pprint.fresh_line = function() {
  return (null != cljs.core._STAR_out_STAR_ ? cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core._STAR_out_STAR_.cljs$core$IDeref$ || (cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) ? cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, 
  "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))))) ? null : cljs.pprint.prn.call(null) : cljs.pprint.prn.call(null);
};
cljs.pprint.absolute_tabulation = function(a, b, c) {
  c = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(a);
  a = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(a);
  var d = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  c = d < c ? c - d : cljs.core._EQ_.call(null, a, 0) ? 0 : a - cljs.core.rem.call(null, d - c, a);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, c, " ")));
  return b;
};
cljs.pprint.relative_tabulation = function(a, b, c) {
  c = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(a);
  a = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(a);
  var d = c + cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))), d = 0 < a ? cljs.core.rem.call(null, d, a) : 0;
  c += cljs.core._EQ_.call(null, 0, d) ? 0 : a - d;
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, c, " ")));
  return b;
};
cljs.pprint.format_logical_block = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a), e = cljs.core.count.call(null, d);
  c = 1 < e ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.first.call(null, d)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? "(" : null;
  var f = cljs.core.nth.call(null, d, 1 < e ? 1 : 0), d = 2 < e ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.nth.call(null, d, 2)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? ")" : null, e = cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, e, 0, null);
  e = cljs.core.nth.call(null, e, 1, null);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var g = cljs.pprint._STAR_current_level_STAR_, h = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, c, null, d), cljs.pprint.execute_sub_format.call(null, f, cljs.pprint.init_navigator.call(null, b), (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a)), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = h, cljs.pprint._STAR_current_level_STAR_ = g;
    }
  }
  return e;
};
cljs.pprint.set_indent = function(a, b, c) {
  c = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.Keyword(null, "current", "current", -1088038603) : new cljs.core.Keyword(null, "block", "block", 664686210);
  cljs.pprint.pprint_indent.call(null, c, (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(a));
  return b;
};
cljs.pprint.conditional_newline = function(a, b, c) {
  a = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336) : new cljs.core.Keyword(null, "fill", "fill", 883462889) : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.Keyword(null, "miser", "miser", 
  -556060186) : new cljs.core.Keyword(null, "linear", "linear", 872268697);
  cljs.pprint.pprint_newline.call(null, a);
  return b;
};
cljs.pprint.directive_table = cljs.core.PersistentHashMap.fromArrays("ASDBOXRPCFEG$%\x26|~\nT*?()[;]{}\x3c\x3e^W_I".split(""), [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "A", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], 
null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), 
new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 
811851656), function(a, b) {
  return function(a, b, e) {
    return cljs.pprint.format_ascii.call(null, cljs.core.print_str, a, b, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "S", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    return cljs.pprint.format_ascii.call(null, cljs.core.pr_str, a, b, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "D", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    return cljs.pprint.format_integer.call(null, 10, a, b, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "B", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    return cljs.pprint.format_integer.call(null, 2, a, b, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "O", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    return cljs.pprint.format_integer.call(null, 8, a, b, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "X", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    return cljs.pprint.format_integer.call(null, 16, a, b, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "R", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.core.truth_(cljs.core.first.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(a))) ? function(a, b, e) {
    return cljs.pprint.format_integer.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(a), a, b, e);
  } : cljs.core.truth_(function() {
    var b = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a) : b;
  }()) ? function(a, b, e) {
    return cljs.pprint.format_old_roman.call(null, a, b, e);
  } : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? function(a, b, e) {
    return cljs.pprint.format_new_roman.call(null, a, b, e);
  } : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? function(a, b, e) {
    return cljs.pprint.format_ordinal_english.call(null, a, b, e);
  } : function(a, b, e) {
    return cljs.pprint.format_cardinal_english.call(null, a, b, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "P", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    b = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.relative_reposition.call(null, b, -1) : b;
    a = cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y", "ies"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "s"], null);
    e = cljs.pprint.next_arg.call(null, b);
    b = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    cljs.pprint.print.call(null, cljs.core._EQ_.call(null, b, 1) ? cljs.core.first.call(null, a) : cljs.core.second.call(null, a));
    return e;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "C", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "char-format", "char-format", -1016499218), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.pretty_character : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.readable_character : cljs.pprint.plain_character;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "F", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.fixed_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "E", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.exponential_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "G", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.general_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "$", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, Number], null), new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.dollar_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "%", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    a = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(a);
    for (e = 0;;) {
      if (e < a) {
        cljs.pprint.prn.call(null), e += 1;
      } else {
        break;
      }
    }
    return b;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x26", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    a = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(a);
    0 < a && cljs.pprint.fresh_line.call(null);
    --a;
    for (e = 0;;) {
      if (e < a) {
        cljs.pprint.prn.call(null), e += 1;
      } else {
        break;
      }
    }
    return b;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "|", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    a = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(a);
    for (e = 0;;) {
      if (e < a) {
        cljs.pprint.print.call(null, "\f"), e += 1;
      } else {
        break;
      }
    }
    return b;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "~", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    a = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(a);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, a, "~")));
    return b;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\n", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), 
new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) && cljs.pprint.prn.call(null);
    return b;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "T", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colnum", "colnum", 2023796854), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, 
b) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? function(a, b, e) {
    return cljs.pprint.relative_tabulation.call(null, a, b, e);
  } : function(a, b, e) {
    return cljs.pprint.absolute_tabulation.call(null, a, b, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "*", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    e = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.absolute_reposition.call(null, b, e) : cljs.pprint.relative_reposition.call(null, b, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? -e : e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "?", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), 
cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? function(a, b, e) {
    e = cljs.pprint.get_format_arg.call(null, b);
    b = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    return cljs.pprint.execute_sub_format.call(null, b, e, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a));
  } : function(a, b, e) {
    e = cljs.pprint.get_format_arg.call(null, b);
    b = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    var f = cljs.pprint.next_arg.call(null, e);
    e = cljs.core.nth.call(null, f, 0, null);
    f = cljs.core.nth.call(null, f, 1, null);
    e = cljs.pprint.init_navigator.call(null, e);
    cljs.pprint.execute_sub_format.call(null, b, e, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a));
    return f;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "(", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), ")", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), null, new cljs.core.Keyword(null, "else", "else", -1508377146), null], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a) {
    return function(b, e, f) {
      return cljs.pprint.modify_case.call(null, a, b, e, f);
    };
  }(cljs.core.truth_(function() {
    var b = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a) : b;
  }()) ? cljs.pprint.upcase_writer : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.capitalize_word_writer : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.init_cap_writer : cljs.pprint.downcase_writer);
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ")", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, 
b) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "[", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selector", "selector", 762528866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "]", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), !0, new cljs.core.Keyword(null, "else", "else", -1508377146), 
new cljs.core.Keyword(null, "last", "last", 1105735132)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.boolean_conditional : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.check_arg_conditional : cljs.pprint.choice_conditional;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ";", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), !0], null), new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(a, b) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "]", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, 
b) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "{", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), "}", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
!1], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.core.truth_(function() {
    var b = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a) : b;
  }()) ? cljs.pprint.iterate_main_sublists : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.iterate_list_of_sublists : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.iterate_main_list : cljs.pprint.iterate_sublist;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "}", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3c", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "\x3e", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
!0, new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.Keyword(null, "first", "first", -644103046)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.logical_block_or_justify;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3e", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "^", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, 
new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    e = (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a);
    var f = (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), g = (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), h = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007) : new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333);
    return cljs.core.truth_(cljs.core.truth_(e) ? cljs.core.truth_(f) ? g : f : e) ? e <= f && f <= g ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, b], null) : b : cljs.core.truth_(cljs.core.truth_(e) ? f : e) ? cljs.core._EQ_.call(null, e, f) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, b], null) : b : cljs.core.truth_(e) ? cljs.core._EQ_.call(null, e, 0) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [h, b], null) : b : (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a))) : cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(b))) ? new cljs.core.PersistentVector(null, 
    2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, b], null) : b;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "W", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.core.truth_(function() {
    var b = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? b : (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a);
  }()) ? function(a) {
    return function(b, e, f) {
      e = cljs.pprint.next_arg.call(null, e);
      b = cljs.core.nth.call(null, e, 0, null);
      e = cljs.core.nth.call(null, e, 1, null);
      return cljs.core.truth_(cljs.core.apply.call(null, cljs.pprint.write, b, a)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), e], null) : e;
    };
  }(cljs.core.concat.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1290497552), null, new cljs.core.Keyword(null, "length", "length", 588987862), null], null) : cljs.core.PersistentVector.EMPTY, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), !0], null) : cljs.core.PersistentVector.EMPTY)) : function(a, b, e) {
    b = cljs.pprint.next_arg.call(null, b);
    a = cljs.core.nth.call(null, b, 0, null);
    b = cljs.core.nth.call(null, b, 1, null);
    return cljs.core.truth_(cljs.pprint.write_out.call(null, a)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), b], null) : b;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "_", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.conditional_newline;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "I", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.set_indent;
}], null)]);
cljs.pprint.param_pattern = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/;
cljs.pprint.special_params = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335), null, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196), null], null), null);
cljs.pprint.extract_param = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null), d = cljs.core.nth.call(null, a, 2, null);
  a = new RegExp(cljs.pprint.param_pattern.source, "g");
  var e = a.exec(b);
  return cljs.core.truth_(e) ? (d = cljs.core.first.call(null, e), b = cljs.core.subs.call(null, b, a.lastIndex), a = c + a.lastIndex, cljs.core._EQ_.call(null, ",", cljs.core.nth.call(null, b, 0)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, c], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, b, 1), a + 1, 
  !0], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, c], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a, !1], null)], null)) : cljs.core.truth_(d) ? cljs.pprint.format_error.call(null, "Badly formed parameters in format directive", c) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c], null)], null);
};
cljs.pprint.extract_params = function(a, b) {
  return cljs.pprint.consume.call(null, cljs.pprint.extract_param, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, !1], null));
};
cljs.pprint.translate_param = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, b.length, 0) ? null : cljs.core._EQ_.call(null, b.length, 1) && cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["V", null, "v", null], null), null), cljs.core.nth.call(null, b, 0)) ? new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196) : cljs.core._EQ_.call(null, b.length, 1) && 
  cljs.core._EQ_.call(null, "#", cljs.core.nth.call(null, b, 0)) ? new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335) : cljs.core._EQ_.call(null, b.length, 2) && cljs.core._EQ_.call(null, "'", cljs.core.nth.call(null, b, 0)) ? cljs.core.nth.call(null, b, 1) : parseInt(b, 10), a], null);
};
cljs.pprint.flag_defs = new cljs.core.PersistentArrayMap(null, 2, [":", new cljs.core.Keyword(null, "colon", "colon", -965200945), "@", new cljs.core.Keyword(null, "at", "at", 1476951349)], null);
cljs.pprint.extract_flags = function(a, b) {
  return cljs.pprint.consume.call(null, function(a) {
    var b = cljs.core.nth.call(null, a, 0, null), e = cljs.core.nth.call(null, a, 1, null);
    a = cljs.core.nth.call(null, a, 2, null);
    if (cljs.core.empty_QMARK_.call(null, b)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, e, a], null)], null);
    }
    var f = cljs.core.get.call(null, cljs.pprint.flag_defs, cljs.core.first.call(null, b));
    return cljs.core.truth_(f) ? cljs.core.contains_QMARK_.call(null, a, f) ? cljs.pprint.format_error.call(null, [cljs.core.str('Flag "'), cljs.core.str(cljs.core.first.call(null, b)), cljs.core.str('" appears more than once in a directive')].join(""), e) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, b, 1), e + 1, cljs.core.assoc.call(null, a, f, 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, e], null))], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, e, a], null)], null);
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.pprint.check_flags = function(a, b) {
  var c = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(a);
  cljs.core.truth_(function() {
    var a = cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(c));
    return a ? (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b) : a;
  }()) && cljs.pprint.format_error.call(null, [cljs.core.str('"@" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(a)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b), 1));
  cljs.core.truth_(function() {
    var a = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(c));
    return a ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(b) : a;
  }()) && cljs.pprint.format_error.call(null, [cljs.core.str('":" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(a)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(b), 1));
  return cljs.core.truth_(function() {
    var a = cljs.core.not.call(null, (new cljs.core.Keyword(null, "both", "both", -393648840)).cljs$core$IFn$_invoke$arity$1(c));
    return a ? (a = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b), cljs.core.truth_(a) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(b) : a) : a;
  }()) ? cljs.pprint.format_error.call(null, [cljs.core.str('Cannot combine "@" and ":" flags for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(a)), cljs.core.str('"')].join(""), function() {
    var a = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(b), 1), c = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b), 1);
    return a < c ? a : c;
  }()) : null;
};
cljs.pprint.map_params = function(a, b, c, d) {
  cljs.pprint.check_flags.call(null, a, c);
  cljs.core.count.call(null, b) > cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a)) && cljs.pprint.format_error.call(null, cljs.pprint.cl_format.call(null, null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.count.call(null, b), cljs.core.count.call(null, 
  (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a))), cljs.core.second.call(null, cljs.core.first.call(null, b)));
  cljs.core.doall.call(null, cljs.core.map.call(null, function(b, c) {
    var d = cljs.core.first.call(null, b);
    return null == d || cljs.core.contains_QMARK_.call(null, cljs.pprint.special_params, d) || cljs.core._EQ_.call(null, cljs.core.second.call(null, cljs.core.second.call(null, c)), cljs.core.type.call(null, d)) ? null : cljs.pprint.format_error.call(null, [cljs.core.str("Parameter "), cljs.core.str(cljs.core.name.call(null, cljs.core.first.call(null, c))), cljs.core.str(' has bad type in directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(a)), 
    cljs.core.str('": '), cljs.core.str(cljs.core.type.call(null, d))].join(""), cljs.core.second.call(null, b));
  }, b, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a)));
  return cljs.core.merge.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.reverse.call(null, function() {
    return function f(a) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var b = cljs.core.seq.call(null, a);
          if (b) {
            if (cljs.core.chunked_seq_QMARK_.call(null, b)) {
              var c = cljs.core.chunk_first.call(null, b), m = cljs.core.count.call(null, c), l = cljs.core.chunk_buffer.call(null, m);
              a: {
                for (var n = 0;;) {
                  if (n < m) {
                    var p = cljs.core._nth.call(null, c, n), q = cljs.core.nth.call(null, p, 0, null), p = cljs.core.nth.call(null, p, 1, null), p = cljs.core.nth.call(null, p, 0, null);
                    cljs.core.chunk_append.call(null, l, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [q, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, d], null)], null));
                    n += 1;
                  } else {
                    c = !0;
                    break a;
                  }
                }
              }
              return c ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, l), f.call(null, cljs.core.chunk_rest.call(null, b))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, l), null);
            }
            c = cljs.core.first.call(null, b);
            l = cljs.core.nth.call(null, c, 0, null);
            c = cljs.core.nth.call(null, c, 1, null);
            c = cljs.core.nth.call(null, c, 0, null);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [l, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d], null)], null), f.call(null, cljs.core.rest.call(null, b)));
          }
          return null;
        }
      }, null, null);
    }.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a));
  }())), cljs.core.reduce.call(null, function(a, b) {
    return cljs.core.apply.call(null, cljs.core.assoc, a, b);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(a) {
    return cljs.core.first.call(null, cljs.core.nth.call(null, a, 1));
  }, cljs.core.zipmap.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a)), b))), c);
};
cljs.pprint.compile_directive = function(a, b) {
  var c = cljs.pprint.extract_params.call(null, a, b), d = cljs.core.nth.call(null, c, 0, null), e = cljs.core.nth.call(null, c, 1, null), c = cljs.core.nth.call(null, e, 0, null), e = cljs.core.nth.call(null, e, 1, null), c = cljs.pprint.extract_flags.call(null, c, e);
  cljs.core.nth.call(null, c, 0, null);
  var e = cljs.core.nth.call(null, c, 1, null), f = cljs.core.nth.call(null, e, 0, null), c = cljs.core.nth.call(null, e, 1, null), g = cljs.core.nth.call(null, e, 2, null), h = cljs.core.first.call(null, f), e = cljs.core.get.call(null, cljs.pprint.directive_table, clojure.string.upper_case.call(null, h)), k = cljs.core.truth_(e) ? cljs.pprint.map_params.call(null, e, cljs.core.map.call(null, cljs.pprint.translate_param, d), g, c) : null;
  cljs.core.not.call(null, h) && cljs.pprint.format_error.call(null, "Format string ended in the middle of a directive", c);
  cljs.core.not.call(null, e) && cljs.pprint.format_error.call(null, [cljs.core.str('Directive "'), cljs.core.str(h), cljs.core.str('" is undefined')].join(""), c);
  d = cljs.core.PersistentVector;
  h = cljs.core.PersistentVector.EMPTY_NODE;
  g = new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656)).cljs$core$IFn$_invoke$arity$1(e).call(null, k, c), e, k, c, null, null, null);
  f = cljs.core.subs.call(null, f, 1);
  c += 1;
  e = cljs.core._EQ_.call(null, "\n", (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(e)) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(k)) ? cljs.pprint.prefix_count.call(null, f, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", "\t"], null)) : 0;
  f = cljs.core.subs.call(null, f, e);
  c = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, c + e], null);
  return new d(null, 2, 5, h, [g, c], null);
};
cljs.pprint.compile_raw_string = function(a, b) {
  return new cljs.pprint.compiled_directive(function(b, d, e) {
    cljs.pprint.print.call(null, a);
    return d;
  }, null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "string", "string", -1989541586), a], null), b, null, null, null);
};
cljs.pprint.right_bracket = function(a) {
  return (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a)));
};
cljs.pprint.separator_QMARK_ = function(a) {
  return (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a)));
};
cljs.pprint.else_separator_QMARK_ = function(a) {
  var b = (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a)));
  return cljs.core.truth_(b) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a)) : b;
};
cljs.pprint.collect_clauses;
cljs.pprint.process_bracket = function(a, b) {
  var c = cljs.pprint.collect_clauses.call(null, (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(a), b), d = cljs.core.nth.call(null, c, 0, null), c = cljs.core.nth.call(null, c, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a), cljs.pprint.tuple_map.call(null, d, (new cljs.core.Keyword(null, "offset", 
  "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(a))), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(a), null, null, null), c], null);
};
cljs.pprint.process_clause = function(a, b, c) {
  return cljs.pprint.consume.call(null, function(c) {
    if (cljs.core.empty_QMARK_.call(null, c)) {
      return cljs.pprint.format_error.call(null, "No closing bracket found.", b);
    }
    var e = cljs.core.first.call(null, c);
    c = cljs.core.next.call(null, c);
    return cljs.core.truth_(cljs.pprint.right_bracket.call(null, e)) ? cljs.pprint.process_bracket.call(null, e, c) : cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(e))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(e), null, c], null)], null) : cljs.core.truth_(cljs.pprint.else_separator_QMARK_.call(null, e)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [new cljs.core.Keyword(null, "else", "else", -1508377146), null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(e), c], null)], null) : cljs.core.truth_(cljs.pprint.separator_QMARK_.call(null, e)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), null, null, c], 
    null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, c], null);
  }, c);
};
cljs.pprint.collect_clauses = function(a, b, c) {
  return cljs.core.second.call(null, cljs.pprint.consume.call(null, function(c) {
    var e = cljs.core.nth.call(null, c, 0, null), f = cljs.core.nth.call(null, c, 1, null);
    c = cljs.core.nth.call(null, c, 2, null);
    var g = cljs.pprint.process_clause.call(null, a, b, c);
    c = cljs.core.nth.call(null, g, 0, null);
    var h = cljs.core.nth.call(null, g, 1, null), g = cljs.core.nth.call(null, h, 0, null), k = cljs.core.nth.call(null, h, 1, null), m = cljs.core.nth.call(null, h, 2, null), h = cljs.core.nth.call(null, h, 3, null);
    return cljs.core._EQ_.call(null, g, new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, e, cljs.core.PersistentArrayMap.fromArray([cljs.core.truth_(f) ? new cljs.core.Keyword(null, "else", "else", -1508377146) : new cljs.core.Keyword(null, "clauses", 
    "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null), new cljs.core.Keyword(null, "right-params", "right-params", -1790676237), k], !0, !1)), h], null)], null) : cljs.core._EQ_.call(null, g, new cljs.core.Keyword(null, "else", "else", -1508377146)) ? cljs.core.truth_((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(e)) ? cljs.pprint.format_error.call(null, 'Two else clauses ("~:;") inside bracket construction.', 
    b) : cljs.core.not.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.format_error.call(null, 'An else clause ("~:;") is in a bracket type that doesn\'t support it.', b) : cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(a)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(e)) ? 
    cljs.pprint.format_error.call(null, 'The else clause ("~:;") is only allowed in the first position for this directive.', b) : cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, 
    cljs.core.concat, e, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null), new cljs.core.Keyword(null, "else-params", "else-params", -832171646), m], null)), !1, h], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, 
    cljs.core.concat, e, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null)], null)), !0, h], null)], null) : cljs.core._EQ_.call(null, g, new cljs.core.Keyword(null, "separator", "separator", -1628749125)) ? cljs.core.truth_(f) ? cljs.pprint.format_error.call(null, 'A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', 
    b) : cljs.core.not.call(null, (new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.format_error.call(null, 'A separator ("~;") is in a bracket type that doesn\'t support it.', b) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, e, new cljs.core.PersistentArrayMap(null, 
    1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null)], null)), !1, h], null)], null) : null;
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), cljs.core.PersistentVector.EMPTY], null), !1, c], null)));
};
cljs.pprint.process_nesting = function(a) {
  return cljs.core.first.call(null, cljs.pprint.consume.call(null, function(a) {
    var c = cljs.core.first.call(null, a);
    a = cljs.core.next.call(null, a);
    var d = (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(c));
    return cljs.core.truth_((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(d)) ? cljs.pprint.process_bracket.call(null, c, a) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, a], null);
  }, a));
};
cljs.pprint.compile_format = function(a) {
  var b = cljs.pprint._STAR_format_str_STAR_;
  cljs.pprint._STAR_format_str_STAR_ = a;
  try {
    return cljs.pprint.process_nesting.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(a) {
      return function(a) {
        var b = cljs.core.nth.call(null, a, 0, null);
        a = cljs.core.nth.call(null, a, 1, null);
        if (cljs.core.empty_QMARK_.call(null, b)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, b], null);
        }
        var c = b.indexOf("~");
        return 0 > c ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, b, a), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", a + b.length], null)], null) : 0 === c ? cljs.pprint.compile_directive.call(null, cljs.core.subs.call(null, b, 1), a + 1) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, cljs.core.subs.call(null, 
        b, 0, c), a), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, b, c), c + a], null)], null);
      };
    }(b), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, 0], null))));
  } finally {
    cljs.pprint._STAR_format_str_STAR_ = b;
  }
};
cljs.pprint.needs_pretty = function cljs$pprint$needs_pretty(b) {
  for (var c = b;;) {
    if (cljs.core.empty_QMARK_.call(null, c)) {
      return !1;
    }
    if (cljs.core.truth_(function() {
      var b = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, c))));
      if (cljs.core.truth_(b)) {
        return b;
      }
      b = cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, c)))));
      return cljs.core.truth_(b) ? b : cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, c)))));
    }())) {
      return !0;
    }
    c = cljs.core.next.call(null, c);
  }
};
cljs.pprint.execute_format = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 2:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = new goog.string.StringBuffer, e = cljs.core.not.call(null, a) || !0 === a ? new cljs.core.StringBufferWriter(d) : a, f = cljs.core.truth_(function() {
    var a = cljs.pprint.needs_pretty.call(null, b);
    return cljs.core.truth_(a) ? cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, e)) : a;
  }()) ? cljs.pprint.get_pretty_writer.call(null, e) : e, g = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = f;
  try {
    try {
      cljs.pprint.execute_format.call(null, b, c);
    } finally {
      e !== f && cljs.core._flush.call(null, f);
    }
    return cljs.core.not.call(null, a) ? "" + cljs.core.str(d) : !0 === a ? cljs.core._STAR_print_fn_STAR_.call(null, "" + cljs.core.str(d)) : null;
  } finally {
    cljs.core._STAR_out_STAR_ = g;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  cljs.pprint.map_passing_context.call(null, function(a, b) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, b))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, b], null);
    }
    var e = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a), b), f = cljs.core.nth.call(null, e, 0, null), e = cljs.core.nth.call(null, e, 1, null), g = cljs.pprint.unzip_map.call(null, f), f = cljs.core.nth.call(null, g, 0, null), g = cljs.core.nth.call(null, g, 1, null), f = cljs.core.assoc.call(null, f, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), e);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, e, g], null))], null);
  }, b, a);
  return null;
};
cljs.pprint.execute_format.cljs$lang$maxFixedArity = 3;
cljs.pprint.cached_compile = cljs.core.memoize.call(null, cljs.pprint.compile_format);
cljs.pprint.use_method = function(a, b, c) {
  return cljs.core._add_method.call(null, a, b, c);
};
cljs.pprint.reader_macros = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "'", new cljs.core.Symbol(null, "var", "var", 870848730, null), "#'", new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), "@", new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), "~", new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null), "@", new cljs.core.Symbol("cljs.core", 
"unquote", "cljs.core/unquote", 1013085760, null), "~"], null);
cljs.pprint.pprint_reader_macro = function(a) {
  var b = cljs.pprint.reader_macros.call(null, cljs.core.first.call(null, a));
  return cljs.core.truth_(cljs.core.truth_(b) ? cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, a)) : b) ? (cljs.core._write.call(null, cljs.core._STAR_out_STAR_, b), cljs.pprint.write_out.call(null, cljs.core.second.call(null, a)), !0) : null;
};
cljs.pprint.pprint_simple_list = function(a) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      for (var d = 0, e = cljs.core.seq.call(null, a);;) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
          if (e && (cljs.pprint.write_out.call(null, cljs.core.first.call(null, e)), cljs.core.next.call(null, e))) {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            a = d + 1;
            var f = cljs.core.next.call(null, e), d = a, e = f;
            continue;
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
    }
  }
  return null;
};
cljs.pprint.pprint_list = function(a) {
  return cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, a)) ? cljs.pprint.pprint_simple_list.call(null, a) : null;
};
cljs.pprint.pprint_vector = function(a) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      for (var d = 0, e = cljs.core.seq.call(null, a);;) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
          if (e && (cljs.pprint.write_out.call(null, cljs.core.first.call(null, e)), cljs.core.next.call(null, e))) {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            a = d + 1;
            var f = cljs.core.next.call(null, e), d = a, e = f;
            continue;
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
    }
  }
  return null;
};
cljs.pprint.pprint_array = function() {
  return function(a, b) {
    return function() {
      var a = function(a) {
        a = cljs.pprint.init_navigator.call(null, a);
        return cljs.pprint.execute_format.call(null, b, a);
      }, d = function(b) {
        var d = null;
        if (0 < arguments.length) {
          for (var d = 0, g = Array(arguments.length - 0);d < g.length;) {
            g[d] = arguments[d + 0], ++d;
          }
          d = new cljs.core.IndexedSeq(g, 0);
        }
        return a.call(this, d);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(b) {
        b = cljs.core.seq(b);
        return a(b);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = a;
      return d;
    }();
  }("~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e", cljs.pprint.cached_compile.call(null, "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e"));
}();
cljs.pprint.pprint_map = function(a) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "{", null, "}");
      for (var d = 0, e = cljs.core.seq.call(null, a);;) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
          if (e) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var f = cljs.pprint._STAR_current_level_STAR_, g = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ += 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null), cljs.pprint.write_out.call(null, cljs.core.ffirst.call(null, e)), cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " "), cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697)), cljs.pprint._STAR_current_length_STAR_ = 0, cljs.pprint.write_out.call(null, cljs.core.fnext.call(null, cljs.core.first.call(null, e))), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = g, cljs.pprint._STAR_current_level_STAR_ = f;
              }
            }
            if (cljs.core.next.call(null, e)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, ", ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              a = d + 1;
              var h = cljs.core.next.call(null, e), d = a, e = h;
              continue;
            }
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
    }
  }
  return null;
};
cljs.pprint.pprint_simple_default = function(a) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, a));
};
cljs.pprint.pprint_set = function() {
  return function(a, b) {
    return function() {
      var a = function(a) {
        a = cljs.pprint.init_navigator.call(null, a);
        return cljs.pprint.execute_format.call(null, b, a);
      }, d = function(b) {
        var d = null;
        if (0 < arguments.length) {
          for (var d = 0, g = Array(arguments.length - 0);d < g.length;) {
            g[d] = arguments[d + 0], ++d;
          }
          d = new cljs.core.IndexedSeq(g, 0);
        }
        return a.call(this, d);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(b) {
        b = cljs.core.seq(b);
        return a(b);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = a;
      return d;
    }();
  }("~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e", cljs.pprint.cached_compile.call(null, "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e"));
}();
cljs.pprint.type_map = new cljs.core.PersistentArrayMap(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
cljs.pprint.map_ref_type = function(a) {
  var b;
  b = cljs.core.re_find.call(null, /^[^$]+\$[^$]+/, a);
  b = cljs.core.truth_(b) ? cljs.pprint.type_map.call(null, b) : null;
  return cljs.core.truth_(b) ? b : a;
};
cljs.pprint.pprint_ideref = function(a) {
  var b = [cljs.core.str("#\x3c"), cljs.core.str(cljs.pprint.map_ref_type.call(null, cljs.core.type.call(null, a).name)), cljs.core.str("@"), cljs.core.str(goog.getUid(a)), cljs.core.str(": ")].join("");
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var c = cljs.pprint._STAR_current_level_STAR_, d = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, b, null, "\x3e"), cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), -(cljs.core.count.call(null, b) - 2)), cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697)), cljs.pprint.write_out.call(null, function() {
        var b = null != a ? a.cljs$lang$protocol_mask$partition1$ & 1 || a.cljs$core$IPending$ ? !0 : a.cljs$lang$protocol_mask$partition1$ ? !1 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, a) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, a);
        return b ? !cljs.core._realized_QMARK_.call(null, a) : b;
      }() ? new cljs.core.Keyword(null, "not-delivered", "not-delivered", 1599158697) : cljs.core.deref.call(null, a)), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = d, cljs.pprint._STAR_current_level_STAR_ = c;
    }
  }
  return null;
};
cljs.pprint.pprint_pqueue = function() {
  return function(a, b) {
    return function() {
      var a = function(a) {
        a = cljs.pprint.init_navigator.call(null, a);
        return cljs.pprint.execute_format.call(null, b, a);
      }, d = function(b) {
        var d = null;
        if (0 < arguments.length) {
          for (var d = 0, g = Array(arguments.length - 0);d < g.length;) {
            g[d] = arguments[d + 0], ++d;
          }
          d = new cljs.core.IndexedSeq(g, 0);
        }
        return a.call(this, d);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(b) {
        b = cljs.core.seq(b);
        return a(b);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = a;
      return d;
    }();
  }("~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e", cljs.pprint.cached_compile.call(null, "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e"));
}();
cljs.pprint.type_dispatcher = function(a) {
  return a instanceof cljs.core.PersistentQueue ? new cljs.core.Keyword(null, "queue", "queue", 1455835879) : (null != a ? a.cljs$lang$protocol_mask$partition0$ & 32768 || a.cljs$core$IDeref$ || (a.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, a)) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, a)) ? new cljs.core.Keyword(null, "deref", "deref", -145586795) : a instanceof cljs.core.Symbol ? new cljs.core.Keyword(null, "symbol", 
  "symbol", -1038572696) : cljs.core.seq_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "list", "list", 765357683) : cljs.core.map_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "map", "map", 1371690461) : cljs.core.vector_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "vector", "vector", 1902966158) : cljs.core.set_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "set", "set", 304602554) : null == a ? null : new cljs.core.Keyword(null, "default", "default", -1987822328);
};
"undefined" === typeof cljs.pprint.simple_dispatch && (cljs.pprint.simple_dispatch = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "simple-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_list);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, null, function() {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, null));
});
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.pprint_simple_code_list;
cljs.pprint.brackets = function(a) {
  return cljs.core.vector_QMARK_.call(null, a) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "]"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(", ")"], null);
};
cljs.pprint.pprint_ns_reference = function(a) {
  if (cljs.core.sequential_QMARK_.call(null, a)) {
    var b = cljs.pprint.brackets.call(null, a), c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null), e = cljs.core.nth.call(null, a, 0, null), f = cljs.core.nthnext.call(null, a, 1);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var g = cljs.pprint._STAR_current_level_STAR_, h = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ += 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, c, null, d);
        (function() {
          return function(a, b, c, d, e, f, g, h, k, m) {
            return function() {
              var a = function(a) {
                a = cljs.pprint.init_navigator.call(null, a);
                return cljs.pprint.execute_format.call(null, b, a);
              }, c = function(b) {
                var c = null;
                if (0 < arguments.length) {
                  for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                    d[c] = arguments[c + 0], ++c;
                  }
                  c = new cljs.core.IndexedSeq(d, 0);
                }
                return a.call(this, c);
              };
              c.cljs$lang$maxFixedArity = 0;
              c.cljs$lang$applyTo = function(b) {
                b = cljs.core.seq(b);
                return a(b);
              };
              c.cljs$core$IFn$_invoke$arity$variadic = a;
              return c;
            }();
          }("~w~:i", cljs.pprint.cached_compile.call(null, "~w~:i"), g, h, b, c, d, a, e, f);
        })().call(null, e);
        for (var k = f;;) {
          if (cljs.core.seq.call(null, k)) {
            (function() {
              var m = cljs.pprint.cached_compile.call(null, " ");
              return function(a, b, c, d, e, f, g, h, k, m, l) {
                return function() {
                  var a = function(a) {
                    a = cljs.pprint.init_navigator.call(null, a);
                    return cljs.pprint.execute_format.call(null, c, a);
                  }, b = function(b) {
                    var c = null;
                    if (0 < arguments.length) {
                      for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                        d[c] = arguments[c + 0], ++c;
                      }
                      c = new cljs.core.IndexedSeq(d, 0);
                    }
                    return a.call(this, c);
                  };
                  b.cljs$lang$maxFixedArity = 0;
                  b.cljs$lang$applyTo = function(b) {
                    b = cljs.core.seq(b);
                    return a(b);
                  };
                  b.cljs$core$IFn$_invoke$arity$variadic = a;
                  return b;
                }();
              }(k, " ", m, g, h, b, c, d, a, e, f);
            })().call(null);
            var m = cljs.core.first.call(null, k);
            if (cljs.core.sequential_QMARK_.call(null, m)) {
              var l = cljs.pprint.brackets.call(null, m), n = cljs.core.nth.call(null, l, 0, null), p = cljs.core.nth.call(null, l, 1, null);
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var q = cljs.pprint._STAR_current_level_STAR_, r = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ += 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, n, null, p);
                  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, m), 3) && cljs.core.second.call(null, m) instanceof cljs.core.Keyword) {
                    var t = m, u = cljs.core.nth.call(null, t, 0, null), v = cljs.core.nth.call(null, t, 1, null), w = cljs.core.nth.call(null, t, 2, null);
                    (function() {
                      var x = cljs.pprint.cached_compile.call(null, "~w ~w ");
                      return function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, x, W) {
                        return function() {
                          var a = function(a) {
                            a = cljs.pprint.init_navigator.call(null, a);
                            return cljs.pprint.execute_format.call(null, c, a);
                          }, b = function(b) {
                            var c = null;
                            if (0 < arguments.length) {
                              for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                                d[c] = arguments[c + 0], ++c;
                              }
                              c = new cljs.core.IndexedSeq(d, 0);
                            }
                            return a.call(this, c);
                          };
                          b.cljs$lang$maxFixedArity = 0;
                          b.cljs$lang$applyTo = function(b) {
                            b = cljs.core.seq(b);
                            return a(b);
                          };
                          b.cljs$core$IFn$_invoke$arity$variadic = a;
                          return b;
                        }();
                      }(k, "~w ~w ", x, t, u, v, w, q, r, l, n, p, m, g, h, b, c, d, a, e, f);
                    })().call(null, u, v);
                    cljs.core.sequential_QMARK_.call(null, w) ? function() {
                      var x = cljs.core.vector_QMARK_.call(null, w) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e", y = "string" === typeof x ? cljs.pprint.cached_compile.call(null, x) : x;
                      return function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v, u, w, x, y) {
                        return function() {
                          var a = function(a) {
                            a = cljs.pprint.init_navigator.call(null, a);
                            return cljs.pprint.execute_format.call(null, c, a);
                          }, b = function(b) {
                            var c = null;
                            if (0 < arguments.length) {
                              for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                                d[c] = arguments[c + 0], ++c;
                              }
                              c = new cljs.core.IndexedSeq(d, 0);
                            }
                            return a.call(this, c);
                          };
                          b.cljs$lang$maxFixedArity = 0;
                          b.cljs$lang$applyTo = function(b) {
                            b = cljs.core.seq(b);
                            return a(b);
                          };
                          b.cljs$core$IFn$_invoke$arity$variadic = a;
                          return b;
                        }();
                      }(k, x, y, t, u, v, w, q, r, l, n, p, m, g, h, b, c, d, a, e, f);
                    }().call(null, w) : cljs.pprint.write_out.call(null, w);
                  } else {
                    cljs.core.apply.call(null, function() {
                      var t = cljs.pprint.cached_compile.call(null, "~w ~:i~@{~w~^ ~:_~}");
                      return function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, v) {
                        return function() {
                          var a = function(a) {
                            a = cljs.pprint.init_navigator.call(null, a);
                            return cljs.pprint.execute_format.call(null, c, a);
                          }, b = function(b) {
                            var c = null;
                            if (0 < arguments.length) {
                              for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                                d[c] = arguments[c + 0], ++c;
                              }
                              c = new cljs.core.IndexedSeq(d, 0);
                            }
                            return a.call(this, c);
                          };
                          b.cljs$lang$maxFixedArity = 0;
                          b.cljs$lang$applyTo = function(b) {
                            b = cljs.core.seq(b);
                            return a(b);
                          };
                          b.cljs$core$IFn$_invoke$arity$variadic = a;
                          return b;
                        }();
                      }(k, "~w ~:i~@{~w~^ ~:_~}", t, q, r, l, n, p, m, g, h, b, c, d, a, e, f);
                    }(), m);
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = r, cljs.pprint._STAR_current_level_STAR_ = q;
                }
              }
              cljs.core.next.call(null, k) && function() {
                var q = cljs.pprint.cached_compile.call(null, "~_");
                return function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r) {
                  return function() {
                    var a = function(a) {
                      a = cljs.pprint.init_navigator.call(null, a);
                      return cljs.pprint.execute_format.call(null, c, a);
                    }, b = function(b) {
                      var c = null;
                      if (0 < arguments.length) {
                        for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                          d[c] = arguments[c + 0], ++c;
                        }
                        c = new cljs.core.IndexedSeq(d, 0);
                      }
                      return a.call(this, c);
                    };
                    b.cljs$lang$maxFixedArity = 0;
                    b.cljs$lang$applyTo = function(b) {
                      b = cljs.core.seq(b);
                      return a(b);
                    };
                    b.cljs$core$IFn$_invoke$arity$variadic = a;
                    return b;
                  }();
                }(k, "~_", q, l, n, p, m, g, h, b, c, d, a, e, f);
              }().call(null);
            } else {
              cljs.pprint.write_out.call(null, m), cljs.core.next.call(null, k) && function() {
                var l = cljs.pprint.cached_compile.call(null, "~:_");
                return function(a, b, c, d, e, f, g, h, k, m, l, n) {
                  return function() {
                    var a = function(a) {
                      a = cljs.pprint.init_navigator.call(null, a);
                      return cljs.pprint.execute_format.call(null, c, a);
                    }, b = function(b) {
                      var c = null;
                      if (0 < arguments.length) {
                        for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                          d[c] = arguments[c + 0], ++c;
                        }
                        c = new cljs.core.IndexedSeq(d, 0);
                      }
                      return a.call(this, c);
                    };
                    b.cljs$lang$maxFixedArity = 0;
                    b.cljs$lang$applyTo = function(b) {
                      b = cljs.core.seq(b);
                      return a(b);
                    };
                    b.cljs$core$IFn$_invoke$arity$variadic = a;
                    return b;
                  }();
                }(k, "~:_", l, m, g, h, b, c, d, a, e, f);
              }().call(null);
            }
            k = cljs.core.next.call(null, k);
          } else {
            break;
          }
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = h, cljs.pprint._STAR_current_level_STAR_ = g;
      }
    }
    return null;
  }
  return cljs.pprint.write_out.call(null, a);
};
cljs.pprint.pprint_ns = function(a) {
  if (cljs.core.next.call(null, a)) {
    var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null), d = cljs.core.nthnext.call(null, a, 2), e = "string" === typeof cljs.core.first.call(null, d) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, d), cljs.core.next.call(null, d)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, d], null), f = cljs.core.nth.call(null, e, 0, null), g = cljs.core.nth.call(null, 
    e, 1, null), h = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, g)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, g), cljs.core.next.call(null, g)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, g], null), k = cljs.core.nth.call(null, h, 0, null), m = cljs.core.nth.call(null, h, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var l = cljs.pprint._STAR_current_level_STAR_, n = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ += 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          return function(a, b, c, d, e, f, g, h, k, m, l, n, p, q) {
            return function() {
              var a = function(a) {
                a = cljs.pprint.init_navigator.call(null, a);
                return cljs.pprint.execute_format.call(null, b, a);
              }, c = function(b) {
                var c = null;
                if (0 < arguments.length) {
                  for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                    d[c] = arguments[c + 0], ++c;
                  }
                  c = new cljs.core.IndexedSeq(d, 0);
                }
                return a.call(this, c);
              };
              c.cljs$lang$maxFixedArity = 0;
              c.cljs$lang$applyTo = function(b) {
                b = cljs.core.seq(b);
                return a(b);
              };
              c.cljs$core$IFn$_invoke$arity$variadic = a;
              return c;
            }();
          }("~w ~1I~@_~w", cljs.pprint.cached_compile.call(null, "~w ~1I~@_~w"), l, n, a, b, c, d, e, f, g, h, k, m);
        })().call(null, b, c);
        cljs.core.truth_(cljs.core.truth_(f) ? f : cljs.core.truth_(k) ? k : cljs.core.seq.call(null, m)) && function() {
          return function(a, b, c, d, e, f, g, h, k, m, l, n, p, q) {
            return function() {
              var a = function(a) {
                a = cljs.pprint.init_navigator.call(null, a);
                return cljs.pprint.execute_format.call(null, b, a);
              }, c = function(b) {
                var c = null;
                if (0 < arguments.length) {
                  for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                    d[c] = arguments[c + 0], ++c;
                  }
                  c = new cljs.core.IndexedSeq(d, 0);
                }
                return a.call(this, c);
              };
              c.cljs$lang$maxFixedArity = 0;
              c.cljs$lang$applyTo = function(b) {
                b = cljs.core.seq(b);
                return a(b);
              };
              c.cljs$core$IFn$_invoke$arity$variadic = a;
              return c;
            }();
          }("~@:_", cljs.pprint.cached_compile.call(null, "~@:_"), l, n, a, b, c, d, e, f, g, h, k, m);
        }().call(null);
        cljs.core.truth_(f) && cljs.pprint.cl_format.call(null, !0, '"~a"~:[~;~:@_~]', f, cljs.core.truth_(k) ? k : cljs.core.seq.call(null, m));
        cljs.core.truth_(k) && function() {
          return function(a, b, c, d, e, f, g, h, k, m, l, n, p, q) {
            return function() {
              var a = function(a) {
                a = cljs.pprint.init_navigator.call(null, a);
                return cljs.pprint.execute_format.call(null, b, a);
              }, c = function(b) {
                var c = null;
                if (0 < arguments.length) {
                  for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                    d[c] = arguments[c + 0], ++c;
                  }
                  c = new cljs.core.IndexedSeq(d, 0);
                }
                return a.call(this, c);
              };
              c.cljs$lang$maxFixedArity = 0;
              c.cljs$lang$applyTo = function(b) {
                b = cljs.core.seq(b);
                return a(b);
              };
              c.cljs$core$IFn$_invoke$arity$variadic = a;
              return c;
            }();
          }("~w~:[~;~:@_~]", cljs.pprint.cached_compile.call(null, "~w~:[~;~:@_~]"), l, n, a, b, c, d, e, f, g, h, k, m);
        }().call(null, k, cljs.core.seq.call(null, m));
        for (var p = m;;) {
          cljs.pprint.pprint_ns_reference.call(null, cljs.core.first.call(null, p));
          var q = cljs.core.next.call(null, p);
          if (q) {
            var r = q;
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            p = r;
          } else {
            break;
          }
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = n, cljs.pprint._STAR_current_level_STAR_ = l;
      }
    }
    return null;
  }
  return cljs.pprint.write_out.call(null, a);
};
cljs.pprint.pprint_hold_first = function() {
  return function(a, b) {
    return function() {
      var a = function(a) {
        a = cljs.pprint.init_navigator.call(null, a);
        return cljs.pprint.execute_format.call(null, b, a);
      }, d = function(b) {
        var d = null;
        if (0 < arguments.length) {
          for (var d = 0, g = Array(arguments.length - 0);d < g.length;) {
            g[d] = arguments[d + 0], ++d;
          }
          d = new cljs.core.IndexedSeq(g, 0);
        }
        return a.call(this, d);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(b) {
        b = cljs.core.seq(b);
        return a(b);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = a;
      return d;
    }();
  }("~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e", cljs.pprint.cached_compile.call(null, "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e"));
}();
cljs.pprint.single_defn = function(a, b) {
  return cljs.core.seq.call(null, a) ? (cljs.core.truth_(b) ? function() {
    return function(a, b) {
      return function() {
        var a = function(a) {
          a = cljs.pprint.init_navigator.call(null, a);
          return cljs.pprint.execute_format.call(null, b, a);
        }, c = function(b) {
          var c = null;
          if (0 < arguments.length) {
            for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
              d[c] = arguments[c + 0], ++c;
            }
            c = new cljs.core.IndexedSeq(d, 0);
          }
          return a.call(this, c);
        };
        c.cljs$lang$maxFixedArity = 0;
        c.cljs$lang$applyTo = function(b) {
          b = cljs.core.seq(b);
          return a(b);
        };
        c.cljs$core$IFn$_invoke$arity$variadic = a;
        return c;
      }();
    }(" ~_", cljs.pprint.cached_compile.call(null, " ~_"));
  }().call(null) : function() {
    return function(a, b) {
      return function() {
        var a = function(a) {
          a = cljs.pprint.init_navigator.call(null, a);
          return cljs.pprint.execute_format.call(null, b, a);
        }, c = function(b) {
          var c = null;
          if (0 < arguments.length) {
            for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
              d[c] = arguments[c + 0], ++c;
            }
            c = new cljs.core.IndexedSeq(d, 0);
          }
          return a.call(this, c);
        };
        c.cljs$lang$maxFixedArity = 0;
        c.cljs$lang$applyTo = function(b) {
          b = cljs.core.seq(b);
          return a(b);
        };
        c.cljs$core$IFn$_invoke$arity$variadic = a;
        return c;
      }();
    }(" ~@_", cljs.pprint.cached_compile.call(null, " ~@_"));
  }().call(null), function() {
    return function(a, b) {
      return function() {
        var a = function(a) {
          a = cljs.pprint.init_navigator.call(null, a);
          return cljs.pprint.execute_format.call(null, b, a);
        }, c = function(b) {
          var c = null;
          if (0 < arguments.length) {
            for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
              d[c] = arguments[c + 0], ++c;
            }
            c = new cljs.core.IndexedSeq(d, 0);
          }
          return a.call(this, c);
        };
        c.cljs$lang$maxFixedArity = 0;
        c.cljs$lang$applyTo = function(b) {
          b = cljs.core.seq(b);
          return a(b);
        };
        c.cljs$core$IFn$_invoke$arity$variadic = a;
        return c;
      }();
    }("~{~w~^ ~_~}", cljs.pprint.cached_compile.call(null, "~{~w~^ ~_~}"));
  }().call(null, a)) : null;
};
cljs.pprint.multi_defn = function(a, b) {
  return cljs.core.seq.call(null, a) ? function() {
    return function(a, b) {
      return function() {
        var a = function(a) {
          a = cljs.pprint.init_navigator.call(null, a);
          return cljs.pprint.execute_format.call(null, b, a);
        }, c = function(b) {
          var c = null;
          if (0 < arguments.length) {
            for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
              d[c] = arguments[c + 0], ++c;
            }
            c = new cljs.core.IndexedSeq(d, 0);
          }
          return a.call(this, c);
        };
        c.cljs$lang$maxFixedArity = 0;
        c.cljs$lang$applyTo = function(b) {
          b = cljs.core.seq(b);
          return a(b);
        };
        c.cljs$core$IFn$_invoke$arity$variadic = a;
        return c;
      }();
    }(" ~_~{~w~^ ~_~}", cljs.pprint.cached_compile.call(null, " ~_~{~w~^ ~_~}"));
  }().call(null, a) : null;
};
cljs.pprint.pprint_defn = function(a) {
  if (cljs.core.next.call(null, a)) {
    var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null), d = cljs.core.nthnext.call(null, a, 2), e = "string" === typeof cljs.core.first.call(null, d) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, d), cljs.core.next.call(null, d)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, d], null), f = cljs.core.nth.call(null, e, 0, null), g = cljs.core.nth.call(null, 
    e, 1, null), h = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, g)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, g), cljs.core.next.call(null, g)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, g], null), k = cljs.core.nth.call(null, h, 0, null), m = cljs.core.nth.call(null, h, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var l = cljs.pprint._STAR_current_level_STAR_, n = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ += 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")"), function() {
          return function(a, b, c, d, e, f, g, h, k, m, l, n, C, A) {
            return function() {
              var a = function(a) {
                a = cljs.pprint.init_navigator.call(null, a);
                return cljs.pprint.execute_format.call(null, b, a);
              }, c = function(b) {
                var c = null;
                if (0 < arguments.length) {
                  for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                    d[c] = arguments[c + 0], ++c;
                  }
                  c = new cljs.core.IndexedSeq(d, 0);
                }
                return a.call(this, c);
              };
              c.cljs$lang$maxFixedArity = 0;
              c.cljs$lang$applyTo = function(b) {
                b = cljs.core.seq(b);
                return a(b);
              };
              c.cljs$core$IFn$_invoke$arity$variadic = a;
              return c;
            }();
          }("~w ~1I~@_~w", cljs.pprint.cached_compile.call(null, "~w ~1I~@_~w"), l, n, a, b, c, d, e, f, g, h, k, m);
        }().call(null, b, c), cljs.core.truth_(f) && function() {
          return function(a, b, c, d, e, f, g, h, k, m, l, n, C, A) {
            return function() {
              var a = function(a) {
                a = cljs.pprint.init_navigator.call(null, a);
                return cljs.pprint.execute_format.call(null, b, a);
              }, c = function(b) {
                var c = null;
                if (0 < arguments.length) {
                  for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                    d[c] = arguments[c + 0], ++c;
                  }
                  c = new cljs.core.IndexedSeq(d, 0);
                }
                return a.call(this, c);
              };
              c.cljs$lang$maxFixedArity = 0;
              c.cljs$lang$applyTo = function(b) {
                b = cljs.core.seq(b);
                return a(b);
              };
              c.cljs$core$IFn$_invoke$arity$variadic = a;
              return c;
            }();
          }(" ~_~w", cljs.pprint.cached_compile.call(null, " ~_~w"), l, n, a, b, c, d, e, f, g, h, k, m);
        }().call(null, f), cljs.core.truth_(k) && function() {
          return function(a, b, c, d, e, f, g, h, k, m, l, n, C, A) {
            return function() {
              var a = function(a) {
                a = cljs.pprint.init_navigator.call(null, a);
                return cljs.pprint.execute_format.call(null, b, a);
              }, c = function(b) {
                var c = null;
                if (0 < arguments.length) {
                  for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                    d[c] = arguments[c + 0], ++c;
                  }
                  c = new cljs.core.IndexedSeq(d, 0);
                }
                return a.call(this, c);
              };
              c.cljs$lang$maxFixedArity = 0;
              c.cljs$lang$applyTo = function(b) {
                b = cljs.core.seq(b);
                return a(b);
              };
              c.cljs$core$IFn$_invoke$arity$variadic = a;
              return c;
            }();
          }(" ~_~w", cljs.pprint.cached_compile.call(null, " ~_~w"), l, n, a, b, c, d, e, f, g, h, k, m);
        }().call(null, k), cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, m)) ? cljs.pprint.single_defn.call(null, m, cljs.core.truth_(f) ? f : k) : cljs.pprint.multi_defn.call(null, m, cljs.core.truth_(f) ? f : k), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = n, cljs.pprint._STAR_current_level_STAR_ = l;
      }
    }
    return null;
  }
  return cljs.pprint.pprint_simple_code_list.call(null, a);
};
cljs.pprint.pprint_binding_form = function(a) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      for (var d = 0;;) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
          if (cljs.core.seq.call(null, a)) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var e = cljs.pprint._STAR_current_level_STAR_, f = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ += 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null), cljs.pprint.write_out.call(null, cljs.core.first.call(null, a)), cljs.core.next.call(null, a) && (cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " "), cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186)), cljs.pprint.write_out.call(null, cljs.core.second.call(null, a))), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = f, cljs.pprint._STAR_current_level_STAR_ = e;
              }
            }
            if (cljs.core.next.call(null, cljs.core.rest.call(null, a))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var g = d + 1, h = cljs.core.next.call(null, cljs.core.rest.call(null, a)), d = g;
              a = h;
              continue;
            }
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
    }
  }
  return null;
};
cljs.pprint.pprint_let = function(a) {
  var b = cljs.core.first.call(null, a);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var c = cljs.pprint._STAR_current_level_STAR_, d = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")"), cljs.core.next.call(null, a) && cljs.core.vector_QMARK_.call(null, cljs.core.second.call(null, a)) ? (function() {
        return function(a, b, c, d, k) {
          return function() {
            var a = function(a) {
              a = cljs.pprint.init_navigator.call(null, a);
              return cljs.pprint.execute_format.call(null, b, a);
            }, c = function(b) {
              var c = null;
              if (0 < arguments.length) {
                for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                  d[c] = arguments[c + 0], ++c;
                }
                c = new cljs.core.IndexedSeq(d, 0);
              }
              return a.call(this, c);
            };
            c.cljs$lang$maxFixedArity = 0;
            c.cljs$lang$applyTo = function(b) {
              b = cljs.core.seq(b);
              return a(b);
            };
            c.cljs$core$IFn$_invoke$arity$variadic = a;
            return c;
          }();
        }("~w ~1I~@_", cljs.pprint.cached_compile.call(null, "~w ~1I~@_"), c, d, b);
      }().call(null, b), cljs.pprint.pprint_binding_form.call(null, cljs.core.second.call(null, a)), function() {
        return function(a, b, c, d, k) {
          return function() {
            var a = function(a) {
              a = cljs.pprint.init_navigator.call(null, a);
              return cljs.pprint.execute_format.call(null, b, a);
            }, c = function(b) {
              var c = null;
              if (0 < arguments.length) {
                for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                  d[c] = arguments[c + 0], ++c;
                }
                c = new cljs.core.IndexedSeq(d, 0);
              }
              return a.call(this, c);
            };
            c.cljs$lang$maxFixedArity = 0;
            c.cljs$lang$applyTo = function(b) {
              b = cljs.core.seq(b);
              return a(b);
            };
            c.cljs$core$IFn$_invoke$arity$variadic = a;
            return c;
          }();
        }(" ~_~{~w~^ ~_~}", cljs.pprint.cached_compile.call(null, " ~_~{~w~^ ~_~}"), c, d, b);
      }().call(null, cljs.core.next.call(null, cljs.core.rest.call(null, a)))) : cljs.pprint.pprint_simple_code_list.call(null, a), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = d, cljs.pprint._STAR_current_level_STAR_ = c;
    }
  }
  return null;
};
cljs.pprint.pprint_if = function() {
  return function(a, b) {
    return function() {
      var a = function(a) {
        a = cljs.pprint.init_navigator.call(null, a);
        return cljs.pprint.execute_format.call(null, b, a);
      }, d = function(b) {
        var d = null;
        if (0 < arguments.length) {
          for (var d = 0, g = Array(arguments.length - 0);d < g.length;) {
            g[d] = arguments[d + 0], ++d;
          }
          d = new cljs.core.IndexedSeq(g, 0);
        }
        return a.call(this, d);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(b) {
        b = cljs.core.seq(b);
        return a(b);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = a;
      return d;
    }();
  }("~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e", cljs.pprint.cached_compile.call(null, "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e"));
}();
cljs.pprint.pprint_cond = function(a) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      cljs.pprint.write_out.call(null, cljs.core.first.call(null, a));
      if (cljs.core.next.call(null, a)) {
        cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
        cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
        for (var d = 0, e = cljs.core.next.call(null, a);;) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
            if (e) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var f = cljs.pprint._STAR_current_level_STAR_, g = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ += 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null), cljs.pprint.write_out.call(null, cljs.core.first.call(null, e)), cljs.core.next.call(null, e) && (cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " "), cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186)), cljs.pprint.write_out.call(null, cljs.core.second.call(null, e))), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = g, cljs.pprint._STAR_current_level_STAR_ = f;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, e))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                a = d + 1;
                var h = cljs.core.next.call(null, cljs.core.rest.call(null, e)), d = a, e = h;
                continue;
              }
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
    }
  }
  return null;
};
cljs.pprint.pprint_condp = function(a) {
  if (3 < cljs.core.count.call(null, a)) {
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ += 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
        cljs.core.apply.call(null, function() {
          return function(a, b, c, d) {
            return function() {
              var a = function(a) {
                a = cljs.pprint.init_navigator.call(null, a);
                return cljs.pprint.execute_format.call(null, b, a);
              }, c = function(b) {
                var c = null;
                if (0 < arguments.length) {
                  for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                    d[c] = arguments[c + 0], ++c;
                  }
                  c = new cljs.core.IndexedSeq(d, 0);
                }
                return a.call(this, c);
              };
              c.cljs$lang$maxFixedArity = 0;
              c.cljs$lang$applyTo = function(b) {
                b = cljs.core.seq(b);
                return a(b);
              };
              c.cljs$core$IFn$_invoke$arity$variadic = a;
              return c;
            }();
          }("~w ~@_~w ~@_~w ~_", cljs.pprint.cached_compile.call(null, "~w ~@_~w ~@_~w ~_"), b, c);
        }(), a);
        for (var d = 0, e = cljs.core.seq.call(null, cljs.core.drop.call(null, 3, a));;) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
            if (e) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var f = cljs.pprint._STAR_current_level_STAR_, g = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ += 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null), cljs.pprint.write_out.call(null, cljs.core.first.call(null, e)), cljs.core.next.call(null, e) && (cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " "), cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186)), cljs.pprint.write_out.call(null, cljs.core.second.call(null, e))), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = g, cljs.pprint._STAR_current_level_STAR_ = f;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, e))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                a = d + 1;
                var h = cljs.core.next.call(null, cljs.core.rest.call(null, e)), d = a, e = h;
                continue;
              }
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
      }
    }
    return null;
  }
  return cljs.pprint.pprint_simple_code_list.call(null, a);
};
cljs.pprint._STAR_symbol_map_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.pprint.pprint_anon_func = function(a) {
  var b = cljs.core.second.call(null, a), c = cljs.core.first.call(null, cljs.core.rest.call(null, cljs.core.rest.call(null, a)));
  if (cljs.core.vector_QMARK_.call(null, b)) {
    var d = cljs.pprint._STAR_symbol_map_STAR_;
    cljs.pprint._STAR_symbol_map_STAR_ = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, b)) ? cljs.core.PersistentArrayMap.fromArray([cljs.core.first.call(null, b), "%"], !0, !1) : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a, b, c) {
      return function(a, b) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, [cljs.core.str("%"), cljs.core.str(b)].join("")], null);
      };
    }(d, b, c), b, cljs.core.range.call(null, 1, cljs.core.count.call(null, b) + 1)));
    try {
      return function() {
        return function(a, b, c, d, k) {
          return function() {
            var a = function(a) {
              a = cljs.pprint.init_navigator.call(null, a);
              return cljs.pprint.execute_format.call(null, b, a);
            }, c = function(b) {
              var c = null;
              if (0 < arguments.length) {
                for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
                  d[c] = arguments[c + 0], ++c;
                }
                c = new cljs.core.IndexedSeq(d, 0);
              }
              return a.call(this, c);
            };
            c.cljs$lang$maxFixedArity = 0;
            c.cljs$lang$applyTo = function(b) {
              b = cljs.core.seq(b);
              return a(b);
            };
            c.cljs$core$IFn$_invoke$arity$variadic = a;
            return c;
          }();
        }("~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e", cljs.pprint.cached_compile.call(null, "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e"), d, b, c);
      }().call(null, c);
    } finally {
      cljs.pprint._STAR_symbol_map_STAR_ = d;
    }
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, a);
  }
};
cljs.pprint.pprint_simple_code_list = function(a) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      for (var d = 0, e = cljs.core.seq.call(null, a);;) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
          if (e && (cljs.pprint.write_out.call(null, cljs.core.first.call(null, e)), cljs.core.next.call(null, e))) {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            a = d + 1;
            var f = cljs.core.next.call(null, e), d = a, e = f;
            continue;
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
    }
  }
  return null;
};
cljs.pprint.two_forms = function(a) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapcat.call(null, cljs.core.identity, function() {
    return function c(a) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var e = cljs.core.seq.call(null, a);
          if (e) {
            if (cljs.core.chunked_seq_QMARK_.call(null, e)) {
              var f = cljs.core.chunk_first.call(null, e), g = cljs.core.count.call(null, f), h = cljs.core.chunk_buffer.call(null, g);
              a: {
                for (var k = 0;;) {
                  if (k < g) {
                    var m = cljs.core._nth.call(null, f, k);
                    cljs.core.chunk_append.call(null, h, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, m))), cljs.core.second.call(null, m)], null)], null));
                    k += 1;
                  } else {
                    f = !0;
                    break a;
                  }
                }
              }
              return f ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), c.call(null, cljs.core.chunk_rest.call(null, e))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), null);
            }
            h = cljs.core.first.call(null, e);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, h))), cljs.core.second.call(null, h)], null)], null), c.call(null, cljs.core.rest.call(null, e)));
          }
          return null;
        }
      }, null, null);
    }.call(null, a);
  }()));
};
cljs.pprint.add_core_ns = function(a) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a) {
    return function(c) {
      var d = cljs.core.nth.call(null, c, 0, null), e = cljs.core.nth.call(null, c, 1, null);
      return cljs.core.not.call(null, function() {
        var a = cljs.core.namespace.call(null, d);
        return cljs.core.truth_(a) ? a : cljs.core.special_symbol_QMARK_.call(null, d);
      }()) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, a, cljs.core.name.call(null, d)), e], null) : c;
    };
  }("clojure.core"), a));
};
cljs.pprint._STAR_code_table_STAR_ = cljs.pprint.two_forms.call(null, cljs.pprint.add_core_ns.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, ".", ".", 1975675962, null), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "..", "..", -300507420, 
null), new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "struct", "struct", 325972931, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "def", "def", 
597100991, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, 
"cond", "cond", 1606708055, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, 
"struct-map", "struct-map", -1387540878, null)], [cljs.pprint.pprint_hold_first, cljs.pprint.pprint_anon_func, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_condp, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_if, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_if, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, 
cljs.pprint.pprint_let, cljs.pprint.pprint_ns, cljs.pprint.pprint_let, cljs.pprint.pprint_cond, cljs.pprint.pprint_let, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first])));
cljs.pprint.pprint_code_list = function(a) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, a))) {
    var b = cljs.pprint._STAR_code_table_STAR_.call(null, cljs.core.first.call(null, a));
    return cljs.core.truth_(b) ? b.call(null, a) : cljs.pprint.pprint_simple_code_list.call(null, a);
  }
  return null;
};
cljs.pprint.pprint_code_symbol = function(a) {
  var b = a.call(null, cljs.pprint._STAR_symbol_map_STAR_);
  return cljs.core.truth_(b) ? cljs.pprint.print.call(null, b) : cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_) ? cljs.pprint.print.call(null, cljs.core.name.call(null, a)) : cljs.pprint.pr.call(null, a);
};
"undefined" === typeof cljs.pprint.code_dispatch && (cljs.pprint.code_dispatch = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "code-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_code_list);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), cljs.pprint.pprint_code_symbol);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "queue", "queue", 1455835879), cljs.pprint.pprint_pqueue);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "deref", "deref", -145586795), cljs.pprint.pprint_ideref);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, null, cljs.pprint.pr);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.add_padding = function(a, b) {
  var c = a - cljs.core.count.call(null, b);
  return cljs.core.apply.call(null, cljs.core.str, clojure.string.join.call(null, cljs.core.repeat.call(null, 0 > c ? 0 : c, " ")), b);
};
cljs.pprint.print_table = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core._STAR_print_newline_STAR_;
  try {
    if (cljs.core.seq.call(null, b)) {
      var d = cljs.core.map.call(null, function(a) {
        return function(c) {
          return cljs.core.apply.call(null, cljs.core.max, cljs.core.count.call(null, "" + cljs.core.str(c)), cljs.core.map.call(null, function(a) {
            return function(a) {
              return cljs.core.count.call(null, "" + cljs.core.str(cljs.core.get.call(null, a, c)));
            };
          }(a), b));
        };
      }(c), a), e = cljs.core.map.call(null, function(a, b) {
        return function(a) {
          return cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, a, "-"));
        };
      }(d, c), d), f = function(b, c, d) {
        return function(e, f, g, h) {
          return [cljs.core.str(e), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, f, function() {
            var e = function(a, b, c) {
              return function F(d) {
                return new cljs.core.LazySeq(null, function(a, b, c) {
                  return function() {
                    for (;;) {
                      var a = cljs.core.seq.call(null, d);
                      if (a) {
                        if (cljs.core.chunked_seq_QMARK_.call(null, a)) {
                          var b = cljs.core.chunk_first.call(null, a), c = cljs.core.count.call(null, b), e = cljs.core.chunk_buffer.call(null, c);
                          a: {
                            for (var f = 0;;) {
                              if (f < c) {
                                var g = cljs.core._nth.call(null, b, f), h = cljs.core.nth.call(null, g, 0, null), g = cljs.core.nth.call(null, g, 1, null);
                                cljs.core.chunk_append.call(null, e, cljs.pprint.add_padding.call(null, g, "" + cljs.core.str(h)));
                                f += 1;
                              } else {
                                b = !0;
                                break a;
                              }
                            }
                          }
                          return b ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, e), F.call(null, cljs.core.chunk_rest.call(null, a))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, e), null);
                        }
                        b = cljs.core.first.call(null, a);
                        e = cljs.core.nth.call(null, b, 0, null);
                        b = cljs.core.nth.call(null, b, 1, null);
                        return cljs.core.cons.call(null, cljs.pprint.add_padding.call(null, b, "" + cljs.core.str(e)), F.call(null, cljs.core.rest.call(null, a)));
                      }
                      return null;
                    }
                  };
                }(a, b, c), null, null);
              };
            }(b, c, d);
            return e.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.map.call(null, function(a, b, c, d) {
              return function(a) {
                return cljs.core.get.call(null, h, a);
              };
            }(e, b, c, d), a), b));
          }()))), cljs.core.str(g)].join("");
        };
      }(d, e, c);
      cljs.core.println.call(null);
      cljs.core.println.call(null, f.call(null, "| ", " | ", " |", cljs.core.zipmap.call(null, a, a)));
      cljs.core.println.call(null, f.call(null, "|-", "-+-", "-|", cljs.core.zipmap.call(null, a, e)));
      for (var g = cljs.core.seq.call(null, b), d = null, h = e = 0;;) {
        if (h < e) {
          var k = cljs.core._nth.call(null, d, h);
          cljs.core.println.call(null, f.call(null, "| ", " | ", " |", k));
          h += 1;
        } else {
          var m = cljs.core.seq.call(null, g);
          if (m) {
            var l = m;
            if (cljs.core.chunked_seq_QMARK_.call(null, l)) {
              var n = cljs.core.chunk_first.call(null, l), p = cljs.core.chunk_rest.call(null, l), l = n, q = cljs.core.count.call(null, n), g = p, d = l, e = q
            } else {
              k = cljs.core.first.call(null, l), cljs.core.println.call(null, f.call(null, "| ", " | ", " |", k)), g = cljs.core.next.call(null, l), d = null, e = 0;
            }
            h = 0;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_newline_STAR_ = c;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.pprint.print_table.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, a)), a);
};
cljs.pprint.print_table.cljs$lang$maxFixedArity = 2;
cljs.test = {};
cljs.test.empty_env = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.test.empty_env.call(null, new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322));
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var b = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150), cljs.core.List.EMPTY, 
  new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.core.pr_str, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), a], null);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.test", "pprint", "cljs.test/pprint", 1627393641), a) ? cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.pprint.pprint) : b;
};
cljs.test.empty_env.cljs$lang$maxFixedArity = 1;
cljs.test._STAR_current_env_STAR_ = null;
cljs.test.get_current_env = function() {
  var a = cljs.test._STAR_current_env_STAR_;
  return cljs.core.truth_(a) ? a : cljs.test.empty_env.call(null);
};
cljs.test.update_current_env_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.test._STAR_current_env_STAR_ = cljs.core.apply.call(null, cljs.core.update_in, cljs.test.get_current_env.call(null), a, b, c);
};
cljs.test.update_current_env_BANG_.cljs$lang$maxFixedArity = 2;
cljs.test.update_current_env_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.test.set_env_BANG_ = function(a) {
  return cljs.test._STAR_current_env_STAR_ = a;
};
cljs.test.clear_env_BANG_ = function() {
  return cljs.test._STAR_current_env_STAR_ = null;
};
cljs.test.get_and_clear_env_BANG_ = function() {
  var a = cljs.test.get_current_env.call(null);
  cljs.test.clear_env_BANG_.call(null);
  return a;
};
cljs.test.testing_vars_str = function(a) {
  var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "file", "file", -1269645878)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "line", "line", 212345235)), e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "column", "column", 2078222095));
  return [cljs.core.str(cljs.core.reverse.call(null, cljs.core.map.call(null, function(a, b, c, d, e) {
    return function(a) {
      return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a));
    };
  }(a, b, c, d, e), (new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))))), cljs.core.str(" ("), cljs.core.str(c), cljs.core.str(":"), cljs.core.str(d), cljs.core.str(cljs.core.truth_(e) ? [cljs.core.str(":"), cljs.core.str(e)].join("") : null), cljs.core.str(")")].join("");
};
cljs.test.testing_contexts_str = function() {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))));
};
cljs.test.inc_report_counter_BANG_ = function(a) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))) ? cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), a], null), cljs.core.fnil.call(null, cljs.core.inc, 0)) : null;
};
"undefined" === typeof cljs.test.report && (cljs.test.report = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.test", "report"), function(a, b, c, d, e) {
    return function(a) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "reporter", "reporter", -805360621)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(a)], null);
    };
  }(a, b, c, d, e), new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(a) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "pass", "pass", 1574159993)], null), function(a) {
  return cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
});
cljs.test.print_comparison = function(a) {
  var b;
  b = (new cljs.core.Keyword(null, "formatter", "formatter", -483008823)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
  b = cljs.core.truth_(b) ? b : cljs.core.pr_str;
  cljs.core.println.call(null, "expected:", b.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(a)));
  return cljs.core.println.call(null, "  actual:", b.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(a)));
};
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), function(a) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  cljs.core.println.call(null, "\nFAIL in", cljs.test.testing_vars_str.call(null, a));
  cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))) && cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  var b = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(a);
  cljs.core.truth_(b) && cljs.core.println.call(null, b);
  return cljs.test.print_comparison.call(null, a);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "error", "error", -978969032)], null), function(a) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032));
  cljs.core.println.call(null, "\nERROR in", cljs.test.testing_vars_str.call(null, a));
  cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))) && cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  var b = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(a);
  cljs.core.truth_(b) && cljs.core.println.call(null, b);
  return cljs.test.print_comparison.call(null, a);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "summary", "summary", 380847952)], null), function(a) {
  cljs.core.println.call(null, "\nRan", (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(a), "tests containing", (new cljs.core.Keyword(null, "pass", "pass", 1574159993)).cljs$core$IFn$_invoke$arity$1(a) + (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(a) + (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(a), "assertions.");
  return cljs.core.println.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(a), "failures,", (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(a), "errors.");
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(a) {
  return cljs.core.println.call(null, "\nTesting", cljs.core.name.call(null, (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a)));
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null), function(a) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100)], null), function(a) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545)], null), function(a) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(a) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-all-vars", "end-test-all-vars", 548827253)], null), function(a) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713)], null), function(a) {
  return null;
});
cljs.test.js_line_and_column = function(a) {
  a = a.split(":");
  var b = cljs.core.count.call(null, a);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [parseInt(cljs.core.nth.call(null, a, b - 2), 10), parseInt(cljs.core.nth.call(null, a, b - 1), 10)], null);
};
cljs.test.js_filename = function(a) {
  return cljs.core.first.call(null, cljs.core.last.call(null, a.split("/out/")).split(":"));
};
cljs.test.mapped_line_and_column = function(a, b, c) {
  var d = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, c], null), e = (new cljs.core.Keyword(null, "source-map", "source-map", 1706252311)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
  if (cljs.core.truth_(e)) {
    var f = cljs.core.get_in.call(null, e, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b - 1], null));
    return cljs.core.truth_(f) ? cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first.call(null, function() {
      var a = cljs.core.get.call(null, f, c - 1);
      return cljs.core.truth_(a) ? a : cljs.core.second.call(null, cljs.core.first.call(null, f));
    }()), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "col", "col", -1959363084)], null))) : d;
  }
  return d;
};
cljs.test.file_and_line = function(a, b) {
  var c;
  var d = "string" === typeof a.stack;
  d ? (d = a.stack, d = null == d ? null : clojure.string.split_lines.call(null, d), d = null == d ? null : cljs.core.get.call(null, d, b), c = null == d ? null : clojure.string.trim.call(null, d)) : c = d;
  if (cljs.core.truth_(c)) {
    var d = cljs.test.js_filename.call(null, c), e = cljs.test.js_line_and_column.call(null, c);
    c = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    e = cljs.test.mapped_line_and_column.call(null, d, c, e);
    d = cljs.core.nth.call(null, e, 0, null);
    c = cljs.core.nth.call(null, e, 1, null);
    e = cljs.core.nth.call(null, e, 2, null);
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "file", "file", -1269645878), d, new cljs.core.Keyword(null, "line", "line", 212345235), c, new cljs.core.Keyword(null, "column", "column", 2078222095), e], null);
  }
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), a.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), a.lineNumber], null);
};
cljs.test.do_report = function(a) {
  var b = function() {
    switch((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(a) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(a).fqn : null) {
      case "fail":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, Error(), 4), a);
      case "error":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(a), 0), a);
      default:
        return a;
    }
  }();
  return cljs.test.report.call(null, b);
};
cljs.test.IAsyncTest = function() {
};
cljs.test.async_QMARK_ = function(a) {
  return null != a ? a.cljs$test$IAsyncTest$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, a) : cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, a);
};
cljs.test.run_block = function cljs$test$run_block(b) {
  for (;;) {
    var c = cljs.core.seq.call(null, b);
    if (c) {
      var d = c, e = cljs.core.first.call(null, d), f = e.call(null);
      if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, f))) {
        return f.call(null, function() {
          var g = new cljs.core.Delay(function(b, c, d, e, f) {
            return function() {
              return cljs$test$run_block.call(null, cljs.core.rest.call(null, b));
            };
          }(b, f, e, d, c), null);
          return function(b, c, d, e, f, g) {
            return function() {
              return cljs.core.realized_QMARK_.call(null, c) ? cljs.core.println.call(null, "WARNING: Async test called done more than one time.") : cljs.core.deref.call(null, c);
            };
          }(b, g, f, e, d, c);
        }());
      }
      b = function() {
        var c = cljs.core.rest.call(null, b);
        return cljs.core.truth_((new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, f))) ? cljs.core.concat.call(null, f, c) : c;
      }();
    } else {
      return null;
    }
  }
};
cljs.test.block = function(a) {
  return null == a ? null : cljs.core.vary_meta.call(null, a, cljs.core.assoc, new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965), !0);
};
cljs.test.test_var_block_STAR_ = function(a, b) {
  if (!(a instanceof cljs.core.Var)) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "Var", "Var", -1833791616, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null))))].join(""));
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.conj, a);
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.Keyword(null, "test", "test", 577538877)], null), cljs.core.inc);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), a], null));
    try {
      return b.call(null);
    } catch (c) {
      switch(c instanceof cljs.core.Keyword ? c.fqn : null) {
        case "cljs.test/async-disabled":
          throw "Async tests require fixtures to be specified as maps.  Testing aborted.";;
        default:
          return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), c], null));
      }
    }
  }, function() {
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), a], null));
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.rest);
  }], null);
};
cljs.test.test_var_block = function(a) {
  var b = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a));
  return cljs.core.truth_(b) ? cljs.test.test_var_block_STAR_.call(null, a, b) : null;
};
cljs.test.test_var = function(a) {
  return cljs.test.run_block.call(null, cljs.test.test_var_block.call(null, a));
};
cljs.test.default_fixture = function(a) {
  return a.call(null);
};
cljs.test.compose_fixtures = function(a, b) {
  return function(c) {
    return a.call(null, function() {
      return b.call(null, c);
    });
  };
};
cljs.test.join_fixtures = function(a) {
  return cljs.core.reduce.call(null, cljs.test.compose_fixtures, cljs.test.default_fixture, a);
};
cljs.test.wrap_map_fixtures = function(a, b) {
  return cljs.core.concat.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "before", "before", -1633692388), a), b, cljs.core.reverse.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "after", "after", 594996914), a)));
};
cljs.test.execution_strategy = function(a, b) {
  var c = function(a) {
    return cljs.core.empty_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "none", "none", 1333468478) : cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, a) ? new cljs.core.Keyword(null, "map", "map", 1371690461) : cljs.core.every_QMARK_.call(null, cljs.core.fn_QMARK_, a) ? new cljs.core.Keyword(null, "fn", "fn", -1175266204) : null;
  }, d = function() {
    return cljs.core.distinct.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null), cljs.core.map.call(null, c, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null))));
  }.call(null), e = cljs.core.nth.call(null, d, 0, null);
  if (!cljs.core.not_any_QMARK_.call(null, cljs.core.nil_QMARK_, d)) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str("Fixtures may not be of mixed types"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not-any?", "not-any?", -2114707554, null), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "types", "types", -2064405130, null))))].join(""));
  }
  if (!(2 > cljs.core.count.call(null, d))) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str("fixtures specified in :once and :each must be of the same type"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "types", "types", -2064405130, null)))))].join(""));
  }
  return (new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "async", "async", 1050769601), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "sync", "sync", -624148946)], null)).call(null, e, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.test.disable_async = function(a) {
  return function() {
    var b = a.call(null);
    if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, b))) {
      throw new cljs.core.Keyword("cljs.test", "async-disabled", "cljs.test/async-disabled", -772095377);
    }
    return b;
  };
};
cljs.test.test_vars_block = function(a) {
  return cljs.core.map.call(null, function(a) {
    var c = cljs.core.nth.call(null, a, 0, null), d = cljs.core.nth.call(null, a, 1, null);
    return function(a, b, c) {
      return function() {
        return cljs.test.block.call(null, function() {
          var d = cljs.test.get_current_env.call(null), k = cljs.core.get_in.call(null, d, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-fixtures", "once-fixtures", 1253947167), b], null)), m = cljs.core.get_in.call(null, d, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "each-fixtures", "each-fixtures", 802243977), b], null)), l = cljs.test.execution_strategy.call(null, 
          k, m) instanceof cljs.core.Keyword ? cljs.test.execution_strategy.call(null, k, m).fqn : null;
          switch(l) {
            case "async":
              return cljs.test.wrap_map_fixtures.call(null, k, cljs.core.mapcat.call(null, cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.test.wrap_map_fixtures, m), cljs.test.test_var_block), cljs.core.filter.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "test", "test", 577538877), cljs.core.meta), c)));
            case "sync":
              var n = cljs.test.join_fixtures.call(null, m);
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(a, b, c, d, e, f, g, h) {
                return function() {
                  return cljs.test.join_fixtures.call(null, d).call(null, function(a, b, c, d, e, f, g, h) {
                    return function() {
                      for (var k = cljs.core.seq.call(null, h), m = null, l = 0, n = 0;;) {
                        if (n < l) {
                          var p = cljs.core._nth.call(null, m, n), q = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p));
                          cljs.core.truth_(q) && a.call(null, function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r) {
                            return function() {
                              return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, g, cljs.test.disable_async.call(null, e)));
                            };
                          }(k, m, l, n, q, q, p, a, b, c, d, e, f, g, h));
                          n += 1;
                        } else {
                          var r = cljs.core.seq.call(null, k);
                          if (r) {
                            q = r;
                            if (cljs.core.chunked_seq_QMARK_.call(null, q)) {
                              k = cljs.core.chunk_first.call(null, q), n = cljs.core.chunk_rest.call(null, q), m = k, l = cljs.core.count.call(null, k), k = n;
                            } else {
                              var p = cljs.core.first.call(null, q), v = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p));
                              cljs.core.truth_(v) && a.call(null, function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, v, t) {
                                return function() {
                                  return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, g, cljs.test.disable_async.call(null, e)));
                                };
                              }(k, m, l, n, v, v, p, q, r, a, b, c, d, e, f, g, h));
                              k = cljs.core.next.call(null, q);
                              m = null;
                              l = 0;
                            }
                            n = 0;
                          } else {
                            return null;
                          }
                        }
                      }
                    };
                  }(a, b, c, d, e, f, g, h));
                };
              }(n, l, d, k, m, a, b, c)], null);
            default:
              throw Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.test.execution_strategy.call(null, k, m))].join(""));;
          }
        }());
      };
    }(a, c, d);
  }, cljs.core.group_by.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.core.meta), a));
};
cljs.test.test_vars = function(a) {
  return cljs.test.run_block.call(null, cljs.core.concat.call(null, cljs.test.test_vars_block.call(null, a), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.test.report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713), new cljs.core.Keyword(null, "vars", "vars", -2046957217), a], null));
  }], null)));
};
cljs.test.successful_QMARK_ = function(a) {
  return 0 === (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$2(a, 0) && 0 === (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$2(a, 0);
};
cljs.core.async = {};
cljs.core.async.impl = {};
cljs.core.async.impl.protocols = {};
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
};
cljs.core.async.impl.protocols.take_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2) {
    return a.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(a, b);
  }
  var c = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.impl.protocols.take_BANG_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "ReadPort.take!", a);
};
cljs.core.async.impl.protocols.WritePort = function() {
};
cljs.core.async.impl.protocols.put_BANG_ = function(a, b, c) {
  if (null != a && null != a.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3) {
    return a.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(a, b, c);
  }
  var d = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = cljs.core.async.impl.protocols.put_BANG_._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "WritePort.put!", a);
};
cljs.core.async.impl.protocols.Channel = function() {
};
cljs.core.async.impl.protocols.close_BANG_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1) {
    return a.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.close_BANG_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Channel.close!", a);
};
cljs.core.async.impl.protocols.closed_QMARK_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1) {
    return a.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.closed_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Channel.closed?", a);
};
cljs.core.async.impl.protocols.Handler = function() {
};
cljs.core.async.impl.protocols.active_QMARK_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1) {
    return a.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.active_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Handler.active?", a);
};
cljs.core.async.impl.protocols.blockable_QMARK_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1) {
    return a.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.blockable_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.blockable_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Handler.blockable?", a);
};
cljs.core.async.impl.protocols.commit = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Handler$commit$arity$1) {
    return a.cljs$core$async$impl$protocols$Handler$commit$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.commit[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.commit._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Handler.commit", a);
};
cljs.core.async.impl.protocols.Buffer = function() {
};
cljs.core.async.impl.protocols.full_QMARK_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1) {
    return a.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.full_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Buffer.full?", a);
};
cljs.core.async.impl.protocols.remove_BANG_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1) {
    return a.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.remove_BANG_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Buffer.remove!", a);
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2) {
    return a.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.impl.protocols.add_BANG__STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Buffer.add!*", a);
};
cljs.core.async.impl.protocols.close_buf_BANG_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1) {
    return a.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.close_buf_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.close_buf_BANG_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Buffer.close-buf!", a);
};
cljs.core.async.impl.protocols.add_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null == b) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
  }
  return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, a, b);
};
cljs.core.async.impl.protocols.add_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
};
cljs.core.async.impl.buffers = {};
cljs.core.async.impl.buffers.acopy = function(a, b, c, d, e) {
  for (var f = 0;;) {
    if (f < e) {
      c[d + f] = a[b + f], f += 1;
    } else {
      return null;
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(a, b, c, d) {
  this.head = a;
  this.tail = b;
  this.length = c;
  this.arr = d;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  if (0 === this.length) {
    return null;
  }
  var a = this.arr[this.tail];
  this.arr[this.tail] = null;
  this.tail = (this.tail + 1) % this.arr.length;
  --this.length;
  return a;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(a) {
  this.arr[this.head] = a;
  this.head = (this.head + 1) % this.arr.length;
  this.length += 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(a) {
  this.length + 1 === this.arr.length && this.resize();
  return this.unshift(a);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var a = Array(2 * this.arr.length);
  return this.tail < this.head ? (cljs.core.async.impl.buffers.acopy.call(null, this.arr, this.tail, a, 0, this.length), this.tail = 0, this.head = this.length, this.arr = a) : this.tail > this.head ? (cljs.core.async.impl.buffers.acopy.call(null, this.arr, this.tail, a, 0, this.arr.length - this.tail), cljs.core.async.impl.buffers.acopy.call(null, this.arr, 0, a, this.arr.length - this.tail, this.head), this.tail = 0, this.head = this.length, this.arr = a) : this.tail === this.head ? (this.head = 
  this.tail = 0, this.arr = a) : null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(a) {
  for (var b = this.length, c = 0;;) {
    if (c < b) {
      var d = this.pop();
      a.call(null, d) && this.unshift(d);
      c += 1;
    } else {
      return null;
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "head", "head", 869147608, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "length", "length", -2065447907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = !0;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function(a, b, c, d) {
  return new cljs.core.async.impl.buffers.RingBuffer(a, b, c, d);
};
cljs.core.async.impl.buffers.ring_buffer = function(a) {
  if (!(0 < a)) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, Array(a));
};
cljs.core.async.impl.buffers.FixedBuffer = function(a, b) {
  this.buf = a;
  this.n = b;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = !0;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(a) {
  return this.buf.length === this.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(a) {
  return this.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(a, b) {
  this.buf.unbounded_unshift(b);
  return this;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(a) {
  return null;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = !0;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function(a, b) {
  return new cljs.core.async.impl.buffers.FixedBuffer(a, b);
};
cljs.core.async.impl.buffers.fixed_buffer = function(a) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, a), a);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(a, b) {
  this.buf = a;
  this.n = b;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = !0;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = !0;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(a) {
  return !1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(a) {
  return this.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(a, b) {
  this.buf.length !== this.n && this.buf.unshift(b);
  return this;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(a) {
  return null;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = !0;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function(a, b) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(a, b);
};
cljs.core.async.impl.buffers.dropping_buffer = function(a) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, a), a);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(a, b) {
  this.buf = a;
  this.n = b;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = !0;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = !0;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(a) {
  return !1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(a) {
  return this.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(a, b) {
  this.buf.length === this.n && cljs.core.async.impl.protocols.remove_BANG_.call(null, this);
  this.buf.unshift(b);
  return this;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(a) {
  return null;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = !0;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function(a, b) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(a, b);
};
cljs.core.async.impl.buffers.sliding_buffer = function(a) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, a), a);
};
"undefined" === typeof cljs.core.async.impl.buffers.NO_VAL && (cljs.core.async.impl.buffers.NO_VAL = {});
cljs.core.async.impl.buffers.undelivered_QMARK_ = function(a) {
  return cljs.core.async.impl.buffers.NO_VAL === a;
};
cljs.core.async.impl.buffers.PromiseBuffer = function(a) {
  this.val = a;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = !0;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = !0;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(a) {
  return !1;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(a) {
  return this.val;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(a, b) {
  cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, this.val)) && (this.val = b);
  return this;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(a) {
  return cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, this.val)) ? this.val = null : null;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, this.val)) ? 0 : 1;
};
cljs.core.async.impl.buffers.PromiseBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$type = !0;
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/PromiseBuffer";
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.buffers/PromiseBuffer");
};
cljs.core.async.impl.buffers.__GT_PromiseBuffer = function(a) {
  return new cljs.core.async.impl.buffers.PromiseBuffer(a);
};
cljs.core.async.impl.buffers.promise_buffer = function() {
  return new cljs.core.async.impl.buffers.PromiseBuffer(cljs.core.async.impl.buffers.NO_VAL);
};
cljs.core.async.impl.dispatch = {};
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = !1;
cljs.core.async.impl.dispatch.queued_QMARK_ = !1;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.queue_dispatcher;
cljs.core.async.impl.dispatch.process_messages = function() {
  cljs.core.async.impl.dispatch.running_QMARK_ = !0;
  cljs.core.async.impl.dispatch.queued_QMARK_ = !1;
  for (var a = 0;;) {
    var b = cljs.core.async.impl.dispatch.tasks.pop();
    if (null != b && (b.call(null), a < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE)) {
      a += 1;
      continue;
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = !1;
  return 0 < cljs.core.async.impl.dispatch.tasks.length ? cljs.core.async.impl.dispatch.queue_dispatcher.call(null) : null;
};
cljs.core.async.impl.dispatch.queue_dispatcher = function() {
  if (cljs.core.truth_(function() {
    var a = cljs.core.async.impl.dispatch.queued_QMARK_;
    return cljs.core.truth_(a) ? cljs.core.async.impl.dispatch.running_QMARK_ : a;
  }())) {
    return null;
  }
  cljs.core.async.impl.dispatch.queued_QMARK_ = !0;
  return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
};
cljs.core.async.impl.dispatch.run = function(a) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(a);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function(a, b) {
  return setTimeout(a, b);
};
cljs.core.async.impl.channels = {};
cljs.core.async.impl.channels.box = function cljs$core$async$impl$channels$box(b) {
  "undefined" === typeof cljs.core.async.impl.channels.t_cljs$core$async$impl$channels9814 && (cljs.core.async.impl.channels.t_cljs$core$async$impl$channels9814 = function(b, d, e) {
    this.box = b;
    this.val = d;
    this.meta9815 = e;
    this.cljs$lang$protocol_mask$partition0$ = 425984;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels9814.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b, d) {
    return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels9814(this.box, this.val, d);
  }, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels9814.prototype.cljs$core$IMeta$_meta$arity$1 = function(b) {
    return this.meta9815;
  }, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels9814.prototype.cljs$core$IDeref$_deref$arity$1 = function(b) {
    return this.val;
  }, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels9814.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "box", "box", -1123515375, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 
    1769233139, null)], null)))], null)), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "meta9815", "meta9815", -1327094720, null)], null);
  }, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels9814.cljs$lang$type = !0, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels9814.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels9814", cljs.core.async.impl.channels.t_cljs$core$async$impl$channels9814.cljs$lang$ctorPrWriter = function(b, d, e) {
    return cljs.core._write.call(null, d, "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels9814");
  }, cljs.core.async.impl.channels.__GT_t_cljs$core$async$impl$channels9814 = function(b, d, e) {
    return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels9814(b, d, e);
  });
  return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels9814(cljs$core$async$impl$channels$box, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(a, b) {
  this.handler = a;
  this.val = b;
};
cljs.core.async.impl.channels.PutBox.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "handler", "handler", 1444934915, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = !0;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function(a, b) {
  return new cljs.core.async.impl.channels.PutBox(a, b);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function(a) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, a.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
};
cljs.core.async.impl.channels.abort = function(a) {
  if (null != a && null != a.cljs$core$async$impl$channels$MMC$abort$arity$1) {
    return a.cljs$core$async$impl$channels$MMC$abort$arity$1(a);
  }
  var b = cljs.core.async.impl.channels.abort[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.channels.abort._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "MMC.abort", a);
};
cljs.core.async.impl.channels.ManyToManyChannel = function(a, b, c, d, e, f, g) {
  this.takes = a;
  this.dirty_takes = b;
  this.puts = c;
  this.dirty_puts = d;
  this.buf = e;
  this.closed = f;
  this.add_BANG_ = g;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = !0;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(a) {
  for (;;) {
    a = this.puts.pop();
    if (null != a) {
      var b = a.handler, c = a.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, b)) {
        var d = cljs.core.async.impl.protocols.commit.call(null, b);
        cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, k) {
          return function() {
            return a.call(null, !0);
          };
        }(d, b, c, a, this));
      } else {
        continue;
      }
    }
    break;
  }
  this.puts.cleanup(cljs.core.constantly.call(null, !1));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this);
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = !0;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(a, b, c) {
  var d = this;
  if (null == b) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  if ((a = d.closed) || !cljs.core.async.impl.protocols.active_QMARK_.call(null, c)) {
    return cljs.core.async.impl.channels.box.call(null, !a);
  }
  if (cljs.core.truth_(function() {
    var a = d.buf;
    return cljs.core.truth_(a) ? cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, d.buf)) : a;
  }())) {
    cljs.core.async.impl.protocols.commit.call(null, c);
    for (c = cljs.core.reduced_QMARK_.call(null, d.add_BANG_.call(null, d.buf, b));;) {
      if (0 < d.takes.length && 0 < cljs.core.count.call(null, d.buf)) {
        var e = d.takes.pop();
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, e)) {
          var f = cljs.core.async.impl.protocols.commit.call(null, e), g = cljs.core.async.impl.protocols.remove_BANG_.call(null, d.buf);
          cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f) {
            return function() {
              return a.call(null, b);
            };
          }(f, g, e, c, a, this));
        } else {
          continue;
        }
      }
      break;
    }
    c && cljs.core.async.impl.channels.abort.call(null, this);
    return cljs.core.async.impl.channels.box.call(null, !0);
  }
  e = function() {
    for (;;) {
      var a = d.takes.pop();
      if (cljs.core.truth_(a)) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, a))) {
          return a;
        }
      } else {
        return null;
      }
    }
  }();
  if (cljs.core.truth_(e)) {
    return f = cljs.core.async.impl.protocols.commit.call(null, e), cljs.core.async.impl.protocols.commit.call(null, c), cljs.core.async.impl.dispatch.run.call(null, function(a, c, d, e) {
      return function() {
        return a.call(null, b);
      };
    }(f, e, a, this)), cljs.core.async.impl.channels.box.call(null, !0);
  }
  d.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY ? (d.dirty_puts = 0, d.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_)) : d.dirty_puts += 1;
  if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, c))) {
    if (!(d.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE)) {
      throw Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, 
      null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
    }
    d.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(c, b));
  }
  return null;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = !0;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(a, b) {
  var c = this;
  if (cljs.core.async.impl.protocols.active_QMARK_.call(null, b)) {
    if (null != c.buf && 0 < cljs.core.count.call(null, c.buf)) {
      for (var d = cljs.core.async.impl.protocols.commit.call(null, b), e = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, c.buf));;) {
        if (!cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, c.buf))) {
          var f = c.puts.pop();
          if (null != f) {
            var g = f.handler, h = f.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, g)) {
              var k = cljs.core.async.impl.protocols.commit.call(null, g);
              cljs.core.async.impl.protocols.commit.call(null, b);
              cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f, g) {
                return function() {
                  return a.call(null, !0);
                };
              }(k, g, h, f, d, e, this));
              cljs.core.reduced_QMARK_.call(null, c.add_BANG_.call(null, c.buf, h)) && cljs.core.async.impl.channels.abort.call(null, this);
            }
            continue;
          }
        }
        break;
      }
      return e;
    }
    d = function() {
      for (;;) {
        var a = c.puts.pop();
        if (cljs.core.truth_(a)) {
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, a.handler)) {
            return a;
          }
        } else {
          return null;
        }
      }
    }();
    if (cljs.core.truth_(d)) {
      return e = cljs.core.async.impl.protocols.commit.call(null, d.handler), cljs.core.async.impl.protocols.commit.call(null, b), cljs.core.async.impl.dispatch.run.call(null, function(a, b, c) {
        return function() {
          return a.call(null, !0);
        };
      }(e, d, this)), cljs.core.async.impl.channels.box.call(null, d.val);
    }
    if (cljs.core.truth_(c.closed)) {
      return cljs.core.truth_(c.buf) && c.add_BANG_.call(null, c.buf), cljs.core.truth_(function() {
        var a = cljs.core.async.impl.protocols.active_QMARK_.call(null, b);
        return cljs.core.truth_(a) ? cljs.core.async.impl.protocols.commit.call(null, b) : a;
      }()) ? (d = function() {
        var a = c.buf;
        return cljs.core.truth_(a) ? 0 < cljs.core.count.call(null, c.buf) : a;
      }(), d = cljs.core.truth_(d) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, c.buf) : null, cljs.core.async.impl.channels.box.call(null, d)) : null;
    }
    c.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY ? (c.dirty_takes = 0, c.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_)) : c.dirty_takes += 1;
    if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, b))) {
      if (!(c.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE)) {
        throw Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
        "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
      }
      c.takes.unbounded_unshift(b);
    }
  }
  return null;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = !0;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(a) {
  return this.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(a) {
  var b = this;
  if (!b.closed) {
    b.closed = !0;
    for (cljs.core.truth_(function() {
      var a = b.buf;
      return cljs.core.truth_(a) ? 0 === b.puts.length : a;
    }()) && b.add_BANG_.call(null, b.buf);a = b.takes.pop(), null != a;) {
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, a)) {
        var c = cljs.core.async.impl.protocols.commit.call(null, a), d = cljs.core.truth_(function() {
          var a = b.buf;
          return cljs.core.truth_(a) ? 0 < cljs.core.count.call(null, b.buf) : a;
        }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, b.buf) : null;
        cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d) {
          return function() {
            return a.call(null, b);
          };
        }(c, d, a, this));
      }
    }
    cljs.core.truth_(b.buf) && cljs.core.async.impl.protocols.close_buf_BANG_.call(null, b.buf);
  }
  return null;
};
cljs.core.async.impl.channels.ManyToManyChannel.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "takes", "takes", 298247964, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-takes", "dirty-takes", 575642138, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-puts", "dirty-puts", 
  57041148, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "closed", "closed", 720856168, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "add!", "add!", 2046056845, null)], null);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = !0;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function(a, b, c, d, e, f, g) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(a, b, c, d, e, f, g);
};
cljs.core.async.impl.channels.ex_handler = function(a) {
  console.log(a);
  return null;
};
cljs.core.async.impl.channels.handle = function(a, b, c) {
  b = cljs.core.truth_(b) ? b : cljs.core.async.impl.channels.ex_handler;
  c = b.call(null, c);
  return null == c ? a : cljs.core.async.impl.protocols.add_BANG_.call(null, a, c);
};
cljs.core.async.impl.channels.chan = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.impl.channels.chan.call(null, a, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.impl.channels.chan.call(null, a, b, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, a, !1, function() {
    return function(a) {
      return function() {
        var b = null, f = function(b) {
          try {
            return a.call(null, b);
          } catch (e) {
            return cljs.core.async.impl.channels.handle.call(null, b, c, e);
          }
        }, g = function(b, e) {
          try {
            return a.call(null, b, e);
          } catch (f) {
            return cljs.core.async.impl.channels.handle.call(null, b, c, f);
          }
        }, b = function(a, b) {
          switch(arguments.length) {
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + arguments.length);
        };
        b.cljs$core$IFn$_invoke$arity$1 = f;
        b.cljs$core$IFn$_invoke$arity$2 = g;
        return b;
      }();
    }(cljs.core.truth_(b) ? b.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_);
  }());
};
cljs.core.async.impl.channels.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.ioc_helpers = {};
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function(a, b, c) {
  return a[b][c];
};
cljs.core.async.impl.ioc_helpers.aget_object = function(a, b) {
  return a[b];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function(a) {
  return cljs.core.keyword_identical_QMARK_.call(null, a[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function cljs$core$async$impl$ioc_helpers$fn_handler(b) {
  "undefined" === typeof cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers22276 && (cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers22276 = function(b, d, e) {
    this.fn_handler = b;
    this.f = d;
    this.meta22277 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers22276.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b, d) {
    return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers22276(this.fn_handler, this.f, d);
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers22276.prototype.cljs$core$IMeta$_meta$arity$1 = function(b) {
    return this.meta22277;
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers22276.prototype.cljs$core$async$impl$protocols$Handler$ = !0, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers22276.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(b) {
    return !0;
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers22276.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(b) {
    return !0;
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers22276.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(b) {
    return this.f;
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers22276.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fn-handler", "fn-handler", 648785851, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), !0, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [new cljs.core.Symbol(null, "f", "f", 43394975, null)], null)))], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta22277", "meta22277", 1240402843, null)], null);
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers22276.cljs$lang$type = !0, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers22276.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers22276", cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers22276.cljs$lang$ctorPrWriter = function(b, d, e) {
    return cljs.core._write.call(null, d, "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers22276");
  }, cljs.core.async.impl.ioc_helpers.__GT_t_cljs$core$async$impl$ioc_helpers22276 = function(b, d, e) {
    return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers22276(b, d, e);
  });
  return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers22276(cljs$core$async$impl$ioc_helpers$fn_handler, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function(a) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, a, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, a);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function(a) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, a);
  } catch (b) {
    throw b instanceof Object && cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, a, cljs.core.async.impl.ioc_helpers.USER_START_IDX)), b;
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function(a, b, c) {
  c = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
    a[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = c;
    a[cljs.core.async.impl.ioc_helpers.STATE_IDX] = b;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, a);
  }));
  return cljs.core.truth_(c) ? (a[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, c), a[cljs.core.async.impl.ioc_helpers.STATE_IDX] = b, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function(a, b, c, d) {
  c = cljs.core.async.impl.protocols.put_BANG_.call(null, c, d, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
    a[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = c;
    a[cljs.core.async.impl.ioc_helpers.STATE_IDX] = b;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, a);
  }));
  return cljs.core.truth_(c) ? (a[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, c), a[cljs.core.async.impl.ioc_helpers.STATE_IDX] = b, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
};
cljs.core.async.impl.ioc_helpers.return_chan = function(a, b) {
  var c = a[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  null != b && cljs.core.async.impl.protocols.put_BANG_.call(null, c, b, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(a) {
    return function() {
      return null;
    };
  }(c)));
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(a, b, c, d, e, f, g, h) {
  this.catch_block = a;
  this.catch_exception = b;
  this.finally_block = c;
  this.continue_block = d;
  this.prev = e;
  this.__meta = f;
  this.__extmap = g;
  this.__hash = h;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.call(null, this, b, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "catch-block":
      return this.catch_block;
    case "catch-exception":
      return this.catch_exception;
    case "finally-block":
      return this.finally_block;
    case "continue-block":
      return this.continue_block;
    case "prev":
      return this.prev;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), this.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "catch-exception", "catch-exception", -1997306795), this.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), this.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), this.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), this.prev], null)], null), this.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$ = !0;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)], null), cljs.core._iterator.call(null, 
  this.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, this.finally_block, this.continue_block, this.prev, this.__meta, this.__extmap, this.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 5 + cljs.core.count.call(null, this.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_imap.call(null, this);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  var c = this;
  return cljs.core.truth_(function() {
    if (cljs.core.truth_(b)) {
      var a = c.constructor === b.constructor;
      return a ? cljs.core.equiv_map.call(null, c, b) : a;
    }
    return b;
  }()) ? !0 : !1;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, this.finally_block, this.continue_block, this.prev, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), b)) ? new cljs.core.async.impl.ioc_helpers.ExceptionFrame(c, this.catch_exception, this.finally_block, this.continue_block, this.prev, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), b)) ? new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, c, this.finally_block, this.continue_block, 
  this.prev, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), b)) ? new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, c, this.continue_block, this.prev, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), b)) ? new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, 
  this.catch_exception, this.finally_block, c, this.prev, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), b)) ? new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, this.finally_block, this.continue_block, c, this.__meta, this.__extmap, null) : new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, this.finally_block, this.continue_block, this.prev, 
  this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), this.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), this.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), this.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), this.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), this.prev], null)], null), this.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, this.finally_block, this.continue_block, this.prev, b, this.__extmap, this.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? cljs.core._assoc.call(null, this, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "catch-block", "catch-block", -1479223021, null), cljs.core.with_meta(new cljs.core.Symbol(null, "catch-exception", "catch-exception", -356775268, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "Class", "Class", 2064526977, null)], null)), new cljs.core.Symbol(null, "finally-block", "finally-block", 
  -1821453297, null), new cljs.core.Symbol(null, "continue-block", "continue-block", -211516323, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null)], null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = !0;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(a) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function(a, b, c, d, e) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(a, b, c, d, e, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function(a) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function(a, b, c, d, e) {
  a[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, b, c, d, e, cljs.core.async.impl.ioc_helpers.aget_object.call(null, a, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return a;
};
cljs.core.async.impl.ioc_helpers.process_exception = function(a) {
  for (;;) {
    var b = cljs.core.async.impl.ioc_helpers.aget_object.call(null, a, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES), c = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(b), d = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(b), e = cljs.core.async.impl.ioc_helpers.aget_object.call(null, a, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var a = e;
      return cljs.core.truth_(a) ? cljs.core.not.call(null, b) : a;
    }())) {
      throw e;
    }
    if (cljs.core.truth_(function() {
      var a = e;
      return cljs.core.truth_(a) ? (a = c, cljs.core.truth_(a) ? cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), d) || e instanceof d : a) : a;
    }())) {
      return a[cljs.core.async.impl.ioc_helpers.STATE_IDX] = c, a[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = e, a[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null, a[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null), a;
    }
    if (cljs.core.truth_(function() {
      var a = e;
      return cljs.core.truth_(a) ? cljs.core.not.call(null, c) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(b)) : a;
    }())) {
      a[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(b);
    } else {
      if (cljs.core.truth_(function() {
        var a = e;
        return cljs.core.truth_(a) ? (a = cljs.core.not.call(null, c)) ? (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(b) : a : a;
      }()) || cljs.core.truth_(function() {
        var a = cljs.core.not.call(null, e);
        return a ? (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(b) : a;
      }())) {
        return a[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(b), a[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null), a;
      }
      if (cljs.core.not.call(null, e) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(b))) {
        return a[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(b), a[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(b), a;
      }
      throw Error("No matching clause");
    }
  }
};
cljs.core.async.impl.timers = {};
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = .5;
cljs.core.async.impl.timers.random_level = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.impl.timers.random_level.call(null, 0);
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1 = function(a) {
  for (;;) {
    if (Math.random() < cljs.core.async.impl.timers.P && a < cljs.core.async.impl.timers.MAX_LEVEL) {
      a += 1;
    } else {
      return a;
    }
  }
};
cljs.core.async.impl.timers.random_level.cljs$lang$maxFixedArity = 1;
cljs.core.async.impl.timers.SkipListNode = function(a, b, c) {
  this.key = a;
  this.val = b;
  this.forward = c;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, this.val), this.key);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.async.impl.timers.SkipListNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "forward", "forward", 1083186224, null)], null);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = !0;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function(a, b, c) {
  return new cljs.core.async.impl.timers.SkipListNode(a, b, c);
};
cljs.core.async.impl.timers.skip_list_node = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 3:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.impl.timers.skip_list_node.call(null, null, null, a);
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = Array(c + 1);
  for (var d = 0;;) {
    if (d < c.length) {
      c[d] = null, d += 1;
    } else {
      break;
    }
  }
  return new cljs.core.async.impl.timers.SkipListNode(a, b, c);
};
cljs.core.async.impl.timers.skip_list_node.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.timers.least_greater_node = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.async.impl.timers.least_greater_node.call(null, a, b, c, null);
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  for (;;) {
    if (0 > c) {
      return a;
    }
    a: {
      for (;;) {
        var e = a.forward[c];
        if (cljs.core.truth_(e)) {
          if (e.key < b) {
            a = e;
          } else {
            break a;
          }
        } else {
          break a;
        }
      }
    }
    null != d && (d[c] = a);
    --c;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$lang$maxFixedArity = 4;
cljs.core.async.impl.timers.SkipList = function(a, b) {
  this.header = a;
  this.level = b;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(a, b) {
  var c = Array(cljs.core.async.impl.timers.MAX_LEVEL), d = cljs.core.async.impl.timers.least_greater_node.call(null, this.header, a, this.level, c).forward[0];
  if (null != d && d.key === a) {
    return d.val = b;
  }
  d = cljs.core.async.impl.timers.random_level.call(null);
  if (d > this.level) {
    for (var e = this.level + 1;;) {
      if (e <= d + 1) {
        c[e] = this.header, e += 1;
      } else {
        break;
      }
    }
    this.level = d;
  }
  for (d = cljs.core.async.impl.timers.skip_list_node.call(null, a, b, Array(d));;) {
    return 0 <= this.level ? (c = c[0].forward, d.forward[0] = c[0], c[0] = d) : null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(a) {
  var b = Array(cljs.core.async.impl.timers.MAX_LEVEL), c = cljs.core.async.impl.timers.least_greater_node.call(null, this.header, a, this.level, b).forward[0];
  if (null != c && c.key === a) {
    for (a = 0;;) {
      if (a <= this.level) {
        var d = b[a].forward;
        d[a] === c && (d[a] = c.forward[a]);
        a += 1;
      } else {
        break;
      }
    }
    for (;;) {
      if (0 < this.level && null == this.header.forward[this.level]) {
        --this.level;
      } else {
        return null;
      }
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(a) {
  for (var b = this.header, c = this.level;;) {
    if (0 > c) {
      return b === this.header ? null : b;
    }
    var d;
    a: {
      for (d = b;;) {
        if (d = d.forward[c], null == d) {
          d = null;
          break a;
        } else {
          if (d.key >= a) {
            break a;
          }
        }
      }
    }
    null != d ? (--c, b = d) : --c;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(a) {
  for (var b = this.header, c = this.level;;) {
    if (0 > c) {
      return b === this.header ? null : b;
    }
    var d;
    a: {
      for (d = b;;) {
        var e = d.forward[c];
        if (null != e) {
          if (e.key > a) {
            break a;
          }
          d = e;
        } else {
          d = 0 === c ? d : null;
          break a;
        }
      }
    }
    cljs.core.truth_(d) ? (--c, b = d) : --c;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return function(a) {
    return function d(e) {
      return new cljs.core.LazySeq(null, function(a) {
        return function() {
          return null == e ? null : cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e.key, e.val], null), d.call(null, e.forward[0]));
        };
      }(a), null, null);
    };
  }(this).call(null, this.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "{", ", ", "}", c, this);
};
cljs.core.async.impl.timers.SkipList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "header", "header", 1759972661, null), cljs.core.with_meta(new cljs.core.Symbol(null, "level", "level", -1363938217, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = !0;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function(a, b) {
  return new cljs.core.async.impl.timers.SkipList(a, b);
};
cljs.core.async.impl.timers.skip_list = function() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function(a) {
  var b = (new Date).valueOf() + a, c = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(b), d = cljs.core.truth_(cljs.core.truth_(c) ? c.key < b + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS : c) ? c.val : null;
  if (cljs.core.truth_(d)) {
    return d;
  }
  var e = cljs.core.async.impl.channels.chan.call(null, null);
  cljs.core.async.impl.timers.timeouts_map.put(b, e);
  cljs.core.async.impl.dispatch.queue_delay.call(null, function(a, b, c, d) {
    return function() {
      cljs.core.async.impl.timers.timeouts_map.remove(c);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, a);
    };
  }(e, d, b, c), a);
  return e;
};
cljs.core.async.fn_handler = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.fn_handler.call(null, a, !0);
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  "undefined" === typeof cljs.core.async.t_cljs$core$async22420 && (cljs.core.async.t_cljs$core$async22420 = function(a, b, e) {
    this.f = a;
    this.blockable = b;
    this.meta22421 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async22420.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cljs.core.async.t_cljs$core$async22420(this.f, this.blockable, b);
  }, cljs.core.async.t_cljs$core$async22420.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta22421;
  }, cljs.core.async.t_cljs$core$async22420.prototype.cljs$core$async$impl$protocols$Handler$ = !0, cljs.core.async.t_cljs$core$async22420.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(a) {
    return !0;
  }, cljs.core.async.t_cljs$core$async22420.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(a) {
    return this.blockable;
  }, cljs.core.async.t_cljs$core$async22420.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(a) {
    return this.f;
  }, cljs.core.async.t_cljs$core$async22420.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "blockable", "blockable", -28395259, null), new cljs.core.Symbol(null, "meta22421", "meta22421", 2001922351, null)], null);
  }, cljs.core.async.t_cljs$core$async22420.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async22420.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async22420", cljs.core.async.t_cljs$core$async22420.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async22420");
  }, cljs.core.async.__GT_t_cljs$core$async22420 = function(a, b, e) {
    return new cljs.core.async.t_cljs$core$async22420(a, b, e);
  });
  return new cljs.core.async.t_cljs$core$async22420(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.fn_handler.cljs$lang$maxFixedArity = 2;
cljs.core.async.buffer = function(a) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, a);
};
cljs.core.async.dropping_buffer = function(a) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, a);
};
cljs.core.async.sliding_buffer = function(a) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, a);
};
cljs.core.async.unblocking_buffer_QMARK_ = function(a) {
  return null != a ? a.cljs$core$async$impl$protocols$UnblockingBuffer$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, a) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, a);
};
cljs.core.async.chan = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.chan.call(null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.chan.call(null, a, null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.chan.call(null, a, b, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = cljs.core._EQ_.call(null, a, 0) ? null : a;
  if (cljs.core.truth_(b) && !cljs.core.truth_(a)) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
  }
  return cljs.core.async.impl.channels.chan.call(null, "number" === typeof a ? cljs.core.async.buffer.call(null, a) : a, b, c);
};
cljs.core.async.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.promise_chan = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.promise_chan.call(null, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.promise_chan.call(null, a, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.chan.call(null, cljs.core.async.impl.buffers.promise_buffer.call(null), a, b);
};
cljs.core.async.promise_chan.cljs$lang$maxFixedArity = 2;
cljs.core.async.timeout = function(a) {
  return cljs.core.async.impl.timers.timeout.call(null, a);
};
cljs.core.async._LT__BANG_ = function(a) {
  throw Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.take_BANG_.call(null, a, b, !0);
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = cljs.core.async.impl.protocols.take_BANG_.call(null, a, cljs.core.async.fn_handler.call(null, b));
  if (cljs.core.truth_(a)) {
    var d = cljs.core.deref.call(null, a);
    cljs.core.truth_(c) ? b.call(null, d) : cljs.core.async.impl.dispatch.run.call(null, function(a, c) {
      return function() {
        return b.call(null, a);
      };
    }(d, a));
  }
  return null;
};
cljs.core.async.take_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.nop = function(a) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function(a, b) {
  throw Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.async.impl.protocols.put_BANG_.call(null, a, b, cljs.core.async.fhnop);
  return cljs.core.truth_(c) ? cljs.core.deref.call(null, c) : !0;
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.async.put_BANG_.call(null, a, b, c, !0);
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  a = cljs.core.async.impl.protocols.put_BANG_.call(null, a, b, cljs.core.async.fn_handler.call(null, c));
  return cljs.core.truth_(a) ? (b = cljs.core.deref.call(null, a), cljs.core.truth_(d) ? c.call(null, b) : cljs.core.async.impl.dispatch.run.call(null, function(a, b, d) {
    return function() {
      return c.call(null, a);
    };
  }(b, a, a)), b) : !0;
};
cljs.core.async.put_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.async.close_BANG_ = function(a) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, a);
};
cljs.core.async.random_array = function(a) {
  for (var b = Array(a), c = 0;;) {
    if (c < a) {
      b[c] = 0, c += 1;
    } else {
      break;
    }
  }
  for (c = 1;;) {
    if (cljs.core._EQ_.call(null, c, a)) {
      return b;
    }
    var d = cljs.core.rand_int.call(null, c);
    b[c] = b[d];
    b[d] = c;
    c += 1;
  }
};
cljs.core.async.alt_flag = function cljs$core$async$alt_flag() {
  var b = cljs.core.atom.call(null, !0);
  "undefined" === typeof cljs.core.async.t_cljs$core$async22465 && (cljs.core.async.t_cljs$core$async22465 = function(b, d, e) {
    this.alt_flag = b;
    this.flag = d;
    this.meta22466 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async22465.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b) {
    return function(b, c) {
      return new cljs.core.async.t_cljs$core$async22465(this.alt_flag, this.flag, c);
    };
  }(b), cljs.core.async.t_cljs$core$async22465.prototype.cljs$core$IMeta$_meta$arity$1 = function(b) {
    return function(b) {
      return this.meta22466;
    };
  }(b), cljs.core.async.t_cljs$core$async22465.prototype.cljs$core$async$impl$protocols$Handler$ = !0, cljs.core.async.t_cljs$core$async22465.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(b) {
    return function(b) {
      return cljs.core.deref.call(null, this.flag);
    };
  }(b), cljs.core.async.t_cljs$core$async22465.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(b) {
    return function(b) {
      return !0;
    };
  }(b), cljs.core.async.t_cljs$core$async22465.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(b) {
    return function(b) {
      cljs.core.reset_BANG_.call(null, this.flag, null);
      return !0;
    };
  }(b), cljs.core.async.t_cljs$core$async22465.getBasis = function(b) {
    return function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-flag", "alt-flag", -1794972754, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), !0, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), 
      new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "meta22466", "meta22466", 495880347, null)], null);
    };
  }(b), cljs.core.async.t_cljs$core$async22465.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async22465.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async22465", cljs.core.async.t_cljs$core$async22465.cljs$lang$ctorPrWriter = function(b) {
    return function(b, c, f) {
      return cljs.core._write.call(null, c, "cljs.core.async/t_cljs$core$async22465");
    };
  }(b), cljs.core.async.__GT_t_cljs$core$async22465 = function(b) {
    return function(b, c, f) {
      return new cljs.core.async.t_cljs$core$async22465(b, c, f);
    };
  }(b));
  return new cljs.core.async.t_cljs$core$async22465(cljs$core$async$alt_flag, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function cljs$core$async$alt_handler(b, c) {
  "undefined" === typeof cljs.core.async.t_cljs$core$async22471 && (cljs.core.async.t_cljs$core$async22471 = function(b, c, f, g) {
    this.alt_handler = b;
    this.flag = c;
    this.cb = f;
    this.meta22472 = g;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async22471.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b, c) {
    return new cljs.core.async.t_cljs$core$async22471(this.alt_handler, this.flag, this.cb, c);
  }, cljs.core.async.t_cljs$core$async22471.prototype.cljs$core$IMeta$_meta$arity$1 = function(b) {
    return this.meta22472;
  }, cljs.core.async.t_cljs$core$async22471.prototype.cljs$core$async$impl$protocols$Handler$ = !0, cljs.core.async.t_cljs$core$async22471.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(b) {
    return cljs.core.async.impl.protocols.active_QMARK_.call(null, this.flag);
  }, cljs.core.async.t_cljs$core$async22471.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(b) {
    return !0;
  }, cljs.core.async.t_cljs$core$async22471.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(b) {
    cljs.core.async.impl.protocols.commit.call(null, this.flag);
    return this.cb;
  }, cljs.core.async.t_cljs$core$async22471.getBasis = function() {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-handler", "alt-handler", 963786170, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), !0, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, 
    cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null)], null)))], null)), new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null), new cljs.core.Symbol(null, "meta22472", "meta22472", -764546193, null)], null);
  }, cljs.core.async.t_cljs$core$async22471.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async22471.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async22471", cljs.core.async.t_cljs$core$async22471.cljs$lang$ctorPrWriter = function(b, c, f) {
    return cljs.core._write.call(null, c, "cljs.core.async/t_cljs$core$async22471");
  }, cljs.core.async.__GT_t_cljs$core$async22471 = function(b, c, f, g) {
    return new cljs.core.async.t_cljs$core$async22471(b, c, f, g);
  });
  return new cljs.core.async.t_cljs$core$async22471(cljs$core$async$alt_handler, b, c, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function(a, b, c) {
  var d = cljs.core.async.alt_flag.call(null), e = cljs.core.count.call(null, b), f = cljs.core.async.random_array.call(null, e), g = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(c), h = function() {
    for (var c = 0;;) {
      if (c < e) {
        var h = cljs.core.truth_(g) ? c : f[c], l = cljs.core.nth.call(null, b, h), n = cljs.core.vector_QMARK_.call(null, l) ? l.call(null, 0) : null, p = cljs.core.truth_(n) ? function() {
          var b = l.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, n, b, cljs.core.async.alt_handler.call(null, d, function(b, c, d, e, f, g, h, k, m) {
            return function(b) {
              return a.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, f], null));
            };
          }(c, b, h, l, n, d, e, f, g)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, l, cljs.core.async.alt_handler.call(null, d, function(b, c, d, e, f, g, h, k) {
          return function(b) {
            return a.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, d], null));
          };
        }(c, h, l, n, d, e, f, g)));
        if (cljs.core.truth_(p)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, p), function() {
            var a = n;
            return cljs.core.truth_(a) ? a : l;
          }()], null));
        }
        c += 1;
      } else {
        return null;
      }
    }
  }();
  return cljs.core.truth_(h) ? h : cljs.core.contains_QMARK_.call(null, c, new cljs.core.Keyword(null, "default", "default", -1987822328)) ? (h = function() {
    var a = cljs.core.async.impl.protocols.active_QMARK_.call(null, d);
    return cljs.core.truth_(a) ? cljs.core.async.impl.protocols.commit.call(null, d) : a;
  }(), cljs.core.truth_(h) ? cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(c), new cljs.core.Keyword(null, "default", "default", -1987822328)], null)) : null) : null;
};
cljs.core.async.alts_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || b.cljs$core$ISeq$) && cljs.core.apply.call(null, cljs.core.hash_map, b);
  throw Error("alts! used not in (go ...) block");
};
cljs.core.async.alts_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.async.alts_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.async.offer_BANG_ = function(a, b) {
  var c = cljs.core.async.impl.protocols.put_BANG_.call(null, a, b, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, !1));
  return cljs.core.truth_(c) ? cljs.core.deref.call(null, c) : null;
};
cljs.core.async.poll_BANG_ = function(a) {
  a = cljs.core.async.impl.protocols.take_BANG_.call(null, a, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, !1));
  return cljs.core.truth_(a) ? cljs.core.deref.call(null, a) : null;
};
cljs.core.async.pipe = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.pipe.call(null, a, b, !0);
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(d) {
    return function() {
      var f = function() {
        return function(a, b) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (e) {
                    if (e instanceof Object) {
                      b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return c;
                }
              }
            }, b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(d) {
          return function(d) {
            var e = d[1];
            return 7 === e ? (e = d, e[2] = d[2], e[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 1 === e ? (d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 4 === e ? (e = d[7], e = d[2], d[7] = e, cljs.core.truth_(null == e) ? d[1] = 5 : d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 13 === e ? (d[2] = null, d[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === e ? (e = d[7], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, 
            d, 11, b, e)) : 3 === e ? (e = d[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, e)) : 12 === e ? (d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === e ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, d, 4, a) : 11 === e ? (e = d[2], cljs.core.truth_(e) ? d[1] = 12 : d[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (d[2] = null, d[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
            5 === e ? (cljs.core.truth_(c) ? d[1] = 8 : d[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 14 === e || 10 === e ? (e = d[2], d[2] = e, d[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (e = cljs.core.async.close_BANG_.call(null, b), d[2] = e, d[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(d), d);
      }(), g = function() {
        var a = f.call(null);
        a[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = d;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
    };
  }(d));
  return b;
};
cljs.core.async.pipe.cljs$lang$maxFixedArity = 3;
cljs.core.async.pipeline_STAR_ = function(a, b, c, d, e, f, g) {
  if (!(0 < a)) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  for (var h = cljs.core.async.chan.call(null, a), k = cljs.core.async.chan.call(null, a), m = function(a, b) {
    return function(d) {
      var e = cljs.core.nth.call(null, d, 0, null), g = cljs.core.nth.call(null, d, 1, null);
      if (null == d) {
        return cljs.core.async.close_BANG_.call(null, b), null;
      }
      var h = cljs.core.async.chan.call(null, 1, c, f), k = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f, g, h) {
        return function() {
          var k = function() {
            return function(a, b, c, d, e, f, g, h, k) {
              return function() {
                var b = null, c = function() {
                  var a = [null, null, null, null, null, null, null, null];
                  a[0] = b;
                  a[1] = 1;
                  return a;
                }, d = function(b) {
                  for (;;) {
                    var c;
                    a: {
                      try {
                        for (;;) {
                          var d = a.call(null, b);
                          if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            c = d;
                            break a;
                          }
                        }
                      } catch (e) {
                        if (e instanceof Object) {
                          b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e;
                        }
                      }
                    }
                    if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      return c;
                    }
                  }
                }, b = function(a) {
                  switch(arguments.length) {
                    case 0:
                      return c.call(this);
                    case 1:
                      return d.call(this, a);
                  }
                  throw Error("Invalid arity: " + arguments.length);
                };
                b.cljs$core$IFn$_invoke$arity$0 = c;
                b.cljs$core$IFn$_invoke$arity$1 = d;
                return b;
              }();
            }(function(a, b, c, d, e, f, g, h) {
              return function(a) {
                var c = a[1];
                if (1 === c) {
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, a, 2, b, d);
                }
                if (2 === c) {
                  var c = a[2], e = cljs.core.async.close_BANG_.call(null, b);
                  a[7] = c;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, e);
                }
                return null;
              };
            }(a, b, c, d, e, f, g, h), a, b, c, d, e, f, g, h);
          }(), l = function() {
            var b = k.call(null);
            b[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = a;
            return b;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, l);
        };
      }(k, h, d, e, g, d, a, b));
      cljs.core.async.put_BANG_.call(null, g, h);
      return !0;
    };
  }(h, k), l = function(a, b, d) {
    return function(a) {
      var d = cljs.core.nth.call(null, a, 0, null), e = cljs.core.nth.call(null, a, 1, null);
      if (null == a) {
        return cljs.core.async.close_BANG_.call(null, b), null;
      }
      a = cljs.core.async.chan.call(null, 1);
      c.call(null, d, a);
      cljs.core.async.put_BANG_.call(null, e, a);
      return !0;
    };
  }(h, k, m), n = 0;;) {
    if (n < a) {
      var p = g instanceof cljs.core.Keyword ? g.fqn : null;
      switch(p) {
        case "compute":
          var q = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f, g, h) {
            return function() {
              var k = function() {
                var k = function(a, b, c, d, e, f, g, h) {
                  return function(a) {
                    var b = a[1];
                    return 1 === b ? (a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === b ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 4, e) : 3 === b ? (b = a[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, b)) : 4 === b ? (b = g.call(null, a[2]), cljs.core.truth_(b) ? a[1] = 5 : a[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === b ? (a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", 
                    -437573268)) : 6 === b ? (a[2] = null, a[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 7 === b ? (b = a[2], a[2] = b, a[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
                  };
                }(a, b, c, d, e, f, g, h);
                return function(a, b, c, d, e, f, g, h, k) {
                  return function() {
                    var a = null, c = function() {
                      var b = [null, null, null, null, null, null, null];
                      b[0] = a;
                      b[1] = 1;
                      return b;
                    }, d = function(a) {
                      for (;;) {
                        var c;
                        a: {
                          try {
                            for (;;) {
                              var d = b.call(null, a);
                              if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                c = d;
                                break a;
                              }
                            }
                          } catch (e) {
                            if (e instanceof Object) {
                              a[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, a), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e;
                            }
                          }
                        }
                        if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          return c;
                        }
                      }
                    }, a = function(a) {
                      switch(arguments.length) {
                        case 0:
                          return c.call(this);
                        case 1:
                          return d.call(this, a);
                      }
                      throw Error("Invalid arity: " + arguments.length);
                    };
                    a.cljs$core$IFn$_invoke$arity$0 = c;
                    a.cljs$core$IFn$_invoke$arity$1 = d;
                    return a;
                  }();
                }(a, k, b, c, d, e, f, g, h);
              }(), l = function() {
                var a = k.call(null);
                a[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = b;
                return a;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, l);
            };
          }(n, q, p, a, h, k, m, l));
          break;
        case "async":
          q = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f, g, h) {
            return function() {
              var k = function() {
                var k = function(a, b, c, d, e, f, g, h) {
                  return function(a) {
                    var b = a[1];
                    return 1 === b ? (a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === b ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 4, e) : 3 === b ? (b = a[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, b)) : 4 === b ? (b = h.call(null, a[2]), cljs.core.truth_(b) ? a[1] = 5 : a[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === b ? (a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", 
                    -437573268)) : 6 === b ? (a[2] = null, a[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 7 === b ? (b = a[2], a[2] = b, a[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
                  };
                }(a, b, c, d, e, f, g, h);
                return function(a, b, c, d, e, f, g, h, k) {
                  return function() {
                    var a = null, c = function() {
                      var b = [null, null, null, null, null, null, null];
                      b[0] = a;
                      b[1] = 1;
                      return b;
                    }, d = function(a) {
                      for (;;) {
                        var c;
                        a: {
                          try {
                            for (;;) {
                              var d = b.call(null, a);
                              if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                c = d;
                                break a;
                              }
                            }
                          } catch (e) {
                            if (e instanceof Object) {
                              a[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, a), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e;
                            }
                          }
                        }
                        if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          return c;
                        }
                      }
                    }, a = function(a) {
                      switch(arguments.length) {
                        case 0:
                          return c.call(this);
                        case 1:
                          return d.call(this, a);
                      }
                      throw Error("Invalid arity: " + arguments.length);
                    };
                    a.cljs$core$IFn$_invoke$arity$0 = c;
                    a.cljs$core$IFn$_invoke$arity$1 = d;
                    return a;
                  }();
                }(a, k, b, c, d, e, f, g, h);
              }(), l = function() {
                var a = k.call(null);
                a[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = b;
                return a;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, l);
            };
          }(n, q, p, a, h, k, m, l));
          break;
        default:
          throw Error([cljs.core.str("No matching clause: "), cljs.core.str(g)].join(""));;
      }
      n += 1;
    } else {
      break;
    }
  }
  a = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, e, f) {
    return function() {
      var g = function() {
        return function(a, b, c, d, e, f) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (e) {
                    if (e instanceof Object) {
                      b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return c;
                }
              }
            }, b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(a, b, c, e, f) {
          return function(a) {
            var e = a[1];
            if (1 === e) {
              return a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (2 === e) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 4, d);
            }
            if (3 === e) {
              return e = a[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, e);
            }
            if (4 === e) {
              var f = a[7], e = a[2];
              a[7] = e;
              cljs.core.truth_(null == e) ? a[1] = 5 : a[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 5 === e ? (e = cljs.core.async.close_BANG_.call(null, b), a[2] = e, a[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === e ? (e = a[8], f = a[7], e = cljs.core.async.chan.call(null, 1), f = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, e], null), a[8] = e, cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, a, 8, b, f)) : 7 === e ? (e = a[2], a[2] = e, a[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
            8 === e ? (e = a[8], a[9] = a[2], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, a, 9, c, e)) : 9 === e ? (a[10] = a[2], a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(a, b, c, e, f), a, b, c, e, f);
      }(), h = function() {
        var b = g.call(null);
        b[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = a;
        return b;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, h);
    };
  }(a, h, k, m, l));
  a = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(a, c, d, f, g) {
    return function() {
      var h = function() {
        return function(a, b, c, d, e, f) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (e) {
                    if (e instanceof Object) {
                      b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return c;
                }
              }
            }, b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(a, c, d, f, g) {
          return function(a) {
            var c = a[1];
            if (7 === c) {
              return c = a, c[2] = a[2], c[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === c) {
              return a[2] = null, a[1] = 21, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === c) {
              return a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === c) {
              return c = a[7], c = a[2], a[7] = c, cljs.core.truth_(null == c) ? a[1] = 5 : a[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === c) {
              return c = a[8], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, a, 18, b, c);
            }
            if (21 === c) {
              return c = a[2], a[2] = c, a[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === c) {
              return a[9] = a[2], a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === c) {
              return c = a[7], cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 11, c);
            }
            if (17 === c) {
              return c = a[2], cljs.core.truth_(c) ? a[1] = 19 : a[1] = 20, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === c) {
              return c = a[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, c);
            }
            if (12 === c) {
              return c = a[10], cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 14, c);
            }
            if (2 === c) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 4, d);
            }
            if (19 === c) {
              return a[2] = null, a[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (11 === c) {
              return c = a[2], a[10] = c, a[2] = null, a[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (9 === c) {
              return a[2] = null, a[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (5 === c) {
              return cljs.core.truth_(e) ? a[1] = 8 : a[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (14 === c) {
              var c = a[11], c = a[2], f = cljs.core.not.call(null, null == c);
              a[11] = f;
              a[8] = c;
              a[1] = f ? 15 : 16;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 16 === c ? (c = a[11], a[2] = c, a[1] = 17, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === c ? (c = a[2], a[2] = c, a[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 18 === c ? (c = a[2], a[2] = c, a[1] = 17, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === c ? (c = cljs.core.async.close_BANG_.call(null, b), a[2] = c, a[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(a, c, d, f, g), a, c, d, f, g);
      }(), k = function() {
        var b = h.call(null);
        b[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = a;
        return b;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, k);
    };
  }(a, h, k, m, l));
  return a;
};
cljs.core.async.pipeline_async = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 4:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.async.pipeline_async.call(null, a, b, c, d, !0);
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return cljs.core.async.pipeline_STAR_.call(null, a, b, c, d, e, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.core.async.pipeline_async.cljs$lang$maxFixedArity = 5;
cljs.core.async.pipeline = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 4:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.async.pipeline.call(null, a, b, c, d, !0);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return cljs.core.async.pipeline.call(null, a, b, c, d, e, null);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  return cljs.core.async.pipeline_STAR_.call(null, a, b, c, d, e, f, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
};
cljs.core.async.pipeline.cljs$lang$maxFixedArity = 6;
cljs.core.async.split = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 4:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.split.call(null, a, b, null, null);
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  c = cljs.core.async.chan.call(null, c);
  d = cljs.core.async.chan.call(null, d);
  var e = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d, e) {
    return function() {
      var k = function() {
        return function(a, b, c, d) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (e) {
                    if (e instanceof Object) {
                      b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return c;
                }
              }
            }, b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d, e) {
          return function(c) {
            var f = c[1];
            if (7 === f) {
              return f = c, f[2] = c[2], f[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === f) {
              return c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === f) {
              return f = c[7], f = c[2], c[7] = f, cljs.core.truth_(null == f) ? c[1] = 5 : c[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === f) {
              return c[2] = null, c[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === f) {
              return f = c[7], f = a.call(null, f), cljs.core.truth_(f) ? c[1] = 9 : c[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === f) {
              return f = c[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, f);
            }
            if (12 === f) {
              return c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (2 === f) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 4, b);
            }
            if (11 === f) {
              var f = c[7], g = c[2];
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 8, g, f);
            }
            return 9 === f ? (c[2] = d, c[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === f ? (g = cljs.core.async.close_BANG_.call(null, d), f = cljs.core.async.close_BANG_.call(null, e), c[8] = g, c[2] = f, c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 14 === f ? (f = c[2], c[2] = f, c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === f ? (c[2] = e, c[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
            8 === f ? (f = c[2], cljs.core.truth_(f) ? c[1] = 12 : c[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(c, d, e), c, d, e);
      }(), m = function() {
        var a = k.call(null);
        a[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, m);
    };
  }(e, c, d));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d], null);
};
cljs.core.async.split.cljs$lang$maxFixedArity = 4;
cljs.core.async.reduce = function(a, b, c) {
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(d) {
    return function() {
      var f = function() {
        return function(a, b) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (e) {
                    if (e instanceof Object) {
                      b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return c;
                }
              }
            }, b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(d) {
          return function(d) {
            var e = d[1];
            if (7 === e) {
              return e = d, e[2] = d[2], e[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              return e = b, d[7] = e, d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === e) {
              var f = d[8], e = d[2];
              d[8] = e;
              cljs.core.truth_(null == e) ? d[1] = 5 : d[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === e) {
              var e = d[7], f = d[8], g = d[9], e = a.call(null, e, f), f = cljs.core.reduced_QMARK_.call(null, e);
              d[9] = e;
              d[1] = f ? 8 : 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 3 === e ? (e = d[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, e)) : 2 === e ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, d, 4, c) : 9 === e ? (g = d[9], d[7] = g, d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === e ? (e = d[7], d[2] = e, d[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (e = d[2], d[2] = e, d[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
            8 === e ? (g = d[9], e = cljs.core.deref.call(null, g), d[2] = e, d[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(d), d);
      }(), g = function() {
        var a = f.call(null);
        a[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = d;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
    };
  }(d));
  return d;
};
cljs.core.async.onto_chan = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.onto_chan.call(null, a, b, !0);
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(d) {
    return function() {
      var f = function() {
        return function(a, b) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (e) {
                    if (e instanceof Object) {
                      b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return c;
                }
              }
            }, b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(d) {
          return function(d) {
            var e = d[1];
            return 7 === e ? (e = d, e[2] = d[2], e[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 1 === e ? (e = cljs.core.seq.call(null, b), d[7] = e, d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 4 === e ? (e = d[7], e = cljs.core.first.call(null, e), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, d, 7, a, e)) : 13 === e ? (e = d[2], d[2] = e, d[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === e ? (e = 
            d[2], cljs.core.truth_(e) ? d[1] = 8 : d[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === e ? (e = d[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, e)) : 12 === e ? (d[2] = null, d[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === e ? (e = d[7], cljs.core.truth_(e) ? d[1] = 4 : d[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === e ? (e = cljs.core.async.close_BANG_.call(null, a), d[2] = e, d[1] = 
            13, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (cljs.core.truth_(c) ? d[1] = 11 : d[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === e ? (e = d[7], d[2] = e, d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (e = d[2], d[2] = e, d[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (e = d[7], e = cljs.core.next.call(null, e), d[7] = e, d[2] = null, d[1] = 2, new cljs.core.Keyword(null, 
            "recur", "recur", -437573268)) : null;
          };
        }(d), d);
      }(), g = function() {
        var a = f.call(null);
        a[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = d;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
    };
  }(d));
  return d;
};
cljs.core.async.onto_chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.to_chan = function(a) {
  var b = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, a));
  cljs.core.async.onto_chan.call(null, b, a);
  return b;
};
cljs.core.async.Mux = function() {
};
cljs.core.async.muxch_STAR_ = function(a) {
  if (null != a && null != a.cljs$core$async$Mux$muxch_STAR_$arity$1) {
    return a.cljs$core$async$Mux$muxch_STAR_$arity$1(a);
  }
  var b = cljs.core.async.muxch_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.muxch_STAR_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Mux.muxch*", a);
};
cljs.core.async.Mult = function() {
};
cljs.core.async.tap_STAR_ = function(a, b, c) {
  if (null != a && null != a.cljs$core$async$Mult$tap_STAR_$arity$3) {
    return a.cljs$core$async$Mult$tap_STAR_$arity$3(a, b, c);
  }
  var d = cljs.core.async.tap_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = cljs.core.async.tap_STAR_._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "Mult.tap*", a);
};
cljs.core.async.untap_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$Mult$untap_STAR_$arity$2) {
    return a.cljs$core$async$Mult$untap_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.untap_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.untap_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Mult.untap*", a);
};
cljs.core.async.untap_all_STAR_ = function(a) {
  if (null != a && null != a.cljs$core$async$Mult$untap_all_STAR_$arity$1) {
    return a.cljs$core$async$Mult$untap_all_STAR_$arity$1(a);
  }
  var b = cljs.core.async.untap_all_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.untap_all_STAR_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", a);
};
cljs.core.async.mult = function cljs$core$async$mult(b) {
  var c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = function() {
    "undefined" === typeof cljs.core.async.t_cljs$core$async23458 && (cljs.core.async.t_cljs$core$async23458 = function(b, c, d, e) {
      this.mult = b;
      this.ch = c;
      this.cs = d;
      this.meta23459 = e;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, cljs.core.async.t_cljs$core$async23458.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b) {
      return function(b, c) {
        return new cljs.core.async.t_cljs$core$async23458(this.mult, this.ch, this.cs, c);
      };
    }(c), cljs.core.async.t_cljs$core$async23458.prototype.cljs$core$IMeta$_meta$arity$1 = function(b) {
      return function(b) {
        return this.meta23459;
      };
    }(c), cljs.core.async.t_cljs$core$async23458.prototype.cljs$core$async$Mux$ = !0, cljs.core.async.t_cljs$core$async23458.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(b) {
      return function(b) {
        return this.ch;
      };
    }(c), cljs.core.async.t_cljs$core$async23458.prototype.cljs$core$async$Mult$ = !0, cljs.core.async.t_cljs$core$async23458.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(b) {
      return function(b, c, d) {
        cljs.core.swap_BANG_.call(null, this.cs, cljs.core.assoc, c, d);
        return null;
      };
    }(c), cljs.core.async.t_cljs$core$async23458.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(b) {
      return function(b, c) {
        cljs.core.swap_BANG_.call(null, this.cs, cljs.core.dissoc, c);
        return null;
      };
    }(c), cljs.core.async.t_cljs$core$async23458.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(b) {
      return function(b) {
        cljs.core.reset_BANG_.call(null, this.cs, cljs.core.PersistentArrayMap.EMPTY);
        return null;
      };
    }(c), cljs.core.async.t_cljs$core$async23458.getBasis = function(b) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mult", "mult", -1187640995, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 
        1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mult(iple) of the supplied channel. Channels\n  containing copies of the channel can be created with 'tap', and\n  detached with 'untap'.\n\n  Each item is distributed to all taps in parallel and synchronously,\n  i.e. each tap must accept before the next item is distributed. Use\n  buffering/windowing to prevent slow taps from holding up the mult.\n\n  Items received when there are no taps get dropped.\n\n  If a tap puts to a closed channel, it will be removed from the mult."], 
        null)), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "meta23459", "meta23459", 1562558675, null)], null);
      };
    }(c), cljs.core.async.t_cljs$core$async23458.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async23458.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async23458", cljs.core.async.t_cljs$core$async23458.cljs$lang$ctorPrWriter = function(b) {
      return function(b, c, d) {
        return cljs.core._write.call(null, c, "cljs.core.async/t_cljs$core$async23458");
      };
    }(c), cljs.core.async.__GT_t_cljs$core$async23458 = function(b) {
      return function(b, c, d, e) {
        return new cljs.core.async.t_cljs$core$async23458(b, c, d, e);
      };
    }(c));
    return new cljs.core.async.t_cljs$core$async23458(cljs$core$async$mult, b, c, cljs.core.PersistentArrayMap.EMPTY);
  }(), e = cljs.core.async.chan.call(null, 1), f = cljs.core.atom.call(null, null), g = function(b, c, d, e) {
    return function(b) {
      return 0 === cljs.core.swap_BANG_.call(null, e, cljs.core.dec) ? cljs.core.async.put_BANG_.call(null, d, !0) : null;
    };
  }(c, d, e, f), h = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d, e, f, g, h) {
    return function() {
      var r = function() {
        return function(b, c, d, e, f, g, h) {
          return function() {
            var c = null, d = function() {
              var b = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              b[0] = c;
              b[1] = 1;
              return b;
            }, e = function(c) {
              for (;;) {
                var d;
                a: {
                  try {
                    for (;;) {
                      var e = b.call(null, c);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, e, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        d = e;
                        break a;
                      }
                    }
                  } catch (f) {
                    if (f instanceof Object) {
                      c[5] = f, cljs.core.async.impl.ioc_helpers.process_exception.call(null, c), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw f;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            }, c = function(b) {
              switch(arguments.length) {
                case 0:
                  return d.call(this);
                case 1:
                  return e.call(this, b);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            c.cljs$core$IFn$_invoke$arity$0 = d;
            c.cljs$core$IFn$_invoke$arity$1 = e;
            return c;
          }();
        }(function(c, d, e, f, g, h) {
          return function(c) {
            var k = c[1];
            if (7 === k) {
              var l = c, m = l;
              m[2] = c[2];
              m[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === k) {
              var n = c[7], p = cljs.core.first.call(null, n), q = cljs.core.nth.call(null, p, 0, null), r = cljs.core.nth.call(null, p, 1, null);
              c[8] = q;
              l = c;
              cljs.core.truth_(r) ? l[1] = 22 : l[1] = 23;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (27 === k) {
              var t = c[9], u = c[10], L = c[11], M = c[12], J = cljs.core._nth.call(null, u, M), T = cljs.core.async.put_BANG_.call(null, J, t, h);
              c[11] = J;
              l = c;
              cljs.core.truth_(T) ? l[1] = 30 : l[1] = 31;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === k) {
              var U = l = c;
              U[2] = null;
              U[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (24 === k) {
              var n = c[7], R = c[2], S = cljs.core.next.call(null, n), P = null, W = 0, Q = 0;
              c[13] = R;
              c[14] = W;
              c[15] = S;
              c[16] = Q;
              c[17] = P;
              var Y = l = c;
              Y[2] = null;
              Y[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (39 === k) {
              var Z = l = c;
              Z[2] = null;
              Z[1] = 41;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === k) {
              var t = c[9], N = c[2], O = null == N;
              c[9] = N;
              l = c;
              cljs.core.truth_(O) ? l[1] = 5 : l[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === k) {
              var W = c[14], S = c[15], Q = c[16], P = c[17], V = S, ia = P, ba = W, ea = Q + 1;
              c[18] = c[2];
              c[14] = ba;
              c[15] = V;
              c[16] = ea;
              c[17] = ia;
              var fa = l = c;
              fa[2] = null;
              fa[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (21 === k) {
              var X = c[2], ca = l = c;
              ca[2] = X;
              ca[1] = 18;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (31 === k) {
              var L = c[11], ka = h.call(null, null), la = cljs.core.async.untap_STAR_.call(null, e, L);
              c[19] = ka;
              var ga = l = c;
              ga[2] = la;
              ga[1] = 32;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (32 === k) {
              var aa = c[20], u = c[10], da = c[21], M = c[12], ha = c[2], Ta = da, Ua = u, Va = M + 1;
              c[20] = aa;
              c[10] = Ua;
              c[22] = ha;
              c[21] = Ta;
              c[12] = Va;
              var oa = l = c;
              oa[2] = null;
              oa[1] = 25;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (40 === k) {
              var pa = c[23], Wa = h.call(null, null), Xa = cljs.core.async.untap_STAR_.call(null, e, pa);
              c[24] = Wa;
              var qa = l = c;
              qa[2] = Xa;
              qa[1] = 41;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (33 === k) {
              var ja = c[25], Ya = cljs.core.chunked_seq_QMARK_.call(null, ja), l = c;
              l[1] = Ya ? 36 : 37;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === k) {
              var ma = c[26], Za = cljs.core.async.close_BANG_.call(null, ma), ra = l = c;
              ra[2] = Za;
              ra[1] = 15;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (22 === k) {
              var q = c[8], $a = cljs.core.async.close_BANG_.call(null, q), sa = l = c;
              sa[2] = $a;
              sa[1] = 24;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (36 === k) {
              var ja = c[25], ta = cljs.core.chunk_first.call(null, ja), ab = cljs.core.chunk_rest.call(null, ja), bb = cljs.core.count.call(null, ta), da = ab, u = ta, aa = bb, M = 0;
              c[20] = aa;
              c[10] = u;
              c[21] = da;
              c[12] = M;
              var ua = l = c;
              ua[2] = null;
              ua[1] = 25;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (41 === k) {
              var ja = c[25], cb = c[2], da = cljs.core.next.call(null, ja), u = null, M = aa = 0;
              c[27] = cb;
              c[20] = aa;
              c[10] = u;
              c[21] = da;
              c[12] = M;
              var va = l = c;
              va[2] = null;
              va[1] = 25;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (43 === k) {
              var wa = l = c;
              wa[2] = null;
              wa[1] = 44;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (29 === k) {
              var db = c[2], xa = l = c;
              xa[2] = db;
              xa[1] = 26;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (44 === k) {
              c[28] = c[2];
              var ya = l = c;
              ya[2] = null;
              ya[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === k) {
              var za = c[29], eb = cljs.core.deref.call(null, d), na = cljs.core.keys.call(null, eb), fb = cljs.core.count.call(null, na), gb = cljs.core.reset_BANG_.call(null, g, fb), da = cljs.core.seq.call(null, na), u = null, M = aa = 0;
              c[20] = aa;
              c[30] = gb;
              c[10] = u;
              c[29] = na;
              c[21] = da;
              c[12] = M;
              var Aa = l = c;
              Aa[2] = null;
              Aa[1] = 25;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (28 === k) {
              var da = c[21], ja = c[25], Ba = cljs.core.seq.call(null, da);
              c[25] = Ba;
              l = c;
              l[1] = Ba ? 33 : 34;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (25 === k) {
              var aa = c[20], M = c[12], hb = M < aa, l = c;
              cljs.core.truth_(hb) ? l[1] = 27 : l[1] = 28;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (34 === k) {
              var Ca = l = c;
              Ca[2] = null;
              Ca[1] = 35;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (17 === k) {
              var Da = l = c;
              Da[2] = null;
              Da[1] = 18;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === k) {
              var ib = c[2], l = c;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, l, ib);
            }
            if (12 === k) {
              var jb = c[2], Ea = l = c;
              Ea[2] = jb;
              Ea[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (2 === k) {
              return l = c, cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, l, 4, b);
            }
            if (23 === k) {
              var Fa = l = c;
              Fa[2] = null;
              Fa[1] = 24;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (35 === k) {
              var kb = c[2], Ga = l = c;
              Ga[2] = kb;
              Ga[1] = 29;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (19 === k) {
              var n = c[7], Ha = cljs.core.chunk_first.call(null, n), lb = cljs.core.chunk_rest.call(null, n), mb = cljs.core.count.call(null, Ha), S = lb, P = Ha, W = mb, Q = 0;
              c[14] = W;
              c[15] = S;
              c[16] = Q;
              c[17] = P;
              var Ia = l = c;
              Ia[2] = null;
              Ia[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (11 === k) {
              var n = c[7], S = c[15], Ja = cljs.core.seq.call(null, S);
              c[7] = Ja;
              l = c;
              l[1] = Ja ? 16 : 17;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (9 === k) {
              var nb = c[2], Ka = l = c;
              Ka[2] = nb;
              Ka[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (5 === k) {
              var ob = cljs.core.deref.call(null, d), S = cljs.core.seq.call(null, ob), P = null, Q = W = 0;
              c[14] = W;
              c[15] = S;
              c[16] = Q;
              c[17] = P;
              var La = l = c;
              La[2] = null;
              La[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (14 === k) {
              var Ma = l = c;
              Ma[2] = null;
              Ma[1] = 15;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (45 === k) {
              var pb = c[2], Na = l = c;
              Na[2] = pb;
              Na[1] = 44;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (26 === k) {
              var za = c[29], qb = c[2], rb = cljs.core.seq.call(null, za);
              c[31] = qb;
              l = c;
              l[1] = rb ? 42 : 43;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (16 === k) {
              var n = c[7], sb = cljs.core.chunked_seq_QMARK_.call(null, n), l = c;
              l[1] = sb ? 19 : 20;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (38 === k) {
              var tb = c[2], Oa = l = c;
              Oa[2] = tb;
              Oa[1] = 35;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (30 === k) {
              var Pa = l = c;
              Pa[2] = null;
              Pa[1] = 32;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (10 === k) {
              var Q = c[16], P = c[17], Qa = cljs.core._nth.call(null, P, Q), ma = cljs.core.nth.call(null, Qa, 0, null), ub = cljs.core.nth.call(null, Qa, 1, null);
              c[26] = ma;
              l = c;
              cljs.core.truth_(ub) ? l[1] = 13 : l[1] = 14;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (18 === k) {
              var vb = c[2], Ra = l = c;
              Ra[2] = vb;
              Ra[1] = 12;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (42 === k) {
              return l = c, cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, l, 45, f);
            }
            if (37 === k) {
              var t = c[9], ja = c[25], pa = c[23], Sa = cljs.core.first.call(null, ja), wb = cljs.core.async.put_BANG_.call(null, Sa, t, h);
              c[23] = Sa;
              l = c;
              cljs.core.truth_(wb) ? l[1] = 39 : l[1] = 40;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (8 === k) {
              var W = c[14], Q = c[16], xb = Q < W, l = c;
              cljs.core.truth_(xb) ? l[1] = 10 : l[1] = 11;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return null;
          };
        }(c, d, e, f, g, h), c, d, e, f, g, h);
      }(), t = function() {
        var b = r.call(null);
        b[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c;
        return b;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, t);
    };
  }(h, c, d, e, f, g));
  return d;
};
cljs.core.async.tap = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.tap.call(null, a, b, !0);
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  cljs.core.async.tap_STAR_.call(null, a, b, c);
  return b;
};
cljs.core.async.tap.cljs$lang$maxFixedArity = 3;
cljs.core.async.untap = function(a, b) {
  return cljs.core.async.untap_STAR_.call(null, a, b);
};
cljs.core.async.untap_all = function(a) {
  return cljs.core.async.untap_all_STAR_.call(null, a);
};
cljs.core.async.Mix = function() {
};
cljs.core.async.admix_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$Mix$admix_STAR_$arity$2) {
    return a.cljs$core$async$Mix$admix_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.admix_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.admix_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Mix.admix*", a);
};
cljs.core.async.unmix_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$Mix$unmix_STAR_$arity$2) {
    return a.cljs$core$async$Mix$unmix_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.unmix_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.unmix_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Mix.unmix*", a);
};
cljs.core.async.unmix_all_STAR_ = function(a) {
  if (null != a && null != a.cljs$core$async$Mix$unmix_all_STAR_$arity$1) {
    return a.cljs$core$async$Mix$unmix_all_STAR_$arity$1(a);
  }
  var b = cljs.core.async.unmix_all_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.unmix_all_STAR_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", a);
};
cljs.core.async.toggle_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$Mix$toggle_STAR_$arity$2) {
    return a.cljs$core$async$Mix$toggle_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.toggle_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.toggle_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Mix.toggle*", a);
};
cljs.core.async.solo_mode_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$Mix$solo_mode_STAR_$arity$2) {
    return a.cljs$core$async$Mix$solo_mode_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.solo_mode_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.solo_mode_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", a);
};
cljs.core.async.ioc_alts_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 3 < b.length ? new cljs.core.IndexedSeq(b.slice(3), 0) : null;
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
};
cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  var e = null != d && (d.cljs$lang$protocol_mask$partition0$ & 64 || d.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, d) : d;
  a[cljs.core.async.impl.ioc_helpers.STATE_IDX] = b;
  b = cljs.core.async.do_alts.call(null, function(b, c, d) {
    return function(b) {
      a[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = b;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, a);
    };
  }(d, e, e), c, e);
  return cljs.core.truth_(b) ? (a[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, b), new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
};
cljs.core.async.ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.ioc_alts_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  var d = cljs.core.next.call(null, c), c = cljs.core.first.call(null, d), d = cljs.core.next.call(null, d);
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.async.mix = function cljs$core$async$mix(b) {
  var c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null), e = cljs.core.conj.call(null, d, new cljs.core.Keyword(null, "solo", "solo", -316350075)), f = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646)), g = cljs.core.async.chan.call(null), 
  h = function(b, c, d, e, f) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, f, !0);
    };
  }(c, d, e, f, g), k = function(b, c, d, e, f, g) {
    return function(h, k) {
      return cljs.core.reduce_kv.call(null, function(b, c, d, e, f, g) {
        return function(b, c, d) {
          return cljs.core.truth_(h.call(null, d)) ? cljs.core.conj.call(null, b, c) : b;
        };
      }(b, c, d, e, f, g), cljs.core.PersistentHashSet.EMPTY, k);
    };
  }(c, d, e, f, g, h), m = function(b, c, d, e, f, g, h) {
    return function() {
      var c = cljs.core.deref.call(null, b), d = cljs.core.deref.call(null, e), g = h.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), c), k = h.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), c);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), g, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), h.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), c), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, d, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, g) ? cljs.core.vec.call(null, g) : cljs.core.vec.call(null, 
      cljs.core.remove.call(null, k, cljs.core.keys.call(null, c))), f)], null);
    };
  }(c, d, e, f, g, h, k), l = function() {
    "undefined" === typeof cljs.core.async.t_cljs$core$async23922 && (cljs.core.async.t_cljs$core$async23922 = function(b, c, d, e, f, g, h, k, l, m, n) {
      this.change = b;
      this.mix = c;
      this.solo_mode = d;
      this.pick = e;
      this.cs = f;
      this.calc_state = g;
      this.out = h;
      this.changed = k;
      this.solo_modes = l;
      this.attrs = m;
      this.meta23923 = n;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, cljs.core.async.t_cljs$core$async23922.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b, c, d, e, f, g, h, k) {
      return function(b, c) {
        return new cljs.core.async.t_cljs$core$async23922(this.change, this.mix, this.solo_mode, this.pick, this.cs, this.calc_state, this.out, this.changed, this.solo_modes, this.attrs, c);
      };
    }(c, d, e, f, g, h, k, m), cljs.core.async.t_cljs$core$async23922.prototype.cljs$core$IMeta$_meta$arity$1 = function(b, c, d, e, f, g, h, k) {
      return function(b) {
        return this.meta23923;
      };
    }(c, d, e, f, g, h, k, m), cljs.core.async.t_cljs$core$async23922.prototype.cljs$core$async$Mux$ = !0, cljs.core.async.t_cljs$core$async23922.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(b, c, d, e, f, g, h, k) {
      return function(b) {
        return this.out;
      };
    }(c, d, e, f, g, h, k, m), cljs.core.async.t_cljs$core$async23922.prototype.cljs$core$async$Mix$ = !0, cljs.core.async.t_cljs$core$async23922.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(b, c, d, e, f, g, h, k) {
      return function(b, c) {
        cljs.core.swap_BANG_.call(null, this.cs, cljs.core.assoc, c, cljs.core.PersistentArrayMap.EMPTY);
        return this.changed.call(null);
      };
    }(c, d, e, f, g, h, k, m), cljs.core.async.t_cljs$core$async23922.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(b, c, d, e, f, g, h, k) {
      return function(b, c) {
        cljs.core.swap_BANG_.call(null, this.cs, cljs.core.dissoc, c);
        return this.changed.call(null);
      };
    }(c, d, e, f, g, h, k, m), cljs.core.async.t_cljs$core$async23922.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(b, c, d, e, f, g, h, k) {
      return function(b) {
        cljs.core.reset_BANG_.call(null, this.cs, cljs.core.PersistentArrayMap.EMPTY);
        return this.changed.call(null);
      };
    }(c, d, e, f, g, h, k, m), cljs.core.async.t_cljs$core$async23922.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(b, c, d, e, f, g, h, k) {
      return function(b, c) {
        cljs.core.swap_BANG_.call(null, this.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), c);
        return this.changed.call(null);
      };
    }(c, d, e, f, g, h, k, m), cljs.core.async.t_cljs$core$async23922.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(b, c, d, e, f, g, h, k) {
      return function(b, c) {
        if (!cljs.core.truth_(this.solo_modes.call(null, c))) {
          throw Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(this.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
        }
        cljs.core.reset_BANG_.call(null, this.solo_mode, c);
        return this.changed.call(null);
      };
    }(c, d, e, f, g, h, k, m), cljs.core.async.t_cljs$core$async23922.getBasis = function(b, c, d, e, f, g, h, k) {
      return function() {
        return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "change", "change", 477485025, null), cljs.core.with_meta(new cljs.core.Symbol(null, "mix", "mix", 2121373763, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
        [new cljs.core.Symbol(null, "out", "out", 729986010, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mix of one or more input channels which will\n  be put on the supplied out channel. Input sources can be added to\n  the mix with 'admix', and removed with 'unmix'. A mix supports\n  soloing, muting and pausing multiple inputs atomically using\n  'toggle', and can solo using either muting or pausing as determined\n  by 'solo-mode'.\n\n  Each channel can have zero or more boolean modes set via 'toggle':\n\n  :solo - when true, only this (ond other soloed) channel(s) will appear\n          in the mix output channel. :mute and :pause states of soloed\n          channels are ignored. If solo-mode is :mute, non-soloed\n          channels are muted, if :pause, non-soloed channels are\n          paused.\n\n  :mute - muted channels will have their contents consumed but not included in the mix\n  :pause - paused channels will not have their contents consumed (and thus also not included in the mix)\n"], 
        null)), new cljs.core.Symbol(null, "solo-mode", "solo-mode", 2031788074, null), new cljs.core.Symbol(null, "pick", "pick", 1300068175, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "calc-state", "calc-state", -349968968, null), new cljs.core.Symbol(null, "out", "out", 729986010, null), new cljs.core.Symbol(null, "changed", "changed", -2083710852, null), new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, 
        "attrs", "attrs", -450137186, null), new cljs.core.Symbol(null, "meta23923", "meta23923", -189859926, null)], null);
      };
    }(c, d, e, f, g, h, k, m), cljs.core.async.t_cljs$core$async23922.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async23922.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async23922", cljs.core.async.t_cljs$core$async23922.cljs$lang$ctorPrWriter = function(b, c, d, e, f, g, h, k) {
      return function(b, c, d) {
        return cljs.core._write.call(null, c, "cljs.core.async/t_cljs$core$async23922");
      };
    }(c, d, e, f, g, h, k, m), cljs.core.async.__GT_t_cljs$core$async23922 = function(b, c, d, e, f, g, h, k) {
      return function(b, c, d, e, f, g, h, k, l, m, n) {
        return new cljs.core.async.t_cljs$core$async23922(b, c, d, e, f, g, h, k, l, m, n);
      };
    }(c, d, e, f, g, h, k, m));
    return new cljs.core.async.t_cljs$core$async23922(g, cljs$core$async$mix, f, k, c, m, b, h, d, e, cljs.core.PersistentArrayMap.EMPTY);
  }(), n = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d, e, f, g, h, k, l, m, n) {
    return function() {
      var B = function() {
        return function(b, c, d, e, f, g, h, k, l, m, n) {
          return function() {
            var c = null, d = function() {
              var b = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              b[0] = c;
              b[1] = 1;
              return b;
            }, e = function(c) {
              for (;;) {
                var d;
                a: {
                  try {
                    for (;;) {
                      var e = b.call(null, c);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, e, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        d = e;
                        break a;
                      }
                    }
                  } catch (f) {
                    if (f instanceof Object) {
                      c[5] = f, cljs.core.async.impl.ioc_helpers.process_exception.call(null, c), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw f;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            }, c = function(b) {
              switch(arguments.length) {
                case 0:
                  return d.call(this);
                case 1:
                  return e.call(this, b);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            c.cljs$core$IFn$_invoke$arity$0 = d;
            c.cljs$core$IFn$_invoke$arity$1 = e;
            return c;
          }();
        }(function(c, d, e, f, g, h, k, l, m, n) {
          return function(c) {
            var e = c[1];
            if (7 === e) {
              return e = c, e[2] = c[2], e[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === e) {
              return e = c[7], c[2] = e, c[1] = 21, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (27 === e) {
              return c[2] = null, c[1] = 28, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              var e = c[8], e = m.call(null), f = cljs.core.not.call(null, null == e);
              c[8] = e;
              c[1] = f ? 2 : 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (24 === e) {
              var g = c[9], e = c[10], f = c[11], e = e.call(null, g);
              c[11] = e;
              cljs.core.truth_(e) ? c[1] = 29 : c[1] = 30;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === e) {
              return e = c[2], cljs.core.truth_(e) ? c[1] = 8 : c[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === e) {
              return e = c[2], cljs.core.truth_(e) ? c[1] = 19 : c[1] = 20, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (21 === e) {
              var e = c[12], g = c[2], e = cljs.core.get.call(null, g, new cljs.core.Keyword(null, "solos", "solos", 1441458643)), f = cljs.core.get.call(null, g, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309)), k = cljs.core.get.call(null, g, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
              c[10] = e;
              c[12] = g;
              c[13] = f;
              return cljs.core.async.ioc_alts_BANG_.call(null, c, 22, k);
            }
            return 31 === e ? (e = c[2], cljs.core.truth_(e) ? c[1] = 32 : c[1] = 33, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 32 === e ? (e = c[14], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 35, b, e)) : 33 === e ? (e = c[12], c[7] = e, c[2] = null, c[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 13 === e ? (e = c[7], f = e.cljs$core$ISeq$, e = e.cljs$lang$protocol_mask$partition0$ & 64 || f, cljs.core.truth_(e) ? c[1] = 16 : c[1] = 17, 
            new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 22 === e ? (f = c[2], e = cljs.core.nth.call(null, f, 0, null), k = cljs.core.nth.call(null, f, 1, null), f = null == e, g = cljs.core._EQ_.call(null, k, h), c[9] = k, c[14] = e, cljs.core.truth_(f || g) ? c[1] = 23 : c[1] = 24, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 36 === e ? (e = c[12], c[7] = e, c[2] = null, c[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 29 === e ? (f = c[11], 
            c[2] = f, c[1] = 31, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === e ? (c[2] = !1, c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 28 === e ? (f = c[2], e = m.call(null), c[15] = f, c[7] = e, c[2] = null, c[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 25 === e ? (e = c[2], c[2] = e, c[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 34 === e ? (e = c[2], c[2] = e, c[1] = 25, new cljs.core.Keyword(null, 
            "recur", "recur", -437573268)) : 17 === e ? (c[2] = !1, c[1] = 18, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === e ? (c[2] = !1, c[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 12 === e ? (e = c[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, e)) : 2 === e ? (e = c[8], f = e.cljs$core$ISeq$, e = e.cljs$lang$protocol_mask$partition0$ & 64 || f, cljs.core.truth_(e) ? c[1] = 5 : c[1] = 6, new cljs.core.Keyword(null, "recur", "recur", 
            -437573268)) : 23 === e ? (e = c[14], cljs.core.truth_(null == e) ? c[1] = 26 : c[1] = 27, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 35 === e ? (e = c[2], cljs.core.truth_(e) ? c[1] = 36 : c[1] = 37, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 19 === e ? (e = c[7], e = cljs.core.apply.call(null, cljs.core.hash_map, e), c[2] = e, c[1] = 21, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === e ? (e = c[7], e = cljs.core.not.call(null, 
            null == e), c[1] = e ? 13 : 14, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (e = c[8], c[2] = e, c[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === e ? (c[2] = !0, c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 14 === e ? (c[2] = !1, c[1] = 15, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 26 === e ? (g = c[9], e = cljs.core.swap_BANG_.call(null, d, cljs.core.dissoc, g), c[2] = e, c[1] = 28, new cljs.core.Keyword(null, 
            "recur", "recur", -437573268)) : 16 === e ? (c[2] = !0, c[1] = 18, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 38 === e ? (e = c[2], c[2] = e, c[1] = 34, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 30 === e ? (g = c[9], e = c[10], f = c[13], e = cljs.core.empty_QMARK_.call(null, e), f = f.call(null, g), f = cljs.core.not.call(null, f), c[2] = e && f, c[1] = 31, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (e = c[8], k = c[2], 
            f = cljs.core.get.call(null, k, new cljs.core.Keyword(null, "solos", "solos", 1441458643)), g = cljs.core.get.call(null, k, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309)), k = cljs.core.get.call(null, k, new cljs.core.Keyword(null, "reads", "reads", -1215067361)), c[16] = f, c[17] = g, c[7] = e, c[18] = k, c[2] = null, c[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 18 === e ? (e = c[2], c[2] = e, c[1] = 15, new cljs.core.Keyword(null, "recur", "recur", 
            -437573268)) : 37 === e ? (c[2] = null, c[1] = 38, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (e = c[8], e = cljs.core.apply.call(null, cljs.core.hash_map, e), c[2] = e, c[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(c, d, e, f, g, h, k, l, m, n), c, d, e, f, g, h, k, l, m, n);
      }(), I = function() {
        var b = B.call(null);
        b[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c;
        return b;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, I);
    };
  }(n, c, d, e, f, g, h, k, m, l));
  return l;
};
cljs.core.async.admix = function(a, b) {
  return cljs.core.async.admix_STAR_.call(null, a, b);
};
cljs.core.async.unmix = function(a, b) {
  return cljs.core.async.unmix_STAR_.call(null, a, b);
};
cljs.core.async.unmix_all = function(a) {
  return cljs.core.async.unmix_all_STAR_.call(null, a);
};
cljs.core.async.toggle = function(a, b) {
  return cljs.core.async.toggle_STAR_.call(null, a, b);
};
cljs.core.async.solo_mode = function(a, b) {
  return cljs.core.async.solo_mode_STAR_.call(null, a, b);
};
cljs.core.async.Pub = function() {
};
cljs.core.async.sub_STAR_ = function(a, b, c, d) {
  if (null != a && null != a.cljs$core$async$Pub$sub_STAR_$arity$4) {
    return a.cljs$core$async$Pub$sub_STAR_$arity$4(a, b, c, d);
  }
  var e = cljs.core.async.sub_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  e = cljs.core.async.sub_STAR_._;
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  throw cljs.core.missing_protocol.call(null, "Pub.sub*", a);
};
cljs.core.async.unsub_STAR_ = function(a, b, c) {
  if (null != a && null != a.cljs$core$async$Pub$unsub_STAR_$arity$3) {
    return a.cljs$core$async$Pub$unsub_STAR_$arity$3(a, b, c);
  }
  var d = cljs.core.async.unsub_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = cljs.core.async.unsub_STAR_._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "Pub.unsub*", a);
};
cljs.core.async.unsub_all_STAR_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if (null != a && null != a.cljs$core$async$Pub$unsub_all_STAR_$arity$1) {
    return a.cljs$core$async$Pub$unsub_all_STAR_$arity$1(a);
  }
  var b = cljs.core.async.unsub_all_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.unsub_all_STAR_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", a);
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$async$Pub$unsub_all_STAR_$arity$2) {
    return a.cljs$core$async$Pub$unsub_all_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.unsub_all_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.unsub_all_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", a);
};
cljs.core.async.unsub_all_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.async.pub = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.pub.call(null, a, b, cljs.core.constantly.call(null, null));
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = function(a) {
    return function(b) {
      var d = cljs.core.get.call(null, cljs.core.deref.call(null, a), b);
      return cljs.core.truth_(d) ? d : cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, a, function(a, d) {
        return function(a) {
          return cljs.core.truth_(a.call(null, b)) ? a : cljs.core.assoc.call(null, a, b, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, c.call(null, b))));
        };
      }(d, a)), b);
    };
  }(d), f = function() {
    "undefined" === typeof cljs.core.async.t_cljs$core$async24145 && (cljs.core.async.t_cljs$core$async24145 = function(a, b, c, d, e, f) {
      this.ch = a;
      this.topic_fn = b;
      this.buf_fn = c;
      this.mults = d;
      this.ensure_mult = e;
      this.meta24146 = f;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, cljs.core.async.t_cljs$core$async24145.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
      return function(a, b) {
        return new cljs.core.async.t_cljs$core$async24145(this.ch, this.topic_fn, this.buf_fn, this.mults, this.ensure_mult, b);
      };
    }(d, e), cljs.core.async.t_cljs$core$async24145.prototype.cljs$core$IMeta$_meta$arity$1 = function(a, b) {
      return function(a) {
        return this.meta24146;
      };
    }(d, e), cljs.core.async.t_cljs$core$async24145.prototype.cljs$core$async$Mux$ = !0, cljs.core.async.t_cljs$core$async24145.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(a, b) {
      return function(a) {
        return this.ch;
      };
    }(d, e), cljs.core.async.t_cljs$core$async24145.prototype.cljs$core$async$Pub$ = !0, cljs.core.async.t_cljs$core$async24145.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(a, b) {
      return function(a, b, c, d) {
        a = this.ensure_mult.call(null, b);
        return cljs.core.async.tap.call(null, a, c, d);
      };
    }(d, e), cljs.core.async.t_cljs$core$async24145.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(a, b) {
      return function(a, b, c) {
        a = cljs.core.get.call(null, cljs.core.deref.call(null, this.mults), b);
        return cljs.core.truth_(a) ? cljs.core.async.untap.call(null, a, c) : null;
      };
    }(d, e), cljs.core.async.t_cljs$core$async24145.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(a, b) {
      return function(a) {
        return cljs.core.reset_BANG_.call(null, this.mults, cljs.core.PersistentArrayMap.EMPTY);
      };
    }(d, e), cljs.core.async.t_cljs$core$async24145.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(a, b) {
      return function(a, b) {
        return cljs.core.swap_BANG_.call(null, this.mults, cljs.core.dissoc, b);
      };
    }(d, e), cljs.core.async.t_cljs$core$async24145.getBasis = function(a, b) {
      return function() {
        return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "topic-fn", "topic-fn", -862449736, null), new cljs.core.Symbol(null, "buf-fn", "buf-fn", -1200281591, null), new cljs.core.Symbol(null, "mults", "mults", -461114485, null), new cljs.core.Symbol(null, "ensure-mult", "ensure-mult", 1796584816, null), new cljs.core.Symbol(null, "meta24146", "meta24146", -1310695724, null)], 
        null);
      };
    }(d, e), cljs.core.async.t_cljs$core$async24145.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async24145.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async24145", cljs.core.async.t_cljs$core$async24145.cljs$lang$ctorPrWriter = function(a, b) {
      return function(a, b, c) {
        return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async24145");
      };
    }(d, e), cljs.core.async.__GT_t_cljs$core$async24145 = function(a, b) {
      return function(a, b, c, d, e, f) {
        return new cljs.core.async.t_cljs$core$async24145(a, b, c, d, e, f);
      };
    }(d, e));
    return new cljs.core.async.t_cljs$core$async24145(a, b, c, d, e, cljs.core.PersistentArrayMap.EMPTY);
  }(), g = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d, e, f) {
    return function() {
      var g = function() {
        return function(a, b, c, d, e) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (e) {
                    if (e instanceof Object) {
                      b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return c;
                }
              }
            }, b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d, e, f) {
          return function(c) {
            var e = c[1];
            if (7 === e) {
              return e = c, e[2] = c[2], e[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === e) {
              return c[2] = null, c[1] = 21, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              return c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (24 === e) {
              return e = cljs.core.swap_BANG_.call(null, d, cljs.core.dissoc, c[7]), c[2] = e, c[1] = 25, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === e) {
              return e = c[8], e = c[2], c[8] = e, cljs.core.truth_(null == e) ? c[1] = 5 : c[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === e) {
              return e = c[2], c[2] = e, c[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (21 === e) {
              return c[9] = c[2], c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === e) {
              return e = c[10], e = cljs.core.chunked_seq_QMARK_.call(null, e), c[1] = e ? 16 : 17, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (22 === e) {
              return e = c[2], cljs.core.truth_(e) ? c[1] = 23 : c[1] = 24, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === e) {
              var e = c[8], f = c[11], e = b.call(null, e), f = cljs.core.deref.call(null, d), f = cljs.core.get.call(null, f, e);
              c[11] = f;
              c[7] = e;
              cljs.core.truth_(f) ? c[1] = 19 : c[1] = 20;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (25 === e) {
              return e = c[2], c[2] = e, c[1] = 21, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (17 === e) {
              var e = c[10], f = cljs.core.first.call(null, e), f = cljs.core.async.muxch_STAR_.call(null, f), f = cljs.core.async.close_BANG_.call(null, f), g = cljs.core.next.call(null, e), h;
              c[12] = f;
              c[13] = 0;
              c[14] = 0;
              c[15] = null;
              c[16] = g;
              c[2] = null;
              c[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === e) {
              return e = c[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, e);
            }
            if (12 === e) {
              return e = c[2], c[2] = e, c[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (2 === e) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 4, a);
            }
            if (23 === e) {
              return c[2] = null, c[1] = 25, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (19 === e) {
              return e = c[8], f = c[11], f = cljs.core.async.muxch_STAR_.call(null, f), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 22, f, e);
            }
            if (11 === e) {
              return g = c[16], e = cljs.core.seq.call(null, g), c[10] = e, c[1] = e ? 13 : 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (9 === e) {
              return e = c[2], c[2] = e, c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (5 === e) {
              return e = cljs.core.deref.call(null, d), e = cljs.core.vals.call(null, e), g = cljs.core.seq.call(null, e), c[13] = 0, c[14] = 0, c[15] = null, c[16] = g, c[2] = null, c[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (14 === e) {
              return c[2] = null, c[1] = 15, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (16 === e) {
              return e = c[10], f = cljs.core.chunk_first.call(null, e), e = cljs.core.chunk_rest.call(null, e), g = cljs.core.count.call(null, f), c[13] = 0, c[14] = g, c[15] = f, c[16] = e, c[2] = null, c[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (10 === e) {
              e = c[13];
              f = c[14];
              h = c[15];
              var g = c[16], k = cljs.core._nth.call(null, h, e), k = cljs.core.async.muxch_STAR_.call(null, k), k = cljs.core.async.close_BANG_.call(null, k);
              c[13] = e + 1;
              c[14] = f;
              c[17] = k;
              c[15] = h;
              c[16] = g;
              c[2] = null;
              c[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 18 === e ? (e = c[2], c[2] = e, c[1] = 15, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (e = c[13], f = c[14], e = e < f, cljs.core.truth_(e) ? c[1] = 10 : c[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(c, d, e, f), c, d, e, f);
      }(), p = function() {
        var a = g.call(null);
        a[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, p);
    };
  }(g, d, e, f));
  return f;
};
cljs.core.async.pub.cljs$lang$maxFixedArity = 3;
cljs.core.async.sub = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.async.sub.call(null, a, b, c, !0);
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.async.sub_STAR_.call(null, a, b, c, d);
};
cljs.core.async.sub.cljs$lang$maxFixedArity = 4;
cljs.core.async.unsub = function(a, b, c) {
  return cljs.core.async.unsub_STAR_.call(null, a, b, c);
};
cljs.core.async.unsub_all = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.unsub_all_STAR_.call(null, a);
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.unsub_all_STAR_.call(null, a, b);
};
cljs.core.async.unsub_all.cljs$lang$maxFixedArity = 2;
cljs.core.async.map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.map.call(null, a, b, null);
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  b = cljs.core.vec.call(null, b);
  c = cljs.core.async.chan.call(null, c);
  var d = cljs.core.count.call(null, b), e = cljs.core.object_array.call(null, d), f = cljs.core.async.chan.call(null, 1), g = cljs.core.atom.call(null, null), h = cljs.core.mapv.call(null, function(a, b, c, d, e, f) {
    return function(g) {
      return function(a, b, c, d, e, f) {
        return function(a) {
          d[g] = a;
          return 0 === cljs.core.swap_BANG_.call(null, f, cljs.core.dec) ? cljs.core.async.put_BANG_.call(null, e, d.slice(0)) : null;
        };
      }(a, b, c, d, e, f);
    };
  }(b, c, d, e, f, g), cljs.core.range.call(null, d)), k = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(b, c, d, e, f, g, h, k) {
    return function() {
      var v = function() {
        return function(a, b, c, d, e, f, g, h, k) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (e) {
                    if (e instanceof Object) {
                      b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return c;
                }
              }
            }, b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(b, c, d, e, f, g, h, k) {
          return function(b) {
            var f = b[1];
            if (7 === f) {
              return b[2] = null, b[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === f) {
              return b[2] = null, b[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === f) {
              var l = b[7], f = l < e;
              cljs.core.truth_(f) ? b[1] = 6 : b[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 15 === f ? (f = b[2], b[2] = f, b[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 13 === f ? (f = cljs.core.async.close_BANG_.call(null, d), b[2] = f, b[1] = 15, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === f ? (b[2] = null, b[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === f ? (f = b[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, b, f)) : 12 === f ? (f = b[8], l = b[2], f = cljs.core.some.call(null, 
            cljs.core.nil_QMARK_, l), b[8] = l, cljs.core.truth_(f) ? b[1] = 13 : b[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === f ? (f = cljs.core.reset_BANG_.call(null, h, e), b[9] = f, b[7] = 0, b[2] = null, b[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === f ? (l = b[7], cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, b, 10, Object, null, 9), f = c.call(null, l), l = k.call(null, l), f = cljs.core.async.take_BANG_.call(null, 
            f, l), b[2] = f, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === f ? (l = b[7], b[10] = b[2], b[7] = l + 1, b[2] = null, b[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === f ? (b[11] = b[2], cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, b, 12, g)) : 14 === f ? (f = b[8], f = cljs.core.apply.call(null, a, f), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, b, 16, 
            d, f)) : 16 === f ? (b[12] = b[2], b[2] = null, b[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === f ? (l = b[2], f = cljs.core.swap_BANG_.call(null, h, cljs.core.dec), b[13] = l, b[2] = f, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === f ? (f = b[2], b[2] = f, b[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(b, c, d, e, f, g, h, k), b, c, d, e, f, g, h, k);
      }(), w = function() {
        var a = v.call(null);
        a[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = b;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, w);
    };
  }(k, b, c, d, e, f, g, h));
  return c;
};
cljs.core.async.map.cljs$lang$maxFixedArity = 3;
cljs.core.async.merge = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.merge.call(null, a, null);
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.async.chan.call(null, b), d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(b, c) {
    return function() {
      var d = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (e) {
                    if (e instanceof Object) {
                      b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return c;
                }
              }
            }, b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(b, c) {
          return function(d) {
            var e = d[1];
            if (7 === e) {
              var f = d[7], g = d[8], h = d[2], t = cljs.core.nth.call(null, h, 0, null), u = cljs.core.nth.call(null, h, 1, null);
              d[9] = u;
              d[7] = t;
              d[8] = h;
              cljs.core.truth_(null == t) ? d[1] = 8 : d[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              var v = cljs.core.vec.call(null, a);
              d[10] = v;
              d[2] = null;
              d[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 4 === e ? (v = d[10], cljs.core.async.ioc_alts_BANG_.call(null, d, 7, v)) : 6 === e ? (t = d[2], d[2] = t, d[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === e ? (t = d[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, t)) : 2 === e ? (v = d[10], t = 0 < cljs.core.count.call(null, v), cljs.core.truth_(t) ? d[1] = 4 : d[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === e ? (v = d[10], t = d[2], d[10] = v, d[11] = t, 
            d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (f = d[7], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, d, 11, c, f)) : 5 === e ? (t = cljs.core.async.close_BANG_.call(null, c), d[2] = t, d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (t = d[2], d[2] = t, d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (v = d[10], u = d[9], f = d[7], g = d[8], t = function() {
              return function(a, b, c, d, e, f, g, h, k, l, m) {
                return function(a) {
                  return cljs.core.not_EQ_.call(null, d, a);
                };
              }(v, g, f, u, v, u, f, g, e, b, c);
            }(), t = cljs.core.filterv.call(null, t, v), d[10] = t, d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(b, c), b, c);
      }(), h = function() {
        var a = d.call(null);
        a[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = b;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, h);
    };
  }(d, c));
  return c;
};
cljs.core.async.merge.cljs$lang$maxFixedArity = 2;
cljs.core.async.into = function(a, b) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, a, b);
};
cljs.core.async.take = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.take.call(null, a, b, null);
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d) {
    return function() {
      var g = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (e) {
                    if (e instanceof Object) {
                      b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return c;
                }
              }
            }, b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d) {
          return function(c) {
            var e = c[1];
            if (7 === e) {
              var e = c[7], e = c[2], f = cljs.core.not.call(null, null == e);
              c[7] = e;
              c[1] = f ? 8 : 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 1 === e ? (c[8] = 0, c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 4 === e ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 7, b) : 6 === e ? (e = c[2], c[2] = e, c[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === e ? (e = c[2], f = cljs.core.async.close_BANG_.call(null, d), c[9] = e, cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, f)) : 2 === e ? (e = c[8], e = e < a, cljs.core.truth_(e) ? c[1] = 
            4 : c[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === e ? (e = c[8], c[10] = c[2], c[8] = e + 1, c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (c[2] = null, c[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === e ? (c[2] = null, c[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (e = c[2], c[2] = e, c[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
            8 === e ? (e = c[7], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 11, d, e)) : null;
          };
        }(c, d), c, d);
      }(), h = function() {
        var a = g.call(null);
        a[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, h);
    };
  }(d, c));
  return c;
};
cljs.core.async.take.cljs$lang$maxFixedArity = 3;
cljs.core.async.map_LT_ = function cljs$core$async$map_LT_(b, c) {
  "undefined" === typeof cljs.core.async.t_cljs$core$async24556 && (cljs.core.async.t_cljs$core$async24556 = function(b, c, f, g) {
    this.map_LT_ = b;
    this.f = c;
    this.ch = f;
    this.meta24557 = g;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async24556.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b, c) {
    return new cljs.core.async.t_cljs$core$async24556(this.map_LT_, this.f, this.ch, c);
  }, cljs.core.async.t_cljs$core$async24556.prototype.cljs$core$IMeta$_meta$arity$1 = function(b) {
    return this.meta24557;
  }, cljs.core.async.t_cljs$core$async24556.prototype.cljs$core$async$impl$protocols$Channel$ = !0, cljs.core.async.t_cljs$core$async24556.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(b) {
    return cljs.core.async.impl.protocols.close_BANG_.call(null, this.ch);
  }, cljs.core.async.t_cljs$core$async24556.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(b) {
    return cljs.core.async.impl.protocols.closed_QMARK_.call(null, this.ch);
  }, cljs.core.async.t_cljs$core$async24556.prototype.cljs$core$async$impl$protocols$ReadPort$ = !0, cljs.core.async.t_cljs$core$async24556.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(b, c) {
    var f = this, g = this, h = cljs.core.async.impl.protocols.take_BANG_.call(null, f.ch, function() {
      "undefined" === typeof cljs.core.async.t_cljs$core$async24559 && (cljs.core.async.t_cljs$core$async24559 = function(b, c, d, e, f, g, h) {
        this.map_LT_ = b;
        this.f = c;
        this.ch = d;
        this.meta24557 = e;
        this._ = f;
        this.fn1 = g;
        this.meta24560 = h;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      }, cljs.core.async.t_cljs$core$async24559.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b) {
        return function(b, c) {
          return new cljs.core.async.t_cljs$core$async24559(this.map_LT_, this.f, this.ch, this.meta24557, this._, this.fn1, c);
        };
      }(g), cljs.core.async.t_cljs$core$async24559.prototype.cljs$core$IMeta$_meta$arity$1 = function(b) {
        return function(b) {
          return this.meta24560;
        };
      }(g), cljs.core.async.t_cljs$core$async24559.prototype.cljs$core$async$impl$protocols$Handler$ = !0, cljs.core.async.t_cljs$core$async24559.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(b) {
        return function(b) {
          return cljs.core.async.impl.protocols.active_QMARK_.call(null, this.fn1);
        };
      }(g), cljs.core.async.t_cljs$core$async24559.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(b) {
        return function(b) {
          return !0;
        };
      }(g), cljs.core.async.t_cljs$core$async24559.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(b) {
        return function(b) {
          var c = this;
          return function(b, d, e) {
            return function(d) {
              return b.call(null, null == d ? null : c.f.call(null, d));
            };
          }(cljs.core.async.impl.protocols.commit.call(null, c.fn1), this, b);
        };
      }(g), cljs.core.async.t_cljs$core$async24559.getBasis = function(b) {
        return function() {
          return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
          "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta24557", "meta24557", -857161620, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.PersistentArrayMap(null, 
          1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("cljs.core.async", "t_cljs$core$async24556", "cljs.core.async/t_cljs$core$async24556", -1626316128, null)], null)), new cljs.core.Symbol(null, "fn1", "fn1", 895834444, null), new cljs.core.Symbol(null, "meta24560", "meta24560", -309074816, null)], null);
        };
      }(g), cljs.core.async.t_cljs$core$async24559.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async24559.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async24559", cljs.core.async.t_cljs$core$async24559.cljs$lang$ctorPrWriter = function(b) {
        return function(b, c, d) {
          return cljs.core._write.call(null, c, "cljs.core.async/t_cljs$core$async24559");
        };
      }(g), cljs.core.async.__GT_t_cljs$core$async24559 = function(b) {
        return function(b, c, d, e, f, g, h) {
          return new cljs.core.async.t_cljs$core$async24559(b, c, d, e, f, g, h);
        };
      }(g));
      return new cljs.core.async.t_cljs$core$async24559(f.map_LT_, f.f, f.ch, f.meta24557, g, c, cljs.core.PersistentArrayMap.EMPTY);
    }());
    return cljs.core.truth_(cljs.core.truth_(h) ? null != cljs.core.deref.call(null, h) : h) ? cljs.core.async.impl.channels.box.call(null, f.f.call(null, cljs.core.deref.call(null, h))) : h;
  }, cljs.core.async.t_cljs$core$async24556.prototype.cljs$core$async$impl$protocols$WritePort$ = !0, cljs.core.async.t_cljs$core$async24556.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(b, c, f) {
    return cljs.core.async.impl.protocols.put_BANG_.call(null, this.ch, c, f);
  }, cljs.core.async.t_cljs$core$async24556.getBasis = function() {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 
    43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta24557", "meta24557", -857161620, null)], null);
  }, cljs.core.async.t_cljs$core$async24556.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async24556.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async24556", cljs.core.async.t_cljs$core$async24556.cljs$lang$ctorPrWriter = function(b, c, f) {
    return cljs.core._write.call(null, c, "cljs.core.async/t_cljs$core$async24556");
  }, cljs.core.async.__GT_t_cljs$core$async24556 = function(b, c, f, g) {
    return new cljs.core.async.t_cljs$core$async24556(b, c, f, g);
  });
  return new cljs.core.async.t_cljs$core$async24556(cljs$core$async$map_LT_, b, c, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function cljs$core$async$map_GT_(b, c) {
  "undefined" === typeof cljs.core.async.t_cljs$core$async24565 && (cljs.core.async.t_cljs$core$async24565 = function(b, c, f, g) {
    this.map_GT_ = b;
    this.f = c;
    this.ch = f;
    this.meta24566 = g;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async24565.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b, c) {
    return new cljs.core.async.t_cljs$core$async24565(this.map_GT_, this.f, this.ch, c);
  }, cljs.core.async.t_cljs$core$async24565.prototype.cljs$core$IMeta$_meta$arity$1 = function(b) {
    return this.meta24566;
  }, cljs.core.async.t_cljs$core$async24565.prototype.cljs$core$async$impl$protocols$Channel$ = !0, cljs.core.async.t_cljs$core$async24565.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(b) {
    return cljs.core.async.impl.protocols.close_BANG_.call(null, this.ch);
  }, cljs.core.async.t_cljs$core$async24565.prototype.cljs$core$async$impl$protocols$ReadPort$ = !0, cljs.core.async.t_cljs$core$async24565.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(b, c) {
    return cljs.core.async.impl.protocols.take_BANG_.call(null, this.ch, c);
  }, cljs.core.async.t_cljs$core$async24565.prototype.cljs$core$async$impl$protocols$WritePort$ = !0, cljs.core.async.t_cljs$core$async24565.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(b, c, f) {
    return cljs.core.async.impl.protocols.put_BANG_.call(null, this.ch, this.f.call(null, c), f);
  }, cljs.core.async.t_cljs$core$async24565.getBasis = function() {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3e", "map\x3e", 1676369295, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 
    43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta24566", "meta24566", 1913274275, null)], null);
  }, cljs.core.async.t_cljs$core$async24565.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async24565.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async24565", cljs.core.async.t_cljs$core$async24565.cljs$lang$ctorPrWriter = function(b, c, f) {
    return cljs.core._write.call(null, c, "cljs.core.async/t_cljs$core$async24565");
  }, cljs.core.async.__GT_t_cljs$core$async24565 = function(b, c, f, g) {
    return new cljs.core.async.t_cljs$core$async24565(b, c, f, g);
  });
  return new cljs.core.async.t_cljs$core$async24565(cljs$core$async$map_GT_, b, c, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function cljs$core$async$filter_GT_(b, c) {
  "undefined" === typeof cljs.core.async.t_cljs$core$async24571 && (cljs.core.async.t_cljs$core$async24571 = function(b, c, f, g) {
    this.filter_GT_ = b;
    this.p = c;
    this.ch = f;
    this.meta24572 = g;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async24571.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b, c) {
    return new cljs.core.async.t_cljs$core$async24571(this.filter_GT_, this.p, this.ch, c);
  }, cljs.core.async.t_cljs$core$async24571.prototype.cljs$core$IMeta$_meta$arity$1 = function(b) {
    return this.meta24572;
  }, cljs.core.async.t_cljs$core$async24571.prototype.cljs$core$async$impl$protocols$Channel$ = !0, cljs.core.async.t_cljs$core$async24571.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(b) {
    return cljs.core.async.impl.protocols.close_BANG_.call(null, this.ch);
  }, cljs.core.async.t_cljs$core$async24571.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(b) {
    return cljs.core.async.impl.protocols.closed_QMARK_.call(null, this.ch);
  }, cljs.core.async.t_cljs$core$async24571.prototype.cljs$core$async$impl$protocols$ReadPort$ = !0, cljs.core.async.t_cljs$core$async24571.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(b, c) {
    return cljs.core.async.impl.protocols.take_BANG_.call(null, this.ch, c);
  }, cljs.core.async.t_cljs$core$async24571.prototype.cljs$core$async$impl$protocols$WritePort$ = !0, cljs.core.async.t_cljs$core$async24571.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(b, c, f) {
    return cljs.core.truth_(this.p.call(null, c)) ? cljs.core.async.impl.protocols.put_BANG_.call(null, this.ch, c, f) : cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, this.ch)));
  }, cljs.core.async.t_cljs$core$async24571.getBasis = function() {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "filter\x3e", "filter\x3e", -37644455, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p", 
    "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta24572", "meta24572", -384137547, null)], null);
  }, cljs.core.async.t_cljs$core$async24571.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async24571.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async24571", cljs.core.async.t_cljs$core$async24571.cljs$lang$ctorPrWriter = function(b, c, f) {
    return cljs.core._write.call(null, c, "cljs.core.async/t_cljs$core$async24571");
  }, cljs.core.async.__GT_t_cljs$core$async24571 = function(b, c, f, g) {
    return new cljs.core.async.t_cljs$core$async24571(b, c, f, g);
  });
  return new cljs.core.async.t_cljs$core$async24571(cljs$core$async$filter_GT_, b, c, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function(a, b) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, a), b);
};
cljs.core.async.filter_LT_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.filter_LT_.call(null, a, b, null);
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d) {
    return function() {
      var g = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (e) {
                    if (e instanceof Object) {
                      b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return c;
                }
              }
            }, b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d) {
          return function(c) {
            var e = c[1];
            return 7 === e ? (e = c, e[2] = c[2], e[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 1 === e ? (c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 4 === e ? (e = c[7], e = c[2], c[7] = e, cljs.core.truth_(null == e) ? c[1] = 5 : c[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === e ? (e = c[7], e = a.call(null, e), cljs.core.truth_(e) ? c[1] = 8 : c[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
            3 === e ? (e = c[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, e)) : 2 === e ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 4, b) : 11 === e ? (e = c[2], c[2] = e, c[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (c[2] = null, c[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === e ? (e = cljs.core.async.close_BANG_.call(null, d), c[2] = e, c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
            10 === e ? (c[8] = c[2], c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (e = c[7], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 11, d, e)) : null;
          };
        }(c, d), c, d);
      }(), h = function() {
        var a = g.call(null);
        a[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, h);
    };
  }(d, c));
  return c;
};
cljs.core.async.filter_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.remove_LT_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.remove_LT_.call(null, a, b, null);
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, a), b, c);
};
cljs.core.async.remove_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_STAR_ = function(a, b, c) {
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(d) {
    return function() {
      var f = function() {
        return function(a, b) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (e) {
                    if (e instanceof Object) {
                      b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return c;
                }
              }
            }, b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(d) {
          return function(d) {
            var e = d[1];
            if (7 === e) {
              return e = d, e[2] = d[2], e[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === e) {
              var f = d[7], g = d[2], e = cljs.core.next.call(null, f), h;
              d[8] = e;
              d[9] = 0;
              d[10] = g;
              d[11] = null;
              d[12] = 0;
              d[2] = null;
              d[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              return d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === e) {
              return e = d[13], e = d[2], d[13] = e, cljs.core.truth_(null == e) ? d[1] = 5 : d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === e) {
              return d[2] = null, d[1] = 16, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (21 === e) {
              return d[2] = null, d[1] = 23, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === e) {
              e = d[8];
              h = d[9];
              var f = d[11], g = d[12], q = d[2];
              d[8] = e;
              d[9] = h + 1;
              d[14] = q;
              d[11] = f;
              d[12] = g;
              d[2] = null;
              d[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 22 === e ? (d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === e ? (e = d[13], e = a.call(null, e), e = cljs.core.seq.call(null, e), d[8] = e, d[9] = 0, d[11] = null, d[12] = 0, d[2] = null, d[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 17 === e ? (f = d[7], e = cljs.core.chunk_first.call(null, f), f = cljs.core.chunk_rest.call(null, f), g = cljs.core.count.call(null, e), d[8] = f, d[9] = 0, d[11] = e, d[12] = g, d[2] = 
            null, d[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === e ? (e = d[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, e)) : 12 === e ? (e = d[2], d[2] = e, d[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === e ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, d, 4, b) : 23 === e ? (e = d[2], d[2] = e, d[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 19 === e ? (e = d[2], d[2] = e, d[1] = 16, new cljs.core.Keyword(null, 
            "recur", "recur", -437573268)) : 11 === e ? (e = d[8], e = cljs.core.seq.call(null, e), d[7] = e, d[1] = e ? 14 : 15, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (f = d[2], e = cljs.core.async.impl.protocols.closed_QMARK_.call(null, c), d[15] = f, cljs.core.truth_(e) ? d[1] = 21 : d[1] = 22, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === e ? (e = cljs.core.async.close_BANG_.call(null, c), d[2] = e, d[1] = 7, new cljs.core.Keyword(null, "recur", 
            "recur", -437573268)) : 14 === e ? (f = d[7], e = cljs.core.chunked_seq_QMARK_.call(null, f), d[1] = e ? 17 : 18, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 16 === e ? (e = d[2], d[2] = e, d[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (h = d[9], f = d[11], e = cljs.core._nth.call(null, f, h), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, d, 13, c, e)) : 18 === e ? (f = d[7], e = cljs.core.first.call(null, f), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, 
            d, 20, c, e)) : 8 === e ? (h = d[9], g = d[12], e = h < g, cljs.core.truth_(e) ? d[1] = 10 : d[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(d), d);
      }(), g = function() {
        var a = f.call(null);
        a[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = d;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
    };
  }(d));
  return d;
};
cljs.core.async.mapcat_LT_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.mapcat_LT_.call(null, a, b, null);
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  cljs.core.async.mapcat_STAR_.call(null, a, b, c);
  return c;
};
cljs.core.async.mapcat_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_GT_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.mapcat_GT_.call(null, a, b, null);
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  cljs.core.async.mapcat_STAR_.call(null, a, c, b);
  return c;
};
cljs.core.async.mapcat_GT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.unique = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.unique.call(null, a, null);
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.async.chan.call(null, b), d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(b, c) {
    return function() {
      var d = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (e) {
                    if (e instanceof Object) {
                      b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return c;
                }
              }
            }, b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(b, c) {
          return function(b) {
            var d = b[1];
            if (7 === d) {
              return d = b, d[2] = b[2], d[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === d) {
              var e;
              b[7] = null;
              b[2] = null;
              b[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 4 === d ? (d = b[8], d = b[2], e = cljs.core.not.call(null, null == d), b[8] = d, b[1] = e ? 5 : 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === d ? (b[2] = null, b[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === d ? (d = b[2], e = cljs.core.async.close_BANG_.call(null, c), b[9] = d, cljs.core.async.impl.ioc_helpers.return_chan.call(null, b, e)) : 2 === d ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, b, 4, a) : 11 === 
            d ? (d = b[8], e = b[2], b[7] = d, b[10] = e, b[2] = null, b[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === d ? (d = b[8], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, b, 11, c, d)) : 5 === d ? (e = b[7], d = b[8], d = cljs.core._EQ_.call(null, d, e), b[1] = d ? 8 : 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === d ? (d = b[2], b[2] = d, b[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === d ? (e = b[7], 
            b[7] = e, b[2] = null, b[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(b, c), b, c);
      }(), h = function() {
        var a = d.call(null);
        a[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = b;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, h);
    };
  }(d, c));
  return c;
};
cljs.core.async.unique.cljs$lang$maxFixedArity = 2;
cljs.core.async.partition = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.partition.call(null, a, b, null);
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d) {
    return function() {
      var g = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (e) {
                    if (e instanceof Object) {
                      b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return c;
                }
              }
            }, b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d) {
          return function(c) {
            var e = c[1];
            if (7 === e) {
              return e = c, e[2] = c[2], e[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              var f = Array(a);
              c[7] = 0;
              c[8] = f;
              c[2] = null;
              c[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === e) {
              var g = c[9], e = c[2], f = cljs.core.not.call(null, null == e);
              c[9] = e;
              c[1] = f ? 5 : 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === e) {
              return e = c[2], c[2] = e, c[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === e) {
              return c[2] = null, c[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === e) {
              return e = c[7], cljs.core.truth_(0 < e) ? c[1] = 12 : c[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === e) {
              return e = c[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, e);
            }
            if (12 === e) {
              return f = c[8], e = cljs.core.vec.call(null, f), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 15, d, e);
            }
            if (2 === e) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 4, b);
            }
            if (11 === e) {
              return e = c[2], f = Array(a), c[7] = 0, c[8] = f, c[10] = e, c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (9 === e) {
              return f = c[8], e = cljs.core.vec.call(null, f), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 11, d, e);
            }
            if (5 === e) {
              var e = c[7], f = c[8], g = c[9], h = c[11], f = f[e] = g, g = e + 1, e = g < a;
              c[12] = f;
              c[11] = g;
              cljs.core.truth_(e) ? c[1] = 8 : c[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 14 === e ? (f = c[2], e = cljs.core.async.close_BANG_.call(null, d), c[13] = f, c[2] = e, c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (e = c[2], c[2] = e, c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (f = c[8], h = c[11], c[7] = h, c[8] = f, c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(c, d), c, d);
      }(), h = function() {
        var a = g.call(null);
        a[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, h);
    };
  }(d, c));
  return c;
};
cljs.core.async.partition.cljs$lang$maxFixedArity = 3;
cljs.core.async.partition_by = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.partition_by.call(null, a, b, null);
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d) {
    return function() {
      var g = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (e) {
                    if (e instanceof Object) {
                      b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return c;
                }
              }
            }, b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d) {
          return function(c) {
            var e = c[1];
            if (7 === e) {
              return e = c, e[2] = c[2], e[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              var f = [], e = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
              c[7] = e;
              c[8] = f;
              c[2] = null;
              c[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === e) {
              var g = c[9], e = c[2], g = cljs.core.not.call(null, null == e);
              c[9] = e;
              c[1] = g ? 5 : 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === e) {
              return e = c[2], c[2] = e, c[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === e) {
              return c[2] = null, c[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === e) {
              return f = c[8], e = 0 < f.length, cljs.core.truth_(e) ? c[1] = 12 : c[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === e) {
              return e = c[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, e);
            }
            if (12 === e) {
              return f = c[8], e = cljs.core.vec.call(null, f), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 15, d, e);
            }
            if (2 === e) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 4, b);
            }
            if (11 === e) {
              var g = c[9], e = c[10], f = c[2], h = [], g = h.push(g);
              c[11] = f;
              c[7] = e;
              c[8] = h;
              c[12] = g;
              c[2] = null;
              c[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 9 === e ? (f = c[8], e = cljs.core.vec.call(null, f), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 11, d, e)) : 5 === e ? (e = c[7], g = c[9], f = a.call(null, g), g = cljs.core._EQ_.call(null, f, e), e = cljs.core.keyword_identical_QMARK_.call(null, e, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123)), c[10] = f, cljs.core.truth_(g || e) ? c[1] = 8 : c[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 14 === 
            e ? (g = c[2], e = cljs.core.async.close_BANG_.call(null, d), c[13] = g, c[2] = e, c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (e = c[2], c[2] = e, c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (f = c[8], g = c[9], e = c[10], g = f.push(g), c[7] = e, c[8] = f, c[14] = g, c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(c, d), c, d);
      }(), h = function() {
        var a = g.call(null);
        a[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, h);
    };
  }(d, c));
  return c;
};
cljs.core.async.partition_by.cljs$lang$maxFixedArity = 3;
var jayq = {core:{}};
jayq.core.crate_meta = function(a) {
  return a.prototype._crateGroup;
};
jayq.core.__GT_selector = function(a) {
  if ("string" === typeof a) {
    return a;
  }
  if (cljs.core.fn_QMARK_.call(null, a)) {
    var b = jayq.core.crate_meta.call(null, a);
    return cljs.core.truth_(b) ? [cljs.core.str("[crateGroup\x3d"), cljs.core.str(b), cljs.core.str("]")].join("") : a;
  }
  return a instanceof cljs.core.Keyword ? cljs.core.name.call(null, a) : a;
};
jayq.core.$ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return jayq.core.$.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return jayq.core.$.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.$.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return jQuery(jayq.core.__GT_selector.call(null, a));
};
jayq.core.$.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return jQuery(jayq.core.__GT_selector.call(null, a), b);
};
jayq.core.$.cljs$lang$maxFixedArity = 2;
jQuery.prototype.cljs$core$ISeqable$ = !0;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.truth_(this.get(0)) ? this : null;
};
jQuery.prototype.cljs$core$ISeq$ = !0;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.get(0);
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return 1 < cljs.core.count.call(null, this) ? this.slice(1) : cljs.core.List.EMPTY;
};
jQuery.prototype.cljs$core$ICounted$ = !0;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.length;
};
jQuery.prototype.cljs$core$IIndexed$ = !0;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  return b < cljs.core.count.call(null, this) ? this.slice(b, b + 1) : null;
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return b < cljs.core.count.call(null, this) ? this.slice(b, b + 1) : void 0 === c ? null : c;
};
jQuery.prototype.cljs$core$ISequential$ = !0;
jQuery.prototype.cljs$core$ILookup$ = !0;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  var c = this.slice(b, b + 1);
  return cljs.core.truth_(c) ? c : null;
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return cljs.core._nth.call(null, this, b, c);
};
jQuery.prototype.cljs$core$IReduce$ = !0;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.call(null, this, b);
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.ci_reduce.call(null, this, b, c);
};
jQuery.prototype.cljs$core$IFn$ = !0;
jQuery.prototype.call = function() {
  var a = null, b = function(a, b) {
    return cljs.core._lookup.call(null, this, b);
  }, c = function(a, b, c) {
    return cljs.core._lookup.call(null, this, b, c);
  }, a = function(a, e, f) {
    switch(arguments.length) {
      case 2:
        return b.call(this, a, e);
      case 3:
        return c.call(this, a, e, f);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  return a;
}();
jQuery.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone.call(null, b)));
};
jQuery.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core._lookup.call(null, this, a);
};
jQuery.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._lookup.call(null, this, a, b);
};
jayq.core.anim = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return jayq.core.anim.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
jayq.core.anim.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  var d = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  return a.animate(cljs.core.clj__GT_js.call(null, b), d, c);
};
jayq.core.anim.cljs$lang$maxFixedArity = 2;
jayq.core.anim.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return jayq.core.anim.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
jayq.core.text = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return jayq.core.text.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return jayq.core.text.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.text.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.text();
};
jayq.core.text.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.text(b);
};
jayq.core.text.cljs$lang$maxFixedArity = 2;
jayq.core.css = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return jayq.core.css.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return jayq.core.css.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.css.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.css(cljs.core.clj__GT_js.call(null, b));
};
jayq.core.css.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a.css(cljs.core.name.call(null, b), c);
};
jayq.core.css.cljs$lang$maxFixedArity = 3;
jayq.core.attr = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return jayq.core.attr.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 2:
      return jayq.core.attr.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.attr.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a.attr(cljs.core.name.call(null, b), c);
};
jayq.core.attr.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.attr(cljs.core.clj__GT_js.call(null, b));
};
jayq.core.attr.cljs$lang$maxFixedArity = 3;
jayq.core.prop = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return jayq.core.prop.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 2:
      return jayq.core.prop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.prop.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a.prop(cljs.core.name.call(null, b), c);
};
jayq.core.prop.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.prop(cljs.core.clj__GT_js.call(null, b));
};
jayq.core.prop.cljs$lang$maxFixedArity = 3;
jayq.core.remove_attr = function(a, b) {
  return a.removeAttr(cljs.core.name.call(null, b));
};
jayq.core.remove_prop = function(a, b) {
  return a.removeProp(cljs.core.name.call(null, b));
};
jayq.core.data = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return jayq.core.data.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return jayq.core.data.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return jayq.core.data.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.data.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.data();
};
jayq.core.data.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.data(cljs.core.clj__GT_js.call(null, b));
};
jayq.core.data.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a.data(cljs.core.name.call(null, b), cljs.core.clj__GT_js.call(null, c));
};
jayq.core.data.cljs$lang$maxFixedArity = 3;
jayq.core.add_class = function(a, b) {
  return a.addClass(cljs.core.name.call(null, b));
};
jayq.core.remove_class = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return jayq.core.remove_class.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return jayq.core.remove_class.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.remove_class.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.removeClass();
};
jayq.core.remove_class.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.removeClass(cljs.core.name.call(null, b));
};
jayq.core.remove_class.cljs$lang$maxFixedArity = 2;
jayq.core.toggle_class = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return jayq.core.toggle_class.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return jayq.core.toggle_class.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.toggle_class.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.toggleClass(cljs.core.name.call(null, b));
};
jayq.core.toggle_class.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a.toggleClass(cljs.core.name.call(null, b), cljs.core.boolean$.call(null, c));
};
jayq.core.toggle_class.cljs$lang$maxFixedArity = 3;
jayq.core.has_class = function(a, b) {
  return a.hasClass(cljs.core.name.call(null, b));
};
jayq.core.is = function(a, b) {
  return a.is(jayq.core.__GT_selector.call(null, b));
};
jayq.core.after = function(a, b) {
  return a.after(b);
};
jayq.core.before = function(a, b) {
  return a.before(b);
};
jayq.core.append = function(a, b) {
  return a.append(b);
};
jayq.core.prepend = function(a, b) {
  return a.prepend(b);
};
jayq.core.append_to = function(a, b) {
  return a.appendTo(jayq.core.__GT_selector.call(null, b));
};
jayq.core.prepend_to = function(a, b) {
  return a.prependTo(jayq.core.__GT_selector.call(null, b));
};
jayq.core.insert_before = function(a, b) {
  return a.insertBefore(jayq.core.__GT_selector.call(null, b));
};
jayq.core.insert_after = function(a, b) {
  return a.insertAfter(jayq.core.__GT_selector.call(null, b));
};
jayq.core.replace_with = function(a, b) {
  return a.replaceWith(b);
};
jayq.core.remove = function(a) {
  return a.remove();
};
jayq.core.hide = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return jayq.core.hide.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
jayq.core.hide.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null);
  return a.hide(c, d);
};
jayq.core.hide.cljs$lang$maxFixedArity = 1;
jayq.core.hide.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return jayq.core.hide.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
jayq.core.show = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return jayq.core.show.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
jayq.core.show.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null);
  return a.show(c, d);
};
jayq.core.show.cljs$lang$maxFixedArity = 1;
jayq.core.show.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return jayq.core.show.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
jayq.core.toggle = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return jayq.core.toggle.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
jayq.core.toggle.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null);
  return a.toggle(c, d);
};
jayq.core.toggle.cljs$lang$maxFixedArity = 1;
jayq.core.toggle.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return jayq.core.toggle.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
jayq.core.fade_out = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return jayq.core.fade_out.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
jayq.core.fade_out.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null);
  return a.fadeOut(c, d);
};
jayq.core.fade_out.cljs$lang$maxFixedArity = 1;
jayq.core.fade_out.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return jayq.core.fade_out.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
jayq.core.fade_in = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return jayq.core.fade_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
jayq.core.fade_in.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null);
  return a.fadeIn(c, d);
};
jayq.core.fade_in.cljs$lang$maxFixedArity = 1;
jayq.core.fade_in.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return jayq.core.fade_in.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
jayq.core.slide_up = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return jayq.core.slide_up.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
jayq.core.slide_up.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null);
  return a.slideUp(c, d);
};
jayq.core.slide_up.cljs$lang$maxFixedArity = 1;
jayq.core.slide_up.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return jayq.core.slide_up.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
jayq.core.slide_down = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return jayq.core.slide_down.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
jayq.core.slide_down.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null);
  return a.slideDown(c, d);
};
jayq.core.slide_down.cljs$lang$maxFixedArity = 1;
jayq.core.slide_down.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return jayq.core.slide_down.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
jayq.core.siblings = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return jayq.core.siblings.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return jayq.core.siblings.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.siblings.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.siblings();
};
jayq.core.siblings.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.siblings(cljs.core.name.call(null, b));
};
jayq.core.siblings.cljs$lang$maxFixedArity = 2;
jayq.core.parent = function(a) {
  return a.parent();
};
jayq.core.parents = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return jayq.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return jayq.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.parents.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.parents();
};
jayq.core.parents.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.parents(cljs.core.name.call(null, b));
};
jayq.core.parents.cljs$lang$maxFixedArity = 2;
jayq.core.parents_until = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return jayq.core.parents_until.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return jayq.core.parents_until.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return jayq.core.parents_until.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.parents_until.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.parentsUntil();
};
jayq.core.parents_until.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.parentsUntil(jayq.core.__GT_selector.call(null, b));
};
jayq.core.parents_until.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a.parentsUntil(jayq.core.__GT_selector.call(null, b), cljs.core.name.call(null, c));
};
jayq.core.parents_until.cljs$lang$maxFixedArity = 3;
jayq.core.children = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return jayq.core.children.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return jayq.core.children.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.children.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.children(cljs.core.name.call(null, b));
};
jayq.core.children.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.children();
};
jayq.core.children.cljs$lang$maxFixedArity = 2;
jayq.core.next = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return jayq.core.next.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return jayq.core.next.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.next.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.next();
};
jayq.core.next.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.next(cljs.core.name.call(null, b));
};
jayq.core.next.cljs$lang$maxFixedArity = 2;
jayq.core.prev = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return jayq.core.prev.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return jayq.core.prev.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.prev.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.prev();
};
jayq.core.prev.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.prev(cljs.core.name.call(null, b));
};
jayq.core.prev.cljs$lang$maxFixedArity = 2;
jayq.core.next_all = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return jayq.core.next_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return jayq.core.next_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.next_all.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.nextAll();
};
jayq.core.next_all.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.nextAll(cljs.core.name.call(null, b));
};
jayq.core.next_all.cljs$lang$maxFixedArity = 2;
jayq.core.prev_all = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return jayq.core.prev_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return jayq.core.prev_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.prev_all.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.prevAll();
};
jayq.core.prev_all.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.prevAll(cljs.core.name.call(null, b));
};
jayq.core.prev_all.cljs$lang$maxFixedArity = 2;
jayq.core.next_until = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return jayq.core.next_until.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return jayq.core.next_until.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return jayq.core.next_until.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.next_until.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.nextUntil();
};
jayq.core.next_until.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.nextUntil(jayq.core.__GT_selector.call(null, b));
};
jayq.core.next_until.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a.nextUntil(jayq.core.__GT_selector.call(null, b), cljs.core.name.call(null, c));
};
jayq.core.next_until.cljs$lang$maxFixedArity = 3;
jayq.core.prev_until = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return jayq.core.prev_until.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return jayq.core.prev_until.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return jayq.core.prev_until.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.prev_until.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.prevUntil();
};
jayq.core.prev_until.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.prevUntil(jayq.core.__GT_selector.call(null, b));
};
jayq.core.prev_until.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a.prevUntil(jayq.core.__GT_selector.call(null, b), cljs.core.name.call(null, c));
};
jayq.core.prev_until.cljs$lang$maxFixedArity = 3;
jayq.core.find = function(a, b) {
  return a.find(cljs.core.name.call(null, b));
};
jayq.core.closest = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return jayq.core.closest.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
jayq.core.closest.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  c = cljs.core.nth.call(null, c, 0, null);
  return a.closest(jayq.core.__GT_selector.call(null, b), c);
};
jayq.core.closest.cljs$lang$maxFixedArity = 2;
jayq.core.closest.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return jayq.core.closest.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
jayq.core.clone = function(a) {
  return a.clone();
};
jayq.core.html = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return jayq.core.html.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return jayq.core.html.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.html.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.html(b);
};
jayq.core.html.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.html();
};
jayq.core.html.cljs$lang$maxFixedArity = 2;
jayq.core.inner = jayq.core.html;
jayq.core.empty = function(a) {
  return a.empty();
};
jayq.core.val = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return jayq.core.val.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return jayq.core.val.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.val.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.val(b);
};
jayq.core.val.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.val();
};
jayq.core.val.cljs$lang$maxFixedArity = 2;
jayq.core.serialize = function(a) {
  return a.serialize();
};
jayq.core.queue = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return jayq.core.queue.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 2:
      return jayq.core.queue.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return jayq.core.queue.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.queue.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a.queue(b, c);
};
jayq.core.queue.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.queue(b);
};
jayq.core.queue.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.queue();
};
jayq.core.queue.cljs$lang$maxFixedArity = 3;
jayq.core.dequeue = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return jayq.core.dequeue.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return jayq.core.dequeue.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.dequeue.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.dequeue(b);
};
jayq.core.dequeue.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.dequeue();
};
jayq.core.dequeue.cljs$lang$maxFixedArity = 2;
jayq.core.document_ready = function(a) {
  return jayq.core.$.call(null, document).ready(a);
};
jayq.core.mimetype_converter = function(a) {
  return cljs.reader.read_string.call(null, "" + cljs.core.str(a));
};
jQuery.ajaxSetup(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "accepts", "accepts", 1429714104), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "edn", "edn", 1317840885), "application/edn, text/edn", new cljs.core.Keyword(null, "clojure", "clojure", 438975815), "application/clojure, text/clojure"], null), new cljs.core.Keyword(null, "contents", "contents", -1567174023), new cljs.core.PersistentArrayMap(null, 1, ["clojure", 
/edn|clojure/], null), new cljs.core.Keyword(null, "converters", "converters", 195533259), new cljs.core.PersistentArrayMap(null, 2, ["text edn", jayq.core.mimetype_converter, "text clojure", jayq.core.mimetype_converter], null)], null)));
jayq.core.clj_content_type_QMARK_ = function(a) {
  return cljs.core.re_find.call(null, /^(text|application)\/(clojure|edn)/, a);
};
jayq.core.__GT_content_type = function(a) {
  return "string" === typeof a ? a : a instanceof cljs.core.Keyword ? cljs.core.subs.call(null, "" + cljs.core.str(a), 1) : null;
};
jayq.core.preprocess_request = function(a) {
  var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "data", "data", -232669377)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "contentType", "contentType", -1462509576)), e = jayq.core.__GT_content_type.call(null, d);
  return function(a, b, c, d, e, l) {
    return function(b) {
      return cljs.core.truth_(cljs.core.truth_(a) ? jayq.core.clj_content_type_QMARK_.call(null, a) : a) ? cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "data", "data", -232669377), cljs.core.pr_str.call(null, e)) : b;
    };
  }(e, a, b, b, c, d).call(null, function(a, b, c, d, e, l) {
    return function(b) {
      return cljs.core.truth_(a) ? cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "contentType", "contentType", -1462509576), a) : b;
    };
  }(e, a, b, b, c, d).call(null, b));
};
jayq.core.__GT_ajax_settings = function(a) {
  return cljs.core.clj__GT_js.call(null, jayq.core.preprocess_request.call(null, a));
};
jayq.core.ajax = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return jayq.core.ajax.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return jayq.core.ajax.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.ajax.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return jQuery.ajax(a, jayq.core.__GT_ajax_settings.call(null, b));
};
jayq.core.ajax.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return jQuery.ajax(jayq.core.__GT_ajax_settings.call(null, a));
};
jayq.core.ajax.cljs$lang$maxFixedArity = 2;
jayq.core.xhr = function(a, b, c) {
  var d = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  b = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), clojure.string.upper_case.call(null, cljs.core.name.call(null, d)), new cljs.core.Keyword(null, "data", "data", -232669377), cljs.core.clj__GT_js.call(null, b), new cljs.core.Keyword(null, "success", "success", 1890645906), c], null));
  return jQuery.ajax(a, b);
};
jayq.core.read = function(a) {
  return cljs.reader.read_string.call(null, jayq.core.html.call(null, a));
};
jayq.core.$contains = jQuery.contains;
jayq.core.bind = function(a, b, c) {
  return a.bind(cljs.core.name.call(null, b), c);
};
jayq.core.unbind = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return jayq.core.unbind.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
jayq.core.unbind.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  c = cljs.core.nth.call(null, c, 0, null);
  return a.unbind(cljs.core.name.call(null, b), c);
};
jayq.core.unbind.cljs$lang$maxFixedArity = 2;
jayq.core.unbind.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return jayq.core.unbind.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
jayq.core.trigger = function(a, b) {
  return a.trigger(cljs.core.name.call(null, b));
};
jayq.core.delegate = function(a, b, c, d) {
  return a.delegate(jayq.core.__GT_selector.call(null, b), cljs.core.name.call(null, c), d);
};
jayq.core.__GT_event = function(a) {
  return cljs.core.coll_QMARK_.call(null, a) ? clojure.string.join.call(null, " ", cljs.core.map.call(null, cljs.core.name, a)) : cljs.core.clj__GT_js.call(null, a);
};
jayq.core.on = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return jayq.core.on.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
jayq.core.on.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  var d = cljs.core.nth.call(null, c, 0, null), e = cljs.core.nth.call(null, c, 1, null);
  c = cljs.core.nth.call(null, c, 2, null);
  return a.on(jayq.core.__GT_event.call(null, b), jayq.core.__GT_selector.call(null, d), e, c);
};
jayq.core.on.cljs$lang$maxFixedArity = 2;
jayq.core.on.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return jayq.core.on.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
jayq.core.one = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return jayq.core.one.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
jayq.core.one.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  var d = cljs.core.nth.call(null, c, 0, null), e = cljs.core.nth.call(null, c, 1, null);
  c = cljs.core.nth.call(null, c, 2, null);
  return a.one(jayq.core.__GT_event.call(null, b), jayq.core.__GT_selector.call(null, d), e, c);
};
jayq.core.one.cljs$lang$maxFixedArity = 2;
jayq.core.one.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return jayq.core.one.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
jayq.core.off = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return jayq.core.off.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
jayq.core.off.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  var d = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  return a.off(jayq.core.__GT_event.call(null, b), jayq.core.__GT_selector.call(null, d), c);
};
jayq.core.off.cljs$lang$maxFixedArity = 2;
jayq.core.off.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return jayq.core.off.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
jayq.core.prevent = function(a) {
  return a.preventDefault();
};
jayq.core.height = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return jayq.core.height.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return jayq.core.height.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.height.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.height(b);
};
jayq.core.height.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.height();
};
jayq.core.height.cljs$lang$maxFixedArity = 2;
jayq.core.width = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return jayq.core.width.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return jayq.core.width.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.width.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.width(b);
};
jayq.core.width.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.width();
};
jayq.core.width.cljs$lang$maxFixedArity = 2;
jayq.core.inner_height = function(a) {
  return a.innerHeight();
};
jayq.core.inner_width = function(a) {
  return a.innerWidth();
};
jayq.core.outer_height = function(a) {
  return a.outerHeight();
};
jayq.core.outer_width = function(a) {
  return a.outerWidth();
};
jayq.core.offset = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return jayq.core.offset.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return jayq.core.offset.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.offset.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.clj__GT_js.call(null, b).offset();
};
jayq.core.offset.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.js__GT_clj.call(null, a.offset(), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), !0);
};
jayq.core.offset.cljs$lang$maxFixedArity = 2;
jayq.core.offset_parent = function(a) {
  return a.offsetParent();
};
jayq.core.position = function(a) {
  return cljs.core.js__GT_clj.call(null, a.position(), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), !0);
};
jayq.core.scroll_left = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return jayq.core.scroll_left.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return jayq.core.scroll_left.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.scroll_left.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.scrollLeft();
};
jayq.core.scroll_left.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.scrollLeft(b);
};
jayq.core.scroll_left.cljs$lang$maxFixedArity = 2;
jayq.core.scroll_top = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return jayq.core.scroll_top.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return jayq.core.scroll_top.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.scroll_top.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.scrollTop();
};
jayq.core.scroll_top.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.scrollTop(b);
};
jayq.core.scroll_top.cljs$lang$maxFixedArity = 2;
jayq.core.$deferred = jQuery.Deferred;
jayq.core.$when = jQuery.when;
jayq.core.then = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return jayq.core.then.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return jayq.core.then.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.then.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a.then(cljs.core.clj__GT_js.call(null, b), cljs.core.clj__GT_js.call(null, c));
};
jayq.core.then.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return a.then(cljs.core.clj__GT_js.call(null, b), cljs.core.clj__GT_js.call(null, c), cljs.core.clj__GT_js.call(null, d));
};
jayq.core.then.cljs$lang$maxFixedArity = 4;
jayq.core.done = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return jayq.core.done.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
jayq.core.done.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return a.done.apply(a, cljs.core.clj__GT_js.call(null, b));
};
jayq.core.done.cljs$lang$maxFixedArity = 1;
jayq.core.done.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return jayq.core.done.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
jayq.core.fail = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return jayq.core.fail.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
jayq.core.fail.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return a.fail.apply(a, cljs.core.clj__GT_js.call(null, b));
};
jayq.core.fail.cljs$lang$maxFixedArity = 1;
jayq.core.fail.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return jayq.core.fail.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
jayq.core.progress = function(a, b) {
  return a.progress(cljs.core.clj__GT_js.call(null, b));
};
jayq.core.promise = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return jayq.core.promise.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return jayq.core.promise.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return jayq.core.promise.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.promise.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a.promise();
};
jayq.core.promise.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.promise(b);
};
jayq.core.promise.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a.promise(b, c);
};
jayq.core.promise.cljs$lang$maxFixedArity = 3;
jayq.core.always = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return jayq.core.always.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
jayq.core.always.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return a.always.apply(a, cljs.core.clj__GT_js.call(null, b));
};
jayq.core.always.cljs$lang$maxFixedArity = 1;
jayq.core.always.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return jayq.core.always.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
jayq.core.reject = function(a, b) {
  return a.reject(b);
};
jayq.core.reject_with = function(a, b, c) {
  return a.rejectWith(b, c);
};
jayq.core.notify = function(a, b) {
  return a.notify(b);
};
jayq.core.notify_with = function(a, b, c) {
  return a.notifyWith(b, c);
};
jayq.core.resolve = function(a, b) {
  return a.resolve(b);
};
jayq.core.resolve_with = function(a, b, c) {
  return a.resolveWith(b, c);
};
jayq.core.pipe = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return jayq.core.pipe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return jayq.core.pipe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return jayq.core.pipe.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
jayq.core.pipe.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.pipe(b);
};
jayq.core.pipe.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a.pipe(b, c);
};
jayq.core.pipe.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return a.pipe(b, c, d);
};
jayq.core.pipe.cljs$lang$maxFixedArity = 4;
jayq.core.state = function(a) {
  return cljs.core.keyword.call(null, a.state());
};
jayq.core.deferred_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "return", "return", -1891502105), jayq.core.$when, new cljs.core.Keyword(null, "bind", "bind", -113428417), function(a, b) {
  var c = jayq.core.$deferred.call(null);
  jayq.core.done.call(null, a, function(a) {
    return function(c) {
      return jayq.core.done.call(null, b.call(null, c), cljs.core.partial.call(null, jayq.core.resolve, a));
    };
  }(c));
  return jayq.core.promise.call(null, c);
}, new cljs.core.Keyword(null, "zero", "zero", -858964576), cljs.core.identity], null);
jayq.core.ajax_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "return", "return", -1891502105), cljs.core.identity, new cljs.core.Keyword(null, "bind", "bind", -113428417), function(a, b) {
  return jayq.core.done.call(null, jayq.core.ajax.call(null, a), b);
}, new cljs.core.Keyword(null, "zero", "zero", -858964576), cljs.core.identity], null);
goog.structs.Queue = function() {
  this.front_ = [];
  this.back_ = [];
};
goog.structs.Queue.prototype.maybeFlip_ = function() {
  goog.array.isEmpty(this.front_) && (this.front_ = this.back_, this.front_.reverse(), this.back_ = []);
};
goog.structs.Queue.prototype.enqueue = function(a) {
  this.back_.push(a);
};
goog.structs.Queue.prototype.dequeue = function() {
  this.maybeFlip_();
  return this.front_.pop();
};
goog.structs.Queue.prototype.peek = function() {
  this.maybeFlip_();
  return goog.array.peek(this.front_);
};
goog.structs.Queue.prototype.getCount = function() {
  return this.front_.length + this.back_.length;
};
goog.structs.Queue.prototype.isEmpty = function() {
  return goog.array.isEmpty(this.front_) && goog.array.isEmpty(this.back_);
};
goog.structs.Queue.prototype.clear = function() {
  this.front_ = [];
  this.back_ = [];
};
goog.structs.Queue.prototype.contains = function(a) {
  return goog.array.contains(this.front_, a) || goog.array.contains(this.back_, a);
};
goog.structs.Queue.prototype.remove = function(a) {
  var b = goog.array.lastIndexOf(this.front_, a);
  if (0 > b) {
    return goog.array.remove(this.back_, a);
  }
  goog.array.removeAt(this.front_, b);
  return !0;
};
goog.structs.Queue.prototype.getValues = function() {
  for (var a = [], b = this.front_.length - 1;0 <= b;--b) {
    a.push(this.front_[b]);
  }
  for (var c = this.back_.length, b = 0;b < c;++b) {
    a.push(this.back_[b]);
  }
  return a;
};
goog.structs.Pool = function(a, b) {
  goog.Disposable.call(this);
  this.minCount_ = a || 0;
  this.maxCount_ = b || 10;
  if (this.minCount_ > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.freeQueue_ = new goog.structs.Queue;
  this.inUseSet_ = new goog.structs.Set;
  this.delay = 0;
  this.lastAccess = null;
  this.adjustForMinMax();
};
goog.inherits(goog.structs.Pool, goog.Disposable);
goog.structs.Pool.ERROR_MIN_MAX_ = "[goog.structs.Pool] Min can not be greater than max";
goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_ = "[goog.structs.Pool] Objects not released";
goog.structs.Pool.prototype.setMinimumCount = function(a) {
  if (a > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.minCount_ = a;
  this.adjustForMinMax();
};
goog.structs.Pool.prototype.setMaximumCount = function(a) {
  if (a < this.minCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.maxCount_ = a;
  this.adjustForMinMax();
};
goog.structs.Pool.prototype.setDelay = function(a) {
  this.delay = a;
};
goog.structs.Pool.prototype.getObject = function() {
  var a = goog.now();
  if (!(goog.isDefAndNotNull(this.lastAccess) && a - this.lastAccess < this.delay)) {
    var b = this.removeFreeObject_();
    b && (this.lastAccess = a, this.inUseSet_.add(b));
    return b;
  }
};
goog.structs.Pool.prototype.releaseObject = function(a) {
  return this.inUseSet_.remove(a) ? (this.addFreeObject(a), !0) : !1;
};
goog.structs.Pool.prototype.removeFreeObject_ = function() {
  for (var a;0 < this.getFreeCount() && (a = this.freeQueue_.dequeue(), !this.objectCanBeReused(a));) {
    this.adjustForMinMax();
  }
  !a && this.getCount() < this.maxCount_ && (a = this.createObject());
  return a;
};
goog.structs.Pool.prototype.addFreeObject = function(a) {
  this.inUseSet_.remove(a);
  this.objectCanBeReused(a) && this.getCount() < this.maxCount_ ? this.freeQueue_.enqueue(a) : this.disposeObject(a);
};
goog.structs.Pool.prototype.adjustForMinMax = function() {
  for (var a = this.freeQueue_;this.getCount() < this.minCount_;) {
    a.enqueue(this.createObject());
  }
  for (;this.getCount() > this.maxCount_ && 0 < this.getFreeCount();) {
    this.disposeObject(a.dequeue());
  }
};
goog.structs.Pool.prototype.createObject = function() {
  return {};
};
goog.structs.Pool.prototype.disposeObject = function(a) {
  if ("function" == typeof a.dispose) {
    a.dispose();
  } else {
    for (var b in a) {
      a[b] = null;
    }
  }
};
goog.structs.Pool.prototype.objectCanBeReused = function(a) {
  return "function" == typeof a.canBeReused ? a.canBeReused() : !0;
};
goog.structs.Pool.prototype.contains = function(a) {
  return this.freeQueue_.contains(a) || this.inUseSet_.contains(a);
};
goog.structs.Pool.prototype.getCount = function() {
  return this.freeQueue_.getCount() + this.inUseSet_.getCount();
};
goog.structs.Pool.prototype.getInUseCount = function() {
  return this.inUseSet_.getCount();
};
goog.structs.Pool.prototype.getFreeCount = function() {
  return this.freeQueue_.getCount();
};
goog.structs.Pool.prototype.isEmpty = function() {
  return this.freeQueue_.isEmpty() && this.inUseSet_.isEmpty();
};
goog.structs.Pool.prototype.disposeInternal = function() {
  goog.structs.Pool.superClass_.disposeInternal.call(this);
  if (0 < this.getInUseCount()) {
    throw Error(goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_);
  }
  delete this.inUseSet_;
  for (var a = this.freeQueue_;!a.isEmpty();) {
    this.disposeObject(a.dequeue());
  }
  delete this.freeQueue_;
};
goog.structs.Node = function(a, b) {
  this.key_ = a;
  this.value_ = b;
};
goog.structs.Node.prototype.getKey = function() {
  return this.key_;
};
goog.structs.Node.prototype.getValue = function() {
  return this.value_;
};
goog.structs.Node.prototype.clone = function() {
  return new goog.structs.Node(this.key_, this.value_);
};
goog.structs.Heap = function(a) {
  this.nodes_ = [];
  a && this.insertAll(a);
};
goog.structs.Heap.prototype.insert = function(a, b) {
  var c = new goog.structs.Node(a, b), d = this.nodes_;
  d.push(c);
  this.moveUp_(d.length - 1);
};
goog.structs.Heap.prototype.insertAll = function(a) {
  var b, c;
  if (a instanceof goog.structs.Heap) {
    if (b = a.getKeys(), c = a.getValues(), 0 >= a.getCount()) {
      a = this.nodes_;
      for (var d = 0;d < b.length;d++) {
        a.push(new goog.structs.Node(b[d], c[d]));
      }
      return;
    }
  } else {
    b = goog.object.getKeys(a), c = goog.object.getValues(a);
  }
  for (d = 0;d < b.length;d++) {
    this.insert(b[d], c[d]);
  }
};
goog.structs.Heap.prototype.remove = function() {
  var a = this.nodes_, b = a.length, c = a[0];
  if (!(0 >= b)) {
    return 1 == b ? goog.array.clear(a) : (a[0] = a.pop(), this.moveDown_(0)), c.getValue();
  }
};
goog.structs.Heap.prototype.peek = function() {
  var a = this.nodes_;
  return 0 == a.length ? void 0 : a[0].getValue();
};
goog.structs.Heap.prototype.peekKey = function() {
  return this.nodes_[0] && this.nodes_[0].getKey();
};
goog.structs.Heap.prototype.moveDown_ = function(a) {
  for (var b = this.nodes_, c = b.length, d = b[a];a < c >> 1;) {
    var e = this.getLeftChildIndex_(a), f = this.getRightChildIndex_(a), e = f < c && b[f].getKey() < b[e].getKey() ? f : e;
    if (b[e].getKey() > d.getKey()) {
      break;
    }
    b[a] = b[e];
    a = e;
  }
  b[a] = d;
};
goog.structs.Heap.prototype.moveUp_ = function(a) {
  for (var b = this.nodes_, c = b[a];0 < a;) {
    var d = this.getParentIndex_(a);
    if (b[d].getKey() > c.getKey()) {
      b[a] = b[d], a = d;
    } else {
      break;
    }
  }
  b[a] = c;
};
goog.structs.Heap.prototype.getLeftChildIndex_ = function(a) {
  return 2 * a + 1;
};
goog.structs.Heap.prototype.getRightChildIndex_ = function(a) {
  return 2 * a + 2;
};
goog.structs.Heap.prototype.getParentIndex_ = function(a) {
  return a - 1 >> 1;
};
goog.structs.Heap.prototype.getValues = function() {
  for (var a = this.nodes_, b = [], c = a.length, d = 0;d < c;d++) {
    b.push(a[d].getValue());
  }
  return b;
};
goog.structs.Heap.prototype.getKeys = function() {
  for (var a = this.nodes_, b = [], c = a.length, d = 0;d < c;d++) {
    b.push(a[d].getKey());
  }
  return b;
};
goog.structs.Heap.prototype.containsValue = function(a) {
  return goog.array.some(this.nodes_, function(b) {
    return b.getValue() == a;
  });
};
goog.structs.Heap.prototype.containsKey = function(a) {
  return goog.array.some(this.nodes_, function(b) {
    return b.getKey() == a;
  });
};
goog.structs.Heap.prototype.clone = function() {
  return new goog.structs.Heap(this);
};
goog.structs.Heap.prototype.getCount = function() {
  return this.nodes_.length;
};
goog.structs.Heap.prototype.isEmpty = function() {
  return goog.array.isEmpty(this.nodes_);
};
goog.structs.Heap.prototype.clear = function() {
  goog.array.clear(this.nodes_);
};
goog.structs.PriorityQueue = function() {
  goog.structs.Heap.call(this);
};
goog.inherits(goog.structs.PriorityQueue, goog.structs.Heap);
goog.structs.PriorityQueue.prototype.enqueue = function(a, b) {
  this.insert(a, b);
};
goog.structs.PriorityQueue.prototype.dequeue = function() {
  return this.remove();
};
goog.structs.PriorityPool = function(a, b) {
  this.delayTimeout_ = void 0;
  this.requestQueue_ = new goog.structs.PriorityQueue;
  goog.structs.Pool.call(this, a, b);
};
goog.inherits(goog.structs.PriorityPool, goog.structs.Pool);
goog.structs.PriorityPool.DEFAULT_PRIORITY_ = 100;
goog.structs.PriorityPool.prototype.setDelay = function(a) {
  goog.structs.PriorityPool.superClass_.setDelay.call(this, a);
  goog.isDefAndNotNull(this.lastAccess) && (goog.global.clearTimeout(this.delayTimeout_), this.delayTimeout_ = goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay + this.lastAccess - goog.now()), this.handleQueueRequests_());
};
goog.structs.PriorityPool.prototype.getObject = function(a, b) {
  if (!a) {
    var c = goog.structs.PriorityPool.superClass_.getObject.call(this);
    c && this.delay && (this.delayTimeout_ = goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay));
    return c;
  }
  c = goog.isDef(b) ? b : goog.structs.PriorityPool.DEFAULT_PRIORITY_;
  this.requestQueue_.enqueue(c, a);
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.handleQueueRequests_ = function() {
  for (var a = this.requestQueue_;0 < a.getCount();) {
    var b = this.getObject();
    if (b) {
      a.dequeue().apply(this, [b]);
    } else {
      break;
    }
  }
};
goog.structs.PriorityPool.prototype.addFreeObject = function(a) {
  goog.structs.PriorityPool.superClass_.addFreeObject.call(this, a);
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.adjustForMinMax = function() {
  goog.structs.PriorityPool.superClass_.adjustForMinMax.call(this);
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.disposeInternal = function() {
  goog.structs.PriorityPool.superClass_.disposeInternal.call(this);
  goog.global.clearTimeout(this.delayTimeout_);
  this.requestQueue_.clear();
  this.requestQueue_ = null;
};
goog.net.XhrIoPool = function(a, b, c) {
  this.headers_ = a;
  goog.structs.PriorityPool.call(this, b, c);
};
goog.inherits(goog.net.XhrIoPool, goog.structs.PriorityPool);
goog.net.XhrIoPool.prototype.createObject = function() {
  var a = new goog.net.XhrIo, b = this.headers_;
  b && b.forEach(function(b, d) {
    a.headers.set(d, b);
  });
  return a;
};
goog.net.XhrIoPool.prototype.objectCanBeReused = function(a) {
  return !a.isDisposed() && !a.isActive();
};
cljs.tools = {};
cljs.tools.reader = {};
cljs.tools.reader.impl = {};
cljs.tools.reader.impl.utils = {};
cljs.tools.reader.impl.utils.char$ = function(a) {
  return null == a ? null : cljs.core.char$.call(null, a);
};
cljs.tools.reader.impl.utils.ex_info_QMARK_ = function(a) {
  return a instanceof cljs.core.ExceptionInfo;
};
cljs.tools.reader.impl.utils.ReaderConditional = function(a, b, c, d, e) {
  this.splicing_QMARK_ = a;
  this.form = b;
  this.__meta = c;
  this.__extmap = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.call(null, this, b, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "splicing?":
      return this.splicing_QMARK_;
    case "form":
      return this.form;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.tools.reader.impl.utils.ReaderConditional{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), this.splicing_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "form", "form", -1624062471), this.form], null)], null), this.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IIterable$ = !0;
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), new cljs.core.Keyword(null, "form", "form", -1624062471)], null), cljs.core._iterator.call(null, this.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(this.splicing_QMARK_, this.form, this.__meta, this.__extmap, this.__hash);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2 + cljs.core.count.call(null, this.__extmap);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_imap.call(null, this);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  var c = this;
  return cljs.core.truth_(function() {
    if (cljs.core.truth_(b)) {
      var a = c.constructor === b.constructor;
      return a ? cljs.core.equiv_map.call(null, c, b) : a;
    }
    return b;
  }()) ? !0 : !1;
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), null, new cljs.core.Keyword(null, "form", "form", -1624062471), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.tools.reader.impl.utils.ReaderConditional(this.splicing_QMARK_, 
  this.form, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), b)) ? new cljs.tools.reader.impl.utils.ReaderConditional(c, this.form, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "form", "form", -1624062471), b)) ? new cljs.tools.reader.impl.utils.ReaderConditional(this.splicing_QMARK_, c, this.__meta, this.__extmap, null) : new cljs.tools.reader.impl.utils.ReaderConditional(this.splicing_QMARK_, this.form, 
  this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), this.splicing_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), this.form], null)], null), this.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(this.splicing_QMARK_, this.form, b, this.__extmap, this.__hash);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? cljs.core._assoc.call(null, this, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.tools.reader.impl.utils.ReaderConditional.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "splicing?", "splicing?", 1211935161, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$type = !0;
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrSeq = function(a) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.tools.reader.impl.utils/ReaderConditional");
};
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.tools.reader.impl.utils/ReaderConditional");
};
cljs.tools.reader.impl.utils.__GT_ReaderConditional = function(a, b) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(a, b, null, null, null);
};
cljs.tools.reader.impl.utils.map__GT_ReaderConditional = function(a) {
  return new cljs.tools.reader.impl.utils.ReaderConditional((new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), new cljs.core.Keyword(null, "form", "form", -1624062471)), null);
};
cljs.tools.reader.impl.utils.reader_conditional_QMARK_ = function(a) {
  return a instanceof cljs.tools.reader.impl.utils.ReaderConditional;
};
cljs.tools.reader.impl.utils.reader_conditional = function(a, b) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(b, a, null, null, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$ = !0;
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write.call(null, b, [cljs.core.str("#?"), cljs.core.str(cljs.core.truth_((new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366)).cljs$core$IFn$_invoke$arity$1(this)) ? "@" : null)].join(""));
  return cljs.core.pr_writer.call(null, (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(this), b, c);
};
cljs.tools.reader.impl.utils.ws_rx = /[\s]/;
cljs.tools.reader.impl.utils.whitespace_QMARK_ = function(a) {
  return null == a ? null : "," === a ? !0 : cljs.tools.reader.impl.utils.ws_rx.test(a);
};
cljs.tools.reader.impl.utils.numeric_QMARK_ = function(a) {
  return null == a ? null : goog.string.isNumeric(a);
};
cljs.tools.reader.impl.utils.newline_QMARK_ = function(a) {
  return "\n" === a || "\n" === a || null == a;
};
cljs.tools.reader.impl.utils.desugar_meta = function(a) {
  return a instanceof cljs.core.Keyword ? cljs.core.PersistentArrayMap.fromArray([a, !0], !0, !1) : a instanceof cljs.core.Symbol ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), a], null) : "string" === typeof a ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), a], null) : a;
};
cljs.tools.reader.impl.utils.last_id = cljs.core.atom.call(null, 0);
cljs.tools.reader.impl.utils.next_id = function() {
  return cljs.core.swap_BANG_.call(null, cljs.tools.reader.impl.utils.last_id, cljs.core.inc);
};
cljs.tools.reader.reader_types = {};
cljs.tools.reader.reader_types.Reader = function() {
};
cljs.tools.reader.reader_types.read_char = function(a) {
  if (null != a && null != a.cljs$tools$reader$reader_types$Reader$read_char$arity$1) {
    return a.cljs$tools$reader$reader_types$Reader$read_char$arity$1(a);
  }
  var b = cljs.tools.reader.reader_types.read_char[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.tools.reader.reader_types.read_char._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Reader.read-char", a);
};
cljs.tools.reader.reader_types.peek_char = function(a) {
  if (null != a && null != a.cljs$tools$reader$reader_types$Reader$peek_char$arity$1) {
    return a.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(a);
  }
  var b = cljs.tools.reader.reader_types.peek_char[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.tools.reader.reader_types.peek_char._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Reader.peek-char", a);
};
cljs.tools.reader.reader_types.IPushbackReader = function() {
};
cljs.tools.reader.reader_types.unread = function(a, b) {
  if (null != a && null != a.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2) {
    return a.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(a, b);
  }
  var c = cljs.tools.reader.reader_types.unread[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.tools.reader.reader_types.unread._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IPushbackReader.unread", a);
};
cljs.tools.reader.reader_types.IndexingReader = function() {
};
cljs.tools.reader.reader_types.get_line_number = function(a) {
  if (null != a && null != a.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1) {
    return a.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(a);
  }
  var b = cljs.tools.reader.reader_types.get_line_number[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.tools.reader.reader_types.get_line_number._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IndexingReader.get-line-number", a);
};
cljs.tools.reader.reader_types.get_column_number = function(a) {
  if (null != a && null != a.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1) {
    return a.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(a);
  }
  var b = cljs.tools.reader.reader_types.get_column_number[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.tools.reader.reader_types.get_column_number._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IndexingReader.get-column-number", a);
};
cljs.tools.reader.reader_types.get_file_name = function(a) {
  if (null != a && null != a.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1) {
    return a.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1(a);
  }
  var b = cljs.tools.reader.reader_types.get_file_name[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.tools.reader.reader_types.get_file_name._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IndexingReader.get-file-name", a);
};
cljs.tools.reader.reader_types.StringReader = function(a, b, c) {
  this.s = a;
  this.s_len = b;
  this.s_pos = c;
};
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$ = !0;
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(a) {
  return this.s_len > this.s_pos ? (a = this.s.charAt(this.s_pos), this.s_pos += 1, a) : null;
};
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(a) {
  return this.s_len > this.s_pos ? this.s.charAt(this.s_pos) : null;
};
cljs.tools.reader.reader_types.StringReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "s-len", "s-len", 1869978331, null), cljs.core.with_meta(new cljs.core.Symbol(null, "s-pos", "s-pos", -540562492, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.tools.reader.reader_types.StringReader.cljs$lang$type = !0;
cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/StringReader";
cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.tools.reader.reader-types/StringReader");
};
cljs.tools.reader.reader_types.__GT_StringReader = function(a, b, c) {
  return new cljs.tools.reader.reader_types.StringReader(a, b, c);
};
cljs.tools.reader.reader_types.NodeReadableReader = function(a, b) {
  this.readable = a;
  this.buf = b;
};
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$ = !0;
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(a) {
  if (cljs.core.truth_(this.buf)) {
    return a = this.buf[0], this.buf = null, cljs.tools.reader.impl.utils.char$.call(null, a);
  }
  a = "" + cljs.core.str(this.readable.read(1));
  return cljs.core.truth_(a) ? cljs.tools.reader.impl.utils.char$.call(null, a) : null;
};
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(a) {
  cljs.core.truth_(this.buf) || (this.buf = "" + cljs.core.str(this.readable.read(1)));
  return cljs.core.truth_(this.buf) ? cljs.tools.reader.impl.utils.char$.call(null, this.buf[0]) : null;
};
cljs.tools.reader.reader_types.NodeReadableReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "readable", "readable", 2113054478, null), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$type = !0;
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/NodeReadableReader";
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.tools.reader.reader-types/NodeReadableReader");
};
cljs.tools.reader.reader_types.__GT_NodeReadableReader = function(a, b) {
  return new cljs.tools.reader.reader_types.NodeReadableReader(a, b);
};
cljs.tools.reader.reader_types.PushbackReader = function(a, b, c, d) {
  this.rdr = a;
  this.buf = b;
  this.buf_len = c;
  this.buf_pos = d;
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = !0;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(a) {
  a = this.buf_pos < this.buf_len ? this.buf[this.buf_pos] : cljs.tools.reader.reader_types.read_char.call(null, this.rdr);
  this.buf_pos < this.buf_len && (this.buf_pos += 1);
  return cljs.tools.reader.impl.utils.char$.call(null, a);
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(a) {
  a = this.buf_pos < this.buf_len ? this.buf[this.buf_pos] : cljs.tools.reader.reader_types.peek_char.call(null, this.rdr);
  return cljs.tools.reader.impl.utils.char$.call(null, a);
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = !0;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(a, b) {
  if (cljs.core.truth_(b)) {
    if (0 === this.buf_pos) {
      throw Error("Pushback buffer is full");
    }
    --this.buf_pos;
    return this.buf[this.buf_pos] = b;
  }
  return null;
};
cljs.tools.reader.reader_types.PushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "buf-len", "buf-len", 404510846, null), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "buf-pos", "buf-pos", -807229033, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$type = !0;
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/PushbackReader";
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.tools.reader.reader-types/PushbackReader");
};
cljs.tools.reader.reader_types.__GT_PushbackReader = function(a, b, c, d) {
  return new cljs.tools.reader.reader_types.PushbackReader(a, b, c, d);
};
cljs.tools.reader.reader_types.normalize_newline = function(a, b) {
  if ("\r" === b) {
    var c = cljs.tools.reader.reader_types.peek_char.call(null, a);
    "\f" !== c && "\n" !== c || cljs.tools.reader.reader_types.read_char.call(null, a);
    return "\n";
  }
  return b;
};
cljs.tools.reader.reader_types.IndexingPushbackReader = function(a, b, c, d, e, f, g) {
  this.rdr = a;
  this.line = b;
  this.column = c;
  this.line_start_QMARK_ = d;
  this.prev = e;
  this.prev_column = f;
  this.file_name = g;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = !0;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(a) {
  a = cljs.tools.reader.reader_types.read_char.call(null, this.rdr);
  return cljs.core.truth_(a) ? (a = cljs.tools.reader.reader_types.normalize_newline.call(null, this.rdr, a), this.prev = this.line_start_QMARK_, this.line_start_QMARK_ = cljs.tools.reader.impl.utils.newline_QMARK_.call(null, a), cljs.core.truth_(this.line_start_QMARK_) && (this.prev_column = this.column, this.column = 0, this.line += 1), this.column += 1, a) : null;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(a) {
  return cljs.tools.reader.reader_types.peek_char.call(null, this.rdr);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = !0;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(a, b) {
  cljs.core.truth_(this.line_start_QMARK_) ? (--this.line, this.column = this.prev_column) : --this.column;
  this.line_start_QMARK_ = this.prev;
  return cljs.tools.reader.reader_types.unread.call(null, this.rdr, b);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ = !0;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 = function(a) {
  return this.line | 0;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 = function(a) {
  return this.column | 0;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 = function(a) {
  return this.file_name;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line", "line", 1852876762, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "column", "column", -576213674, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line-start?", "line-start?", 1357012474, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "prev", "prev", 43462301, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "prev-column", "prev-column", 324083974, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "file-name", "file-name", -13685732, null)], null);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$type = !0;
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/IndexingPushbackReader";
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.tools.reader.reader-types/IndexingPushbackReader");
};
cljs.tools.reader.reader_types.__GT_IndexingPushbackReader = function(a, b, c, d, e, f, g) {
  return new cljs.tools.reader.reader_types.IndexingPushbackReader(a, b, c, d, e, f, g);
};
cljs.tools.reader.reader_types.merge_meta = function(a, b) {
  var c = cljs.core.meta.call(null, a);
  return cljs.core.with_meta.call(null, a, cljs.core.merge.call(null, b, cljs.core.dissoc.call(null, c, new cljs.core.Keyword(null, "source", "source", -433931539))));
};
cljs.tools.reader.reader_types.peek_source_log = function(a) {
  return cljs.core.subs.call(null, "" + cljs.core.str((new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(a)), cljs.core.first.call(null, (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(a)));
};
cljs.tools.reader.reader_types.log_source_char = function(a, b) {
  var c = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(a);
  return cljs.core.truth_(c) ? c.append(b) : null;
};
cljs.tools.reader.reader_types.drop_last_logged_char = function(a) {
  a = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(a);
  return cljs.core.truth_(a) ? a.set(cljs.core.subs.call(null, "" + cljs.core.str(a), 0, a.getLength() - 1)) : null;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader = function(a, b, c, d, e, f, g, h) {
  this.rdr = a;
  this.line = b;
  this.column = c;
  this.line_start_QMARK_ = d;
  this.prev = e;
  this.prev_column = f;
  this.file_name = g;
  this.frames = h;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = !0;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(a) {
  a = cljs.tools.reader.reader_types.read_char.call(null, this.rdr);
  return cljs.core.truth_(a) ? (a = cljs.tools.reader.reader_types.normalize_newline.call(null, this.rdr, a), this.prev = this.line_start_QMARK_, this.line_start_QMARK_ = cljs.tools.reader.impl.utils.newline_QMARK_.call(null, a), cljs.core.truth_(this.line_start_QMARK_) && (this.prev_column = this.column, this.column = 0, this.line += 1), this.column += 1, cljs.tools.reader.reader_types.log_source_char.call(null, cljs.core.deref.call(null, this.frames), a), a) : null;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(a) {
  return cljs.tools.reader.reader_types.peek_char.call(null, this.rdr);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = !0;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(a, b) {
  cljs.core.truth_(this.line_start_QMARK_) ? (--this.line, this.column = this.prev_column) : --this.column;
  this.line_start_QMARK_ = this.prev;
  cljs.core.truth_(b) && cljs.tools.reader.reader_types.drop_last_logged_char.call(null, cljs.core.deref.call(null, this.frames));
  return cljs.tools.reader.reader_types.unread.call(null, this.rdr, b);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ = !0;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 = function(a) {
  return this.line | 0;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 = function(a) {
  return this.column | 0;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 = function(a) {
  return this.file_name;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line", "line", 1852876762, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "column", "column", -576213674, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line-start?", "line-start?", 1357012474, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "prev", "prev", 43462301, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "prev-column", "prev-column", 324083974, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "file-name", "file-name", -13685732, null), new cljs.core.Symbol(null, "frames", "frames", -888748272, null)], 
  null);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$type = !0;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/SourceLoggingPushbackReader";
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.tools.reader.reader-types/SourceLoggingPushbackReader");
};
cljs.tools.reader.reader_types.__GT_SourceLoggingPushbackReader = function(a, b, c, d, e, f, g, h) {
  return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(a, b, c, d, e, f, g, h);
};
cljs.tools.reader.reader_types.indexing_reader_QMARK_ = function(a) {
  return null != a ? a.cljs$tools$reader$reader_types$IndexingReader$ ? !0 : !1 : !1;
};
cljs.tools.reader.reader_types.string_reader = function(a) {
  return new cljs.tools.reader.reader_types.StringReader(a, cljs.core.count.call(null, a), 0);
};
cljs.tools.reader.reader_types.string_push_back_reader = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.tools.reader.reader_types.string_push_back_reader.call(null, a, 1);
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.tools.reader.reader_types.PushbackReader(cljs.tools.reader.reader_types.string_reader.call(null, a), cljs.core.object_array.call(null, b), b, b);
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.reader_types.node_readable_push_back_reader = function(a) {
  return new cljs.tools.reader.reader_types.PushbackReader(new cljs.tools.reader.reader_types.NodeReadableReader(a, null), cljs.core.object_array.call(null, 1), 1, 1);
};
cljs.tools.reader.reader_types.indexing_push_back_reader = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.tools.reader.reader_types.indexing_push_back_reader.call(null, a, 1);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.tools.reader.reader_types.indexing_push_back_reader.call(null, a, b, null);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.tools.reader.reader_types.IndexingPushbackReader("string" === typeof a ? cljs.tools.reader.reader_types.string_push_back_reader.call(null, a, b) : a, 1, 1, !0, null, 0, c);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.reader_types.source_logging_push_back_reader = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.tools.reader.reader_types.source_logging_push_back_reader.call(null, a, 1);
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.tools.reader.reader_types.source_logging_push_back_reader.call(null, a, b, null);
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader("string" === typeof a ? cljs.tools.reader.reader_types.string_push_back_reader.call(null, a, b) : a, 1, 1, !0, null, 0, c, cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "buffer", "buffer", 617295198), new goog.string.StringBuffer, new cljs.core.Keyword(null, "offset", "offset", 296498311), cljs.core.list(0)], null)));
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.reader_types.read_line = function(a) {
  for (var b = cljs.tools.reader.reader_types.read_char.call(null, a), c = new goog.string.StringBuffer;;) {
    if (cljs.tools.reader.impl.utils.newline_QMARK_.call(null, b)) {
      return "" + cljs.core.str(c);
    }
    var d = cljs.tools.reader.reader_types.read_char.call(null, a), c = c.append(b), b = d;
  }
};
cljs.tools.reader.reader_types.reader_error = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  throw cljs.core.ex_info.call(null, cljs.core.apply.call(null, cljs.core.str, b), cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "line", "line", 
  212345235), cljs.tools.reader.reader_types.get_line_number.call(null, a), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, a)], null), function() {
    var b = cljs.tools.reader.reader_types.get_file_name.call(null, a);
    return cljs.core.truth_(b) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), b], null) : null;
  }()) : null));
};
cljs.tools.reader.reader_types.reader_error.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.reader_types.reader_error.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.tools.reader.reader_types.source_logging_reader_QMARK_ = function(a) {
  return a instanceof cljs.tools.reader.reader_types.SourceLoggingPushbackReader;
};
cljs.tools.reader.reader_types.line_start_QMARK_ = function(a) {
  return cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? 1 === cljs.tools.reader.reader_types.get_column_number.call(null, a) : null;
};
cljs.tools.reader.reader_types.log_source_STAR_ = function(a, b) {
  var c = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, a.frames));
  try {
    cljs.core.swap_BANG_.call(null, a.frames, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.conj, c.getLength());
    var d = b.call(null);
    return null != d && (d.cljs$lang$protocol_mask$partition0$ & 131072 || d.cljs$core$IMeta$) ? cljs.tools.reader.reader_types.merge_meta.call(null, d, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "source", "source", -433931539), cljs.tools.reader.reader_types.peek_source_log.call(null, cljs.core.deref.call(null, a.frames))], null)) : d;
  } finally {
    cljs.core.swap_BANG_.call(null, a.frames, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.rest);
  }
};
cljs.tools.reader.impl.commons = {};
cljs.tools.reader.impl.commons.number_literal_QMARK_ = function(a, b) {
  return cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, b) || ("+" === b || "-" === b) && cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, a));
};
cljs.tools.reader.impl.commons.read_past = function(a, b) {
  for (var c = cljs.tools.reader.reader_types.read_char.call(null, b);;) {
    if (a.call(null, c)) {
      c = cljs.tools.reader.reader_types.read_char.call(null, b);
    } else {
      return c;
    }
  }
};
cljs.tools.reader.impl.commons.skip_line = function(a) {
  for (;!cljs.tools.reader.impl.utils.newline_QMARK_.call(null, cljs.tools.reader.reader_types.read_char.call(null, a));) {
  }
  return a;
};
cljs.tools.reader.impl.commons.int_pattern = /^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|(0[0-9]+))(N)?$/;
cljs.tools.reader.impl.commons.ratio_pattern = /([-+]?[0-9]+)\/([0-9]+)/;
cljs.tools.reader.impl.commons.float_pattern = /([-+]?[0-9]+(\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?/;
cljs.tools.reader.impl.commons.match_int = function(a) {
  var b = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.int_pattern, a));
  if (null != b.call(null, 2)) {
    return 0;
  }
  a = "-" === b.call(null, 1);
  var c = null != b.call(null, 3) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b.call(null, 3), 10], null) : null != b.call(null, 4) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b.call(null, 4), 16], null) : null != b.call(null, 5) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b.call(null, 5), 8], null) : null != b.call(null, 7) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [b.call(null, 7), parseInt(b.call(null, 6))], null) : null != b.call(null, 8) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b.call(null, 8), 10], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null), b = c.call(null, 0), c = c.call(null, 1) | 0;
  if (null == b) {
    return null;
  }
  b = parseInt(b, c);
  return a ? -1 * b : b;
};
cljs.tools.reader.impl.commons.match_ratio = function(a) {
  var b = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.ratio_pattern, a));
  a = b.call(null, 1);
  b = b.call(null, 2);
  a = cljs.core.truth_(cljs.core.re_find.call(null, /^\+/, a)) ? cljs.core.subs.call(null, a, 1) : a;
  return parseInt(a) / parseInt(b);
};
cljs.tools.reader.impl.commons.match_float = function(a) {
  var b = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.float_pattern, a));
  return null != b.call(null, 4) ? parseFloat(b.call(null, 1)) : parseFloat(a);
};
cljs.tools.reader.impl.commons.matches_QMARK_ = function(a, b) {
  var c = cljs.core.re_find.call(null, a, b);
  return cljs.core.nth.call(null, c, 0, null) === b;
};
cljs.tools.reader.impl.commons.match_number = function(a) {
  return cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.int_pattern, a) ? cljs.tools.reader.impl.commons.match_int.call(null, a) : cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.float_pattern, a) ? cljs.tools.reader.impl.commons.match_float.call(null, a) : cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.ratio_pattern, a) ? cljs.tools.reader.impl.commons.match_ratio.call(null, 
  a) : null;
};
cljs.tools.reader.impl.commons.parse_symbol = function(a) {
  if ("" === a || !0 === /:$/.test(a) || !0 === /^::/.test(a)) {
    return null;
  }
  var b = a.indexOf("/"), c = 0 < b ? cljs.core.subs.call(null, a, 0, b) : null;
  if (null != c) {
    b += 1;
    if (b === cljs.core.count.call(null, a)) {
      return null;
    }
    a = cljs.core.subs.call(null, a, b);
    return cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, cljs.core.nth.call(null, a, 0)) || "" === a || !1 !== /:$/.test(c) || "/" !== a && -1 !== a.indexOf("/") ? null : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, a], null);
  }
  return "/" === a || -1 === a.indexOf("/") ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, a], null) : null;
};
cljs.tools.reader.impl.commons.read_comment = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.tools.reader.impl.commons.skip_line.call(null, a);
};
cljs.tools.reader.impl.commons.read_comment.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.impl.commons.read_comment.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.tools.reader.impl.commons.throwing_reader = function(a) {
  return function() {
    var b = function(b, c) {
      return cljs.tools.reader.reader_types.reader_error.call(null, b, a);
    }, c = function(a, c) {
      var f = null;
      if (1 < arguments.length) {
        for (var f = 0, g = Array(arguments.length - 1);f < g.length;) {
          g[f] = arguments[f + 1], ++f;
        }
        f = new cljs.core.IndexedSeq(g, 0);
      }
      return b.call(this, a, f);
    };
    c.cljs$lang$maxFixedArity = 1;
    c.cljs$lang$applyTo = function(a) {
      var c = cljs.core.first(a);
      a = cljs.core.rest(a);
      return b(c, a);
    };
    c.cljs$core$IFn$_invoke$arity$variadic = b;
    return c;
  }();
};
cljs.tools.reader.read_STAR_;
cljs.tools.reader.macros;
cljs.tools.reader.dispatch_macros;
cljs.tools.reader._STAR_data_readers_STAR_;
cljs.tools.reader._STAR_default_data_reader_fn_STAR_;
cljs.tools.reader._STAR_suppress_read_STAR_;
cljs.tools.reader.default_data_readers;
cljs.tools.reader.macro_terminating_QMARK_ = function(a) {
  switch(a) {
    case '"':
    ;
    case ";":
    ;
    case "@":
    ;
    case "^":
    ;
    case "`":
    ;
    case "~":
    ;
    case "(":
    ;
    case ")":
    ;
    case "[":
    ;
    case "]":
    ;
    case "{":
    ;
    case "}":
    ;
    case "\\":
      return !0;
    default:
      return !1;
  }
};
cljs.tools.reader.sb = new goog.string.StringBuffer;
cljs.tools.reader.read_token = function(a, b) {
  if (null == b) {
    return cljs.tools.reader.reader_types.reader_error.call(null, a, "EOF while reading");
  }
  cljs.tools.reader.sb.clear();
  for (var c = b;;) {
    if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, c) || cljs.tools.reader.macro_terminating_QMARK_.call(null, c) || null == c) {
      return null != c && cljs.tools.reader.reader_types.unread.call(null, a, c), cljs.tools.reader.sb.toString();
    }
    cljs.tools.reader.sb.append(c);
    c = cljs.tools.reader.reader_types.read_char.call(null, a);
  }
};
cljs.tools.reader.read_tagged;
cljs.tools.reader.read_dispatch = function(a, b, c, d) {
  var e = cljs.tools.reader.reader_types.read_char.call(null, a);
  return cljs.core.truth_(e) ? (b = cljs.tools.reader.dispatch_macros.call(null, e), cljs.core.truth_(b) ? b.call(null, a, e, c, d) : cljs.tools.reader.read_tagged.call(null, function() {
    cljs.tools.reader.reader_types.unread.call(null, a, e);
    return a;
  }(), e, c, d)) : cljs.tools.reader.reader_types.reader_error.call(null, a, "EOF while reading character");
};
cljs.tools.reader.read_unmatched_delimiter = function(a, b, c, d) {
  return cljs.tools.reader.reader_types.reader_error.call(null, a, "Unmatched delimiter ", b);
};
cljs.tools.reader.read_regex = function(a, b, c, d) {
  b = new goog.string.StringBuffer;
  for (c = cljs.tools.reader.reader_types.read_char.call(null, a);;) {
    if ('"' === c) {
      return cljs.core.re_pattern.call(null, "" + cljs.core.str(b));
    }
    if (null == c) {
      return cljs.tools.reader.reader_types.reader_error.call(null, a, "EOF while reading regex");
    }
    b.append(c);
    "\\" === c && (c = cljs.tools.reader.reader_types.read_char.call(null, a), null == c && cljs.tools.reader.reader_types.reader_error.call(null, a, "EOF while reading regex"), b.append(c));
    c = cljs.tools.reader.reader_types.read_char.call(null, a);
  }
};
cljs.tools.reader.char_code = function(a, b) {
  var c = parseInt(a, b);
  return cljs.core.truth_(isNaN(c)) ? -1 : c;
};
cljs.tools.reader.read_unicode_char = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 4:
      return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  c = b + c;
  if (cljs.core.count.call(null, a) !== c) {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid unicode character: \\"), cljs.core.str(a)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
  }
  for (var e = 0;;) {
    if (b === c) {
      return String.fromCharCode(e);
    }
    var f = cljs.tools.reader.char_code.call(null, cljs.core.nth.call(null, a, b), d);
    if (-1 === f) {
      throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(cljs.core.nth.call(null, a, b))].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
    }
    e = f + e * d;
    b += 1;
  }
};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  for (var f = 1, g = cljs.tools.reader.char_code.call(null, b, c);;) {
    if (-1 === g) {
      throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(b)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
    }
    if (f !== d) {
      var h = cljs.tools.reader.reader_types.peek_char.call(null, a);
      if (cljs.core.truth_(function() {
        var a = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, h);
        if (a) {
          return a;
        }
        a = cljs.tools.reader.macros.call(null, h);
        return cljs.core.truth_(a) ? a : null == h;
      }())) {
        if (cljs.core.truth_(e)) {
          throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid character length: "), cljs.core.str(f), cljs.core.str(", should be: "), cljs.core.str(d)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
        }
        return String.fromCharCode(g);
      }
      var k = cljs.tools.reader.char_code.call(null, h, c);
      cljs.tools.reader.reader_types.read_char.call(null, a);
      if (-1 === k) {
        throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(h)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
      }
      g = k + g * c;
      f += 1;
    } else {
      return String.fromCharCode(g);
    }
  }
};
cljs.tools.reader.read_unicode_char.cljs$lang$maxFixedArity = 5;
cljs.tools.reader.upper_limit = 55295;
cljs.tools.reader.lower_limit = 57344;
cljs.tools.reader.valid_octal_QMARK_ = function(a, b) {
  return 255 >= parseInt(a, b);
};
cljs.tools.reader.read_char_STAR_ = function(a, b, c, d) {
  b = cljs.tools.reader.reader_types.read_char.call(null, a);
  if (null != b) {
    b = cljs.tools.reader.macro_terminating_QMARK_.call(null, b) || cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, b) ? "" + cljs.core.str(b) : cljs.tools.reader.read_token.call(null, a, b);
    c = b.length;
    if (1 === c) {
      return b.charAt(0);
    }
    if (cljs.core._EQ_.call(null, b, "newline")) {
      return "\n";
    }
    if (cljs.core._EQ_.call(null, b, "space")) {
      return " ";
    }
    if (cljs.core._EQ_.call(null, b, "tab")) {
      return "\t";
    }
    if (cljs.core._EQ_.call(null, b, "backspace")) {
      return "\b";
    }
    if (cljs.core._EQ_.call(null, b, "formfeed")) {
      return "\f";
    }
    if (cljs.core._EQ_.call(null, b, "return")) {
      return "\r";
    }
    if (cljs.core.truth_(goog.string.startsWith(b, "u"))) {
      return b = cljs.tools.reader.read_unicode_char.call(null, b, 1, 4, 16), c = b.charCodeAt(0), c > cljs.tools.reader.upper_limit && c < cljs.tools.reader.lower_limit ? cljs.tools.reader.reader_types.reader_error.call(null, a, "Invalid character constant: \\u", b) : b;
    }
    if (cljs.core.truth_(goog.string.startsWith(b, "o"))) {
      --c;
      if (3 < c) {
        return cljs.tools.reader.reader_types.reader_error.call(null, a, "Invalid octal escape sequence length: ", c);
      }
      c = cljs.tools.reader.read_unicode_char.call(null, b, 1, c, 8);
      return cljs.core.not.call(null, cljs.tools.reader.valid_octal_QMARK_.call(null, cljs.core.subs.call(null, b, 1), 8)) ? cljs.tools.reader.reader_types.reader_error.call(null, a, "Octal escape sequence must be in range [0, 377]") : c;
    }
    return cljs.tools.reader.reader_types.reader_error.call(null, a, "Unsupported character: \\", b);
  }
  return cljs.tools.reader.reader_types.reader_error.call(null, a, "EOF while reading character");
};
cljs.tools.reader.starting_line_col_info = function(a) {
  return cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.tools.reader.reader_types.get_line_number.call(null, a), cljs.tools.reader.reader_types.get_column_number.call(null, a) - 1 | 0], null) : null;
};
cljs.tools.reader.ending_line_col_info = function(a) {
  return cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.tools.reader.reader_types.get_line_number.call(null, a), cljs.tools.reader.reader_types.get_column_number.call(null, a)], null) : null;
};
"undefined" === typeof cljs.tools.reader.READ_EOF && (cljs.tools.reader.READ_EOF = {});
"undefined" === typeof cljs.tools.reader.READ_FINISHED && (cljs.tools.reader.READ_FINISHED = {});
cljs.tools.reader._STAR_read_delim_STAR_ = !1;
cljs.tools.reader.read_delimited_internal = function(a, b, c, d) {
  var e = cljs.tools.reader.starting_line_col_info.call(null, b), f = cljs.core.nth.call(null, e, 0, null), e = cljs.core.nth.call(null, e, 1, null);
  a = cljs.tools.reader.impl.utils.char$.call(null, a);
  for (var g = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);;) {
    var h = cljs.tools.reader.read_STAR_.call(null, b, !1, cljs.tools.reader.READ_EOF, a, c, d);
    if (h === cljs.tools.reader.READ_FINISHED) {
      return cljs.core.persistent_BANG_.call(null, g);
    }
    if (h === cljs.tools.reader.READ_EOF) {
      return cljs.tools.reader.reader_types.reader_error.call(null, b, "EOF while reading", cljs.core.truth_(f) ? [cljs.core.str(", starting at line "), cljs.core.str(f), cljs.core.str(" and column "), cljs.core.str(e)].join("") : null);
    }
    g = cljs.core.conj_BANG_.call(null, g, h);
  }
};
cljs.tools.reader.read_delimited = function(a, b, c, d) {
  var e = cljs.tools.reader._STAR_read_delim_STAR_;
  cljs.tools.reader._STAR_read_delim_STAR_ = !0;
  try {
    return cljs.tools.reader.read_delimited_internal.call(null, a, b, c, d);
  } finally {
    cljs.tools.reader._STAR_read_delim_STAR_ = e;
  }
};
cljs.tools.reader.read_list = function(a, b, c, d) {
  var e = cljs.tools.reader.starting_line_col_info.call(null, a);
  b = cljs.core.nth.call(null, e, 0, null);
  e = cljs.core.nth.call(null, e, 1, null);
  c = cljs.tools.reader.read_delimited.call(null, ")", a, c, d);
  var f = cljs.tools.reader.ending_line_col_info.call(null, a);
  d = cljs.core.nth.call(null, f, 0, null);
  f = cljs.core.nth.call(null, f, 1, null);
  return cljs.core.with_meta.call(null, cljs.core.empty_QMARK_.call(null, c) ? cljs.core.List.EMPTY : cljs.core.apply.call(null, cljs.core.list, c), cljs.core.truth_(b) ? cljs.core.merge.call(null, function() {
    var b = cljs.tools.reader.reader_types.get_file_name.call(null, a);
    return cljs.core.truth_(b) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), b], null) : null;
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), b, new cljs.core.Keyword(null, "column", "column", 2078222095), e, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), d, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), f], null)) : null);
};
cljs.tools.reader.read_vector = function(a, b, c, d) {
  var e = cljs.tools.reader.starting_line_col_info.call(null, a);
  b = cljs.core.nth.call(null, e, 0, null);
  e = cljs.core.nth.call(null, e, 1, null);
  c = cljs.tools.reader.read_delimited.call(null, "]", a, c, d);
  var f = cljs.tools.reader.ending_line_col_info.call(null, a);
  d = cljs.core.nth.call(null, f, 0, null);
  f = cljs.core.nth.call(null, f, 1, null);
  return cljs.core.with_meta.call(null, c, cljs.core.truth_(b) ? cljs.core.merge.call(null, function() {
    var b = cljs.tools.reader.reader_types.get_file_name.call(null, a);
    return cljs.core.truth_(b) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), b], null) : null;
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), b, new cljs.core.Keyword(null, "column", "column", 2078222095), e, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), d, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), f], null)) : null);
};
cljs.tools.reader.read_map = function(a, b, c, d) {
  var e = cljs.tools.reader.starting_line_col_info.call(null, a);
  b = cljs.core.nth.call(null, e, 0, null);
  e = cljs.core.nth.call(null, e, 1, null);
  c = cljs.tools.reader.read_delimited.call(null, "}", a, c, d);
  d = cljs.core.count.call(null, c);
  var f = cljs.tools.reader.ending_line_col_info.call(null, a), g = cljs.core.nth.call(null, f, 0, null), f = cljs.core.nth.call(null, f, 1, null);
  cljs.core.odd_QMARK_.call(null, d) && cljs.tools.reader.reader_types.reader_error.call(null, a, "Map literal must contain an even number of forms");
  return cljs.core.with_meta.call(null, 0 === d ? cljs.core.PersistentArrayMap.EMPTY : cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.to_array.call(null, c)), cljs.core.truth_(b) ? cljs.core.merge.call(null, function() {
    var b = cljs.tools.reader.reader_types.get_file_name.call(null, a);
    return cljs.core.truth_(b) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), b], null) : null;
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), b, new cljs.core.Keyword(null, "column", "column", 2078222095), e, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), g, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), f], null)) : null);
};
cljs.tools.reader.read_number = function(a, b) {
  for (var c = function() {
    var a = new goog.string.StringBuffer;
    a.append(b);
    return a;
  }(), d = cljs.tools.reader.reader_types.read_char.call(null, a);;) {
    if (cljs.core.truth_(function() {
      var a = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, d);
      if (a) {
        return a;
      }
      a = cljs.tools.reader.macros.call(null, d);
      return cljs.core.truth_(a) ? a : null == d;
    }())) {
      var e = "" + cljs.core.str(c);
      cljs.tools.reader.reader_types.unread.call(null, a, d);
      var f = cljs.tools.reader.impl.commons.match_number.call(null, e);
      return cljs.core.truth_(f) ? f : cljs.tools.reader.reader_types.reader_error.call(null, a, "Invalid number format [", e, "]");
    }
    e = function() {
      var a = c;
      a.append(d);
      return a;
    }();
    f = cljs.tools.reader.reader_types.read_char.call(null, a);
    c = e;
    d = f;
  }
};
cljs.tools.reader.escape_char = function(a, b) {
  var c = cljs.tools.reader.reader_types.read_char.call(null, b);
  switch(c) {
    case "t":
      return "\t";
    case "r":
      return "\r";
    case "n":
      return "\n";
    case "\\":
      return "\\";
    case '"':
      return '"';
    case "b":
      return "\b";
    case "f":
      return "\f";
    case "u":
      return c = cljs.tools.reader.reader_types.read_char.call(null, b), -1 === parseInt(c | 0, 16) ? cljs.tools.reader.reader_types.reader_error.call(null, b, "Invalid unicode escape: \\u", c) : cljs.tools.reader.read_unicode_char.call(null, b, c, 16, 4, !0);
    default:
      return cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, c) ? (c = cljs.tools.reader.read_unicode_char.call(null, b, c, 8, 3, !1), 223 < (c | 0) ? cljs.tools.reader.reader_types.reader_error.call(null, b, "Octal escape sequence must be in range [0, 377]") : c) : cljs.tools.reader.reader_types.reader_error.call(null, b, "Unsupported escape character: \\", c);
  }
};
cljs.tools.reader.read_string_STAR_ = function(a, b, c, d) {
  for (var e = new goog.string.StringBuffer, f = cljs.tools.reader.reader_types.read_char.call(null, a);;) {
    if (null == f) {
      return cljs.tools.reader.reader_types.reader_error.call(null, a, "EOF while reading string");
    }
    switch(f) {
      case "\\":
        b = function() {
          var b = e;
          b.append(cljs.tools.reader.escape_char.call(null, e, a));
          return b;
        }();
        c = cljs.tools.reader.reader_types.read_char.call(null, a);
        e = b;
        f = c;
        continue;
      case '"':
        return "" + cljs.core.str(e);
      default:
        b = function() {
          var a = e;
          a.append(f);
          return a;
        }(), c = cljs.tools.reader.reader_types.read_char.call(null, a), e = b, f = c;
    }
  }
};
cljs.tools.reader.loc_info = function(a, b, c) {
  if (null == b) {
    return null;
  }
  var d = cljs.tools.reader.reader_types.get_file_name.call(null, a), d = null == d ? null : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), d], null), e = cljs.tools.reader.ending_line_col_info.call(null, a);
  a = cljs.core.nth.call(null, e, 0, null);
  e = cljs.core.nth.call(null, e, 1, null);
  b = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), b, new cljs.core.Keyword(null, "column", "column", 2078222095), c, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), a, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), e], null);
  return cljs.core.merge.call(null, d, b);
};
cljs.tools.reader.read_symbol = function(a, b) {
  var c = cljs.tools.reader.starting_line_col_info.call(null, a), d = cljs.core.nth.call(null, c, 0, null), c = cljs.core.nth.call(null, c, 1, null), e = cljs.tools.reader.read_token.call(null, a, b);
  if (null == e) {
    return null;
  }
  switch(e) {
    case "nil":
      return null;
    case "true":
      return !0;
    case "false":
      return !1;
    case "/":
      return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
    case "NaN":
      return Number.NaN;
    case "-Infinity":
      return Number.NEGATIVE_INFINITY;
    case "Infinity":
    ;
    case "+Infinity":
      return Number.POSITIVE_INFINITY;
    default:
      var f = cljs.tools.reader.impl.commons.parse_symbol.call(null, e);
      return null != f ? (e = cljs.core.symbol.call(null, cljs.core._nth.call(null, f, 0), cljs.core._nth.call(null, f, 1)), cljs.core._with_meta.call(null, e, cljs.tools.reader.loc_info.call(null, a, d, c))) : cljs.tools.reader.reader_types.reader_error.call(null, a, "Invalid token: ", e);
  }
};
cljs.tools.reader._STAR_alias_map_STAR_ = null;
cljs.tools.reader.resolve_ns = function(a) {
  var b = cljs.core.get.call(null, cljs.tools.reader._STAR_alias_map_STAR_, a);
  if (cljs.core.truth_(b)) {
    return b;
  }
  a = cljs.core.find_ns.call(null, a);
  return cljs.core.truth_(a) ? cljs.core.symbol.call(null, cljs.core.ns_name.call(null, a)) : null;
};
cljs.tools.reader.read_keyword = function(a, b, c, d) {
  b = cljs.tools.reader.reader_types.read_char.call(null, a);
  if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, b)) {
    return cljs.tools.reader.reader_types.reader_error.call(null, a, "Invalid token: :");
  }
  b = cljs.tools.reader.read_token.call(null, a, b);
  d = cljs.tools.reader.impl.commons.parse_symbol.call(null, b);
  return null != d ? (c = cljs.core._nth.call(null, d, 0), d = cljs.core._nth.call(null, d, 1), ":" === b.charAt(0) ? null != c ? (c = cljs.tools.reader.resolve_ns.call(null, cljs.core.symbol.call(null, cljs.core.subs.call(null, c, 1))), null != c ? cljs.core.keyword.call(null, "" + cljs.core.str(c), d) : cljs.tools.reader.reader_types.reader_error.call(null, a, "Invalid token: :", b)) : cljs.core.keyword.call(null, "" + cljs.core.str(cljs.core._STAR_ns_STAR_), cljs.core.subs.call(null, d, 1)) : 
  cljs.core.keyword.call(null, c, d)) : cljs.tools.reader.reader_types.reader_error.call(null, a, "Invalid token: :", b);
};
cljs.tools.reader.wrapping_reader = function(a) {
  return function(b, c, d, e) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.tools.reader.read_STAR_.call(null, b, !0, null, d, e)), a);
  };
};
cljs.tools.reader.read_meta = function(a, b, c, d) {
  if (cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null, a) && !cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, a))) {
    return cljs.tools.reader.reader_types.log_source_STAR_.call(null, a, function() {
      var b = cljs.tools.reader.starting_line_col_info.call(null, a), e = cljs.core.nth.call(null, b, 0, null), f = cljs.core.nth.call(null, b, 1, null), g = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d));
      cljs.core.map_QMARK_.call(null, g) || cljs.tools.reader.reader_types.reader_error.call(null, a, "Metadata must be Symbol, Keyword, String or Map");
      b = cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d);
      return null != b && (b.cljs$lang$protocol_mask$partition0$ & 131072 || b.cljs$core$IMeta$) ? (e = cljs.core.truth_(cljs.core.truth_(e) ? cljs.core.seq_QMARK_.call(null, b) : e) ? cljs.core.assoc.call(null, g, new cljs.core.Keyword(null, "line", "line", 212345235), e, new cljs.core.Keyword(null, "column", "column", 2078222095), f) : g, null != b && (b.cljs$lang$protocol_mask$partition0$ & 262144 || b.cljs$core$IWithMeta$) ? cljs.core.with_meta.call(null, b, cljs.core.merge.call(null, cljs.core.meta.call(null, 
      b), e)) : cljs.core.reset_meta_BANG_.call(null, b, e)) : cljs.tools.reader.reader_types.reader_error.call(null, a, "Metadata can only be applied to IMetas");
    });
  }
  var e = cljs.tools.reader.starting_line_col_info.call(null, a);
  b = cljs.core.nth.call(null, e, 0, null);
  var f = cljs.core.nth.call(null, e, 1, null), g = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d));
  cljs.core.map_QMARK_.call(null, g) || cljs.tools.reader.reader_types.reader_error.call(null, a, "Metadata must be Symbol, Keyword, String or Map");
  e = cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d);
  return null != e && (e.cljs$lang$protocol_mask$partition0$ & 131072 || e.cljs$core$IMeta$) ? (b = cljs.core.truth_(cljs.core.truth_(b) ? cljs.core.seq_QMARK_.call(null, e) : b) ? cljs.core.assoc.call(null, g, new cljs.core.Keyword(null, "line", "line", 212345235), b, new cljs.core.Keyword(null, "column", "column", 2078222095), f) : g, null != e && (e.cljs$lang$protocol_mask$partition0$ & 262144 || e.cljs$core$IWithMeta$) ? cljs.core.with_meta.call(null, e, cljs.core.merge.call(null, cljs.core.meta.call(null, 
  e), b)) : cljs.core.reset_meta_BANG_.call(null, e, b)) : cljs.tools.reader.reader_types.reader_error.call(null, a, "Metadata can only be applied to IMetas");
};
cljs.tools.reader.read_set = function(a, b, c, d) {
  var e = cljs.tools.reader.starting_line_col_info.call(null, a);
  b = cljs.core.nth.call(null, e, 0, null);
  e = cljs.core.nth.call(null, e, 1, null);
  e = cljs.core.truth_(e) ? e - 1 | 0 : null;
  c = cljs.core.set.call(null, cljs.tools.reader.read_delimited.call(null, "}", a, c, d));
  var f = cljs.tools.reader.ending_line_col_info.call(null, a);
  d = cljs.core.nth.call(null, f, 0, null);
  f = cljs.core.nth.call(null, f, 1, null);
  return cljs.core.with_meta.call(null, c, cljs.core.truth_(b) ? cljs.core.merge.call(null, function() {
    var b = cljs.tools.reader.reader_types.get_file_name.call(null, a);
    return cljs.core.truth_(b) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), b], null) : null;
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), b, new cljs.core.Keyword(null, "column", "column", 2078222095), e, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), d, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), f], null)) : null);
};
cljs.tools.reader.read_discard = function(a, b, c, d) {
  cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d);
  return a;
};
cljs.tools.reader.RESERVED_FEATURES = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null);
cljs.tools.reader.has_feature_QMARK_ = function(a, b, c) {
  return b instanceof cljs.core.Keyword ? cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), b) || cljs.core.contains_QMARK_.call(null, cljs.core.get.call(null, c, new cljs.core.Keyword(null, "features", "features", -1146962336)), b) : cljs.tools.reader.reader_types.reader_error.call(null, a, [cljs.core.str("Feature should be a keyword: "), cljs.core.str(b)].join(""));
};
cljs.tools.reader.check_eof_error = function(a, b, c) {
  return a === cljs.tools.reader.READ_EOF ? 0 > c ? cljs.tools.reader.reader_types.reader_error.call(null, b, "EOF while reading") : cljs.tools.reader.reader_types.reader_error.call(null, b, "EOF while reading, starting at line ", c) : null;
};
cljs.tools.reader.check_reserved_features = function(a, b) {
  return cljs.core.truth_(cljs.core.get.call(null, cljs.tools.reader.RESERVED_FEATURES, b)) ? cljs.tools.reader.reader_types.reader_error.call(null, a, [cljs.core.str("Feature name "), cljs.core.str(b), cljs.core.str(" is reserved")].join("")) : null;
};
cljs.tools.reader.check_invalid_read_cond = function(a, b, c) {
  return a === cljs.tools.reader.READ_FINISHED ? 0 > c ? cljs.tools.reader.reader_types.reader_error.call(null, b, "read-cond requires an even number of forms") : cljs.tools.reader.reader_types.reader_error.call(null, b, [cljs.core.str("read-cond starting on line "), cljs.core.str(c), cljs.core.str(" requires an even number of forms")].join("")) : null;
};
cljs.tools.reader.read_suppress = function(a, b, c, d) {
  var e = cljs.tools.reader._STAR_suppress_read_STAR_;
  cljs.tools.reader._STAR_suppress_read_STAR_ = !0;
  try {
    var f = cljs.tools.reader.read_STAR_.call(null, b, !1, cljs.tools.reader.READ_EOF, ")", c, d);
    cljs.tools.reader.check_eof_error.call(null, f, b, a);
    return f === cljs.tools.reader.READ_FINISHED ? cljs.tools.reader.READ_FINISHED : null;
  } finally {
    cljs.tools.reader._STAR_suppress_read_STAR_ = e;
  }
};
"undefined" === typeof cljs.tools.reader.NO_MATCH && (cljs.tools.reader.NO_MATCH = {});
cljs.tools.reader.match_feature = function(a, b, c, d) {
  var e = cljs.tools.reader.read_STAR_.call(null, b, !1, cljs.tools.reader.READ_EOF, ")", c, d);
  cljs.tools.reader.check_eof_error.call(null, e, b, a);
  if (cljs.core._EQ_.call(null, e, cljs.tools.reader.READ_FINISHED)) {
    return cljs.tools.reader.READ_FINISHED;
  }
  cljs.tools.reader.check_reserved_features.call(null, b, e);
  if (cljs.core.truth_(cljs.tools.reader.has_feature_QMARK_.call(null, b, e, c))) {
    return c = cljs.tools.reader.read_STAR_.call(null, b, !1, cljs.tools.reader.READ_EOF, ")", c, d), cljs.tools.reader.check_eof_error.call(null, c, b, a), cljs.tools.reader.check_invalid_read_cond.call(null, c, b, a), c;
  }
  a = cljs.tools.reader.read_suppress.call(null, a, b, c, d);
  return cljs.core.truth_(a) ? a : cljs.tools.reader.NO_MATCH;
};
cljs.tools.reader.read_cond_delimited = function(a, b, c, d) {
  var e = cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? cljs.tools.reader.reader_types.get_line_number.call(null, a) : -1;
  a: {
    for (var f = cljs.tools.reader.NO_MATCH, g = null;;) {
      if (f === cljs.tools.reader.NO_MATCH) {
        if (f = cljs.tools.reader.match_feature.call(null, e, a, c, d), f === cljs.tools.reader.READ_FINISHED) {
          c = cljs.tools.reader.READ_FINISHED;
          break a;
        } else {
          g = null;
        }
      } else {
        if (g !== cljs.tools.reader.READ_FINISHED) {
          g = cljs.tools.reader.read_suppress.call(null, e, a, c, d);
        } else {
          c = f;
          break a;
        }
      }
    }
  }
  return c === cljs.tools.reader.READ_FINISHED ? a : cljs.core.truth_(b) ? null != c && (c.cljs$lang$protocol_mask$partition0$ & 16777216 || c.cljs$core$ISequential$) ? (goog.array.insertArrayAt(d, cljs.core.to_array.call(null, c), 0), a) : cljs.tools.reader.reader_types.reader_error.call(null, a, "Spliced form list in read-cond-splicing must implement java.util.List.") : c;
};
cljs.tools.reader.read_cond = function(a, b, c, d) {
  if (cljs.core.not.call(null, cljs.core.truth_(c) ? (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "preserve", "preserve", 1276846509), null, new cljs.core.Keyword(null, "allow", "allow", -1857325745), null], null), null)).call(null, (new cljs.core.Keyword(null, "read-cond", "read-cond", 1056899244)).cljs$core$IFn$_invoke$arity$1(c)) : c)) {
    throw cljs.core.ex_info.call(null, "Conditional read not allowed", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "runtime-exception", "runtime-exception", -1495664514)], null));
  }
  var e = cljs.tools.reader.reader_types.read_char.call(null, a);
  if (cljs.core.truth_(e)) {
    if (e = (b = cljs.core._EQ_.call(null, e, "@")) ? cljs.tools.reader.reader_types.read_char.call(null, a) : e, b && (cljs.core.truth_(cljs.tools.reader._STAR_read_delim_STAR_) || cljs.tools.reader.reader_types.reader_error.call(null, a, "cond-splice not in list")), e = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, e) ? cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, a) : e, cljs.core.truth_(e)) {
      if (cljs.core.not_EQ_.call(null, e, "(")) {
        throw cljs.core.ex_info.call(null, "read-cond body must be a list", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "runtime-exception", "runtime-exception", -1495664514)], null));
      }
      var f = cljs.tools.reader._STAR_suppress_read_STAR_, g = cljs.tools.reader, h;
      h = cljs.tools.reader._STAR_suppress_read_STAR_;
      h = cljs.core.truth_(h) ? h : cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "preserve", "preserve", 1276846509), (new cljs.core.Keyword(null, "read-cond", "read-cond", 1056899244)).cljs$core$IFn$_invoke$arity$1(c));
      g._STAR_suppress_read_STAR_ = h;
      try {
        return cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_) ? cljs.tools.reader.impl.utils.reader_conditional.call(null, cljs.tools.reader.read_list.call(null, a, e, c, d), b) : cljs.tools.reader.read_cond_delimited.call(null, a, b, c, d);
      } finally {
        cljs.tools.reader._STAR_suppress_read_STAR_ = f;
      }
    } else {
      return cljs.tools.reader.reader_types.reader_error.call(null, a, "EOF while reading character");
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, a, "EOF while reading character");
  }
};
cljs.tools.reader.arg_env = null;
cljs.tools.reader.garg = function(a) {
  return cljs.core.symbol.call(null, [cljs.core.str(-1 === a ? "rest" : [cljs.core.str("p"), cljs.core.str(a)].join("")), cljs.core.str("__"), cljs.core.str(cljs.tools.reader.impl.utils.next_id.call(null)), cljs.core.str("#")].join(""));
};
cljs.tools.reader.read_fn = function(a, b, c, d) {
  if (cljs.core.truth_(cljs.tools.reader.arg_env)) {
    throw cljs.core.ex_info.call(null, "Nested #()s are not allowed", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  }
  b = cljs.tools.reader.arg_env;
  cljs.tools.reader.arg_env = cljs.core.sorted_map.call(null);
  try {
    var e = cljs.tools.reader.read_STAR_.call(null, function() {
      cljs.tools.reader.reader_types.unread.call(null, a, "(");
      return a;
    }(), !0, null, c, d), f = cljs.core.rseq.call(null, cljs.tools.reader.arg_env), g = f ? function() {
      var a = cljs.core.key.call(null, cljs.core.first.call(null, f)), b = function() {
        for (var b = 1, c = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);;) {
          if (b > a) {
            return cljs.core.persistent_BANG_.call(null, c);
          }
          var d = b + 1, c = cljs.core.conj_BANG_.call(null, c, function() {
            var a = cljs.core.get.call(null, cljs.tools.reader.arg_env, b);
            return cljs.core.truth_(a) ? a : cljs.tools.reader.garg.call(null, b);
          }()), b = d;
        }
      }();
      return cljs.core.truth_(cljs.tools.reader.arg_env.call(null, -1)) ? cljs.core.conj.call(null, b, new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), cljs.tools.reader.arg_env.call(null, -1)) : b;
    }() : cljs.core.PersistentVector.EMPTY;
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, e), g), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null));
  } finally {
    cljs.tools.reader.arg_env = b;
  }
};
cljs.tools.reader.register_arg = function(a) {
  if (cljs.core.truth_(cljs.tools.reader.arg_env)) {
    var b = cljs.tools.reader.arg_env.call(null, a);
    if (cljs.core.truth_(b)) {
      return b;
    }
    b = cljs.tools.reader.garg.call(null, a);
    cljs.tools.reader.arg_env = cljs.core.assoc.call(null, cljs.tools.reader.arg_env, a, b);
    return b;
  }
  throw cljs.core.ex_info.call(null, "Arg literal not in #()", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
};
cljs.tools.reader.read_symbol;
cljs.tools.reader.read_arg = function(a, b, c, d) {
  if (null == cljs.tools.reader.arg_env) {
    return cljs.tools.reader.read_symbol.call(null, a, b);
  }
  b = cljs.tools.reader.reader_types.peek_char.call(null, a);
  if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, b) || cljs.tools.reader.macro_terminating_QMARK_.call(null, b) || null == b) {
    return cljs.tools.reader.register_arg.call(null, 1);
  }
  if (cljs.core._EQ_.call(null, b, "\x26")) {
    return cljs.tools.reader.reader_types.read_char.call(null, a), cljs.tools.reader.register_arg.call(null, -1);
  }
  a = cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d);
  if (cljs.core.integer_QMARK_.call(null, a)) {
    return cljs.tools.reader.register_arg.call(null, a);
  }
  throw cljs.core.ex_info.call(null, "Arg literal must be %, %\x26 or %integer", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
};
cljs.tools.reader.gensym_env = null;
cljs.tools.reader.read_unquote = function(a, b, c, d) {
  b = cljs.tools.reader.reader_types.peek_char.call(null, a);
  return cljs.core.truth_(b) ? cljs.core._EQ_.call(null, "@", b) ? cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "unquote-splicing", "clojure.core/unquote-splicing", -552003150, null)).call(null, function() {
    cljs.tools.reader.reader_types.read_char.call(null, a);
    return a;
  }(), "@", c, d) : cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null)).call(null, a, "~", c, d) : null;
};
cljs.tools.reader.syntax_quote_STAR_;
cljs.tools.reader.unquote_splicing_QMARK_ = function(a) {
  return cljs.core.seq_QMARK_.call(null, a) && cljs.core._EQ_.call(null, cljs.core.first.call(null, a), new cljs.core.Symbol("clojure.core", "unquote-splicing", "clojure.core/unquote-splicing", -552003150, null));
};
cljs.tools.reader.unquote_QMARK_ = function(a) {
  return cljs.core.seq_QMARK_.call(null, a) && cljs.core._EQ_.call(null, cljs.core.first.call(null, a), new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null));
};
cljs.tools.reader.expand_list = function(a) {
  a = cljs.core.seq.call(null, a);
  for (var b = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);;) {
    if (a) {
      var c = cljs.core.first.call(null, a), b = cljs.core.conj_BANG_.call(null, b, cljs.core.truth_(cljs.tools.reader.unquote_QMARK_.call(null, c)) ? cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.second.call(null, c)), new cljs.core.Symbol("clojure.core", "list", "clojure.core/list", -1119203325, null)) : cljs.core.truth_(cljs.tools.reader.unquote_splicing_QMARK_.call(null, c)) ? cljs.core.second.call(null, c) : cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.tools.reader.syntax_quote_STAR_.call(null, c)), new cljs.core.Symbol("clojure.core", "list", "clojure.core/list", -1119203325, null)));
      a = cljs.core.next.call(null, a);
    } else {
      return cljs.core.seq.call(null, cljs.core.persistent_BANG_.call(null, b));
    }
  }
};
cljs.tools.reader.flatten_map = function(a) {
  a = cljs.core.seq.call(null, a);
  for (var b = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);;) {
    if (a) {
      var c = cljs.core.first.call(null, a);
      a = cljs.core.next.call(null, a);
      b = cljs.core.conj_BANG_.call(null, cljs.core.conj_BANG_.call(null, b, cljs.core.key.call(null, c)), cljs.core.val.call(null, c));
    } else {
      return cljs.core.seq.call(null, cljs.core.persistent_BANG_.call(null, b));
    }
  }
};
cljs.tools.reader.register_gensym = function(a) {
  if (cljs.core.not.call(null, cljs.tools.reader.gensym_env)) {
    throw cljs.core.ex_info.call(null, "Gensym literal not in syntax-quote", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  }
  var b = cljs.core.get.call(null, cljs.tools.reader.gensym_env, a);
  if (cljs.core.truth_(b)) {
    return b;
  }
  b = cljs.core.symbol.call(null, [cljs.core.str(cljs.core.subs.call(null, cljs.core.name.call(null, a), 0, cljs.core.count.call(null, cljs.core.name.call(null, a)) - 1)), cljs.core.str("__"), cljs.core.str(cljs.tools.reader.impl.utils.next_id.call(null)), cljs.core.str("__auto__")].join(""));
  cljs.tools.reader.gensym_env = cljs.core.assoc.call(null, cljs.tools.reader.gensym_env, a, b);
  return b;
};
cljs.tools.reader.add_meta = function(a, b) {
  var c;
  c = (c = null != a ? a.cljs$lang$protocol_mask$partition0$ & 262144 || a.cljs$core$IWithMeta$ ? !0 : !1 : !1) ? cljs.core.seq.call(null, cljs.core.dissoc.call(null, cljs.core.meta.call(null, a), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "file", "file", -1269645878), 
  new cljs.core.Keyword(null, "source", "source", -433931539))) : c;
  return c ? cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.tools.reader.syntax_quote_STAR_.call(null, cljs.core.meta.call(null, a))), b), new cljs.core.Symbol("cljs.core", "with-meta", "cljs.core/with-meta", 749126446, null)) : b;
};
cljs.tools.reader.syntax_quote_coll = function(a, b) {
  var c = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol("cljs.core", "concat", "cljs.core/concat", -1133584918, null), cljs.tools.reader.expand_list.call(null, b))), new cljs.core.Symbol("cljs.core", "sequence", "cljs.core/sequence", 1908459032, null));
  return cljs.core.truth_(a) ? cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, c), a), new cljs.core.Symbol("cljs.core", "apply", "cljs.core/apply", 1757277831, null)) : c;
};
cljs.tools.reader.map_func = function(a) {
  return 16 <= cljs.core.count.call(null, a) ? new cljs.core.Symbol("cljs.core", "hash-map", "cljs.core/hash-map", 303385767, null) : new cljs.core.Symbol("cljs.core", "array-map", "cljs.core/array-map", -1519210683, null);
};
cljs.tools.reader.bool_QMARK_ = function(a) {
  return a instanceof Boolean || !0 === a || !1 === a;
};
cljs.tools.reader.resolve_symbol = function(a) {
  throw cljs.core.ex_info.call(null, "resolve-symbol is not implemented", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "sym", "sym", -1444860305), a], null));
};
cljs.tools.reader.syntax_quote_STAR_ = function(a) {
  return cljs.tools.reader.add_meta.call(null, a, cljs.core.special_symbol_QMARK_.call(null, a) ? cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, a), new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)) : a instanceof cljs.core.Symbol ? cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.truth_(cljs.core.namespace.call(null, a)) ? cljs.tools.reader.resolve_symbol.call(null, a) : cljs.core.truth_(goog.string.endsWith(cljs.core.name.call(null, 
  a), "#")) ? cljs.tools.reader.register_gensym.call(null, a) : a), new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)) : cljs.core.truth_(cljs.tools.reader.unquote_QMARK_.call(null, a)) ? cljs.core.second.call(null, a) : cljs.core.truth_(cljs.tools.reader.unquote_splicing_QMARK_.call(null, a)) ? function() {
    throw cljs.core.ex_info.call(null, "unquote-splice not in list", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  }() : cljs.core.coll_QMARK_.call(null, a) ? null != a && (a.cljs$lang$protocol_mask$partition0$ & 67108864 || a.cljs$core$IRecord$) ? a : cljs.core.map_QMARK_.call(null, a) ? cljs.tools.reader.syntax_quote_coll.call(null, cljs.tools.reader.map_func.call(null, a), cljs.tools.reader.flatten_map.call(null, a)) : cljs.core.vector_QMARK_.call(null, a) ? cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.tools.reader.syntax_quote_coll.call(null, null, a)), new cljs.core.Symbol("cljs.core", 
  "vec", "cljs.core/vec", 307622519, null)) : cljs.core.set_QMARK_.call(null, a) ? cljs.tools.reader.syntax_quote_coll.call(null, new cljs.core.Symbol("cljs.core", "hash-set", "cljs.core/hash-set", 1130426749, null), a) : cljs.core.seq_QMARK_.call(null, a) || cljs.core.list_QMARK_.call(null, a) ? function() {
    var b = cljs.core.seq.call(null, a);
    return b ? cljs.tools.reader.syntax_quote_coll.call(null, null, b) : cljs.core.list(new cljs.core.Symbol("cljs.core", "list", "cljs.core/list", -1331406371, null));
  }() : function() {
    throw cljs.core.ex_info.call(null, "Unknown Collection type", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "unsupported-operation", "unsupported-operation", 1890540953)], null));
  }() : cljs.core.truth_(function() {
    var b = a instanceof cljs.core.Keyword;
    if (b || (b = "number" === typeof a) || (b = "string" === typeof a) || (b = null == a)) {
      return b;
    }
    b = cljs.tools.reader.bool_QMARK_.call(null, a);
    return cljs.core.truth_(b) ? b : a instanceof RegExp;
  }()) ? a : cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, a), new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)));
};
cljs.tools.reader.read_syntax_quote = function(a, b, c, d) {
  b = cljs.tools.reader.gensym_env;
  cljs.tools.reader.gensym_env = cljs.core.PersistentArrayMap.EMPTY;
  try {
    return cljs.tools.reader.syntax_quote_STAR_.call(null, cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d));
  } finally {
    cljs.tools.reader.gensym_env = b;
  }
};
cljs.tools.reader.macros = function(a) {
  switch(a) {
    case '"':
      return cljs.tools.reader.read_string_STAR_;
    case ":":
      return cljs.tools.reader.read_keyword;
    case ";":
      return cljs.tools.reader.impl.commons.read_comment;
    case "'":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
    case "@":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null));
    case "^":
      return cljs.tools.reader.read_meta;
    case "`":
      return cljs.tools.reader.read_syntax_quote;
    case "~":
      return cljs.tools.reader.read_unquote;
    case "(":
      return cljs.tools.reader.read_list;
    case ")":
      return cljs.tools.reader.read_unmatched_delimiter;
    case "[":
      return cljs.tools.reader.read_vector;
    case "]":
      return cljs.tools.reader.read_unmatched_delimiter;
    case "{":
      return cljs.tools.reader.read_map;
    case "}":
      return cljs.tools.reader.read_unmatched_delimiter;
    case "\\":
      return cljs.tools.reader.read_char_STAR_;
    case "%":
      return cljs.tools.reader.read_arg;
    case "#":
      return cljs.tools.reader.read_dispatch;
    default:
      return null;
  }
};
cljs.tools.reader.dispatch_macros = function(a) {
  switch(a) {
    case "^":
      return cljs.tools.reader.read_meta;
    case "'":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "var", "var", 870848730, null));
    case "(":
      return cljs.tools.reader.read_fn;
    case "{":
      return cljs.tools.reader.read_set;
    case "\x3c":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "Unreadable form");
    case "\x3d":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "read-eval not supported");
    case '"':
      return cljs.tools.reader.read_regex;
    case "!":
      return cljs.tools.reader.impl.commons.read_comment;
    case "_":
      return cljs.tools.reader.read_discard;
    case "?":
      return cljs.tools.reader.read_cond;
    default:
      return null;
  }
};
cljs.tools.reader.read_tagged = function(a, b, c, d) {
  b = cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d);
  b instanceof cljs.core.Symbol || cljs.tools.reader.reader_types.reader_error.call(null, a, "Reader tag must be a symbol");
  if (cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_)) {
    return cljs.core.tagged_literal.call(null, b, cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d));
  }
  var e;
  e = cljs.tools.reader._STAR_data_readers_STAR_.call(null, b);
  e = cljs.core.truth_(e) ? e : cljs.tools.reader.default_data_readers.call(null, b);
  if (cljs.core.truth_(e)) {
    return e.call(null, cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d));
  }
  e = cljs.tools.reader._STAR_default_data_reader_fn_STAR_;
  return cljs.core.truth_(e) ? e.call(null, b, cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d)) : cljs.tools.reader.reader_types.reader_error.call(null, a, "No reader function for tag ", cljs.core.name.call(null, b));
};
cljs.tools.reader._STAR_data_readers_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.tools.reader._STAR_default_data_reader_fn_STAR_ = null;
cljs.tools.reader._STAR_suppress_read_STAR_ = !1;
cljs.tools.reader.default_data_readers = cljs.core.PersistentArrayMap.EMPTY;
cljs.tools.reader.read_STAR__internal = function(a, b, c, d, e, f) {
  for (;;) {
    if (cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null, a) && !cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, a))) {
      return cljs.tools.reader.reader_types.log_source_STAR_.call(null, a, function() {
        for (;;) {
          if (goog.array.isEmpty(f)) {
            var g = cljs.tools.reader.reader_types.read_char.call(null, a);
            if (!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, g)) {
              if (null == g) {
                return b ? cljs.tools.reader.reader_types.reader_error.call(null, a, "EOF") : c;
              }
              if (g === d) {
                return cljs.tools.reader.READ_FINISHED;
              }
              if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, a, g)) {
                return cljs.tools.reader.read_number.call(null, a, g);
              }
              var h = cljs.tools.reader.macros.call(null, g);
              if (null != h) {
                if (g = h.call(null, a, g, e, f), g !== a) {
                  return g;
                }
              } else {
                return cljs.tools.reader.read_symbol.call(null, a, g);
              }
            }
          } else {
            return g = f[0], goog.array.removeAt(f, 0), g;
          }
        }
      });
    }
    if (goog.array.isEmpty(f)) {
      var g = cljs.tools.reader.reader_types.read_char.call(null, a);
      if (!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, g)) {
        if (null == g) {
          return b ? cljs.tools.reader.reader_types.reader_error.call(null, a, "EOF") : c;
        }
        if (g === d) {
          return cljs.tools.reader.READ_FINISHED;
        }
        if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, a, g)) {
          return cljs.tools.reader.read_number.call(null, a, g);
        }
        var h = cljs.tools.reader.macros.call(null, g);
        if (null != h) {
          if (g = h.call(null, a, g, e, f), g !== a) {
            return g;
          }
        } else {
          return cljs.tools.reader.read_symbol.call(null, a, g);
        }
      }
    } else {
      return g = f[0], goog.array.removeAt(f, 0), g;
    }
  }
};
cljs.tools.reader.read_STAR_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 5:
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return cljs.tools.reader.read_STAR_.call(null, a, b, c, null, d, e);
};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  try {
    return cljs.tools.reader.read_STAR__internal.call(null, a, b, c, d, e, f);
  } catch (g) {
    if (g instanceof Error) {
      if (cljs.tools.reader.impl.utils.ex_info_QMARK_.call(null, g)) {
        b = cljs.core.ex_data.call(null, g);
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(b))) {
          throw g;
        }
        throw cljs.core.ex_info.call(null, g.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), b, cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
        a), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, a), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, a)], null) : null), g);
      }
      throw cljs.core.ex_info.call(null, g.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
      a), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, a), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, a)], null) : null), g);
    }
    throw g;
  }
};
cljs.tools.reader.read_STAR_.cljs$lang$maxFixedArity = 6;
cljs.tools.reader.read = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.tools.reader.read.call(null, a, !0, null);
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "eof", "eof", -489063237), new cljs.core.Keyword(null, "eofthrow", "eofthrow", -334166531));
  return cljs.tools.reader.read_STAR_.call(null, b, cljs.core._EQ_.call(null, d, new cljs.core.Keyword(null, "eofthrow", "eofthrow", -334166531)), d, null, c, cljs.core.to_array.call(null, cljs.core.PersistentVector.EMPTY));
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.tools.reader.read_STAR_.call(null, a, b, c, null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.to_array.call(null, cljs.core.PersistentVector.EMPTY));
};
cljs.tools.reader.read.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.read_string = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.tools.reader.read_string.call(null, cljs.core.PersistentArrayMap.EMPTY, a);
};
cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.truth_(cljs.core.truth_(b) ? "" !== b : b) ? cljs.tools.reader.read.call(null, a, cljs.tools.reader.reader_types.string_push_back_reader.call(null, b)) : null;
};
cljs.tools.reader.read_string.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.edn = {};
cljs.tools.reader.edn.read;
cljs.tools.reader.edn.macros;
cljs.tools.reader.edn.dispatch_macros;
cljs.tools.reader.edn.macro_terminating_QMARK_ = function(a) {
  var b = "#" !== a;
  return b && (b = "'" !== a) ? (b = ":" !== a) ? cljs.tools.reader.edn.macros.call(null, a) : b : b;
};
cljs.tools.reader.edn.not_constituent_QMARK_ = function(a) {
  return "@" === a || "`" === a || "~" === a;
};
cljs.tools.reader.edn.read_token = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.tools.reader.edn.read_token.call(null, a, b, !0);
};
cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (cljs.core.not.call(null, b)) {
    return cljs.tools.reader.reader_types.reader_error.call(null, a, "EOF while reading");
  }
  if (cljs.core.truth_(cljs.core.truth_(c) ? cljs.tools.reader.edn.not_constituent_QMARK_.call(null, b) : c)) {
    return cljs.tools.reader.reader_types.reader_error.call(null, a, "Invalid leading character: ", b);
  }
  c = new goog.string.StringBuffer;
  for (cljs.tools.reader.reader_types.unread.call(null, a, b);;) {
    if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, b) || cljs.tools.reader.edn.macro_terminating_QMARK_.call(null, b) || null == b) {
      return "" + cljs.core.str(c);
    }
    if (cljs.tools.reader.edn.not_constituent_QMARK_.call(null, b)) {
      return cljs.tools.reader.reader_types.reader_error.call(null, a, "Invalid constituent character: ", b);
    }
    c.append(cljs.tools.reader.reader_types.read_char.call(null, a));
    b = cljs.tools.reader.reader_types.peek_char.call(null, a);
  }
};
cljs.tools.reader.edn.read_token.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.edn.read_tagged;
cljs.tools.reader.edn.read_dispatch = function(a, b, c) {
  var d = cljs.tools.reader.reader_types.read_char.call(null, a);
  if (cljs.core.truth_(d)) {
    b = cljs.tools.reader.edn.dispatch_macros.call(null, d);
    if (cljs.core.truth_(b)) {
      return b.call(null, a, d, c);
    }
    c = cljs.tools.reader.edn.read_tagged.call(null, function() {
      cljs.tools.reader.reader_types.unread.call(null, a, d);
      return a;
    }(), d, c);
    return cljs.core.truth_(c) ? c : cljs.tools.reader.reader_types.reader_error.call(null, a, "No dispatch macro for ", d);
  }
  return cljs.tools.reader.reader_types.reader_error.call(null, a, "EOF while reading character");
};
cljs.tools.reader.edn.read_unmatched_delimiter = function(a, b, c) {
  return cljs.tools.reader.reader_types.reader_error.call(null, a, "Unmatched delimiter ", b);
};
cljs.tools.reader.edn.read_unicode_char = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 4:
      return cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  c = b + c;
  if (cljs.core.count.call(null, a) !== c) {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid unicode character: \\"), cljs.core.str(a)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
  }
  for (var e = 0;;) {
    if (b === c) {
      return String.fromCharCode(e);
    }
    var f = cljs.tools.reader.char_code.call(null, cljs.core.nth.call(null, a, b), d);
    if (-1 === f) {
      throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(cljs.core.nth.call(null, a, b))].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
    }
    e = f + e * d;
    b += 1;
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  for (var f = 1, g = cljs.tools.reader.char_code.call(null, b, c);;) {
    if (-1 === g) {
      throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(b)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
    }
    if (f !== d) {
      var h = cljs.tools.reader.reader_types.peek_char.call(null, a);
      if (cljs.core.truth_(function() {
        var a = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, h);
        if (a) {
          return a;
        }
        a = cljs.tools.reader.edn.macros.call(null, h);
        return cljs.core.truth_(a) ? a : null == h;
      }())) {
        if (cljs.core.truth_(e)) {
          throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid character length: "), cljs.core.str(f), cljs.core.str(", should be: "), cljs.core.str(d)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
        }
        return String.fromCharCode(g);
      }
      var k = cljs.tools.reader.char_code.call(null, h, c);
      cljs.tools.reader.reader_types.read_char.call(null, a);
      if (-1 === k) {
        throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(h)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
      }
      g = k + g * c;
      f += 1;
    } else {
      return String.fromCharCode(g);
    }
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$lang$maxFixedArity = 5;
cljs.tools.reader.edn.upper_limit = 0;
cljs.tools.reader.edn.lower_limit = 0;
cljs.tools.reader.edn.read_char_STAR_ = function(a, b, c) {
  b = cljs.tools.reader.reader_types.read_char.call(null, a);
  if (null != b) {
    b = cljs.tools.reader.edn.macro_terminating_QMARK_.call(null, b) || cljs.tools.reader.edn.not_constituent_QMARK_.call(null, b) || cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, b) ? "" + cljs.core.str(b) : cljs.tools.reader.edn.read_token.call(null, a, b, !1);
    c = cljs.core.count.call(null, b);
    if (1 === c) {
      return cljs.core.nth.call(null, b, 0);
    }
    if ("newline" === b) {
      return "\n";
    }
    if ("space" === b) {
      return " ";
    }
    if ("tab" === b) {
      return "\t";
    }
    if ("backspace" === b) {
      return "\b";
    }
    if ("formfeed" === b) {
      return "\f";
    }
    if ("return" === b) {
      return "\r";
    }
    if (cljs.core.truth_(goog.string.startsWith(b, "u"))) {
      return b = cljs.tools.reader.edn.read_unicode_char.call(null, b, 1, 4, 16), c = b.charCodeAt(), c > cljs.tools.reader.edn.upper_limit && c < cljs.tools.reader.edn.lower_limit ? cljs.tools.reader.reader_types.reader_error.call(null, a, "Invalid character constant: \\u", b) : b;
    }
    if (cljs.core.truth_(goog.string.startsWith(b, "o"))) {
      --c;
      if (3 < c) {
        return cljs.tools.reader.reader_types.reader_error.call(null, a, "Invalid octal escape sequence length: ", c);
      }
      b = cljs.tools.reader.edn.read_unicode_char.call(null, b, 1, c, 8);
      return 255 < (b | 0) ? cljs.tools.reader.reader_types.reader_error.call(null, a, "Octal escape sequence must be in range [0, 377]") : b;
    }
    return cljs.tools.reader.reader_types.reader_error.call(null, a, "Unsupported character: \\", b);
  }
  return cljs.tools.reader.reader_types.reader_error.call(null, a, "EOF while reading character");
};
cljs.tools.reader.edn.read_delimited = function(a, b, c) {
  var d = cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, b)) ? cljs.tools.reader.reader_types.get_line_number.call(null, b) : null;
  a = cljs.tools.reader.impl.utils.char$.call(null, a);
  for (var e = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);;) {
    var f = cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, b);
    cljs.core.truth_(f) || cljs.tools.reader.reader_types.reader_error.call(null, b, "EOF while reading", cljs.core.truth_(d) ? [cljs.core.str(", starting at line"), cljs.core.str(d)].join("") : null);
    if (cljs.core._EQ_.call(null, a, cljs.tools.reader.impl.utils.char$.call(null, f))) {
      return cljs.core.persistent_BANG_.call(null, e);
    }
    var g = cljs.tools.reader.edn.macros.call(null, f), g = cljs.core.truth_(g) ? g.call(null, b, f, c) : cljs.tools.reader.edn.read.call(null, function() {
      cljs.tools.reader.reader_types.unread.call(null, b, f);
      return b;
    }(), !0, null, c), e = g !== b ? cljs.core.conj_BANG_.call(null, e, g) : e;
  }
};
cljs.tools.reader.edn.read_list = function(a, b, c) {
  a = cljs.tools.reader.edn.read_delimited.call(null, ")", a, c);
  return cljs.core.empty_QMARK_.call(null, a) ? cljs.core.List.EMPTY : cljs.core.apply.call(null, cljs.core.list, a);
};
cljs.tools.reader.edn.read_vector = function(a, b, c) {
  return cljs.tools.reader.edn.read_delimited.call(null, "]", a, c);
};
cljs.tools.reader.edn.read_map = function(a, b, c) {
  b = cljs.core.to_array.call(null, cljs.tools.reader.edn.read_delimited.call(null, "}", a, c));
  1 === (b.length & 1) && cljs.tools.reader.reader_types.reader_error.call(null, a, "Map literal must contain an even number of forms");
  return cljs.core.apply.call(null, cljs.core.hash_map, b);
};
cljs.tools.reader.edn.read_number = function(a, b, c) {
  for (var d = function() {
    var a = new goog.string.StringBuffer;
    a.append(b);
    return a;
  }(), e = cljs.tools.reader.reader_types.read_char.call(null, a);;) {
    if (cljs.core.truth_(function() {
      var a = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, e);
      if (a) {
        return a;
      }
      a = cljs.tools.reader.edn.macros.call(null, e);
      return cljs.core.truth_(a) ? a : null == e;
    }())) {
      c = "" + cljs.core.str(d);
      cljs.tools.reader.reader_types.unread.call(null, a, e);
      var f = cljs.tools.reader.impl.commons.match_number.call(null, c);
      return cljs.core.truth_(f) ? f : cljs.tools.reader.reader_types.reader_error.call(null, a, "Invalid number format [", c, "]");
    }
    c = function() {
      var a = d;
      a.append(e);
      return a;
    }();
    f = cljs.tools.reader.reader_types.read_char.call(null, a);
    d = c;
    e = f;
  }
};
cljs.tools.reader.edn.escape_char = function(a, b) {
  var c = cljs.tools.reader.reader_types.read_char.call(null, b);
  switch(c) {
    case "t":
      return "\t";
    case "r":
      return "\r";
    case "n":
      return "\n";
    case "\\":
      return "\\";
    case '"':
      return '"';
    case "b":
      return "\b";
    case "f":
      return "\f";
    case "u":
      return c = cljs.tools.reader.reader_types.read_char.call(null, b), -1 === parseInt(c | 0, 16) ? cljs.tools.reader.reader_types.reader_error.call(null, b, "Invalid unicode escape: \\u", c) : cljs.tools.reader.edn.read_unicode_char.call(null, b, c, 16, 4, !0);
    default:
      return cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, c) ? (c = cljs.tools.reader.edn.read_unicode_char.call(null, b, c, 8, 3, !1), 223 < (c | 0) ? cljs.tools.reader.reader_types.reader_error.call(null, b, "Octal escape sequence must be in range [0, 377]") : c) : cljs.tools.reader.reader_types.reader_error.call(null, b, "Unsupported escape character: \\", c);
  }
};
cljs.tools.reader.edn.read_string_STAR_ = function(a, b, c) {
  for (var d = new goog.string.StringBuffer, e = cljs.tools.reader.reader_types.read_char.call(null, a);;) {
    b = e;
    if (cljs.core._EQ_.call(null, null, b)) {
      return cljs.tools.reader.reader_types.reader_error.call(null, a, "EOF while reading string");
    }
    if (cljs.core._EQ_.call(null, "\\", b)) {
      b = function() {
        var b = d;
        b.append(cljs.tools.reader.edn.escape_char.call(null, d, a));
        return b;
      }();
    } else {
      if (cljs.core._EQ_.call(null, '"', b)) {
        return "" + cljs.core.str(d);
      }
      b = function() {
        var a = d;
        a.append(e);
        return a;
      }();
    }
    c = cljs.tools.reader.reader_types.read_char.call(null, a);
    d = b;
    e = c;
  }
};
cljs.tools.reader.edn.read_symbol = function(a, b) {
  var c = cljs.tools.reader.edn.read_token.call(null, a, b);
  if (cljs.core.truth_(c)) {
    switch(c) {
      case "nil":
        return null;
      case "true":
        return !0;
      case "false":
        return !1;
      case "/":
        return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
      case "NaN":
        return Number.NaN;
      case "-Infinity":
        return Number.NEGATIVE_INFINITY;
      case "Infinity":
      ;
      case "+Infinity":
        return Number.POSITIVE_INFINITY;
      default:
        var d;
        d = cljs.tools.reader.impl.commons.parse_symbol.call(null, c);
        d = cljs.core.truth_(d) ? cljs.core.symbol.call(null, d.call(null, 0), d.call(null, 1)) : null;
        return cljs.core.truth_(d) ? d : cljs.tools.reader.reader_types.reader_error.call(null, a, "Invalid token: ", c);
    }
  } else {
    return null;
  }
};
cljs.tools.reader.edn.read_keyword = function(a, b, c) {
  b = cljs.tools.reader.reader_types.read_char.call(null, a);
  if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, b)) {
    return cljs.tools.reader.reader_types.reader_error.call(null, a, "Invalid token: :");
  }
  b = cljs.tools.reader.edn.read_token.call(null, a, b);
  var d = cljs.tools.reader.impl.commons.parse_symbol.call(null, b);
  return cljs.core.truth_(cljs.core.truth_(d) ? -1 === b.indexOf("::") : d) ? (c = d.call(null, 0), d = d.call(null, 1), ":" === cljs.core.nth.call(null, b, 0) ? cljs.tools.reader.reader_types.reader_error.call(null, a, "Invalid token: :", b) : cljs.core.keyword.call(null, c, d)) : cljs.tools.reader.reader_types.reader_error.call(null, a, "Invalid token: :", b);
};
cljs.tools.reader.edn.wrapping_reader = function(a) {
  return function(b, c, d) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.tools.reader.edn.read.call(null, b, !0, null, d)), a);
  };
};
cljs.tools.reader.edn.read_meta = function(a, b, c) {
  b = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.edn.read.call(null, a, !0, null, c));
  cljs.core.map_QMARK_.call(null, b) || cljs.tools.reader.reader_types.reader_error.call(null, a, "Metadata must be Symbol, Keyword, String or Map");
  c = cljs.tools.reader.edn.read.call(null, a, !0, null, c);
  return null != c && (c.cljs$lang$protocol_mask$partition0$ & 131072 || c.cljs$core$IMeta$) ? cljs.core.with_meta.call(null, c, cljs.core.merge.call(null, cljs.core.meta.call(null, c), b)) : cljs.tools.reader.reader_types.reader_error.call(null, a, "Metadata can only be applied to IMetas");
};
cljs.tools.reader.edn.read_set = function(a, b, c) {
  return cljs.core.set.call(null, cljs.tools.reader.edn.read_delimited.call(null, "}", a, c));
};
cljs.tools.reader.edn.read_discard = function(a, b, c) {
  cljs.tools.reader.edn.read.call(null, a, !0, null, !0);
  return a;
};
cljs.tools.reader.edn.macros = function(a) {
  switch(a) {
    case '"':
      return cljs.tools.reader.edn.read_string_STAR_;
    case ":":
      return cljs.tools.reader.edn.read_keyword;
    case ";":
      return cljs.tools.reader.impl.commons.read_comment;
    case "^":
      return cljs.tools.reader.edn.read_meta;
    case "(":
      return cljs.tools.reader.edn.read_list;
    case ")":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
    case "[":
      return cljs.tools.reader.edn.read_vector;
    case "]":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
    case "{":
      return cljs.tools.reader.edn.read_map;
    case "}":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
    case "\\":
      return cljs.tools.reader.edn.read_char_STAR_;
    case "#":
      return cljs.tools.reader.edn.read_dispatch;
    default:
      return null;
  }
};
cljs.tools.reader.edn.dispatch_macros = function(a) {
  switch(a) {
    case "^":
      return cljs.tools.reader.edn.read_meta;
    case "{":
      return cljs.tools.reader.edn.read_set;
    case "\x3c":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "Unreadable form");
    case "!":
      return cljs.tools.reader.impl.commons.read_comment;
    case "_":
      return cljs.tools.reader.edn.read_discard;
    default:
      return null;
  }
};
cljs.tools.reader.edn.read_tagged = function(a, b, c) {
  b = cljs.tools.reader.edn.read.call(null, a, !0, null, c);
  var d = cljs.tools.reader.edn.read.call(null, a, !0, null, c);
  b instanceof cljs.core.Symbol || cljs.tools.reader.reader_types.reader_error.call(null, a, "Reader tag must be a symbol");
  var e;
  e = cljs.core.get.call(null, (new cljs.core.Keyword(null, "readers", "readers", -2118263030)).cljs$core$IFn$_invoke$arity$1(c), b);
  e = cljs.core.truth_(e) ? e : cljs.tools.reader.default_data_readers.call(null, b);
  if (cljs.core.truth_(e)) {
    return e.call(null, d);
  }
  c = (new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(c);
  return cljs.core.truth_(c) ? c.call(null, b, d) : cljs.tools.reader.reader_types.reader_error.call(null, a, "No reader function for tag ", cljs.core.name.call(null, b));
};
cljs.tools.reader.edn.read = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 4:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.tools.reader.edn.read.call(null, cljs.core.PersistentArrayMap.EMPTY, a);
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "eof", "eof", -489063237)), e = !cljs.core.contains_QMARK_.call(null, c, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  return cljs.tools.reader.edn.read.call(null, b, e, d, c);
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  try {
    for (;;) {
      var e = cljs.tools.reader.reader_types.read_char.call(null, a);
      if (!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, e)) {
        if (null == e) {
          return cljs.core.truth_(b) ? cljs.tools.reader.reader_types.reader_error.call(null, a, "EOF") : c;
        }
        if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, a, e)) {
          return cljs.tools.reader.edn.read_number.call(null, a, e, d);
        }
        var f = cljs.tools.reader.edn.macros.call(null, e);
        if (cljs.core.truth_(f)) {
          var g = f.call(null, a, e, d);
          if (g !== a) {
            return g;
          }
        } else {
          return cljs.tools.reader.edn.read_symbol.call(null, a, e);
        }
      }
    }
  } catch (h) {
    if (h instanceof Error) {
      if (cljs.tools.reader.impl.utils.ex_info_QMARK_.call(null, h)) {
        b = cljs.core.ex_data.call(null, h);
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(b))) {
          throw h;
        }
        throw cljs.core.ex_info.call(null, h.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), b, cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
        a), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, a), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, a)], null) : null), h);
      }
      throw cljs.core.ex_info.call(null, h.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
      a), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, a), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, a)], null) : null), h);
    }
    throw h;
  }
};
cljs.tools.reader.edn.read.cljs$lang$maxFixedArity = 4;
cljs.tools.reader.edn.read_string = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.tools.reader.edn.read_string.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "eof", "eof", -489063237), null], null), a);
};
cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.truth_(cljs.core.truth_(b) ? cljs.core.not_EQ_.call(null, b, "") : b) ? cljs.tools.reader.edn.read.call(null, a, cljs.tools.reader.reader_types.string_push_back_reader.call(null, b)) : null;
};
cljs.tools.reader.edn.read_string.cljs$lang$maxFixedArity = 2;
clojure.set = {};
clojure.set.bubble_max_key = function(a, b) {
  var c = cljs.core.apply.call(null, cljs.core.max_key, a, b);
  return cljs.core.cons.call(null, c, cljs.core.remove.call(null, function(a) {
    return function(b) {
      return a === b;
    };
  }(c), b));
};
clojure.set.union = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.count.call(null, a) < cljs.core.count.call(null, b) ? cljs.core.reduce.call(null, cljs.core.conj, b, a) : cljs.core.reduce.call(null, cljs.core.conj, a, b);
};
clojure.set.union.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  a = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, c, b, a));
  return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, a), cljs.core.rest.call(null, a));
};
clojure.set.union.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
clojure.set.union.cljs$lang$maxFixedArity = 2;
clojure.set.intersection = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  for (;;) {
    if (cljs.core.count.call(null, b) < cljs.core.count.call(null, a)) {
      var c = a;
      a = b;
      b = c;
    } else {
      return cljs.core.reduce.call(null, function(a, b) {
        return function(a, c) {
          return cljs.core.contains_QMARK_.call(null, b, c) ? a : cljs.core.disj.call(null, a, c);
        };
      }(a, b), a, a);
    }
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  a = clojure.set.bubble_max_key.call(null, function(a) {
    return -cljs.core.count.call(null, a);
  }, cljs.core.conj.call(null, c, b, a));
  return cljs.core.reduce.call(null, clojure.set.intersection, cljs.core.first.call(null, a), cljs.core.rest.call(null, a));
};
clojure.set.intersection.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
clojure.set.intersection.cljs$lang$maxFixedArity = 2;
clojure.set.difference = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.count.call(null, a) < cljs.core.count.call(null, b) ? cljs.core.reduce.call(null, function(a, d) {
    return cljs.core.contains_QMARK_.call(null, b, d) ? cljs.core.disj.call(null, a, d) : a;
  }, a, a) : cljs.core.reduce.call(null, cljs.core.disj, a, b);
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.call(null, clojure.set.difference, a, cljs.core.conj.call(null, c, b));
};
clojure.set.difference.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
clojure.set.difference.cljs$lang$maxFixedArity = 2;
clojure.set.select = function(a, b) {
  return cljs.core.reduce.call(null, function(b, d) {
    return cljs.core.truth_(a.call(null, d)) ? b : cljs.core.disj.call(null, b, d);
  }, b, b);
};
clojure.set.project = function(a, b) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(a) {
    return cljs.core.select_keys.call(null, a, b);
  }, a));
};
clojure.set.rename_keys = function(a, b) {
  return cljs.core.reduce.call(null, function(b, d) {
    var e = cljs.core.nth.call(null, d, 0, null), f = cljs.core.nth.call(null, d, 1, null);
    return cljs.core.contains_QMARK_.call(null, a, e) ? cljs.core.assoc.call(null, b, f, cljs.core.get.call(null, a, e)) : b;
  }, cljs.core.apply.call(null, cljs.core.dissoc, a, cljs.core.keys.call(null, b)), b);
};
clojure.set.rename = function(a, b) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(a) {
    return clojure.set.rename_keys.call(null, a, b);
  }, a));
};
clojure.set.index = function(a, b) {
  return cljs.core.reduce.call(null, function(a, d) {
    var e = cljs.core.select_keys.call(null, d, b);
    return cljs.core.assoc.call(null, a, e, cljs.core.conj.call(null, cljs.core.get.call(null, a, e, cljs.core.PersistentHashSet.EMPTY), d));
  }, cljs.core.PersistentArrayMap.EMPTY, a);
};
clojure.set.map_invert = function(a) {
  return cljs.core.reduce.call(null, function(a, c) {
    var d = cljs.core.nth.call(null, c, 0, null), e = cljs.core.nth.call(null, c, 1, null);
    return cljs.core.assoc.call(null, a, e, d);
  }, cljs.core.PersistentArrayMap.EMPTY, a);
};
clojure.set.join = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (cljs.core.seq.call(null, a) && cljs.core.seq.call(null, b)) {
    var c = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, a))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, b)))), d = cljs.core.count.call(null, a) <= cljs.core.count.call(null, b) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a], null), e = cljs.core.nth.call(null, 
    d, 0, null), f = cljs.core.nth.call(null, d, 1, null), g = clojure.set.index.call(null, e, c);
    return cljs.core.reduce.call(null, function(a, b, c, d, e) {
      return function(f, g) {
        var r = e.call(null, cljs.core.select_keys.call(null, g, a));
        return cljs.core.truth_(r) ? cljs.core.reduce.call(null, function(a, b, c, d, e, f) {
          return function(a, b) {
            return cljs.core.conj.call(null, a, cljs.core.merge.call(null, b, g));
          };
        }(r, a, b, c, d, e), f, r) : f;
      };
    }(c, d, e, f, g), cljs.core.PersistentHashSet.EMPTY, f);
  }
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.join.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = cljs.core.count.call(null, a) <= cljs.core.count.call(null, b) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, clojure.set.map_invert.call(null, c)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a, c], null);
  b = cljs.core.nth.call(null, a, 0, null);
  c = cljs.core.nth.call(null, a, 1, null);
  var d = cljs.core.nth.call(null, a, 2, null), e = clojure.set.index.call(null, b, cljs.core.vals.call(null, d));
  return cljs.core.reduce.call(null, function(a, b, c, d, e) {
    return function(l, n) {
      var p = e.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, n, cljs.core.keys.call(null, d)), d));
      return cljs.core.truth_(p) ? cljs.core.reduce.call(null, function(a, b, c, d, e, f) {
        return function(a, b) {
          return cljs.core.conj.call(null, a, cljs.core.merge.call(null, b, n));
        };
      }(p, a, b, c, d, e), l, p) : l;
    };
  }(a, b, c, d, e), cljs.core.PersistentHashSet.EMPTY, c);
};
clojure.set.join.cljs$lang$maxFixedArity = 3;
clojure.set.subset_QMARK_ = function(a, b) {
  return cljs.core.count.call(null, a) <= cljs.core.count.call(null, b) && cljs.core.every_QMARK_.call(null, function(a) {
    return cljs.core.contains_QMARK_.call(null, b, a);
  }, a);
};
clojure.set.superset_QMARK_ = function(a, b) {
  return cljs.core.count.call(null, a) >= cljs.core.count.call(null, b) && cljs.core.every_QMARK_.call(null, function(b) {
    return cljs.core.contains_QMARK_.call(null, a, b);
  }, b);
};
var taoensso = {truss:{}};
taoensso.truss.impl = {};
taoensso.truss.impl.rsome = function(a, b) {
  return cljs.core.reduce.call(null, function(b, d) {
    var e = a.call(null, d);
    return cljs.core.truth_(e) ? cljs.core.reduced.call(null, e) : null;
  }, null, b);
};
taoensso.truss.impl.revery_QMARK_ = function(a, b) {
  return cljs.core.reduce.call(null, function(b, d) {
    return cljs.core.truth_(a.call(null, d)) ? !0 : cljs.core.reduced.call(null, null);
  }, !0, b);
};
taoensso.truss.impl.set_STAR_ = function(a) {
  return cljs.core.set_QMARK_.call(null, a) ? a : cljs.core.set.call(null, a);
};
taoensso.truss.impl.ks_EQ_ = function(a, b) {
  return cljs.core._EQ_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, b)), taoensso.truss.impl.set_STAR_.call(null, a));
};
taoensso.truss.impl.ks_LT__EQ_ = function(a, b) {
  return clojure.set.subset_QMARK_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, b)), taoensso.truss.impl.set_STAR_.call(null, a));
};
taoensso.truss.impl.ks_GT__EQ_ = function(a, b) {
  return clojure.set.superset_QMARK_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, b)), taoensso.truss.impl.set_STAR_.call(null, a));
};
taoensso.truss.impl.ks_nnil_QMARK_ = function(a, b) {
  return taoensso.truss.impl.revery_QMARK_.call(null, function(a) {
    return null != cljs.core.get.call(null, b, a);
  }, a);
};
taoensso.truss.impl.now_dt = function() {
  return new Date;
};
taoensso.truss.impl._STAR___QMARK_data_STAR_ = null;
taoensso.truss.impl.non_throwing = function(a) {
  return function(b) {
    try {
      return a.call(null, b);
    } catch (c) {
      if (c instanceof Error) {
        return null;
      }
      throw c;
    }
  };
};
taoensso.truss.impl._invar_pred = function taoensso$truss$impl$_invar_pred(b) {
  if (cljs.core.vector_QMARK_.call(null, b)) {
    var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null), e = cljs.core.nth.call(null, b, 2, null), f = cljs.core.nthnext.call(null, b, 3), g = c instanceof cljs.core.Keyword ? c.fqn : null;
    switch(g) {
      case "el":
        return function(b, c, d, e, f, g) {
          return function(b) {
            return cljs.core.contains_QMARK_.call(null, taoensso.truss.impl.set_STAR_.call(null, e), b);
          };
        }(g, b, c, d, e, f);
      case "ks-nnil?":
        return function(b, c, d, e, f, g) {
          return function(b) {
            return taoensso.truss.impl.ks_nnil_QMARK_.call(null, e, b);
          };
        }(g, b, c, d, e, f);
      case "ks\x3c\x3d":
        return function(b, c, d, e, f, g) {
          return function(b) {
            return taoensso.truss.impl.ks_LT__EQ_.call(null, e, b);
          };
        }(g, b, c, d, e, f);
      case "or":
        return function(b, c, d, e, f, g) {
          return function(q) {
            var r = cljs.core.truth_(e) ? taoensso.truss.impl.non_throwing.call(null, taoensso$truss$impl$_invar_pred.call(null, e)).call(null, q) : null;
            if (cljs.core.truth_(r)) {
              return r;
            }
            var t = cljs.core.truth_(f) ? taoensso.truss.impl.non_throwing.call(null, taoensso$truss$impl$_invar_pred.call(null, f)).call(null, q) : null;
            return cljs.core.truth_(t) ? t : taoensso.truss.impl.rsome.call(null, function(b, c, d, e, f, g, h, k) {
              return function(b) {
                return taoensso.truss.impl.non_throwing.call(null, taoensso$truss$impl$_invar_pred.call(null, b)).call(null, q);
              };
            }(t, r, b, c, d, e, f, g), g);
          };
        }(g, b, c, d, e, f);
      case "not":
        return function(b, c, d, e, f, g) {
          return function(q) {
            var r = cljs.core.not.call(null, e) ? !0 : cljs.core.not.call(null, taoensso$truss$impl$_invar_pred.call(null, e).call(null, q));
            if (r) {
              var t = cljs.core.not.call(null, f) ? !0 : cljs.core.not.call(null, taoensso$truss$impl$_invar_pred.call(null, f).call(null, q));
              return t ? taoensso.truss.impl.revery_QMARK_.call(null, function(b, c, d, e, f, g, h, k) {
                return function(b) {
                  return cljs.core.not.call(null, taoensso$truss$impl$_invar_pred.call(null, b).call(null, q));
                };
              }(t, r, b, c, d, e, f, g), g) : t;
            }
            return r;
          };
        }(g, b, c, d, e, f);
      case "ks\x3d":
        return function(b, c, d, e, f, g) {
          return function(b) {
            return taoensso.truss.impl.ks_EQ_.call(null, e, b);
          };
        }(g, b, c, d, e, f);
      case "and":
        return function(b, c, d, e, f, g) {
          return function(q) {
            var r = cljs.core.not.call(null, e) ? !0 : taoensso$truss$impl$_invar_pred.call(null, e).call(null, q);
            if (cljs.core.truth_(r)) {
              var t = cljs.core.not.call(null, f) ? !0 : taoensso$truss$impl$_invar_pred.call(null, f).call(null, q);
              return cljs.core.truth_(t) ? taoensso.truss.impl.revery_QMARK_.call(null, function(b, c, d, e, f, g, h, k) {
                return function(b) {
                  return taoensso$truss$impl$_invar_pred.call(null, b).call(null, q);
                };
              }(t, r, b, c, d, e, f, g), g) : t;
            }
            return r;
          };
        }(g, b, c, d, e, f);
      case "ks\x3e\x3d":
        return function(b, c, d, e, f, g) {
          return function(b) {
            return taoensso.truss.impl.ks_GT__EQ_.call(null, e, b);
          };
        }(g, b, c, d, e, f);
      case "not-in":
        return function(b, c, d, e, f, g) {
          return function(b) {
            return !cljs.core.contains_QMARK_.call(null, taoensso.truss.impl.set_STAR_.call(null, e), b);
          };
        }(g, b, c, d, e, f);
      case "not-el":
        return function(b, c, d, e, f, g) {
          return function(b) {
            return !cljs.core.contains_QMARK_.call(null, taoensso.truss.impl.set_STAR_.call(null, e), b);
          };
        }(g, b, c, d, e, f);
      case "set\x3c\x3d":
        return function(b, c, d, e, f, g) {
          return function(b) {
            return clojure.set.subset_QMARK_.call(null, taoensso.truss.impl.set_STAR_.call(null, b), taoensso.truss.impl.set_STAR_.call(null, e));
          };
        }(g, b, c, d, e, f);
      case "set\x3e\x3d":
        return function(b, c, d, e, f, g) {
          return function(b) {
            return clojure.set.superset_QMARK_.call(null, taoensso.truss.impl.set_STAR_.call(null, b), taoensso.truss.impl.set_STAR_.call(null, e));
          };
        }(g, b, c, d, e, f);
      case "set\x3d":
        return function(b, c, d, e, f, g) {
          return function(b) {
            return cljs.core._EQ_.call(null, taoensso.truss.impl.set_STAR_.call(null, b), taoensso.truss.impl.set_STAR_.call(null, e));
          };
        }(g, b, c, d, e, f);
      case "in":
        return function(b, c, d, e, f, g) {
          return function(b) {
            return cljs.core.contains_QMARK_.call(null, taoensso.truss.impl.set_STAR_.call(null, e), b);
          };
        }(g, b, c, d, e, f);
      default:
        throw Error([cljs.core.str("No matching clause: "), cljs.core.str(c)].join(""));;
    }
  } else {
    return b;
  }
};
taoensso.truss.impl._assertion_error = function(a) {
  return Error(a);
};
taoensso.truss.impl._invar_undefined_val = new cljs.core.Keyword("invariant", "undefined-val", "invariant/undefined-val", -906909938);
taoensso.truss.impl._invar_violation_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return taoensso.truss.impl._invar_violation_BANG_.cljs$core$IFn$_invoke$arity$0();
    case 7:
      return taoensso.truss.impl._invar_violation_BANG_.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
taoensso.truss.impl._invar_violation_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  throw cljs.core.ex_info.call(null, "Invariant violation", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "invariant-violation?", "invariant-violation?", -356256378), !0], null));
};
taoensso.truss.impl._invar_violation_BANG_.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var h = function(a, b, c, d) {
    return [cljs.core.str("Invariant violation in `"), cljs.core.str(a), cljs.core.str(":"), cljs.core.str(b), cljs.core.str("` [pred-form, val]:"), cljs.core.str("\n ["), cljs.core.str(c), cljs.core.str(", "), cljs.core.str(d), cljs.core.str("]")].join("");
  }, k = cljs.core.truth_(c) ? c : "?", m = "" + cljs.core.str(d), l = cljs.core._EQ_.call(null, e, taoensso.truss.impl._invar_undefined_val), n = l ? "\x3cundefined\x3e" : "" + cljs.core.str(cljs.core.truth_(e) ? e : "\x3cnil\x3e");
  d = (new cljs.core.Keyword(null, "invariant-violation?", "invariant-violation?", -356256378)).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data.call(null, f));
  var p = cljs.core.truth_(d) ? null : f, q = cljs.core.truth_(p) ? "" + cljs.core.str(p) : null;
  f = function() {
    var a = h.call(null, b, k, m, n);
    return cljs.core.not.call(null, p) ? a : l ? [cljs.core.str(a), cljs.core.str("\n`val` error: "), cljs.core.str(q)].join("") : [cljs.core.str(a), cljs.core.str("\n`pred-form` error: "), cljs.core.str(q)].join("");
  }();
  d = function() {
    if (cljs.core.truth_(g)) {
      try {
        return g.call(null);
      } catch (a) {
        if (a instanceof Error) {
          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "data-error", "data-error", -1058016301), a], null);
        }
        throw a;
      }
    } else {
      return null;
    }
  }();
  throw cljs.core.ex_info.call(null, f, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "*?data*", "*?data*", 1047537922), new cljs.core.Keyword(null, "elidable?", "elidable?", 248362249), new cljs.core.Keyword(null, "dt", "dt", -368444759), new cljs.core.Keyword(null, "val", "val", 128701612), new cljs.core.Keyword(null, "ns-str", "ns-str", -2062616499), new cljs.core.Keyword(null, "val-type", "val-type", -279850094), new cljs.core.Keyword(null, "?err", "?err", 549653299), new cljs.core.Keyword(null, 
  "*assert*", "*assert*", -160895053), new cljs.core.Keyword(null, "?data", "?data", -9471433), new cljs.core.Keyword(null, "?line", "?line", -631853385), new cljs.core.Keyword(null, "form-str", "form-str", 871608859)], [taoensso.truss.impl._STAR___QMARK_data_STAR_, a, taoensso.truss.impl.now_dt.call(null), l ? new cljs.core.Symbol("undefined", "threw-error", "undefined/threw-error", -2085122794, null) : e, b, l ? new cljs.core.Symbol("undefined", "threw-error", "undefined/threw-error", -2085122794, 
  null) : cljs.core.type.call(null, e), p, cljs.core._STAR_assert_STAR_, d, c, m]));
};
taoensso.truss.impl._invar_violation_BANG_.cljs$lang$maxFixedArity = 7;
taoensso.truss.get_dynamic_assertion_data = function() {
  return taoensso.truss.impl._STAR___QMARK_data_STAR_;
};
goog.string.format = function(a, b) {
  var c = Array.prototype.slice.call(arguments), d = c.shift();
  if ("undefined" == typeof d) {
    throw Error("[goog.string.format] Template required");
  }
  return d.replace(/%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g, function(a, b, d, h, k, m, l, n) {
    if ("%" == m) {
      return "%";
    }
    var p = c.shift();
    if ("undefined" == typeof p) {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = p;
    return goog.string.format.demuxes_[m].apply(null, arguments);
  });
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_.s = function(a, b, c, d, e, f, g, h) {
  return isNaN(c) || "" == c || a.length >= c ? a : a = -1 < b.indexOf("-", 0) ? a + goog.string.repeat(" ", c - a.length) : goog.string.repeat(" ", c - a.length) + a;
};
goog.string.format.demuxes_.f = function(a, b, c, d, e, f, g, h) {
  d = a.toString();
  isNaN(e) || "" == e || (d = parseFloat(a).toFixed(e));
  f = 0 > a ? "-" : 0 <= b.indexOf("+") ? "+" : 0 <= b.indexOf(" ") ? " " : "";
  0 <= a && (d = f + d);
  if (isNaN(c) || d.length >= c) {
    return d;
  }
  d = isNaN(e) ? Math.abs(a).toString() : Math.abs(a).toFixed(e);
  a = c - d.length - f.length;
  0 <= b.indexOf("-", 0) ? d = f + d + goog.string.repeat(" ", a) : (b = 0 <= b.indexOf("0", 0) ? "0" : " ", d = f + goog.string.repeat(b, a) + d);
  return d;
};
goog.string.format.demuxes_.d = function(a, b, c, d, e, f, g, h) {
  return goog.string.format.demuxes_.f(parseInt(a, 10), b, c, d, 0, f, g, h);
};
goog.string.format.demuxes_.i = goog.string.format.demuxes_.d;
goog.string.format.demuxes_.u = goog.string.format.demuxes_.d;
taoensso.encore = {};
taoensso.encore.as__QMARK_int;
taoensso.encore.encore_version = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 33, 0], null);
taoensso.encore.assert_min_encore_version = function(a) {
  var b = taoensso.encore.encore_version, c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null), e = cljs.core.nth.call(null, b, 2, null);
  a = cljs.core.vector_QMARK_.call(null, a) ? a : cljs.core.re_seq.call(null, /\d+/, "" + cljs.core.str(a));
  var f = cljs.core.nth.call(null, a, 0, null), g = cljs.core.nth.call(null, a, 1, null), h = cljs.core.nth.call(null, a, 2, null), f = cljs.core.mapv.call(null, function(a, b, c, d, e, f, g, h) {
    return function(a) {
      a = taoensso.encore.as__QMARK_int.call(null, a);
      return cljs.core.truth_(a) ? a : 0;
    };
  }(b, c, d, e, a, f, g, h), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, g, h], null)), b = cljs.core.nth.call(null, f, 0, null);
  a = cljs.core.nth.call(null, f, 1, null);
  f = cljs.core.nth.call(null, f, 2, null);
  if (c > b || cljs.core._EQ_.call(null, c, b) && (d > a || cljs.core._EQ_.call(null, d, a) && e >= f)) {
    return null;
  }
  throw cljs.core.ex_info.call(null, "" + cljs.core.str("Insufficient com.taoensso/encore version. You may have a Leiningen dependency conflict (see http://goo.gl/qBbLvC for solution)."), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-version", "min-version", -1697197126), clojure.string.join.call(null, ".", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a, f], null)), new cljs.core.Keyword(null, "your-version", "your-version", -351781765), 
  clojure.string.join.call(null, ".", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d, e], null))], null));
};
taoensso.encore.name_with_attrs = function(a, b) {
  var c = "string" === typeof cljs.core.first.call(null, b) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, b), cljs.core.next.call(null, b)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, b], null), d = cljs.core.nth.call(null, c, 0, null), c = cljs.core.nth.call(null, c, 1, null), c = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, c)) ? new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, c), cljs.core.next.call(null, c)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.EMPTY, c], null), e = cljs.core.nth.call(null, c, 0, null), c = cljs.core.nth.call(null, c, 1, null), d = cljs.core.truth_(d) ? cljs.core.assoc.call(null, e, new cljs.core.Keyword(null, "doc", "doc", 1913296891), d) : e, d = cljs.core.truth_(cljs.core.meta.call(null, a)) ? 
  cljs.core.conj.call(null, cljs.core.meta.call(null, a), d) : d;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta.call(null, a, d), c], null);
};
taoensso.encore.get_dynamic_assertion_data = function() {
  return taoensso.truss.get_dynamic_assertion_data.call(null);
};
taoensso.encore.map_keys;
taoensso.encore.kw_identical_QMARK_;
taoensso.encore.read_edn = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return taoensso.encore.read_edn.call(null, null, a);
};
taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null == b || "" === b) {
    return null;
  }
  if ("string" !== typeof b) {
    throw cljs.core.ex_info.call(null, "`read-edn` attempt against non-nil, non-string arg", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arg", "arg", -1747261837), b, new cljs.core.Keyword(null, "type", "type", 1174270348), cljs.core.type.call(null, b)], null));
  }
  var c = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "readers", "readers", -2118263030), new cljs.core.Keyword("taoensso.encore", "dynamic", "taoensso.encore/dynamic", -1726758399)), d = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "default", "default", -1987822328), new cljs.core.Keyword("taoensso.encore", "dynamic", "taoensso.encore/dynamic", -1726758399)), c = cljs.core.not.call(null, taoensso.encore.kw_identical_QMARK_.call(null, c, new cljs.core.Keyword("taoensso.encore", 
  "dynamic", "taoensso.encore/dynamic", -1726758399))) ? c : taoensso.encore.map_keys.call(null, cljs.core.symbol, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_)), d = cljs.core.not.call(null, taoensso.encore.kw_identical_QMARK_.call(null, d, new cljs.core.Keyword("taoensso.encore", "dynamic", "taoensso.encore/dynamic", -1726758399))) ? d : cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_), d = cljs.core.merge.call(null, a, new cljs.core.PersistentArrayMap(null, 
  2, [new cljs.core.Keyword(null, "readers", "readers", -2118263030), c, new cljs.core.Keyword(null, "default", "default", -1987822328), d], null));
  return cljs.tools.reader.edn.read_string.call(null, d, b);
};
taoensso.encore.read_edn.cljs$lang$maxFixedArity = 2;
taoensso.encore.pr_edn = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return taoensso.encore.pr_edn.call(null, null, a);
};
taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core._STAR_print_level_STAR_, d = cljs.core._STAR_print_length_STAR_;
  cljs.core._STAR_print_level_STAR_ = null;
  cljs.core._STAR_print_length_STAR_ = null;
  try {
    return cljs.core.pr_str.call(null, b);
  } finally {
    cljs.core._STAR_print_length_STAR_ = d, cljs.core._STAR_print_level_STAR_ = c;
  }
};
taoensso.encore.pr_edn.cljs$lang$maxFixedArity = 2;
taoensso.encore.error_QMARK_ = function(a) {
  return a instanceof Error;
};
taoensso.encore.error_data = function(a) {
  var b;
  b = cljs.core.ex_data.call(null, a);
  b = cljs.core.truth_(b) ? b : a instanceof Error ? cljs.core.PersistentArrayMap.EMPTY : null;
  return cljs.core.truth_(b) ? cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "err-type", "err-type", -116717722), cljs.core.type.call(null, a), new cljs.core.Keyword(null, "err-msg", "err-msg", -1158512684), a.message, new cljs.core.Keyword(null, "err-cause", "err-cause", 897008749), a.cause], null), b) : null;
};
taoensso.encore.kw_identical_QMARK_ = cljs.core.keyword_identical_QMARK_;
taoensso.encore.stringy_QMARK_ = function(a) {
  return a instanceof cljs.core.Keyword || "string" === typeof a;
};
taoensso.encore.atom_QMARK_ = function(a) {
  return a instanceof cljs.core.Atom;
};
taoensso.encore.named_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition1$ & 4096 || a.cljs$core$INamed$ ? !0 : !1 : !1;
};
taoensso.encore.chan_QMARK_ = function(a) {
  return a instanceof cljs.core.async.impl.channels.ManyToManyChannel;
};
taoensso.encore.lazy_seq_QMARK_ = function(a) {
  return a instanceof cljs.core.LazySeq;
};
taoensso.encore.re_pattern_QMARK_ = function(a) {
  return a instanceof RegExp;
};
taoensso.encore.nnil_QMARK_ = function(a) {
  return null != a;
};
taoensso.encore.nblank_QMARK_ = function(a) {
  return !clojure.string.blank_QMARK_.call(null, a);
};
taoensso.encore.nneg_QMARK_ = function(a) {
  return !(0 > a);
};
taoensso.encore.pos_int_QMARK_ = function(a) {
  return cljs.core.integer_QMARK_.call(null, a) && 0 < a;
};
taoensso.encore.nneg_int_QMARK_ = function(a) {
  return cljs.core.integer_QMARK_.call(null, a) && !(0 > a);
};
taoensso.encore.nvec_QMARK_ = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) && cljs.core._EQ_.call(null, cljs.core.count.call(null, b), a);
};
taoensso.encore.set_STAR_;
taoensso.encore.udt_QMARK_ = taoensso.encore.nneg_int_QMARK_;
taoensso.encore.vec2_QMARK_ = function(a) {
  return taoensso.encore.nvec_QMARK_.call(null, 2, a);
};
taoensso.encore.vec3_QMARK_ = function(a) {
  return taoensso.encore.nvec_QMARK_.call(null, 3, a);
};
taoensso.encore.distinct_elements_QMARK_ = function(a) {
  return cljs.core.set_QMARK_.call(null, a) || cljs.core._EQ_.call(null, cljs.core.count.call(null, a), cljs.core.count.call(null, taoensso.encore.set_STAR_.call(null, a)));
};
taoensso.encore.nblank_str_QMARK_ = function(a) {
  return "string" === typeof a && !clojure.string.blank_QMARK_.call(null, a);
};
taoensso.encore.nneg_num_QMARK_ = function(a) {
  return "number" === typeof a && !(0 > a);
};
taoensso.encore.pos_num_QMARK_ = function(a) {
  return "number" === typeof a && 0 < a;
};
taoensso.encore.zero_num_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, 0, a);
};
taoensso.encore.as__QMARK_nblank = function(a) {
  return "string" === typeof a ? clojure.string.blank_QMARK_.call(null, a) ? null : a : null;
};
taoensso.encore.as__QMARK_kw = function(a) {
  return a instanceof cljs.core.Keyword ? a : "string" === typeof a ? cljs.core.keyword.call(null, a) : null;
};
taoensso.encore.as__QMARK_name = function(a) {
  return cljs.core.truth_(taoensso.encore.named_QMARK_.call(null, a)) ? cljs.core.name.call(null, a) : "string" === typeof a ? a : null;
};
taoensso.encore.as__QMARK_qname = function(a) {
  if (cljs.core.truth_(taoensso.encore.named_QMARK_.call(null, a))) {
    var b = cljs.core.name.call(null, a);
    a = cljs.core.namespace.call(null, a);
    return cljs.core.truth_(a) ? [cljs.core.str(a), cljs.core.str("/"), cljs.core.str(b)].join("") : b;
  }
  return "string" === typeof a ? a : null;
};
taoensso.encore.as__QMARK_int = function(a) {
  return null == a ? null : "number" === typeof a ? cljs.core.long$.call(null, a) : "string" === typeof a ? (a = parseInt(a, 10), cljs.core.truth_(isNaN(a)) ? null : a) : null;
};
taoensso.encore.as__QMARK_float = function(a) {
  return null == a ? null : "number" === typeof a ? a : "string" === typeof a ? (a = parseFloat(a), cljs.core.truth_(isNan(a)) ? null : a) : null;
};
taoensso.encore.as__QMARK_bool = function(a) {
  return null == a ? null : !0 === a || !1 === a ? a : cljs.core._EQ_.call(null, a, 0) || cljs.core._EQ_.call(null, a, "false") || cljs.core._EQ_.call(null, a, "FALSE") || cljs.core._EQ_.call(null, a, "0") ? !1 : cljs.core._EQ_.call(null, a, 1) || cljs.core._EQ_.call(null, a, "true") || cljs.core._EQ_.call(null, a, "TRUE") || cljs.core._EQ_.call(null, a, "1") ? !0 : null;
};
taoensso.encore.as__QMARK_email = function(a) {
  return cljs.core.truth_(a) ? cljs.core.re_find.call(null, /^[^\s@]+@[^\s@]+\.\S*[^\.]$/, clojure.string.trim.call(null, a)) : null;
};
taoensso.encore.as__QMARK_nemail = function(a) {
  a = taoensso.encore.as__QMARK_email.call(null, a);
  return cljs.core.truth_(a) ? clojure.string.lower_case.call(null, a) : null;
};
taoensso.encore._QMARK_as_throw = function(a, b) {
  throw cljs.core.ex_info.call(null, [cljs.core.str("nil as-?"), cljs.core.str(cljs.core.name.call(null, a)), cljs.core.str(" against arg: "), cljs.core.str(cljs.core.pr_str.call(null, b))].join(""), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arg", "arg", -1747261837), b, new cljs.core.Keyword(null, "type", "type", 1174270348), cljs.core.type.call(null, b)], null));
};
taoensso.encore.as_nblank = function(a) {
  var b = taoensso.encore.as__QMARK_nblank.call(null, a);
  return cljs.core.truth_(b) ? b : taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "nblank", "nblank", 626815585), a);
};
taoensso.encore.as_kw = function(a) {
  var b = taoensso.encore.as__QMARK_kw.call(null, a);
  return cljs.core.truth_(b) ? b : taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "kw", "kw", 1158308175), a);
};
taoensso.encore.as_name = function(a) {
  var b = taoensso.encore.as__QMARK_name.call(null, a);
  return cljs.core.truth_(b) ? b : taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), a);
};
taoensso.encore.as_qname = function(a) {
  var b = taoensso.encore.as__QMARK_qname.call(null, a);
  return cljs.core.truth_(b) ? b : taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "qname", "qname", -1983612179), a);
};
taoensso.encore.as_bool = function(a) {
  var b = taoensso.encore.as__QMARK_bool.call(null, a);
  return null != b ? b : taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "bool", "bool", 1444635321), a);
};
taoensso.encore.as_int = function(a) {
  var b = taoensso.encore.as__QMARK_int.call(null, a);
  return cljs.core.truth_(b) ? b : taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "int", "int", -1741416922), a);
};
taoensso.encore.as_float = function(a) {
  var b = taoensso.encore.as__QMARK_float.call(null, a);
  return cljs.core.truth_(b) ? b : taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "float", "float", -1732389368), a);
};
taoensso.encore.as_email = function(a) {
  var b = taoensso.encore.as__QMARK_email.call(null, a);
  return cljs.core.truth_(b) ? b : taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "email", "email", 1415816706), a);
};
taoensso.encore.as_nemail = function(a) {
  var b = taoensso.encore.as__QMARK_nemail.call(null, a);
  return cljs.core.truth_(b) ? b : taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "nemail", "nemail", 318708381), a);
};
taoensso.encore.nnil_EQ_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return taoensso.encore.nnil_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), taoensso.encore.nnil_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
taoensso.encore.nnil_EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = taoensso.encore.nnil_QMARK_.call(null, a);
  return cljs.core.truth_(c) ? cljs.core._EQ_.call(null, a, b) : c;
};
taoensso.encore.nnil_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  var d = taoensso.encore.nnil_QMARK_.call(null, a);
  return cljs.core.truth_(d) ? cljs.core.apply.call(null, cljs.core._EQ_, a, b, c) : d;
};
taoensso.encore.nnil_EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return taoensso.encore.nnil_EQ_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
taoensso.encore.nnil_EQ_.cljs$lang$maxFixedArity = 2;
taoensso.encore.without_meta = function(a) {
  return cljs.core.truth_(cljs.core.meta.call(null, a)) ? cljs.core.with_meta.call(null, a, null) : a;
};
taoensso.encore.qname = taoensso.encore.as_qname;
taoensso.encore.explode_keyword = function(a) {
  return clojure.string.split.call(null, taoensso.encore.qname.call(null, a), /[\.\/]/);
};
taoensso.encore.merge_keywords = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.merge_keywords.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.merge_keywords.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.reduce.call(null, function(a, b) {
    return function(a, b) {
      return cljs.core.truth_(b) ? cljs.core.into.call(null, a, taoensso.encore.explode_keyword.call(null, b)) : a;
    };
  }(b, c), cljs.core.PersistentVector.EMPTY, a);
  if (cljs.core.empty_QMARK_.call(null, d)) {
    return null;
  }
  if (cljs.core.truth_(c)) {
    return cljs.core.keyword.call(null, clojure.string.join.call(null, ".", d));
  }
  c = cljs.core.pop.call(null, d);
  return cljs.core.keyword.call(null, cljs.core.empty_QMARK_.call(null, c) ? null : clojure.string.join.call(null, ".", c), cljs.core.peek.call(null, d));
};
taoensso.encore.merge_keywords.cljs$lang$maxFixedArity = 1;
taoensso.encore.merge_keywords.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.merge_keywords.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.clamp = function(a, b, c) {
  return c < a ? a : c > b ? b : c;
};
taoensso.encore.pow = function(a, b) {
  return Math.pow(a, b);
};
taoensso.encore.abs = function(a) {
  return 0 > a ? -a : a;
};
taoensso.encore.round_STAR_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return taoensso.encore.round_STAR_.call(null, new cljs.core.Keyword(null, "round", "round", 2009433328), null, a);
};
taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return taoensso.encore.round_STAR_.call(null, a, null, b);
};
taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  b = cljs.core.truth_(b) ? Math.pow(10, b) : null;
  var d = cljs.core.not.call(null, b) ? c : c * b;
  c = function() {
    switch(a instanceof cljs.core.Keyword ? a.fqn : null) {
      case "round":
        return Math.round(d);
      case "floor":
        return Math.floor(d);
      case "ceil":
        return Math.ceil(d);
      case "trunc":
        return cljs.core.long$.call(null, d);
      default:
        throw cljs.core.ex_info.call(null, "Unknown round type", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), a], null));;
    }
  }();
  return cljs.core.not.call(null, b) ? cljs.core.long$.call(null, c) : c / b;
};
taoensso.encore.round_STAR_.cljs$lang$maxFixedArity = 3;
taoensso.encore.round0 = function(a) {
  return Math.round(a);
};
taoensso.encore.round1 = function(a) {
  return Math.round(10 * a) / 10;
};
taoensso.encore.round2 = function(a) {
  return Math.round(100 * a) / 100;
};
taoensso.encore.exp_backoff = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.exp_backoff.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.exp_backoff.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), c = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "min", "min", 444991522)), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "max", "max", 61366548)), c = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "factor", "factor", -2103172748), 1E3), f = Math.pow(2, a - 1), g = .5 * (f + cljs.core.rand.call(null, 
  f)) * c;
  return cljs.core.long$.call(null, function() {
    var a = cljs.core.truth_(d) ? function() {
      var a = cljs.core.long$.call(null, d), b = cljs.core.long$.call(null, g);
      return a > b ? a : b;
    }() : g;
    return cljs.core.truth_(e) ? function() {
      var b = cljs.core.long$.call(null, e), c = cljs.core.long$.call(null, a);
      return b < c ? b : c;
    }() : a;
  }());
};
taoensso.encore.exp_backoff.cljs$lang$maxFixedArity = 1;
taoensso.encore.exp_backoff.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.exp_backoff.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.now_dt = function() {
  return new Date;
};
taoensso.encore.now_udt = function() {
  return (new Date).getTime();
};
taoensso.encore.secs__GT_ms = function(a) {
  return 1E3 * cljs.core.long$.call(null, a);
};
taoensso.encore.ms__GT_secs = function(a) {
  return cljs.core.quot.call(null, cljs.core.long$.call(null, a), 1E3);
};
taoensso.encore.ms = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(b);
};
taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "years", "years", -1298579689)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "months", "months", -45571637)), e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125)), f = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "days", "days", -1394072564)), 
  g = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "hours", "hours", 58380855)), h = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "mins", "mins", 467369676)), k = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "secs", "secs", 1532330091)), m = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "msecs", "msecs", 1711980553)), l = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ms", "ms", -1152709733));
  if (!cljs.core.truth_(cljs.core.mapv.call(null, function(a, b, c, d, e, f, g, h, k, l, m, B) {
    return function(a) {
      try {
        return cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null, "msecs", "msecs", 1711980553), null, new cljs.core.Keyword(null, "secs", "secs", 1532330091), null, new cljs.core.Keyword(null, "months", "months", -45571637), null, new cljs.core.Keyword(null, "days", "days", -1394072564), null, new cljs.core.Keyword(null, "mins", "mins", 467369676), null, new cljs.core.Keyword(null, "hours", "hours", 58380855), null, new cljs.core.Keyword(null, 
        "years", "years", -1298579689), null, new cljs.core.Keyword(null, "ms", "ms", -1152709733), null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), null], null), null)).call(null, a)) ? a : taoensso.truss.impl._invar_violation_BANG_.call(null);
      } catch (b) {
        if (b instanceof Error) {
          return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "(#{:msecs :secs :months :days :mins :hours :years :ms :weeks} __in)", a, b, null);
        }
        throw b;
      }
    };
  }(a, b, b, c, d, e, f, g, h, k, m, l), cljs.core.keys.call(null, b)))) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have", "have", 574419306, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null, "msecs", "msecs", 1711980553), null, new cljs.core.Keyword(null, "secs", "secs", 1532330091), null, new cljs.core.Keyword(null, "months", "months", -45571637), null, new cljs.core.Keyword(null, "days", "days", -1394072564), 
    null, new cljs.core.Keyword(null, "mins", "mins", 467369676), null, new cljs.core.Keyword(null, "hours", "hours", 58380855), null, new cljs.core.Keyword(null, "years", "years", -1298579689), null, new cljs.core.Keyword(null, "ms", "ms", -1152709733), null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), null], null), null), new cljs.core.Keyword(null, "in", "in", -1531184865), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "opts", 
    "opts", 1795607228, null)))))].join(""));
  }
  return taoensso.encore.round_STAR_.call(null, (cljs.core.truth_(c) ? 31536E6 * c : 0) + (cljs.core.truth_(d) ? 2551392E3 * d : 0) + (cljs.core.truth_(e) ? 6048E5 * e : 0) + (cljs.core.truth_(f) ? 864E5 * f : 0) + (cljs.core.truth_(g) ? 36E5 * g : 0) + (cljs.core.truth_(h) ? 6E4 * h : 0) + (cljs.core.truth_(k) ? 1E3 * k : 0) + (cljs.core.truth_(m) ? m : 0) + (cljs.core.truth_(l) ? l : 0));
};
taoensso.encore.ms.cljs$lang$maxFixedArity = 0;
taoensso.encore.ms.cljs$lang$applyTo = function(a) {
  return taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
taoensso.encore.secs = cljs.core.comp.call(null, taoensso.encore.ms__GT_secs, taoensso.encore.ms);
taoensso.encore.vec_STAR_ = function(a) {
  return cljs.core.vector_QMARK_.call(null, a) ? a : cljs.core.vec.call(null, a);
};
taoensso.encore.set_STAR_ = function(a) {
  return cljs.core.set_QMARK_.call(null, a) ? a : cljs.core.set.call(null, a);
};
taoensso.encore.oget = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return taoensso.encore.oget.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(3), 0), taoensso.encore.oget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.truth_(a) ? goog.object.get(a, b, null) : null;
};
taoensso.encore.oget.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = taoensso.encore.oget.call(null, a, b);
  return cljs.core.truth_(a) ? goog.object.get(a, c, null) : null;
};
taoensso.encore.oget.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  a = taoensso.encore.oget.call(null, a, b, c);
  return cljs.core.truth_(a) ? cljs.core.apply.call(null, taoensso.encore.oget, a, d) : null;
};
taoensso.encore.oget.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  var d = cljs.core.next.call(null, c), c = cljs.core.first.call(null, d), d = cljs.core.next.call(null, d);
  return taoensso.encore.oget.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
taoensso.encore.oget.cljs$lang$maxFixedArity = 3;
taoensso.encore.singleton_QMARK_ = function(a) {
  return cljs.core.counted_QMARK_.call(null, a) ? cljs.core._EQ_.call(null, cljs.core.count.call(null, a), 1) : cljs.core.not.call(null, cljs.core.next.call(null, a));
};
taoensso.encore.__GT__QMARK_singleton = function(a) {
  return cljs.core.truth_(taoensso.encore.singleton_QMARK_.call(null, a)) ? cljs.core.nth.call(null, a, 0, null) : null;
};
taoensso.encore.__GT_vec = function(a) {
  return cljs.core.vector_QMARK_.call(null, a) ? a : cljs.core.sequential_QMARK_.call(null, a) ? cljs.core.vec.call(null, a) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null);
};
taoensso.encore.vnext = function(a) {
  return 1 < cljs.core.count.call(null, a) ? cljs.core.subvec.call(null, a, 1) : null;
};
taoensso.encore.vsplit_last = function(a) {
  var b = cljs.core.count.call(null, a);
  return 0 < b ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1 < b ? cljs.core.pop.call(null, a) : null, cljs.core.peek.call(null, a)], null) : null;
};
taoensso.encore.vsplit_first = function(a) {
  var b = cljs.core.count.call(null, a);
  if (0 < b) {
    var c = cljs.core.nth.call(null, a, 0, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, 1 < b ? cljs.core.subvec.call(null, a, 1) : null], null);
  }
  return null;
};
taoensso.encore.nnil_set = function(a) {
  return cljs.core.disj.call(null, taoensso.encore.set_STAR_.call(null, a), null);
};
taoensso.encore.conj_some = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.truth_(taoensso.encore.nnil_QMARK_.call(null, b)) ? cljs.core.conj.call(null, a, b) : a;
};
taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.call(null, taoensso.encore.conj_some, taoensso.encore.conj_some.call(null, a, b), c);
};
taoensso.encore.conj_some.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
taoensso.encore.conj_some.cljs$lang$maxFixedArity = 2;
taoensso.encore.preserve_reduced = function(a) {
  return function(b, c) {
    var d = a.call(null, b, c);
    return cljs.core.reduced_QMARK_.call(null, d) ? cljs.core.reduced.call(null, d) : d;
  };
};
taoensso.encore.run_kv_BANG_ = function(a, b) {
  cljs.core.reduce_kv.call(null, function(b, d, e) {
    return a.call(null, d, e);
  }, null, b);
  return null;
};
taoensso.encore.run_BANG__STAR_ = function(a, b) {
  cljs.core.reduce.call(null, function(b, d) {
    return a.call(null, d);
  }, null, b);
  return null;
};
taoensso.encore.rsome = function(a, b) {
  return cljs.core.reduce.call(null, function(b, d) {
    var e = a.call(null, d);
    return cljs.core.truth_(e) ? cljs.core.reduced.call(null, e) : null;
  }, null, b);
};
taoensso.encore.revery_QMARK_ = function(a, b) {
  return cljs.core.reduce.call(null, function(b, d) {
    return cljs.core.truth_(a.call(null, d)) ? !0 : cljs.core.reduced.call(null, null);
  }, !0, b);
};
taoensso.encore.ks_EQ_ = function(a, b) {
  return cljs.core._EQ_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, b)), taoensso.encore.set_STAR_.call(null, a));
};
taoensso.encore.ks_LT__EQ_ = function(a, b) {
  return clojure.set.subset_QMARK_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, b)), taoensso.encore.set_STAR_.call(null, a));
};
taoensso.encore.ks_GT__EQ_ = function(a, b) {
  return clojure.set.superset_QMARK_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, b)), taoensso.encore.set_STAR_.call(null, a));
};
taoensso.encore.ks_nnil_QMARK_ = function(a, b) {
  return taoensso.encore.revery_QMARK_.call(null, function(a) {
    return taoensso.encore.nnil_QMARK_.call(null, cljs.core.get.call(null, b, a));
  }, a);
};
taoensso.encore.update_in_STAR_ = function taoensso$encore$update_in_STAR_(b, c, d) {
  if (cljs.core.empty_QMARK_.call(null, c)) {
    return d.call(null, b);
  }
  var e = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nthnext.call(null, c, 1);
  return cljs.core.truth_(c) ? cljs.core.assoc.call(null, b, e, taoensso$encore$update_in_STAR_.call(null, cljs.core.get.call(null, b, e), c, d)) : cljs.core.assoc.call(null, b, e, d.call(null, cljs.core.get.call(null, b, e)));
};
taoensso.encore.translate_signed_idx = function(a, b) {
  if (0 <= a) {
    return a < b ? a : b;
  }
  var c = a + b;
  return 0 > c ? 0 : c;
};
taoensso.encore.sub_indexes = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return taoensso.encore.sub_indexes.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
taoensso.encore.sub_indexes.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  c = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
  var d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "max-len", "max-len", -18846016));
  c = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "end-idx", "end-idx", -85750788));
  if (!cljs.core.truth_(function() {
    try {
      return cljs.core.truth_(taoensso.truss.impl._invar_pred.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), cljs.core.nil_QMARK_, taoensso.encore.nneg_int_QMARK_], null)).call(null, d)) ? !0 : taoensso.truss.impl._invar_violation_BANG_.call(null);
    } catch (a) {
      if (a instanceof Error) {
        return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "([:or nil? nneg-int?] max-len)", d, a, null);
      }
      throw a;
    }
  }())) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "nneg-int?", "nneg-int?", 803479360, null)], null), new cljs.core.Symbol(null, "max-len", "max-len", 1621685511, 
    null))))].join(""));
  }
  var e = cljs.core.count.call(null, a), f = taoensso.encore.translate_signed_idx.call(null, b, e);
  a = cljs.core.long$.call(null, cljs.core.truth_(d) ? function() {
    var a = f + d;
    return a > e ? e : a;
  }() : cljs.core.truth_(c) ? taoensso.encore.translate_signed_idx.call(null, c, e) + 1 : e);
  return f > a ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, a], null);
};
taoensso.encore.sub_indexes.cljs$lang$maxFixedArity = 2;
taoensso.encore.sub_indexes.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return taoensso.encore.sub_indexes.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
taoensso.encore.subvec_STAR_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return taoensso.encore.subvec_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
taoensso.encore.subvec_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  c = cljs.core.nth.call(null, c, 0, null);
  if (!cljs.core.truth_(function() {
    try {
      return cljs.core.vector_QMARK_.call(null, a) ? !0 : taoensso.truss.impl._invar_violation_BANG_.call(null);
    } catch (b) {
      if (b instanceof Error) {
        return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "(vector? v)", a, b, null);
      }
      throw b;
    }
  }())) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null))))].join(""));
  }
  c = taoensso.encore.sub_indexes.call(null, a, b, new cljs.core.Keyword(null, "max-len", "max-len", -18846016), c);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  return cljs.core.subvec.call(null, a, b, c);
};
taoensso.encore.subvec_STAR_.cljs$lang$maxFixedArity = 2;
taoensso.encore.subvec_STAR_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return taoensso.encore.subvec_STAR_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
taoensso.encore.into_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return taoensso.encore.into_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return taoensso.encore.into_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
taoensso.encore.into_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.reduce.call(null, cljs.core.conj_BANG_, a, b);
};
taoensso.encore.into_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.transduce.call(null, b, cljs.core.conj_BANG_, a, c);
};
taoensso.encore.into_BANG_.cljs$lang$maxFixedArity = 3;
taoensso.encore.sentinel = {};
taoensso.encore.sentinel_QMARK_ = function(a) {
  return a === taoensso.encore.sentinel;
};
taoensso.encore.nil__GT_sentinel = function(a) {
  return null == a ? taoensso.encore.sentinel : a;
};
taoensso.encore.sentinel__GT_nil = function(a) {
  return cljs.core.truth_(taoensso.encore.sentinel_QMARK_.call(null, a)) ? null : a;
};
taoensso.encore.repeatedly_into;
taoensso.encore.top = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return taoensso.encore.top.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return taoensso.encore.top.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return taoensso.encore.top.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
taoensso.encore.top.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return taoensso.encore.top.call(null, a, cljs.core.identity, cljs.core.compare, b);
};
taoensso.encore.top.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return taoensso.encore.top.call(null, a, b, cljs.core.compare, c);
};
taoensso.encore.top.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.take.call(null, a), cljs.core.sort_by.call(null, b, c, d));
};
taoensso.encore.top.cljs$lang$maxFixedArity = 4;
taoensso.encore.Swapped = function(a, b, c, d, e) {
  this.new_val = a;
  this.return_val = b;
  this.__meta = c;
  this.__extmap = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
taoensso.encore.Swapped.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.call(null, this, b, null);
};
taoensso.encore.Swapped.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "new-val":
      return this.new_val;
    case "return-val":
      return this.return_val;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
taoensso.encore.Swapped.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#taoensso.encore.Swapped{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "new-val", "new-val", -738158599), this.new_val], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "return-val", 
  "return-val", -512772489), this.return_val], null)], null), this.__extmap));
};
taoensso.encore.Swapped.prototype.cljs$core$IIterable$ = !0;
taoensso.encore.Swapped.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "new-val", "new-val", -738158599), new cljs.core.Keyword(null, "return-val", "return-val", -512772489)], null), cljs.core._iterator.call(null, this.__extmap));
};
taoensso.encore.Swapped.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
taoensso.encore.Swapped.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new taoensso.encore.Swapped(this.new_val, this.return_val, this.__meta, this.__extmap, this.__hash);
};
taoensso.encore.Swapped.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2 + cljs.core.count.call(null, this.__extmap);
};
taoensso.encore.Swapped.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_imap.call(null, this);
};
taoensso.encore.Swapped.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  var c = this;
  return cljs.core.truth_(function() {
    if (cljs.core.truth_(b)) {
      var a = c.constructor === b.constructor;
      return a ? cljs.core.equiv_map.call(null, c, b) : a;
    }
    return b;
  }()) ? !0 : !1;
};
taoensso.encore.Swapped.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "return-val", "return-val", -512772489), null, new cljs.core.Keyword(null, "new-val", "new-val", -738158599), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new taoensso.encore.Swapped(this.new_val, this.return_val, this.__meta, 
  cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
taoensso.encore.Swapped.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "new-val", "new-val", -738158599), b)) ? new taoensso.encore.Swapped(c, this.return_val, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "return-val", "return-val", -512772489), b)) ? new taoensso.encore.Swapped(this.new_val, c, this.__meta, this.__extmap, null) : new taoensso.encore.Swapped(this.new_val, this.return_val, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
taoensso.encore.Swapped.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "new-val", "new-val", -738158599), this.new_val], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "return-val", "return-val", -512772489), this.return_val], null)], null), this.__extmap));
};
taoensso.encore.Swapped.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new taoensso.encore.Swapped(this.new_val, this.return_val, b, this.__extmap, this.__hash);
};
taoensso.encore.Swapped.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? cljs.core._assoc.call(null, this, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
taoensso.encore.Swapped.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "new-val", "new-val", 902372928, null), new cljs.core.Symbol(null, "return-val", "return-val", 1127759038, null)], null);
};
taoensso.encore.Swapped.cljs$lang$type = !0;
taoensso.encore.Swapped.cljs$lang$ctorPrSeq = function(a) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "taoensso.encore/Swapped");
};
taoensso.encore.Swapped.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "taoensso.encore/Swapped");
};
taoensso.encore.__GT_Swapped = function(a, b) {
  return new taoensso.encore.Swapped(a, b, null, null, null);
};
taoensso.encore.map__GT_Swapped = function(a) {
  return new taoensso.encore.Swapped((new cljs.core.Keyword(null, "new-val", "new-val", -738158599)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "return-val", "return-val", -512772489)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "new-val", "new-val", -738158599), new cljs.core.Keyword(null, "return-val", "return-val", -512772489)), null);
};
taoensso.encore.swapped = function(a, b) {
  return new taoensso.encore.Swapped(a, b, null, null, null);
};
taoensso.encore.swapped_QMARK_ = function(a) {
  return a instanceof taoensso.encore.Swapped;
};
taoensso.encore.swapped_STAR_ = function(a) {
  return cljs.core.truth_(taoensso.encore.swapped_QMARK_.call(null, a)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "new-val", "new-val", -738158599)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "return-val", "return-val", -512772489)).cljs$core$IFn$_invoke$arity$1(a)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, a], null);
};
taoensso.encore.dissoc_in;
taoensso.encore.swapped_STAR__in = function(a, b, c) {
  if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, c, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782)))) {
    return taoensso.encore.swapped_STAR_.call(null, taoensso.encore.dissoc_in.call(null, a, cljs.core.butlast.call(null, b), cljs.core.last.call(null, b)));
  }
  var d = cljs.core.get_in.call(null, a, b), d = taoensso.encore.swapped_STAR_.call(null, c.call(null, d));
  c = cljs.core.nth.call(null, d, 0, null);
  d = cljs.core.nth.call(null, d, 1, null);
  a = cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, c, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782))) ? taoensso.encore.dissoc_in.call(null, a, cljs.core.butlast.call(null, b), cljs.core.last.call(null, b)) : cljs.core.assoc_in.call(null, a, b, c);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, d], null);
};
taoensso.encore.replace_in_STAR_ = function(a, b, c) {
  return cljs.core.reduce.call(null, function(b, c) {
    if (cljs.core.not.call(null, c)) {
      return b;
    }
    var f = cljs.core.not.call(null, a) ? c : cljs.core.cons.call(null, a, c), g = cljs.core.nth.call(null, f, 0, null), h = cljs.core.nth.call(null, f, 1, null), f = cljs.core.nth.call(null, f, 2, null);
    switch(g instanceof cljs.core.Keyword ? g.fqn : null) {
      case "reset":
        return cljs.core.empty_QMARK_.call(null, h) ? f : cljs.core.assoc_in.call(null, b, h, f);
      case "swap":
        return null == f ? b : cljs.core.empty_QMARK_.call(null, h) ? f.call(null, b) : cljs.core.nth.call(null, taoensso.encore.swapped_STAR__in.call(null, b, h, f), 0);
      default:
        throw Error([cljs.core.str("No matching clause: "), cljs.core.str(g)].join(""));;
    }
  }, b, c);
};
taoensso.encore.replace_in = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.replace_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.replace_in.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return taoensso.encore.replace_in_STAR_.call(null, null, a, b);
};
taoensso.encore.replace_in.cljs$lang$maxFixedArity = 1;
taoensso.encore.replace_in.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.replace_in.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.swap_in_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(3), 0), taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (cljs.core.empty_QMARK_.call(null, b)) {
    for (;;) {
      var d = cljs.core.deref.call(null, a);
      b = taoensso.encore.swapped_STAR_.call(null, c.call(null, d));
      var e = cljs.core.nth.call(null, b, 0, null), f = cljs.core.nth.call(null, b, 1, null);
      if (!cljs.core.not.call(null, cljs.core.compare_and_set_BANG_.call(null, a, d, e))) {
        return f;
      }
    }
  } else {
    for (;;) {
      if (d = cljs.core.deref.call(null, a), f = taoensso.encore.swapped_STAR__in.call(null, d, b, c), e = cljs.core.nth.call(null, f, 0, null), f = cljs.core.nth.call(null, f, 1, null), !cljs.core.not.call(null, cljs.core.compare_and_set_BANG_.call(null, a, d, e))) {
        return f;
      }
    }
  }
};
taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  if (!cljs.core.truth_(function() {
    var a;
    try {
      a = cljs.core.count.call(null, d);
    } catch (b) {
      if (b instanceof Error) {
        a = taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "(even? (count more))", taoensso.truss.impl._invar_undefined_val, b, null);
      } else {
        throw b;
      }
    }
    try {
      return cljs.core.even_QMARK_.call(null, a) ? !0 : taoensso.truss.impl._invar_violation_BANG_.call(null);
    } catch (b) {
      if (b instanceof Error) {
        return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "(even? (count more))", a, b, null);
      }
      throw b;
    }
  }())) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "more", "more", -418290273, null)))))].join(""));
  }
  for (b = cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c], null)], null), cljs.core.partition.call(null, 2, d));;) {
    c = cljs.core.deref.call(null, a);
    var e = taoensso.encore.replace_in_STAR_.call(null, new cljs.core.Keyword(null, "swap", "swap", 228675637), c, b);
    if (!cljs.core.not.call(null, cljs.core.compare_and_set_BANG_.call(null, a, c, e))) {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "old", "old", -1825222690), c, new cljs.core.Keyword(null, "new", "new", -2085437848), e], null);
    }
  }
};
taoensso.encore.swap_in_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  var d = cljs.core.next.call(null, c), c = cljs.core.first.call(null, d), d = cljs.core.next.call(null, d);
  return taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
taoensso.encore.swap_in_BANG_.cljs$lang$maxFixedArity = 3;
taoensso.encore.reset_in_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(3), 0), taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.empty_QMARK_.call(null, b) ? cljs.core.reset_BANG_.call(null, a, c) : cljs.core.swap_BANG_.call(null, a, function(a) {
    return cljs.core.assoc_in.call(null, a, b, c);
  });
};
taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  if (!cljs.core.truth_(function() {
    var a;
    try {
      a = cljs.core.count.call(null, d);
    } catch (b) {
      if (b instanceof Error) {
        a = taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "(even? (count more))", taoensso.truss.impl._invar_undefined_val, b, null);
      } else {
        throw b;
      }
    }
    try {
      return cljs.core.even_QMARK_.call(null, a) ? !0 : taoensso.truss.impl._invar_violation_BANG_.call(null);
    } catch (b) {
      if (b instanceof Error) {
        return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "(even? (count more))", a, b, null);
      }
      throw b;
    }
  }())) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "more", "more", -418290273, null)))))].join(""));
  }
  for (b = cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c], null)], null), cljs.core.partition.call(null, 2, d));;) {
    c = cljs.core.deref.call(null, a);
    var e = taoensso.encore.replace_in_STAR_.call(null, new cljs.core.Keyword(null, "reset", "reset", -800929946), c, b);
    if (!cljs.core.not.call(null, cljs.core.compare_and_set_BANG_.call(null, a, c, e))) {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "old", "old", -1825222690), c, new cljs.core.Keyword(null, "new", "new", -2085437848), e], null);
    }
  }
};
taoensso.encore.reset_in_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  var d = cljs.core.next.call(null, c), c = cljs.core.first.call(null, d), d = cljs.core.next.call(null, d);
  return taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
taoensso.encore.reset_in_BANG_.cljs$lang$maxFixedArity = 3;
taoensso.encore.contains_in_QMARK_ = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.get_in.call(null, a, cljs.core.butlast.call(null, b)), cljs.core.last.call(null, b));
};
taoensso.encore.dissoc_in = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return taoensso.encore.dissoc_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
taoensso.encore.dissoc_in.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return taoensso.encore.update_in_STAR_.call(null, a, b, function(a) {
    return cljs.core.apply.call(null, cljs.core.dissoc, a, c);
  });
};
taoensso.encore.dissoc_in.cljs$lang$maxFixedArity = 2;
taoensso.encore.dissoc_in.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return taoensso.encore.dissoc_in.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
taoensso.encore.assoc_some = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.assoc_some.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.assoc_some.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  if (!cljs.core.truth_(function() {
    var a;
    try {
      a = cljs.core.count.call(null, b);
    } catch (d) {
      if (d instanceof Error) {
        a = taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "(even? (count kvs))", taoensso.truss.impl._invar_undefined_val, d, null);
      } else {
        throw d;
      }
    }
    try {
      return cljs.core.even_QMARK_.call(null, a) ? !0 : taoensso.truss.impl._invar_violation_BANG_.call(null);
    } catch (d) {
      if (d instanceof Error) {
        return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "(even? (count kvs))", a, d, null);
      }
      throw d;
    }
  }())) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null)))))].join(""));
  }
  return cljs.core.into.call(null, cljs.core.truth_(a) ? a : cljs.core.PersistentArrayMap.EMPTY, function() {
    return function d(a) {
      return new cljs.core.LazySeq(null, function() {
        for (var b = a;;) {
          if (b = cljs.core.seq.call(null, b)) {
            if (cljs.core.chunked_seq_QMARK_.call(null, b)) {
              var g = cljs.core.chunk_first.call(null, b), h = cljs.core.count.call(null, g), k = cljs.core.chunk_buffer.call(null, h);
              a: {
                for (var m = 0;;) {
                  if (m < h) {
                    var l = cljs.core._nth.call(null, g, m), n = cljs.core.nth.call(null, l, 0, null), l = cljs.core.nth.call(null, l, 1, null);
                    null != l && cljs.core.chunk_append.call(null, k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [n, l], null));
                    m += 1;
                  } else {
                    g = !0;
                    break a;
                  }
                }
              }
              return g ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), d.call(null, cljs.core.chunk_rest.call(null, b))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), null);
            }
            g = cljs.core.first.call(null, b);
            k = cljs.core.nth.call(null, g, 0, null);
            g = cljs.core.nth.call(null, g, 1, null);
            if (null != g) {
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, g], null), d.call(null, cljs.core.rest.call(null, b)));
            }
            b = cljs.core.rest.call(null, b);
          } else {
            return null;
          }
        }
      }, null, null);
    }.call(null, cljs.core.partition.call(null, 2, b));
  }());
};
taoensso.encore.assoc_some.cljs$lang$maxFixedArity = 1;
taoensso.encore.assoc_some.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.assoc_some.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.assoc_when = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.assoc_when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.assoc_when.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  if (!cljs.core.truth_(function() {
    var a;
    try {
      a = cljs.core.count.call(null, b);
    } catch (d) {
      if (d instanceof Error) {
        a = taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "(even? (count kvs))", taoensso.truss.impl._invar_undefined_val, d, null);
      } else {
        throw d;
      }
    }
    try {
      return cljs.core.even_QMARK_.call(null, a) ? !0 : taoensso.truss.impl._invar_violation_BANG_.call(null);
    } catch (d) {
      if (d instanceof Error) {
        return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "(even? (count kvs))", a, d, null);
      }
      throw d;
    }
  }())) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null)))))].join(""));
  }
  return cljs.core.into.call(null, cljs.core.truth_(a) ? a : cljs.core.PersistentArrayMap.EMPTY, function() {
    return function d(a) {
      return new cljs.core.LazySeq(null, function() {
        for (var b = a;;) {
          if (b = cljs.core.seq.call(null, b)) {
            if (cljs.core.chunked_seq_QMARK_.call(null, b)) {
              var g = cljs.core.chunk_first.call(null, b), h = cljs.core.count.call(null, g), k = cljs.core.chunk_buffer.call(null, h);
              a: {
                for (var m = 0;;) {
                  if (m < h) {
                    var l = cljs.core._nth.call(null, g, m), n = cljs.core.nth.call(null, l, 0, null), l = cljs.core.nth.call(null, l, 1, null);
                    cljs.core.truth_(l) && cljs.core.chunk_append.call(null, k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [n, l], null));
                    m += 1;
                  } else {
                    g = !0;
                    break a;
                  }
                }
              }
              return g ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), d.call(null, cljs.core.chunk_rest.call(null, b))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), null);
            }
            g = cljs.core.first.call(null, b);
            k = cljs.core.nth.call(null, g, 0, null);
            g = cljs.core.nth.call(null, g, 1, null);
            if (cljs.core.truth_(g)) {
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, g], null), d.call(null, cljs.core.rest.call(null, b)));
            }
            b = cljs.core.rest.call(null, b);
          } else {
            return null;
          }
        }
      }, null, null);
    }.call(null, cljs.core.partition.call(null, 2, b));
  }());
};
taoensso.encore.assoc_when.cljs$lang$maxFixedArity = 1;
taoensso.encore.assoc_when.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.assoc_when.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.queue_QMARK_ = function(a) {
  return a instanceof cljs.core.PersistentQueue;
};
taoensso.encore.queue = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return taoensso.encore.queue.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 0:
      return taoensso.encore.queue.cljs$core$IFn$_invoke$arity$0();
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
taoensso.encore.queue.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.into.call(null, taoensso.encore.queue.call(null), a);
};
taoensso.encore.queue.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentQueue.EMPTY;
};
taoensso.encore.queue.cljs$lang$maxFixedArity = 1;
taoensso.encore.queue_STAR_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return taoensso.encore.queue_STAR_.cljs$core$IFn$_invoke$arity$variadic(b);
};
taoensso.encore.queue_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return taoensso.encore.queue.call(null, a);
};
taoensso.encore.queue_STAR_.cljs$lang$maxFixedArity = 0;
taoensso.encore.queue_STAR_.cljs$lang$applyTo = function(a) {
  return taoensso.encore.queue_STAR_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
taoensso.encore.seq_kvs = cljs.core.partial.call(null, cljs.core.reduce, cljs.core.concat);
taoensso.encore.mapply = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.mapply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.mapply.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.apply.call(null, a, cljs.core.concat.call(null, cljs.core.butlast.call(null, b), taoensso.encore.seq_kvs.call(null, cljs.core.last.call(null, b))));
};
taoensso.encore.mapply.cljs$lang$maxFixedArity = 1;
taoensso.encore.mapply.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.mapply.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.map_kvs = function(a, b, c) {
  if (cljs.core.not.call(null, c)) {
    return cljs.core.PersistentArrayMap.EMPTY;
  }
  b = null == b ? function(a, b) {
    return b;
  } : b;
  a = null == a ? function(a) {
    return function(a, b) {
      return a;
    };
  }(b) : cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, a, new cljs.core.Keyword(null, "keywordize", "keywordize", 1381210758))) ? function(a) {
    return function(a, b) {
      return cljs.core.keyword.call(null, a);
    };
  }(b) : a;
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(a, b) {
    return function(c, g, h) {
      return cljs.core.assoc_BANG_.call(null, c, b.call(null, g, h), a.call(null, g, h));
    };
  }(b, a), cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), c));
};
taoensso.encore.map_vals = function(a, b) {
  return taoensso.encore.map_kvs.call(null, null, function(b, d) {
    return a.call(null, d);
  }, b);
};
taoensso.encore.map_keys = function(a, b) {
  return taoensso.encore.map_kvs.call(null, cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, a, new cljs.core.Keyword(null, "keywordize", "keywordize", 1381210758))) ? new cljs.core.Keyword(null, "keywordize", "keywordize", 1381210758) : function(b, d) {
    return a.call(null, b);
  }, null, b);
};
taoensso.encore.filter_kvs = function(a, b, c) {
  return cljs.core.not.call(null, c) ? cljs.core.PersistentArrayMap.EMPTY : cljs.core.reduce_kv.call(null, function(c, e, f) {
    return cljs.core.truth_(function() {
      var c = a.call(null, e);
      return cljs.core.truth_(c) ? b.call(null, f) : c;
    }()) ? c : cljs.core.dissoc.call(null, c, e);
  }, c, c);
};
taoensso.encore.filter_keys = function(a, b) {
  return taoensso.encore.filter_kvs.call(null, a, cljs.core.constantly.call(null, !0), b);
};
taoensso.encore.filter_vals = function(a, b) {
  return taoensso.encore.filter_kvs.call(null, cljs.core.constantly.call(null, !0), a, b);
};
taoensso.encore.remove_vals = function(a, b) {
  return cljs.core.not.call(null, b) ? cljs.core.PersistentArrayMap.EMPTY : cljs.core.reduce_kv.call(null, function(b, d, e) {
    return cljs.core.truth_(a.call(null, e)) ? cljs.core.dissoc.call(null, b, d) : b;
  }, b, b);
};
taoensso.encore.keywordize_map = function(a) {
  return cljs.core.not.call(null, a) ? cljs.core.PersistentArrayMap.EMPTY : cljs.core.reduce_kv.call(null, function(a, c, d) {
    return cljs.core.assoc.call(null, a, cljs.core.keyword.call(null, c), d);
  }, cljs.core.PersistentArrayMap.EMPTY, a);
};
taoensso.encore.as_map_STAR_ = function(a, b, c) {
  return cljs.core.transduce.call(null, cljs.core.partition_all.call(null, 2), cljs.core.completing.call(null, function(c, e) {
    var f = cljs.core.nth.call(null, e, 0, null), g = cljs.core.nth.call(null, e, 1, null);
    return cljs.core.assoc_BANG_.call(null, c, a.call(null, f, g), b.call(null, f, g));
  }, cljs.core.persistent_BANG_), cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), c);
};
taoensso.encore.as_map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.as_map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.as_map.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null);
  if (cljs.core.empty_QMARK_.call(null, a)) {
    return cljs.core.PersistentArrayMap.EMPTY;
  }
  var e = null == d ? function(a, b, c) {
    return function(a, b) {
      return b;
    };
  }(b, c, d) : d, c = null == c ? function(a, b, c, d) {
    return function(a, b) {
      return a;
    };
  }(e, b, c, d) : cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "keywordize", "keywordize", 1381210758))) ? function(a, b, c, d) {
    return function(a, b) {
      return cljs.core.keyword.call(null, a);
    };
  }(e, b, c, d) : c;
  return taoensso.encore.as_map_STAR_.call(null, c, e, a);
};
taoensso.encore.as_map.cljs$lang$maxFixedArity = 1;
taoensso.encore.as_map.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.as_map.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.fzipmap = function(a, b) {
  for (var c = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.seq.call(null, a), e = cljs.core.seq.call(null, b);;) {
    if (d && e) {
      c = cljs.core.assoc_BANG_.call(null, c, cljs.core.first.call(null, d), cljs.core.first.call(null, e)), d = cljs.core.next.call(null, d), e = cljs.core.next.call(null, e);
    } else {
      return cljs.core.persistent_BANG_.call(null, c);
    }
  }
};
taoensso.encore.into_all = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return taoensso.encore.into_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), taoensso.encore.into_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
taoensso.encore.into_all.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.into.call(null, a, b);
};
taoensso.encore.into_all.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.call(null, cljs.core.into, cljs.core.into.call(null, a, b), c);
};
taoensso.encore.into_all.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return taoensso.encore.into_all.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
taoensso.encore.into_all.cljs$lang$maxFixedArity = 2;
taoensso.encore.interleave_all = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      return b = new cljs.core.IndexedSeq(b.slice(2), 0), taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.List.EMPTY;
};
taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.LazySeq(null, function() {
    return a;
  }, null, null);
};
taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq.call(null, a), d = cljs.core.seq.call(null, b);
    return c && d ? cljs.core.cons.call(null, cljs.core.first.call(null, c), cljs.core.cons.call(null, cljs.core.first.call(null, d), taoensso.encore.interleave_all.call(null, cljs.core.rest.call(null, c), cljs.core.rest.call(null, d)))) : c ? c : d ? d : null;
  }, null, null);
};
taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return new cljs.core.LazySeq(null, function() {
    var d = cljs.core.filter.call(null, cljs.core.identity, cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, c, b, a)));
    return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, d), cljs.core.apply.call(null, taoensso.encore.interleave_all, cljs.core.map.call(null, cljs.core.rest, d)));
  }, null, null);
};
taoensso.encore.interleave_all.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
taoensso.encore.interleave_all.cljs$lang$maxFixedArity = 2;
taoensso.encore.distinct_by = function(a, b) {
  return function d(b, f) {
    return new cljs.core.LazySeq(null, function() {
      return function(b, e) {
        for (;;) {
          var f = b, m = cljs.core.nth.call(null, f, 0, null);
          if (f = cljs.core.seq.call(null, f)) {
            var l = a.call(null, m);
            if (cljs.core.contains_QMARK_.call(null, e, l)) {
              m = cljs.core.rest.call(null, f), f = e, b = m, e = f;
            } else {
              return cljs.core.cons.call(null, m, d.call(null, cljs.core.rest.call(null, f), cljs.core.conj.call(null, e, l)));
            }
          } else {
            return null;
          }
        }
      }.call(null, b, f);
    }, null, null);
  }.call(null, b, cljs.core.PersistentHashSet.EMPTY);
};
taoensso.encore.xdistinct = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 0:
      return taoensso.encore.xdistinct.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return taoensso.encore.xdistinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
taoensso.encore.xdistinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.distinct.call(null);
};
taoensso.encore.xdistinct.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.call(null);
        }, f = function(a) {
          return b.call(null, a);
        }, g = function(d, e) {
          var f = a.call(null, e);
          if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, c), f)) {
            return d;
          }
          cljs.core._vreset_BANG_.call(null, c, cljs.core.conj.call(null, cljs.core._deref.call(null, c), f));
          return b.call(null, d, e);
        }, d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + arguments.length);
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_.call(null, cljs.core.PersistentHashSet.EMPTY));
  };
};
taoensso.encore.xdistinct.cljs$lang$maxFixedArity = 1;
taoensso.encore.takev = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? taoensso.encore.subvec_STAR_.call(null, b, 0, a) : cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.take.call(null, a), b);
};
taoensso.encore.removev = function(a, b) {
  return cljs.core.filterv.call(null, cljs.core.complement.call(null, a), b);
};
taoensso.encore.distinctv = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return taoensso.encore.distinctv.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return taoensso.encore.distinctv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
taoensso.encore.distinctv.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return taoensso.encore.distinctv.call(null, cljs.core.identity, a);
};
taoensso.encore.distinctv.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.reduce.call(null, function(b, c) {
    var f = cljs.core.nth.call(null, b, 0, null), g = cljs.core.nth.call(null, b, 1, null), h = a.call(null, c);
    return cljs.core.contains_QMARK_.call(null, g, h) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, g], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj_BANG_.call(null, f, c), cljs.core.conj.call(null, g, h)], null);
  }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.PersistentHashSet.EMPTY], null), b);
  return cljs.core.persistent_BANG_.call(null, cljs.core.nth.call(null, c, 0));
};
taoensso.encore.distinctv.cljs$lang$maxFixedArity = 2;
taoensso.encore.rcompare = function(a, b) {
  return cljs.core.compare.call(null, b, a);
};
taoensso.encore.nested_merge_with = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.nested_merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.nested_merge_with.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, b))) {
    var c = function(a) {
      return function(b, c) {
        return cljs.core.reduce.call(null, a, cljs.core.truth_(b) ? b : cljs.core.PersistentArrayMap.EMPTY, cljs.core.seq.call(null, c));
      };
    }(function(b, c) {
      var f = cljs.core.key.call(null, c), g = cljs.core.val.call(null, c);
      if (cljs.core.contains_QMARK_.call(null, b, f)) {
        var h = cljs.core.get.call(null, b, f);
        return cljs.core.map_QMARK_.call(null, h) && cljs.core.map_QMARK_.call(null, g) ? cljs.core.assoc.call(null, b, f, taoensso.encore.nested_merge_with.call(null, a, h, g)) : cljs.core.assoc.call(null, b, f, a.call(null, h, g));
      }
      return cljs.core.assoc.call(null, b, f, g);
    });
    return cljs.core.reduce.call(null, c, b);
  }
  return null;
};
taoensso.encore.nested_merge_with.cljs$lang$maxFixedArity = 1;
taoensso.encore.nested_merge_with.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.nested_merge_with.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.nested_merge = cljs.core.partial.call(null, taoensso.encore.nested_merge_with, function(a, b) {
  return cljs.core.map_QMARK_.call(null, a) && null == b ? a : b;
});
taoensso.encore.repeatedly_into = function(a, b, c) {
  var d = 10 < b;
  if (d ? null != a && (a.cljs$lang$protocol_mask$partition1$ & 4 || a.cljs$core$IEditableCollection$) : d) {
    for (a = cljs.core.transient$.call(null, a), d = 0;;) {
      if (d === b) {
        return cljs.core.persistent_BANG_.call(null, a);
      }
      a = cljs.core.conj_BANG_.call(null, a, c.call(null));
      d += 1;
    }
  } else {
    for (d = 0;;) {
      if (d === b) {
        return a;
      }
      a = cljs.core.conj.call(null, a, c.call(null));
      d += 1;
    }
  }
};
taoensso.encore.str_builder_QMARK_ = function(a) {
  return a instanceof goog.string.StringBuffer;
};
taoensso.encore.str_builder = function() {
  var a = null, b = function() {
    return new goog.string.StringBuffer;
  }, c = function(a) {
    return new goog.string.StringBuffer(a);
  }, a = function(a) {
    switch(arguments.length) {
      case 0:
        return b.call(this);
      case 1:
        return c.call(this, a);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$0 = b;
  a.cljs$core$IFn$_invoke$arity$1 = c;
  return a;
}();
taoensso.encore.sb_append = function(a, b) {
  return a.append(b);
};
taoensso.encore.str_rf = function() {
  var a = null, b = function() {
    return taoensso.encore.str_builder.call(null);
  }, c = function(a) {
    return cljs.core.truth_(taoensso.encore.str_builder_QMARK_.call(null, a)) ? a : taoensso.encore.str_builder.call(null, "" + cljs.core.str(a));
  }, d = function(a, b) {
    return taoensso.encore.sb_append.call(null, cljs.core.truth_(taoensso.encore.str_builder_QMARK_.call(null, a)) ? a : taoensso.encore.str_builder.call(null, "" + cljs.core.str(a)), "" + cljs.core.str(b));
  }, a = function(a, f) {
    switch(arguments.length) {
      case 0:
        return b.call(this);
      case 1:
        return c.call(this, a);
      case 2:
        return d.call(this, a, f);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$0 = b;
  a.cljs$core$IFn$_invoke$arity$1 = c;
  a.cljs$core$IFn$_invoke$arity$2 = d;
  return a;
}();
taoensso.encore.undefined__GT_nil = function(a) {
  return void 0 === a ? null : a;
};
taoensso.encore.nil__GT_str = function(a) {
  return void 0 === a || null == a ? "nil" : a;
};
taoensso.encore.str_join = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return taoensso.encore.str_join.call(null, null, null, a);
};
taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return taoensso.encore.str_join.call(null, a, null, b);
};
taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (cljs.core.truth_(cljs.core.truth_(a) ? cljs.core.not_EQ_.call(null, a, "") : a)) {
    a = cljs.core.interpose.call(null, a);
    var d = cljs.core.completing.call(null, taoensso.encore.str_rf, cljs.core.str);
    return cljs.core.truth_(b) ? cljs.core.transduce.call(null, cljs.core.comp.call(null, b, a), d, c) : cljs.core.transduce.call(null, a, d, c);
  }
  return cljs.core.truth_(b) ? cljs.core.transduce.call(null, b, cljs.core.completing.call(null, taoensso.encore.str_rf, cljs.core.str), c) : "" + cljs.core.str(cljs.core.reduce.call(null, taoensso.encore.str_rf, c));
};
taoensso.encore.str_join.cljs$lang$maxFixedArity = 3;
taoensso.encore.format_STAR_ = function(a, b) {
  var c;
  c = cljs.core.truth_(a) ? a : "";
  var d = cljs.core.mapv.call(null, taoensso.encore.nil__GT_str, b);
  return cljs.core.apply.call(null, goog.string.format, c, d);
};
taoensso.encore.format = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.format.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return taoensso.encore.format_STAR_.call(null, a, b);
};
taoensso.encore.format.cljs$lang$maxFixedArity = 1;
taoensso.encore.format.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.format.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.str_replace = function(a, b, c) {
  if ("string" === typeof b) {
    return a.replace(new RegExp(goog.string.regExpEscape(b), "g"), c);
  }
  if (b instanceof RegExp) {
    var d = [cljs.core.str("g"), cljs.core.str(cljs.core.truth_(b.ignoreCase) ? "i" : null), cljs.core.str(cljs.core.truth_(b.multiline) ? "m" : null)].join(""), e = "string" === typeof c ? c : function(a) {
      return function() {
        var a = function(a) {
          return c.call(null, cljs.core.vec.call(null, a));
        }, b = function(b) {
          var c = null;
          if (0 < arguments.length) {
            for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
              d[c] = arguments[c + 0], ++c;
            }
            c = new cljs.core.IndexedSeq(d, 0);
          }
          return a.call(this, c);
        };
        b.cljs$lang$maxFixedArity = 0;
        b.cljs$lang$applyTo = function(b) {
          b = cljs.core.seq(b);
          return a(b);
        };
        b.cljs$core$IFn$_invoke$arity$variadic = a;
        return b;
      }();
    }(d);
    return a.replace(new RegExp(b.source, d), e);
  }
  throw [cljs.core.str("Invalid match arg: "), cljs.core.str(b)].join("");
};
taoensso.encore.substr = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return taoensso.encore.substr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
taoensso.encore.substr.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  c = cljs.core.nth.call(null, c, 0, null);
  if (!cljs.core.truth_(function() {
    try {
      return "string" === typeof a ? !0 : taoensso.truss.impl._invar_violation_BANG_.call(null);
    } catch (b) {
      if (b instanceof Error) {
        return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "(string? s)", a, b, null);
      }
      throw b;
    }
  }())) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "string?", "string?", -1129175764, null), new cljs.core.Symbol(null, "s", "s", -948495851, null))))].join(""));
  }
  c = taoensso.encore.sub_indexes.call(null, a, b, new cljs.core.Keyword(null, "max-len", "max-len", -18846016), c);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  return a.substring(b, c);
};
taoensso.encore.substr.cljs$lang$maxFixedArity = 2;
taoensso.encore.substr.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return taoensso.encore.substr.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
taoensso.encore.str_contains_QMARK_ = function(a, b) {
  return cljs.core.not_EQ_.call(null, -1, a.indexOf(b));
};
taoensso.encore.str_starts_with_QMARK_ = function(a, b) {
  return 0 === a.indexOf(b);
};
taoensso.encore.str_ends_with_QMARK_ = function(a, b) {
  var c = a.length, d = b.length;
  return c >= d ? cljs.core.not_EQ_.call(null, -1, a.indexOf(b, c - d)) : null;
};
taoensso.encore.str__QMARK_index = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return taoensso.encore.str__QMARK_index.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
taoensso.encore.str__QMARK_index.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  var d = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  d = cljs.core.truth_(d) ? d : 0;
  d |= 0;
  a = (cljs.core.truth_(c) ? a.lastIndexOf(b, d) : a.indexOf(b, d)) | 0;
  return cljs.core.not_EQ_.call(null, a, -1) ? a : null;
};
taoensso.encore.str__QMARK_index.cljs$lang$maxFixedArity = 2;
taoensso.encore.str__QMARK_index.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return taoensso.encore.str__QMARK_index.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
taoensso.encore.join_once = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.join_once.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.join_once.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.reduce.call(null, function(b, d) {
    var e = "" + cljs.core.str(b), f = "" + cljs.core.str(d);
    return cljs.core.truth_(taoensso.encore.str_ends_with_QMARK_.call(null, e, a)) ? cljs.core.truth_(taoensso.encore.str_starts_with_QMARK_.call(null, f, a)) ? [cljs.core.str(e), cljs.core.str(f.substring(1))].join("") : [cljs.core.str(e), cljs.core.str(f)].join("") : cljs.core.truth_(taoensso.encore.str_starts_with_QMARK_.call(null, f, a)) ? [cljs.core.str(e), cljs.core.str(f)].join("") : cljs.core._EQ_.call(null, e, "") || cljs.core._EQ_.call(null, f, "") ? [cljs.core.str(e), cljs.core.str(f)].join("") : 
    [cljs.core.str(e), cljs.core.str(a), cljs.core.str(f)].join("");
  }, null, b);
};
taoensso.encore.join_once.cljs$lang$maxFixedArity = 1;
taoensso.encore.join_once.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.join_once.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.path = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic(b);
};
taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, taoensso.encore.join_once, "/", a);
};
taoensso.encore.path.cljs$lang$maxFixedArity = 0;
taoensso.encore.path.cljs$lang$applyTo = function(a) {
  return taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
taoensso.encore.norm_word_breaks = function(a) {
  return clojure.string.replace.call(null, "" + cljs.core.str(a), /\s+/, " ");
};
taoensso.encore.count_words = function(a) {
  return clojure.string.blank_QMARK_.call(null, a) ? 0 : cljs.core.count.call(null, clojure.string.split.call(null, a, /\s+/));
};
taoensso.encore.uuid_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 0:
      return taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0();
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return taoensso.encore.substr.call(null, taoensso.encore.uuid_str.call(null), 0, a);
};
taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0 = function() {
  var a = function() {
    return cljs.core.rand_int.call(null, 16).toString(16);
  }, b = (8 | 3 & cljs.core.rand_int.call(null, 16)).toString(16);
  return [cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str("-"), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), 
  cljs.core.str("-"), cljs.core.str(b), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str("-"), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null)), cljs.core.str(a.call(null))].join("");
};
taoensso.encore.uuid_str.cljs$lang$maxFixedArity = 1;
taoensso.encore.try_pred = function(a, b) {
  try {
    return a.call(null, b);
  } catch (c) {
    if (c instanceof Error) {
      return !1;
    }
    throw c;
  }
};
taoensso.encore.is_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return taoensso.encore.is_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return taoensso.encore.is_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
taoensso.encore.is_BANG_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.truth_(a) ? a : taoensso.encore.is_BANG_.call(null, cljs.core.identity, a);
};
taoensso.encore.is_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (cljs.core.truth_(taoensso.encore.try_pred.call(null, a, b))) {
    return b;
  }
  throw cljs.core.ex_info.call(null, [cljs.core.str("`is!` "), cljs.core.str("" + cljs.core.str(a)), cljs.core.str(" failure against arg: "), cljs.core.str(cljs.core.pr_str.call(null, b))].join(""), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arg", "arg", -1747261837), b, new cljs.core.Keyword(null, "arg-type", "arg-type", -2020167363), cljs.core.type.call(null, b)], null));
};
taoensso.encore.is_BANG_.cljs$lang$maxFixedArity = 2;
taoensso.encore.when_QMARK_ = function(a, b) {
  return cljs.core.truth_(taoensso.encore.try_pred.call(null, a, b)) ? b : null;
};
taoensso.encore.gc_rate = 6.25E-5;
taoensso.encore.gc_now_QMARK_ = function() {
  return cljs.core.rand.call(null) <= taoensso.encore.gc_rate;
};
taoensso.encore.swap_val_BANG_ = function(a, b, c) {
  for (;;) {
    var d = cljs.core.deref.call(null, a), e = c.call(null, cljs.core.get.call(null, d, b)), f = cljs.core.assoc.call(null, d, b, e);
    if (cljs.core.truth_(cljs.core.compare_and_set_BANG_.call(null, a, d, f))) {
      return e;
    }
  }
};
taoensso.encore.memoize_ = function(a) {
  return function(b) {
    return function() {
      var c = function(c) {
        return cljs.core.deref.call(null, function() {
          var d = cljs.core.get.call(null, cljs.core.deref.call(null, b), c);
          return cljs.core.truth_(d) ? d : taoensso.encore.swap_val_BANG_.call(null, b, c, function(b, d) {
            return function(f) {
              return cljs.core.truth_(f) ? f : new cljs.core.Delay(function(b, d) {
                return function() {
                  return cljs.core.apply.call(null, a, c);
                };
              }(b, d), null);
            };
          }(d, b));
        }());
      }, d = function(a) {
        var b = null;
        if (0 < arguments.length) {
          for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
            d[b] = arguments[b + 0], ++b;
          }
          b = new cljs.core.IndexedSeq(d, 0);
        }
        return c.call(this, b);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return c(a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
  }(cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY));
};
taoensso.encore.memoize_a0_ = function(a) {
  return function(b) {
    return function() {
      return cljs.core.deref.call(null, function() {
        var c = cljs.core.deref.call(null, b);
        return cljs.core.truth_(c) ? c : cljs.core.swap_BANG_.call(null, b, function(b, c) {
          return function(f) {
            return cljs.core.truth_(f) ? f : new cljs.core.Delay(function(b, c) {
              return function() {
                return a.call(null);
              };
            }(b, c), null);
          };
        }(c, b));
      }());
    };
  }(cljs.core.atom.call(null, null));
};
taoensso.encore.memoize_a1_ = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return cljs.core.deref.call(null, function() {
          var c = cljs.core.get.call(null, cljs.core.deref.call(null, b), taoensso.encore.sentinel);
          return cljs.core.truth_(c) ? c : taoensso.encore.swap_val_BANG_.call(null, b, taoensso.encore.sentinel, function(b, c) {
            return function(d) {
              return cljs.core.truth_(d) ? d : new cljs.core.Delay(function(b, c) {
                return function() {
                  return a.call(null);
                };
              }(b, c), null);
            };
          }(c, b));
        }());
      }, e = function(c) {
        return cljs.core.deref.call(null, function() {
          var d = cljs.core.get.call(null, cljs.core.deref.call(null, b), c);
          return cljs.core.truth_(d) ? d : taoensso.encore.swap_val_BANG_.call(null, b, c, function(b, d) {
            return function(e) {
              return cljs.core.truth_(e) ? e : new cljs.core.Delay(function(b, d) {
                return function() {
                  return a.call(null, c);
                };
              }(b, d), null);
            };
          }(d, b));
        }());
      }, c = function(a) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, a);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      return c;
    }();
  }(cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY));
};
taoensso.encore.memoize1 = function(a) {
  return function(b) {
    return function() {
      var c = function(c) {
        return cljs.core.deref.call(null, function() {
          var d = cljs.core.get.call(null, cljs.core.deref.call(null, b), c);
          return cljs.core.truth_(d) ? d : cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, b, function(b, d) {
            return function(f) {
              return cljs.core.truth_(cljs.core.get.call(null, f, c)) ? f : cljs.core.PersistentArrayMap.fromArray([c, new cljs.core.Delay(function(b, d) {
                return function() {
                  return cljs.core.apply.call(null, a, c);
                };
              }(b, d), null)], !0, !1);
            };
          }(d, b)), c);
        }());
      }, d = function(a) {
        var b = null;
        if (0 < arguments.length) {
          for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
            d[b] = arguments[b + 0], ++b;
          }
          b = new cljs.core.IndexedSeq(d, 0);
        }
        return c.call(this, b);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return c(a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
  }(cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY));
};
taoensso.encore.memoized = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return taoensso.encore.memoized.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
taoensso.encore.memoized.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.not.call(null, a) ? cljs.core.apply.call(null, b, c) : cljs.core.deref.call(null, taoensso.encore.swap_val_BANG_.call(null, a, c, function(a) {
    return cljs.core.truth_(a) ? a : new cljs.core.Delay(function() {
      return cljs.core.apply.call(null, b, c);
    }, null);
  }));
};
taoensso.encore.memoized.cljs$lang$maxFixedArity = 2;
taoensso.encore.memoized.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return taoensso.encore.memoized.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
taoensso.encore.memoize_STAR_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function() {
      var c = function(c) {
        var d = cljs.core.nth.call(null, c, 0, null), g = cljs.core.nthnext.call(null, c, 1);
        if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, d, new cljs.core.Keyword("mem", "get", "mem/get", 1683009136)))) {
          return cljs.core.deref.call(null, b);
        }
        if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, d, new cljs.core.Keyword("mem", "del", "mem/del", 574870667)))) {
          return cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, cljs.core.first.call(null, g), new cljs.core.Keyword("mem", "all", "mem/all", 892075139))) ? cljs.core.reset_BANG_.call(null, b, cljs.core.PersistentArrayMap.EMPTY) : cljs.core.swap_BANG_.call(null, b, cljs.core.dissoc, g), null;
        }
        var h = taoensso.encore.kw_identical_QMARK_.call(null, d, new cljs.core.Keyword("mem", "fresh", "mem/fresh", -1179989133)), k = cljs.core.truth_(h) ? g : c;
        return cljs.core.deref.call(null, function() {
          var m = cljs.core.get.call(null, cljs.core.deref.call(null, b), k);
          return cljs.core.truth_(m) ? m : taoensso.encore.swap_val_BANG_.call(null, b, k, function(b, c, d, e, f, g, h, k) {
            return function(m) {
              return cljs.core.truth_(cljs.core.truth_(m) ? cljs.core.not.call(null, c) : m) ? m : new cljs.core.Delay(function(b, c, d, e, f, g, h, k) {
                return function() {
                  return cljs.core.apply.call(null, a, d);
                };
              }(b, c, d, e, f, g, h, k), null);
            };
          }(m, h, k, c, d, g, c, b));
        }());
      }, d = function(a) {
        var b = null;
        if (0 < arguments.length) {
          for (var b = 0, d = Array(arguments.length - 0);b < d.length;) {
            d[b] = arguments[b + 0], ++b;
          }
          b = new cljs.core.IndexedSeq(d, 0);
        }
        return c.call(this, b);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return c(a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
  }(cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY));
};
taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  try {
    cljs.core.truth_(taoensso.encore.pos_int_QMARK_.call(null, a)) || taoensso.truss.impl._invar_violation_BANG_.call(null);
  } catch (g) {
    if (g instanceof Error) {
      taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "(pos-int? ttl-ms)", a, g, null);
    } else {
      throw g;
    }
  }
  var c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, !1), e = cljs.core.long$.call(null, a), f = function(a, b, c) {
    return function() {
      if (cljs.core.truth_(function() {
        var d = taoensso.encore.gc_now_QMARK_.call(null);
        return cljs.core.truth_(d) ? taoensso.encore.swap_in_BANG_.call(null, b, cljs.core.PersistentVector.EMPTY, function(a, b, c, d) {
          return function(a) {
            return taoensso.encore.swapped.call(null, !0, cljs.core.not.call(null, a));
          };
        }(d, a, b, c)) : d;
      }())) {
        var d = taoensso.encore.now_udt.call(null), e = cljs.core.deref.call(null, a), f = cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(a, b, c, d, e) {
          return function(b, c, d) {
            cljs.core.nth.call(null, d, 0, null);
            d = cljs.core.nth.call(null, d, 1, null);
            return a - d > e ? cljs.core.conj_BANG_.call(null, b, c) : b;
          };
        }(d, e, a, b, c), cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), e));
        cljs.core.swap_BANG_.call(null, a, function(a, b, c, d, e, f) {
          return function(g) {
            return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(a, b, c, d, e, f) {
              return function(a, b) {
                return cljs.core.dissoc_BANG_.call(null, a, b);
              };
            }(a, b, c, d, e, f), cljs.core.transient$.call(null, g), c));
          };
        }(d, e, f, a, b, c));
        return cljs.core.reset_BANG_.call(null, b, !1);
      }
      return null;
    };
  }(c, d, e);
  return function(a, c, d, e) {
    return function() {
      var f = function(f) {
        var l = cljs.core.nth.call(null, f, 0, null), n = cljs.core.nthnext.call(null, f, 1);
        if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, l, new cljs.core.Keyword("mem", "get", "mem/get", 1683009136)))) {
          return cljs.core.deref.call(null, a);
        }
        if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, l, new cljs.core.Keyword("mem", "del", "mem/del", 574870667)))) {
          return cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, cljs.core.first.call(null, n), new cljs.core.Keyword("mem", "all", "mem/all", 892075139))) ? cljs.core.reset_BANG_.call(null, a, cljs.core.PersistentArrayMap.EMPTY) : cljs.core.swap_BANG_.call(null, a, cljs.core.dissoc, n), null;
        }
        e.call(null);
        var t = taoensso.encore.kw_identical_QMARK_.call(null, l, new cljs.core.Keyword("mem", "fresh", "mem/fresh", -1179989133)), u = cljs.core.truth_(t) ? n : f, v = taoensso.encore.now_udt.call(null);
        f = taoensso.encore.swap_val_BANG_.call(null, a, u, function(a, c, d, e, f, g, h, k, l, m, n) {
          return function(p) {
            return cljs.core.truth_(function() {
              if (cljs.core.truth_(p)) {
                var b = cljs.core.not.call(null, a);
                return b ? (cljs.core.nth.call(null, p, 0, null), b = cljs.core.nth.call(null, p, 1, null), d - b < m) : b;
              }
              return p;
            }()) ? p : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Delay(function(a, c, d, e, f, g, h, k, l, m, n) {
              return function() {
                return cljs.core.apply.call(null, b, c);
              };
            }(a, c, d, e, f, g, h, k, l, m, n), null), d], null);
          };
        }(t, u, v, f, l, n, f, a, c, d, e));
        f = cljs.core.nth.call(null, f, 0, null);
        return cljs.core.deref.call(null, f);
      }, n = function(a) {
        var b = null;
        if (0 < arguments.length) {
          for (var b = 0, c = Array(arguments.length - 0);b < c.length;) {
            c[b] = arguments[b + 0], ++b;
          }
          b = new cljs.core.IndexedSeq(c, 0);
        }
        return f.call(this, b);
      };
      n.cljs$lang$maxFixedArity = 0;
      n.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return f(a);
      };
      n.cljs$core$IFn$_invoke$arity$variadic = f;
      return n;
    }();
  }(c, d, e, f);
};
taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  try {
    cljs.core.truth_(taoensso.truss.impl._invar_pred.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), cljs.core.nil_QMARK_, taoensso.encore.pos_int_QMARK_], null)).call(null, b)) || taoensso.truss.impl._invar_violation_BANG_.call(null);
  } catch (k) {
    if (k instanceof Error) {
      taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "([:or nil? pos-int?] ttl-ms)", b, k, null);
    } else {
      throw k;
    }
  }
  try {
    cljs.core.truth_(taoensso.encore.pos_int_QMARK_.call(null, a)) || taoensso.truss.impl._invar_violation_BANG_.call(null);
  } catch (k) {
    if (k instanceof Error) {
      taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "(pos-int? cache-size)", a, k, null);
    } else {
      throw k;
    }
  }
  var d = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tick", "tick", -835886976), 0], null)), e = cljs.core.atom.call(null, !1), f = null != b;
  b = cljs.core.long$.call(null, cljs.core.truth_(b) ? b : 0);
  a = cljs.core.long$.call(null, a);
  var g = function(a, b, c, d, e) {
    return function() {
      if (cljs.core.truth_(function() {
        var f = taoensso.encore.gc_now_QMARK_.call(null);
        return cljs.core.truth_(f) ? taoensso.encore.swap_in_BANG_.call(null, b, cljs.core.PersistentVector.EMPTY, function(a, b, c, d, e, f) {
          return function(a) {
            return taoensso.encore.swapped.call(null, !0, cljs.core.not.call(null, a));
          };
        }(f, a, b, c, d, e)) : f;
      }())) {
        var f = taoensso.encore.now_udt.call(null);
        if (c) {
          var g = cljs.core.dissoc.call(null, cljs.core.deref.call(null, a), new cljs.core.Keyword(null, "tick", "tick", -835886976)), h = cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(a, b, c, d, e, f, g) {
            return function(a, c, d) {
              cljs.core.nth.call(null, d, 0, null);
              var e = cljs.core.nth.call(null, d, 1, null);
              cljs.core.nth.call(null, d, 2, null);
              cljs.core.nth.call(null, d, 3, null);
              return b - e > f ? cljs.core.conj_BANG_.call(null, a, c) : a;
            };
          }(g, f, a, b, c, d, e), cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), g));
          cljs.core.swap_BANG_.call(null, a, function(a, b, c, d, e, f, g, h) {
            return function(k) {
              return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(a, b, c, d, e, f, g, h) {
                return function(a, b) {
                  return cljs.core.dissoc_BANG_.call(null, a, b);
                };
              }(a, b, c, d, e, f, g, h), cljs.core.transient$.call(null, k), b));
            };
          }(g, h, f, a, b, c, d, e));
        }
        g = cljs.core.dissoc.call(null, cljs.core.deref.call(null, a), new cljs.core.Keyword(null, "tick", "tick", -835886976));
        h = cljs.core.count.call(null, g) - e;
        if (64 < h) {
          var u = taoensso.encore.top.call(null, h, function(a, b, c, d, e, f, g, h) {
            return function(b) {
              var c = a.call(null, b);
              cljs.core.nth.call(null, c, 0, null);
              cljs.core.nth.call(null, c, 1, null);
              b = cljs.core.nth.call(null, c, 2, null);
              c = cljs.core.nth.call(null, c, 3, null);
              return b + c;
            };
          }(g, h, f, a, b, c, d, e), cljs.core.keys.call(null, g));
          cljs.core.swap_BANG_.call(null, a, function(a, b, c, d, e, f, g, h, k) {
            return function(l) {
              return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(a, b, c, d, e, f, g, h, k) {
                return function(a, b) {
                  return cljs.core.dissoc_BANG_.call(null, a, b);
                };
              }(a, b, c, d, e, f, g, h, k), cljs.core.transient$.call(null, l), a));
            };
          }(u, g, h, f, a, b, c, d, e));
        }
        return cljs.core.reset_BANG_.call(null, b, !1);
      }
      return null;
    };
  }(d, e, f, b, a), h = f ? function(a, b, d, e, f, g) {
    return function(h, t, u) {
      var v = taoensso.encore.now_udt.call(null);
      return taoensso.encore.swap_val_BANG_.call(null, a, h, function(a, b, d, e, f, g, k) {
        return function(l) {
          return cljs.core.truth_(function() {
            if (cljs.core.truth_(l)) {
              var b = cljs.core.not.call(null, t);
              return b ? (cljs.core.nth.call(null, l, 0, null), b = cljs.core.nth.call(null, l, 1, null), a - b < f) : b;
            }
            return l;
          }()) ? l : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Delay(function(a, b, d, e, f, g, k) {
            return function() {
              return cljs.core.apply.call(null, c, h);
            };
          }(a, b, d, e, f, g, k), null), a, u, 1], null);
        };
      }(v, a, b, d, e, f, g));
    };
  }(d, e, f, b, a, g) : function(a, b, d, e, f, g) {
    return function(h, t, u) {
      return taoensso.encore.swap_val_BANG_.call(null, a, h, function(a, b, d, e, f, g) {
        return function(k) {
          return cljs.core.truth_(cljs.core.truth_(k) ? cljs.core.not.call(null, t) : k) ? k : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Delay(function(a, b, d, e, f, g) {
            return function() {
              return cljs.core.apply.call(null, c, h);
            };
          }(a, b, d, e, f, g), null), null, u, 1], null);
        };
      }(a, b, d, e, f, g));
    };
  }(d, e, f, b, a, g);
  return function(a, b, c, d, e, f, g) {
    return function() {
      var h = function(h) {
        var t = cljs.core.nth.call(null, h, 0, null), u = cljs.core.nthnext.call(null, h, 1);
        if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, t, new cljs.core.Keyword("mem", "get", "mem/get", 1683009136)))) {
          return cljs.core.deref.call(null, a);
        }
        if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, t, new cljs.core.Keyword("mem", "del", "mem/del", 574870667)))) {
          return cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, cljs.core.first.call(null, u), new cljs.core.Keyword("mem", "all", "mem/all", 892075139))) ? cljs.core.reset_BANG_.call(null, a, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tick", "tick", -835886976), 0], null)) : cljs.core.swap_BANG_.call(null, a, cljs.core.dissoc, u), null;
        }
        f.call(null);
        var y = taoensso.encore.kw_identical_QMARK_.call(null, t, new cljs.core.Keyword("mem", "fresh", "mem/fresh", -1179989133)), z = cljs.core.truth_(y) ? u : h, B = (new cljs.core.Keyword(null, "tick", "tick", -835886976)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, a)), I = g.call(null, z, y, B), C = cljs.core.nth.call(null, I, 0, null);
        cljs.core.swap_BANG_.call(null, a, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
          return function(a) {
            var d = cljs.core.get.call(null, a, b);
            if (cljs.core.truth_(d)) {
              var e = cljs.core.nth.call(null, d, 0, null), f = cljs.core.nth.call(null, d, 1, null);
              cljs.core.nth.call(null, d, 2, null);
              d = cljs.core.nth.call(null, d, 3, null);
              return cljs.core.merge.call(null, a, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "tick", "tick", -835886976), c + 1, b, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, f, c, d + 1], null)], !0, !1));
            }
            return cljs.core.merge.call(null, a, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tick", "tick", -835886976), c + 1], null));
          };
        }(y, z, B, I, C, h, t, u, h, a, b, c, d, e, f, g));
        return cljs.core.deref.call(null, C);
      }, u = function(a) {
        var b = null;
        if (0 < arguments.length) {
          for (var b = 0, c = Array(arguments.length - 0);b < c.length;) {
            c[b] = arguments[b + 0], ++b;
          }
          b = new cljs.core.IndexedSeq(c, 0);
        }
        return h.call(this, b);
      };
      u.cljs$lang$maxFixedArity = 0;
      u.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return h(a);
      };
      u.cljs$core$IFn$_invoke$arity$variadic = h;
      return u;
    }();
  }(d, e, f, b, a, g, h);
};
taoensso.encore.memoize_STAR_.cljs$lang$maxFixedArity = 3;
taoensso.encore.rate_limiter_STAR_ = function(a) {
  if (cljs.core.empty_QMARK_.call(null, a)) {
    return cljs.core.constantly.call(null, null);
  }
  a = cljs.core.vec.call(null, a);
  var b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.long$.call(null, cljs.core.reduce.call(null, cljs.core.max, 0, cljs.core.mapv.call(null, function(a, b) {
    return function(a) {
      cljs.core.nth.call(null, a, 0, null);
      var b = cljs.core.nth.call(null, a, 1, null);
      cljs.core.nth.call(null, a, 2, null);
      return b;
    };
  }(a, b), a))), d = cljs.core.count.call(null, a), e = cljs.core.count.call(null, cljs.core.filterv.call(null, function(a, b, c, d) {
    return function(a) {
      cljs.core.nth.call(null, a, 0, null);
      cljs.core.nth.call(null, a, 1, null);
      return cljs.core.nth.call(null, a, 2, null);
    };
  }(a, b, c, d), a));
  if (0 !== e && !cljs.core._EQ_.call(null, e, d)) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), new cljs.core.Symbol(null, "nid-specs", "nid-specs", -1204406222, null)), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "nid-specs", "nid-specs", -1204406222, null), new cljs.core.Symbol(null, "nspecs", 
    "nspecs", -1621596945, null)))))].join(""));
  }
  return function(a, b, c, d, e, l, n) {
    return function() {
      var p = function(p) {
        var q = cljs.core.nth.call(null, p, 0, null), u = taoensso.encore.now_udt.call(null);
        cljs.core.truth_(cljs.core.truth_(q) ? taoensso.encore.gc_now_QMARK_.call(null) : q) && taoensso.encore.swap_in_BANG_.call(null, b, cljs.core.PersistentVector.EMPTY, function(a, b, c, d, e, f, g, h, k, l) {
          return function(m) {
            return cljs.core.reduce_kv.call(null, function(a, b, c, d, e, f, g, h, k, l) {
              return function(m, n, p) {
                p = cljs.core.reduce.call(null, function(a, b, c, d, e, f, g, h, k, l) {
                  return function(a, b) {
                    cljs.core.nth.call(null, b, 0, null);
                    var c = cljs.core.nth.call(null, b, 1, null);
                    cljs.core.nth.call(null, b, 2, null);
                    return a > c ? a : c;
                  };
                }(a, b, c, d, e, f, g, h, k, l), 0, p);
                return a - p > f ? cljs.core.dissoc.call(null, m, n) : m;
              };
            }(a, b, c, d, e, f, g, h, k, l), m, m);
          };
        }(u, p, q, a, b, c, d, e, l, n));
        return taoensso.encore.swap_in_BANG_.call(null, b, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [q], null), function(a, b, c, d, e, f, g, h, k, l) {
          return function(m) {
            if (cljs.core.not.call(null, m)) {
              return taoensso.encore.swapped.call(null, cljs.core.vec.call(null, cljs.core.repeat.call(null, g, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, a], null))), null);
            }
            var n = function() {
              for (var b = d, c = m, e = cljs.core.PersistentVector.EMPTY, f = null;;) {
                var g = cljs.core.nth.call(null, b, 0, null), h = cljs.core.nth.call(null, g, 0, null), k = cljs.core.nth.call(null, g, 1, null), g = cljs.core.nth.call(null, g, 2, null), b = cljs.core.nthnext.call(null, b, 1), l = cljs.core.nth.call(null, c, 0, null), n = cljs.core.nth.call(null, l, 0, null), l = cljs.core.nth.call(null, l, 1, null), c = cljs.core.nthnext.call(null, c, 1), p = a - l, q = p >= k, h = !q && n >= h, e = cljs.core.conj.call(null, e, q ? new cljs.core.PersistentVector(null, 
                2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, a], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [n, l], null));
                h && (k -= p, h = void 0, h = null == f, h || (h = f, n = cljs.core.nth.call(null, h, 0, null), cljs.core.nth.call(null, h, 1, null), h = k > n), f = h ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, g], null) : f);
                k = f;
                if (cljs.core.not.call(null, b)) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, k], null);
                }
                f = c;
                g = e;
                c = f;
                e = g;
                f = k;
              }
            }(), p = cljs.core.nth.call(null, n, 0, null), q = cljs.core.nth.call(null, n, 1, null), r = null == q, n = r ? cljs.core.mapv.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
              return function(a) {
                var b = cljs.core.nth.call(null, a, 0, null);
                a = cljs.core.nth.call(null, a, 1, null);
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b + 1, a], null);
              };
            }(n, p, q, r, a, b, c, d, e, f, g, h, k, l), p) : p, p = function() {
              if (cljs.core.truth_(q)) {
                if (l) {
                  return q;
                }
                var a = cljs.core.nth.call(null, q, 0, null);
                cljs.core.nth.call(null, q, 1, null);
                return a;
              }
              return null;
            }();
            return taoensso.encore.swapped.call(null, n, p);
          };
        }(u, p, q, a, b, c, d, e, l, n));
      }, q = function(a) {
        var b = null;
        if (0 < arguments.length) {
          for (var b = 0, c = Array(arguments.length - 0);b < c.length;) {
            c[b] = arguments[b + 0], ++b;
          }
          b = new cljs.core.IndexedSeq(c, 0);
        }
        return p.call(this, b);
      };
      q.cljs$lang$maxFixedArity = 0;
      q.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return p(a);
      };
      q.cljs$core$IFn$_invoke$arity$variadic = p;
      return q;
    }();
  }(a, b, c, d, e, null, 0 !== e);
};
taoensso.encore.rate_limit = function(a, b) {
  return function(a) {
    return function() {
      var d = function(d) {
        d = a.call(null);
        return cljs.core.truth_(d) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, d], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b.call(null), null], null);
      }, e = function(a) {
        var b = null;
        if (0 < arguments.length) {
          for (var b = 0, c = Array(arguments.length - 0);b < c.length;) {
            c[b] = arguments[b + 0], ++b;
          }
          b = new cljs.core.IndexedSeq(c, 0);
        }
        return d.call(this, b);
      };
      e.cljs$lang$maxFixedArity = 0;
      e.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return d(a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }();
  }(taoensso.encore.rate_limiter_STAR_.call(null, a));
};
taoensso.encore.nano_time = function() {
  var a = function() {
    var a = "undefined" !== typeof window;
    return a ? window.performance : a;
  }();
  if (cljs.core.truth_(a)) {
    var b = function() {
      var b = a.now;
      if (cljs.core.truth_(b)) {
        return b;
      }
      b = a.mozNow;
      if (cljs.core.truth_(b)) {
        return b;
      }
      b = a.msNow;
      if (cljs.core.truth_(b)) {
        return b;
      }
      b = a.oNow;
      return cljs.core.truth_(b) ? b : a.webkitNow;
    }();
    return cljs.core.truth_(b) ? function(a, b, e, f) {
      return function() {
        return cljs.core.long$.call(null, 1E6 * a.call(e));
      };
    }(b, b, a, a) : function(a, b, e) {
      return function() {
        return 1E6 * taoensso.encore.now_udt.call(null);
      };
    }(b, a, a);
  }
  return function(a) {
    return function() {
      return 1E6 * taoensso.encore.now_udt.call(null);
    };
  }(a);
}();
taoensso.encore.spaced_str_with_nils;
taoensso.encore.console_log = function() {
  var a = function() {
    var a = "undefined" !== typeof console;
    return a ? console.log : a;
  }();
  return cljs.core.truth_(a) ? function(a, c) {
    return function(c) {
      return a.apply(console, cljs.core.into_array.call(null, c));
    };
  }(a, a) : function(a) {
    return function(a) {
      return null;
    };
  }(a);
}();
taoensso.encore.log = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return taoensso.encore.log.cljs$core$IFn$_invoke$arity$variadic(b);
};
taoensso.encore.log.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return taoensso.encore.console_log.call(null, a);
};
taoensso.encore.log.cljs$lang$maxFixedArity = 0;
taoensso.encore.log.cljs$lang$applyTo = function(a) {
  return taoensso.encore.log.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
taoensso.encore.logp = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return taoensso.encore.logp.cljs$core$IFn$_invoke$arity$variadic(b);
};
taoensso.encore.logp.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return taoensso.encore.console_log.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [taoensso.encore.spaced_str_with_nils.call(null, a)], null));
};
taoensso.encore.logp.cljs$lang$maxFixedArity = 0;
taoensso.encore.logp.cljs$lang$applyTo = function(a) {
  return taoensso.encore.logp.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
taoensso.encore.logf = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.logf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.logf.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return taoensso.encore.console_log.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [taoensso.encore.format_STAR_.call(null, a, b)], null));
};
taoensso.encore.logf.cljs$lang$maxFixedArity = 1;
taoensso.encore.logf.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.logf.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.sayp = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return taoensso.encore.sayp.cljs$core$IFn$_invoke$arity$variadic(b);
};
taoensso.encore.sayp.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return alert(taoensso.encore.spaced_str_with_nils.call(null, a));
};
taoensso.encore.sayp.cljs$lang$maxFixedArity = 0;
taoensso.encore.sayp.cljs$lang$applyTo = function(a) {
  return taoensso.encore.sayp.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
taoensso.encore.sayf = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.sayf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.sayf.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return alert(taoensso.encore.format_STAR_.call(null, a, b));
};
taoensso.encore.sayf.cljs$lang$maxFixedArity = 1;
taoensso.encore.sayf.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.sayf.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.get_window_location = function() {
  var a = window.location;
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "href", "href", -793805698), a.href, new cljs.core.Keyword(null, "protocol", "protocol", 652470118), a.protocol, new cljs.core.Keyword(null, "hostname", "hostname", 2105669933), a.hostname, new cljs.core.Keyword(null, "host", "host", -1558485167), a.host, new cljs.core.Keyword(null, "pathname", "pathname", -1420497528), a.pathname, new cljs.core.Keyword(null, "search", "search", 1564939822), a.search, new cljs.core.Keyword(null, 
  "hash", "hash", -13781596), a.hash], null);
};
taoensso.encore.xhr_pool_ = new cljs.core.Delay(function() {
  return new goog.net.XhrIoPool;
}, null);
taoensso.encore.get_pooled_xhr_BANG_ = function() {
  var a = cljs.core.deref.call(null, taoensso.encore.xhr_pool_).getObject();
  return void 0 === a ? null : a;
};
taoensso.encore.coerce_xhr_params = function(a, b, c) {
  if (!cljs.core.truth_(function() {
    try {
      return cljs.core.truth_(taoensso.truss.impl._invar_pred.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), cljs.core.nil_QMARK_, cljs.core.map_QMARK_], null)).call(null, c)) ? !0 : taoensso.truss.impl._invar_violation_BANG_.call(null);
    } catch (a) {
      if (a instanceof Error) {
        return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "([:or nil? map?] params)", c, a, null);
      }
      throw a;
    }
  }())) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null)], null), new cljs.core.Symbol(null, "params", "params", -1943919534, 
    null))))].join(""));
  }
  var d = cljs.core.empty_QMARK_.call(null, c) ? null : function() {
    var a = goog.Uri.QueryData.createFromMap(new goog.structs.Map(cljs.core.clj__GT_js.call(null, c))).toString();
    return clojure.string.blank_QMARK_.call(null, a) ? null : a;
  }();
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "get":
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(d) ? [cljs.core.str(a), cljs.core.str("?"), cljs.core.str(d)].join("") : a, null], null);
    case "post":
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, d], null);
    case "put":
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, d], null);
    default:
      throw Error([cljs.core.str("No matching clause: "), cljs.core.str(b)].join(""));;
  }
};
taoensso.encore.ajax_lite = function(a, b, c) {
  var d = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b, e = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "get", "get", 1683182755)), f = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "params", "params", 710516235)), g = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "headers", "headers", -835030129)), h = cljs.core.get.call(null, 
  d, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), 1E4), k = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "resp-type", "resp-type", 1050675962), new cljs.core.Keyword(null, "auto", "auto", -566279492)), m = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "with-credentials?", "with-credentials?", -1773202222)), l = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "progress-fn", "progress-fn", -1146547855)), n = cljs.core.get.call(null, d, new cljs.core.Keyword(null, 
  "errorf", "errorf", -620376044), taoensso.encore.logf);
  if (!cljs.core.truth_(function() {
    try {
      return cljs.core.truth_(taoensso.truss.impl._invar_pred.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), cljs.core.nil_QMARK_, taoensso.encore.nneg_int_QMARK_], null)).call(null, h)) ? !0 : taoensso.truss.impl._invar_violation_BANG_.call(null);
    } catch (a) {
      if (a instanceof Error) {
        return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "([:or nil? nneg-int?] timeout-ms)", h, a, null);
      }
      throw a;
    }
  }())) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "nneg-int?", "nneg-int?", 803479360, null)], null), new cljs.core.Symbol(null, "timeout-ms", "timeout-ms", 
    -1900214363, null))))].join(""));
  }
  var p = taoensso.encore.get_pooled_xhr_BANG_.call(null);
  if (cljs.core.truth_(p)) {
    try {
      var q = function() {
        var a = (new cljs.core.Keyword(null, "timeout", "timeout", -318625318)).cljs$core$IFn$_invoke$arity$1(d);
        return cljs.core.truth_(a) ? a : h;
      }(), r = function() {
        switch(e instanceof cljs.core.Keyword ? e.fqn : null) {
          case "get":
            return "GET";
          case "post":
            return "POST";
          case "put":
            return "PUT";
          default:
            throw Error([cljs.core.str("No matching clause: "), cljs.core.str(e)].join(""));;
        }
      }(), t = taoensso.encore.map_keys.call(null, cljs.core.name, f), u = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, ["X-Requested-With", "XMLHTTPRequest"], null), taoensso.encore.map_keys.call(null, cljs.core.name, g)), v = taoensso.encore.coerce_xhr_params.call(null, a, e, t), w = cljs.core.nth.call(null, v, 0, null), x = cljs.core.nth.call(null, v, 1, null), y = cljs.core.clj__GT_js.call(null, cljs.core.not.call(null, x) ? u : cljs.core.assoc.call(null, u, "Content-Type", 
      "application/x-www-form-urlencoded; charset\x3dUTF-8"));
      goog.events.listenOnce(p, goog.net.EventType.READY, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, z, B) {
        return function(a) {
          return cljs.core.deref.call(null, taoensso.encore.xhr_pool_).releaseObject(l);
        };
      }(p, q, r, t, u, v, w, x, y, p, p, b, d, d, e, f, g, h, k, m, l, n));
      goog.events.listenOnce(p, goog.net.EventType.COMPLETE, function(a, b, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, z, B, y) {
        return function(O) {
          var V = m.getStatus(), ia = m.isSuccess(), ba = cljs.core.not_EQ_.call(null, V, -1) ? V : null, ea = cljs.core.truth_(ba) ? m.getResponseHeader("Content-Type") : null, fa = cljs.core.truth_(ba) ? function() {
            var c = cljs.core._EQ_.call(null, x, new cljs.core.Keyword(null, "auto", "auto", -566279492)) ? function() {
              var c = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, I, A, w, E, C, x, z, D) {
                return function(a, b) {
                  return taoensso.encore.str_contains_QMARK_.call(null, b, a);
                };
              }(V, ia, ba, ea, a, b, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, z, B, y), O = "" + cljs.core.str(ea);
              if (cljs.core.truth_(c.call(null, "/edn", O))) {
                return new cljs.core.Keyword(null, "edn", "edn", 1317840885);
              }
              if (cljs.core.truth_(c.call(null, "/json", O))) {
                return new cljs.core.Keyword(null, "json", "json", 1279968570);
              }
              if (cljs.core.truth_(c.call(null, "/xml", O))) {
                return new cljs.core.Keyword(null, "xml", "xml", -1170142052);
              }
              cljs.core.truth_(c.call(null, "/html", O));
              return new cljs.core.Keyword(null, "text", "text", -1790561697);
            }() : x;
            try {
              switch(c instanceof cljs.core.Keyword ? c.fqn : null) {
                case "text":
                  return m.getResponseText();
                case "json":
                  return m.getResponseJson();
                case "xml":
                  return m.getResponseXml();
                case "edn":
                  return taoensso.encore.read_edn.call(null, m.getResponseText());
                default:
                  throw Error([cljs.core.str("No matching clause: "), cljs.core.str(c)].join(""));;
              }
            } catch (O) {
              if (O instanceof Error) {
                return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("ajax", "bad-response-type", "ajax/bad-response-type", 789441015), c, new cljs.core.Keyword("ajax", "resp-as-text", "ajax/resp-as-text", 141416819), m.getResponseText()], null);
              }
              throw O;
            }
          }() : null;
          O = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "raw-resp", "raw-resp", -1924342506), O, new cljs.core.Keyword(null, "xhr", "xhr", -177710851), m, new cljs.core.Keyword(null, "success?", "success?", -122854052), ia, new cljs.core.Keyword(null, "?content-type", "?content-type", -2129759049), cljs.core.truth_(ba) ? ea : null, new cljs.core.Keyword(null, "?content", "?content", 1697782054), fa, new cljs.core.Keyword(null, "?status", "?status", 938730360), ba, new cljs.core.Keyword(null, 
          "?error", "?error", 1070752222), function() {
            var a;
            a = cljs.core.truth_(ba) ? cljs.core.truth_(ia) ? null : ba : cljs.core.get.call(null, cljs.core.PersistentArrayMap.fromArray([goog.net.ErrorCode.EXCEPTION, new cljs.core.Keyword(null, "exception", "exception", -335277064), goog.net.ErrorCode.HTTP_ERROR, new cljs.core.Keyword(null, "http-error", "http-error", -1040049553), goog.net.ErrorCode.ABORT, new cljs.core.Keyword(null, "abort", "abort", 521193198), goog.net.ErrorCode.TIMEOUT, new cljs.core.Keyword(null, "timeout", "timeout", -318625318)], 
            !0, !1), m.getLastErrorCode(), new cljs.core.Keyword(null, "unknown", "unknown", -935977881));
            return cljs.core.truth_(a) ? a : null == fa && cljs.core.not.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [204, null, 1223, null], null), null)).call(null, ba)) ? new cljs.core.Keyword(null, "no-content", "no-content", -1860206018) : null;
          }()], null);
          return c.call(null, O);
        };
      }(p, q, r, t, u, v, w, x, y, p, p, b, d, d, e, f, g, h, k, m, l, n));
      cljs.core.truth_(l) && goog.events.listen(p, goog.net.EventType.PROGRESS, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, z, B, y) {
        return function(b) {
          var c = b.lengthComputable, d = b.loaded, e = b.total, f = cljs.core.truth_(cljs.core.truth_(c) ? cljs.core.not_EQ_.call(null, e, 0) : c) ? d / e : null;
          return a.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "?ratio", "?ratio", -1275760831), f, new cljs.core.Keyword(null, "length-computable?", "length-computable?", 1915473276), c, new cljs.core.Keyword(null, "loaded", "loaded", -1246482293), d, new cljs.core.Keyword(null, "total", "total", 1916810418), e, new cljs.core.Keyword(null, "ev", "ev", -406827324), b], null));
        };
      }(l, l, q, r, t, u, v, w, x, y, p, p, b, d, d, e, f, g, h, k, m, l, n));
      var z = new cljs.core.Keyword(null, "always", "always", -1772028770);
      cljs.core.truth_(z) && p.setTimeoutInterval(cljs.core.truth_(q) ? q : 0);
      cljs.core.truth_(m) && p.setWithCredentials(!0);
      var B = new cljs.core.Keyword(null, "always", "always", -1772028770);
      cljs.core.truth_(B) && p.send(w, r, x, y);
      return p;
    } catch (I) {
      if (I instanceof Error) {
        return cljs.core.deref.call(null, taoensso.encore.xhr_pool_).releaseObject(p), null;
      }
      throw I;
    }
  } else {
    return c.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "?error", "?error", 1070752222), new cljs.core.Keyword(null, "xhr-pool-depleted", "xhr-pool-depleted", -1812092376)], null)), null;
  }
};
taoensso.encore.url_encode = function(a) {
  return cljs.core.truth_(a) ? clojure.string.replace.call(null, clojure.string.replace.call(null, encodeURIComponent("" + cljs.core.str(a), a), "*", "%2A"), "'", "%27") : null;
};
taoensso.encore.url_decode = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.url_decode.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.url_decode.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  cljs.core.nth.call(null, b, 0, null);
  return cljs.core.truth_(a) ? decodeURIComponent(a) : null;
};
taoensso.encore.url_decode.cljs$lang$maxFixedArity = 1;
taoensso.encore.url_decode.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.url_decode.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.format_query_string = function(a) {
  var b = function(a, b) {
    return [cljs.core.str(taoensso.encore.url_encode.call(null, taoensso.encore.qname.call(null, a))), cljs.core.str("\x3d"), cljs.core.str(taoensso.encore.url_encode.call(null, function() {
      var a = taoensso.encore.as__QMARK_qname.call(null, b);
      return cljs.core.truth_(a) ? a : "" + cljs.core.str(b);
    }()))].join("");
  }, c = function(a) {
    return function(a) {
      return clojure.string.join.call(null, "\x26", a);
    };
  }(b);
  return cljs.core.empty_QMARK_.call(null, a) ? "" : c.call(null, function() {
    return function(a, b) {
      return function g(c) {
        return new cljs.core.LazySeq(null, function(a, b) {
          return function() {
            for (var d = c;;) {
              if (d = cljs.core.seq.call(null, d)) {
                if (cljs.core.chunked_seq_QMARK_.call(null, d)) {
                  var e = cljs.core.chunk_first.call(null, d), p = cljs.core.count.call(null, e), q = cljs.core.chunk_buffer.call(null, p);
                  return function() {
                    for (var c = 0;;) {
                      if (c < p) {
                        var d = cljs.core._nth.call(null, e, c), g = cljs.core.nth.call(null, d, 0, null), h = cljs.core.nth.call(null, d, 1, null);
                        cljs.core.truth_(taoensso.encore.nnil_QMARK_.call(null, h)) && cljs.core.chunk_append.call(null, q, cljs.core.sequential_QMARK_.call(null, h) ? b.call(null, cljs.core.mapv.call(null, cljs.core.partial.call(null, a, g), function() {
                          var a = cljs.core.seq.call(null, h);
                          return a ? a : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [""], null);
                        }())) : a.call(null, g, h));
                        c += 1;
                      } else {
                        return !0;
                      }
                    }
                  }() ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, q), g.call(null, cljs.core.chunk_rest.call(null, d))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, q), null);
                }
                var r = cljs.core.first.call(null, d), t = cljs.core.nth.call(null, r, 0, null), u = cljs.core.nth.call(null, r, 1, null);
                if (cljs.core.truth_(taoensso.encore.nnil_QMARK_.call(null, u))) {
                  return cljs.core.cons.call(null, cljs.core.sequential_QMARK_.call(null, u) ? b.call(null, cljs.core.mapv.call(null, cljs.core.partial.call(null, a, t), function() {
                    var a = cljs.core.seq.call(null, u);
                    return a ? a : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [""], null);
                  }())) : a.call(null, t, u), g.call(null, cljs.core.rest.call(null, d)));
                }
                d = cljs.core.rest.call(null, d);
              } else {
                return null;
              }
            }
          };
        }(a, b), null, null);
      };
    }(b, c).call(null, a);
  }());
};
taoensso.encore.assoc_conj = function(a, b, c) {
  return cljs.core.assoc.call(null, a, b, function() {
    var d = cljs.core.get.call(null, a, b);
    return cljs.core.truth_(d) ? cljs.core.vector_QMARK_.call(null, d) ? cljs.core.conj.call(null, d, c) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, c], null) : c;
  }());
};
taoensso.encore.parse_query_params = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.parse_query_params.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.parse_query_params.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null), e = clojure.string.blank_QMARK_.call(null, a) ? cljs.core.PersistentArrayMap.EMPTY : function() {
    var e = cljs.core.truth_(taoensso.encore.str_starts_with_QMARK_.call(null, a, "?")) ? taoensso.encore.substr.call(null, a, 1) : a;
    if (cljs.core.not.call(null, taoensso.encore.str_contains_QMARK_.call(null, e, "\x3d"))) {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
    e = cljs.core.reduce.call(null, function(a, b, c, d) {
      return function(a, b) {
        var c = clojure.string.split.call(null, b, /=/, 2);
        if (cljs.core.truth_(c)) {
          var e = cljs.core.nth.call(null, c, 0, null), c = cljs.core.nth.call(null, c, 1, null);
          return taoensso.encore.assoc_conj.call(null, a, taoensso.encore.url_decode.call(null, e, d), taoensso.encore.url_decode.call(null, c, d));
        }
        return a;
      };
    }(e, b, c, d), cljs.core.PersistentArrayMap.EMPTY, clojure.string.split.call(null, e, /&/));
    return cljs.core.not.call(null, c) ? e : taoensso.encore.keywordize_map.call(null, e);
  }();
  if (!cljs.core.truth_(function() {
    try {
      return cljs.core.map_QMARK_.call(null, e) ? !0 : taoensso.truss.impl._invar_violation_BANG_.call(null);
    } catch (a) {
      if (a instanceof Error) {
        return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.encore", null, "(map? %)", e, a, null);
      }
      throw a;
    }
  }())) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "%", "%", -950237169, null))))].join(""));
  }
  return e;
};
taoensso.encore.parse_query_params.cljs$lang$maxFixedArity = 1;
taoensso.encore.parse_query_params.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.parse_query_params.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.merge_url_with_query_string = function(a, b) {
  var c = clojure.string.split.call(null, "" + cljs.core.str(a), /\?/, 2), d = cljs.core.nth.call(null, c, 0, null), c = cljs.core.nth.call(null, c, 1, null), c = cljs.core.merge.call(null, cljs.core.truth_(c) ? taoensso.encore.keywordize_map.call(null, taoensso.encore.parse_query_params.call(null, c)) : null, taoensso.encore.keywordize_map.call(null, b)), c = taoensso.encore.as__QMARK_nblank.call(null, taoensso.encore.format_query_string.call(null, c));
  return cljs.core.truth_(c) ? [cljs.core.str(d), cljs.core.str("?"), cljs.core.str(c)].join("") : d;
};
taoensso.encore.a0_memoize_ = taoensso.encore.memoize_a0_;
taoensso.encore.a1_memoize_ = taoensso.encore.memoize_a1_;
taoensso.encore.spaced_str_with_nils = function(a) {
  return clojure.string.join.call(null, " ", cljs.core.mapv.call(null, taoensso.encore.nil__GT_str, a));
};
taoensso.encore.spaced_str = function(a) {
  return clojure.string.join.call(null, " ", cljs.core.mapv.call(null, taoensso.encore.undefined__GT_nil, a));
};
taoensso.encore.backport_run_BANG_ = taoensso.encore.run_BANG__STAR_;
taoensso.encore.fq_name = taoensso.encore.qname;
taoensso.encore.memoize_1 = taoensso.encore.memoize1;
taoensso.encore.round = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.round.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.round.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null);
  return taoensso.encore.round_STAR_.call(null, cljs.core.truth_(c) ? c : new cljs.core.Keyword(null, "round", "round", 2009433328), d, a);
};
taoensso.encore.round.cljs$lang$maxFixedArity = 1;
taoensso.encore.round.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.round.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.logging_level = cljs.core.atom.call(null, new cljs.core.Keyword(null, "debug", "debug", -1608172596));
taoensso.encore.set_exp_backoff_timeout_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.set_exp_backoff_timeout_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.set_exp_backoff_timeout_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null);
  return window.setTimeout(a, taoensso.encore.exp_backoff.call(null, cljs.core.truth_(c) ? c : 0));
};
taoensso.encore.set_exp_backoff_timeout_BANG_.cljs$lang$maxFixedArity = 1;
taoensso.encore.set_exp_backoff_timeout_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.set_exp_backoff_timeout_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.keys_EQ_ = function(a, b) {
  return taoensso.encore.ks_EQ_.call(null, b, a);
};
taoensso.encore.keys_LT__EQ_ = function(a, b) {
  return taoensso.encore.ks_LT__EQ_.call(null, b, a);
};
taoensso.encore.keys_GT__EQ_ = function(a, b) {
  return taoensso.encore.ks_GT__EQ_.call(null, b, a);
};
taoensso.encore.keys_EQ_nnil_QMARK_ = function(a, b) {
  return taoensso.encore.ks_nnil_QMARK_.call(null, b, a);
};
taoensso.encore.parse_bool = taoensso.encore.as__QMARK_bool;
taoensso.encore.parse_int = taoensso.encore.as__QMARK_int;
taoensso.encore.parse_float = taoensso.encore.as__QMARK_float;
taoensso.encore.merge_deep_with = taoensso.encore.nested_merge_with;
taoensso.encore.merge_deep = taoensso.encore.nested_merge;
taoensso.encore.rate_limiter = function(a, b) {
  return taoensso.encore.rate_limiter_STAR_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null)], null));
};
taoensso.encore.rate_limited = function(a, b, c) {
  return function(a) {
    return function() {
      var b = function(b) {
        b = a.call(null);
        return cljs.core.truth_(b) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "backoff-ms", "backoff-ms", 1679281507), b], null) : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "result", "result", 1415092211), c.call(null)], null);
      }, f = function(a) {
        var c = null;
        if (0 < arguments.length) {
          for (var c = 0, d = Array(arguments.length - 0);c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0);
        }
        return b.call(this, c);
      };
      f.cljs$lang$maxFixedArity = 0;
      f.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      f.cljs$core$IFn$_invoke$arity$variadic = b;
      return f;
    }();
  }(taoensso.encore.rate_limiter_STAR_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null)], null)));
};
"undefined" === typeof taoensso.encore._STAR_log_level_STAR_ && (taoensso.encore._STAR_log_level_STAR_ = new cljs.core.Keyword(null, "debug", "debug", -1608172596));
taoensso.encore.log_QMARK_ = function() {
  return function(a) {
    return function(b) {
      return a.call(null, b) >= a.call(null, taoensso.encore._STAR_log_level_STAR_);
    };
  }(new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "trace", "trace", -1082747415), 1, new cljs.core.Keyword(null, "debug", "debug", -1608172596), 2, new cljs.core.Keyword(null, "info", "info", -317069002), 3, new cljs.core.Keyword(null, "warn", "warn", -436710552), 4, new cljs.core.Keyword(null, "error", "error", -978969032), 5, new cljs.core.Keyword(null, "fatal", "fatal", 1874419888), 6, new cljs.core.Keyword(null, "report", "report", 1394055010), 7], null));
}();
taoensso.encore.tracef = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.tracef.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.tracef.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "trace", "trace", -1082747415))) ? cljs.core.apply.call(null, taoensso.encore.logf, a, b) : null;
};
taoensso.encore.tracef.cljs$lang$maxFixedArity = 1;
taoensso.encore.tracef.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.tracef.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.debugf = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.debugf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.debugf.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "debug", "debug", -1608172596))) ? cljs.core.apply.call(null, taoensso.encore.logf, a, b) : null;
};
taoensso.encore.debugf.cljs$lang$maxFixedArity = 1;
taoensso.encore.debugf.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.debugf.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.infof = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.infof.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.infof.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "info", "info", -317069002))) ? cljs.core.apply.call(null, taoensso.encore.logf, a, b) : null;
};
taoensso.encore.infof.cljs$lang$maxFixedArity = 1;
taoensso.encore.infof.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.infof.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.warnf = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.warnf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.warnf.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "warn", "warn", -436710552))) ? cljs.core.apply.call(null, taoensso.encore.logf, [cljs.core.str("WARN: "), cljs.core.str(a)].join(""), b) : null;
};
taoensso.encore.warnf.cljs$lang$maxFixedArity = 1;
taoensso.encore.warnf.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.warnf.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.errorf = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.errorf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.errorf.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032))) ? cljs.core.apply.call(null, taoensso.encore.logf, [cljs.core.str("ERROR: "), cljs.core.str(a)].join(""), b) : null;
};
taoensso.encore.errorf.cljs$lang$maxFixedArity = 1;
taoensso.encore.errorf.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.errorf.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.fatalf = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.fatalf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.fatalf.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "fatal", "fatal", 1874419888))) ? cljs.core.apply.call(null, taoensso.encore.logf, [cljs.core.str("FATAL: "), cljs.core.str(a)].join(""), b) : null;
};
taoensso.encore.fatalf.cljs$lang$maxFixedArity = 1;
taoensso.encore.fatalf.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.fatalf.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.reportf = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.reportf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.reportf.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "report", "report", 1394055010))) ? cljs.core.apply.call(null, taoensso.encore.logf, a, b) : null;
};
taoensso.encore.reportf.cljs$lang$maxFixedArity = 1;
taoensso.encore.reportf.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.reportf.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.greatest = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.greatest.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.greatest.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.truth_(c) ? c : taoensso.encore.rcompare;
  return cljs.core.reduce.call(null, function(a, b, c) {
    return function(b, c) {
      return 0 < a.call(null, b, c) ? c : b;
    };
  }(d, b, c), a);
};
taoensso.encore.greatest.cljs$lang$maxFixedArity = 1;
taoensso.encore.greatest.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.greatest.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.least = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.encore.least.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.encore.least.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.truth_(c) ? c : taoensso.encore.rcompare;
  return cljs.core.reduce.call(null, function(a, b, c) {
    return function(b, c) {
      return 0 > a.call(null, b, c) ? c : b;
    };
  }(d, b, c), a);
};
taoensso.encore.least.cljs$lang$maxFixedArity = 1;
taoensso.encore.least.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.encore.least.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.encore.clj1098 = function(a) {
  return cljs.core.truth_(a) ? a : cljs.core.PersistentArrayMap.EMPTY;
};
taoensso.sente = {};
taoensso.sente.interfaces = {};
taoensso.sente.interfaces.IServerChan = function() {
};
taoensso.sente.interfaces.sch_open_QMARK_ = function(a) {
  if (null != a && null != a.taoensso$sente$interfaces$IServerChan$sch_open_QMARK_$arity$1) {
    return a.taoensso$sente$interfaces$IServerChan$sch_open_QMARK_$arity$1(a);
  }
  var b = taoensso.sente.interfaces.sch_open_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = taoensso.sente.interfaces.sch_open_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IServerChan.sch-open?", a);
};
taoensso.sente.interfaces.sch_close_BANG_ = function(a) {
  if (null != a && null != a.taoensso$sente$interfaces$IServerChan$sch_close_BANG_$arity$1) {
    return a.taoensso$sente$interfaces$IServerChan$sch_close_BANG_$arity$1(a);
  }
  var b = taoensso.sente.interfaces.sch_close_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = taoensso.sente.interfaces.sch_close_BANG_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IServerChan.sch-close!", a);
};
taoensso.sente.interfaces._sch_send_BANG_ = function(a, b, c) {
  if (null != a && null != a.taoensso$sente$interfaces$IServerChan$_sch_send_BANG_$arity$3) {
    return a.taoensso$sente$interfaces$IServerChan$_sch_send_BANG_$arity$3(a, b, c);
  }
  var d = taoensso.sente.interfaces._sch_send_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = taoensso.sente.interfaces._sch_send_BANG_._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "IServerChan.-sch-send!", a);
};
taoensso.sente.interfaces.sch_send_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return taoensso.sente.interfaces.sch_send_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return taoensso.sente.interfaces.sch_send_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
taoensso.sente.interfaces.sch_send_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return taoensso.sente.interfaces._sch_send_BANG_.call(null, a, b, !1);
};
taoensso.sente.interfaces.sch_send_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return taoensso.sente.interfaces._sch_send_BANG_.call(null, a, b, c);
};
taoensso.sente.interfaces.sch_send_BANG_.cljs$lang$maxFixedArity = 3;
taoensso.sente.interfaces.IServerChanAdapter = function() {
};
taoensso.sente.interfaces.ring_req__GT_server_ch_resp = function(a, b, c) {
  if (null != a && null != a.taoensso$sente$interfaces$IServerChanAdapter$ring_req__GT_server_ch_resp$arity$3) {
    return a.taoensso$sente$interfaces$IServerChanAdapter$ring_req__GT_server_ch_resp$arity$3(a, b, c);
  }
  var d = taoensso.sente.interfaces.ring_req__GT_server_ch_resp[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = taoensso.sente.interfaces.ring_req__GT_server_ch_resp._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "IServerChanAdapter.ring-req-\x3eserver-ch-resp", a);
};
taoensso.sente.interfaces.IPacker = function() {
};
taoensso.sente.interfaces.pack = function(a, b) {
  if (null != a && null != a.taoensso$sente$interfaces$IPacker$pack$arity$2) {
    return a.taoensso$sente$interfaces$IPacker$pack$arity$2(a, b);
  }
  var c = taoensso.sente.interfaces.pack[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = taoensso.sente.interfaces.pack._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IPacker.pack", a);
};
taoensso.sente.interfaces.unpack = function(a, b) {
  if (null != a && null != a.taoensso$sente$interfaces$IPacker$unpack$arity$2) {
    return a.taoensso$sente$interfaces$IPacker$unpack$arity$2(a, b);
  }
  var c = taoensso.sente.interfaces.unpack[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = taoensso.sente.interfaces.unpack._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IPacker.unpack", a);
};
taoensso.sente.interfaces.EdnPacker = function() {
};
taoensso.sente.interfaces.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$ = !0;
taoensso.sente.interfaces.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$pack$arity$2 = function(a, b) {
  return taoensso.encore.pr_edn.call(null, b);
};
taoensso.sente.interfaces.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$unpack$arity$2 = function(a, b) {
  return taoensso.encore.read_edn.call(null, b);
};
taoensso.sente.interfaces.EdnPacker.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
taoensso.sente.interfaces.EdnPacker.cljs$lang$type = !0;
taoensso.sente.interfaces.EdnPacker.cljs$lang$ctorStr = "taoensso.sente.interfaces/EdnPacker";
taoensso.sente.interfaces.EdnPacker.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "taoensso.sente.interfaces/EdnPacker");
};
taoensso.sente.interfaces.__GT_EdnPacker = function() {
  return new taoensso.sente.interfaces.EdnPacker;
};
taoensso.sente.interfaces.edn_packer = taoensso.sente.interfaces.__GT_EdnPacker.call(null);
taoensso.sente.interfaces.coerce_packer = function(a) {
  if (cljs.core._EQ_.call(null, a, new cljs.core.Keyword(null, "edn", "edn", 1317840885))) {
    return taoensso.sente.interfaces.edn_packer;
  }
  if (!(null != a ? a.taoensso$sente$interfaces$IPacker$ || (a.cljs$lang$protocol_mask$partition$ ? 0 : cljs.core.native_satisfies_QMARK_.call(null, taoensso.sente.interfaces.IPacker, a)) : cljs.core.native_satisfies_QMARK_.call(null, taoensso.sente.interfaces.IPacker, a))) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str("" + cljs.core.str("Given packer doesn't satisfy IPacker protocol?")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IPacker", "IPacker", 266151414, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))].join(""));
  }
  return a;
};
taoensso.timbre = {};
taoensso.timbre.appenders = {};
taoensso.timbre.appenders.core = {};
taoensso.timbre.appenders.core.println_appender = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return taoensso.timbre.appenders.core.println_appender.cljs$core$IFn$_invoke$arity$variadic(b);
};
taoensso.timbre.appenders.core.println_appender.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null);
  return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "enabled?", "enabled?", -1376075057), !0, new cljs.core.Keyword(null, "async?", "async?", 1523057758), !1, new cljs.core.Keyword(null, "min-level", "min-level", 1634684919), null, new cljs.core.Keyword(null, "rate-limit", "rate-limit", 1748082022), null, new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539), new cljs.core.Keyword(null, "inherit", "inherit", -1840815422), new cljs.core.Keyword(null, "fn", "fn", 
  -1175266204), function(a, b) {
    return function(a) {
      var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539));
      return cljs.core.println.call(null, b.call(null, a));
    };
  }(a, b)], null);
};
taoensso.timbre.appenders.core.println_appender.cljs$lang$maxFixedArity = 0;
taoensso.timbre.appenders.core.println_appender.cljs$lang$applyTo = function(a) {
  return taoensso.timbre.appenders.core.println_appender.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
taoensso.timbre.appenders.core.console__QMARK_appender = function() {
  var a = function() {
    var a = "undefined" !== typeof console;
    return a ? console.log : a;
  }();
  if (cljs.core.truth_(a)) {
    var b = console.warn, c = console.error, d = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "fatal", "fatal", 1874419888), cljs.core.truth_(c) ? new cljs.core.Keyword(null, "error", "error", -978969032) : new cljs.core.Keyword(null, "info", "info", -317069002), new cljs.core.Keyword(null, "error", "error", -978969032), cljs.core.truth_(c) ? new cljs.core.Keyword(null, "error", "error", -978969032) : new cljs.core.Keyword(null, "info", "info", -317069002), new cljs.core.Keyword(null, 
    "warn", "warn", -436710552), cljs.core.truth_(b) ? new cljs.core.Keyword(null, "warn", "warn", -436710552) : new cljs.core.Keyword(null, "info", "info", -317069002)], null);
    return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "enabled?", "enabled?", -1376075057), !0, new cljs.core.Keyword(null, "async?", "async?", 1523057758), !1, new cljs.core.Keyword(null, "min-level", "min-level", 1634684919), null, new cljs.core.Keyword(null, "rate-limit", "rate-limit", 1748082022), null, new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539), new cljs.core.Keyword(null, "inherit", "inherit", -1840815422), new cljs.core.Keyword(null, "fn", 
    "fn", -1175266204), function(a, b, c, d, k) {
      return function(a) {
        var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "level", "level", 1290497552)), e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539)), b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "vargs_", "vargs_", 552132148)), b = cljs.core.force.call(null, b), f = taoensso.encore.vsplit_first.call(null, 
        b), b = cljs.core.nth.call(null, f, 0, null), f = cljs.core.nth.call(null, f, 1, null);
        a = cljs.core._EQ_.call(null, b, new cljs.core.Keyword("timbre", "raw", "timbre/raw", -1823417723)) ? cljs.core.into_array.call(null, f) : e.call(null, a);
        switch(c.call(null, d) instanceof cljs.core.Keyword ? c.call(null, d).fqn : null) {
          case "error":
            return console.error(a);
          case "warn":
            return console.warn(a);
          default:
            return console.log(a);
        }
      };
    }(b, c, d, a, a)], null);
  }
  return null;
};
cljs.core.vector_QMARK_.call(null, taoensso.encore.encore_version) ? taoensso.encore.assert_min_encore_version.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 31, 3], null)) : taoensso.encore.assert_min_encore_version.call(null, 2.31);
taoensso.timbre.stacktrace;
taoensso.timbre.default_output_fn = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 1:
      return taoensso.timbre.default_output_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return taoensso.timbre.default_output_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
taoensso.timbre.default_output_fn.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return taoensso.timbre.default_output_fn.call(null, null, a);
};
taoensso.timbre.default_output_fn.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "no-stacktrace?", "no-stacktrace?", 1701072694));
  cljs.core.get.call(null, c, new cljs.core.Keyword(null, "stacktrace-fonts", "stacktrace-fonts", 830799382));
  var e = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b, f = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "level", "level", 1290497552)), g = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "?err_", "?err_", 789480858));
  cljs.core.get.call(null, e, new cljs.core.Keyword(null, "vargs_", "vargs_", 552132148));
  var h = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "msg_", "msg_", -1925147E3)), k = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "?ns-str", "?ns-str", 2012733966));
  cljs.core.get.call(null, e, new cljs.core.Keyword(null, "hostname_", "hostname_", -2091647379));
  cljs.core.get.call(null, e, new cljs.core.Keyword(null, "timestamp_", "timestamp_", -954533417));
  return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.name.call(null, f))), cljs.core.str(" "), cljs.core.str("["), cljs.core.str(cljs.core.truth_(k) ? k : "?ns"), cljs.core.str("] - "), cljs.core.str(cljs.core.force.call(null, h)), cljs.core.str(cljs.core.truth_(d) ? null : function() {
    var a = cljs.core.force.call(null, g);
    return cljs.core.truth_(a) ? [cljs.core.str("\n"), cljs.core.str(taoensso.timbre.stacktrace.call(null, a, c))].join("") : null;
  }())].join("");
};
taoensso.timbre.default_output_fn.cljs$lang$maxFixedArity = 2;
taoensso.timbre.default_err;
taoensso.timbre.default_out;
taoensso.timbre.println_appender = taoensso.timbre.appenders.core.println_appender;
taoensso.timbre.console__QMARK_appender = taoensso.timbre.appenders.core.console__QMARK_appender;
taoensso.timbre.example_config = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "level", "level", 1290497552), new cljs.core.Keyword(null, "debug", "debug", -1608172596), new cljs.core.Keyword(null, "ns-whitelist", "ns-whitelist", -1717299774), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "ns-blacklist", "ns-blacklist", 1957763142), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "middleware", "middleware", 1462115504), cljs.core.PersistentVector.EMPTY, 
new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539), taoensso.timbre.default_output_fn, new cljs.core.Keyword(null, "appenders", "appenders", 1245583998), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "console", "console", 1228072057), taoensso.timbre.console__QMARK_appender.call(null, cljs.core.PersistentArrayMap.EMPTY)], null)], null);
"undefined" === typeof taoensso.timbre._STAR_config_STAR_ && (taoensso.timbre._STAR_config_STAR_ = taoensso.timbre.example_config);
taoensso.timbre.swap_config_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.timbre.swap_config_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.timbre.swap_config_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return taoensso.timbre._STAR_config_STAR_ = cljs.core.apply.call(null, a, taoensso.timbre._STAR_config_STAR_, b);
};
taoensso.timbre.swap_config_BANG_.cljs$lang$maxFixedArity = 1;
taoensso.timbre.swap_config_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.timbre.swap_config_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.timbre.set_config_BANG_ = function(a) {
  return taoensso.timbre.swap_config_BANG_.call(null, function(b) {
    return a;
  });
};
taoensso.timbre.merge_config_BANG_ = function(a) {
  return taoensso.timbre.swap_config_BANG_.call(null, function(b) {
    return taoensso.encore.nested_merge.call(null, b, a);
  });
};
taoensso.timbre.set_level_BANG_ = function(a) {
  return taoensso.timbre.swap_config_BANG_.call(null, function(b) {
    return cljs.core.merge.call(null, b, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "level", "level", 1290497552), a], null));
  });
};
taoensso.timbre.ordered_levels = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trace", "trace", -1082747415), new cljs.core.Keyword(null, "debug", "debug", -1608172596), new cljs.core.Keyword(null, "info", "info", -317069002), new cljs.core.Keyword(null, "warn", "warn", -436710552), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "fatal", "fatal", 1874419888), new cljs.core.Keyword(null, "report", 
"report", 1394055010)], null);
taoensso.timbre.scored_levels = cljs.core.zipmap.call(null, taoensso.timbre.ordered_levels, cljs.core.next.call(null, cljs.core.range.call(null)));
taoensso.timbre.valid_levels = cljs.core.set.call(null, taoensso.timbre.ordered_levels);
taoensso.timbre.valid_level = function(a) {
  var b = taoensso.timbre.valid_levels.call(null, a);
  if (cljs.core.truth_(b)) {
    return b;
  }
  throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid logging level: "), cljs.core.str(a)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "level", "level", 1290497552), a], null));
};
taoensso.timbre.level_GT__EQ_ = function(a, b) {
  return cljs.core.long$.call(null, taoensso.timbre.scored_levels.call(null, taoensso.timbre.valid_level.call(null, a))) >= cljs.core.long$.call(null, taoensso.timbre.scored_levels.call(null, taoensso.timbre.valid_level.call(null, b)));
};
taoensso.timbre.compile_ns_filters = function() {
  return taoensso.encore.memoize_.call(null, function(a) {
    return function(b, c) {
      var d = cljs.core.mapv.call(null, a, b), e = cljs.core.mapv.call(null, a, c), f = cljs.core.empty_QMARK_.call(null, d) ? function(a, b, c) {
        return function(a) {
          return !0;
        };
      }(d, e, a) : function(a, b, c) {
        return function(d) {
          return cljs.core.some.call(null, function(a, b, c) {
            return function(a) {
              return cljs.core.re_find.call(null, a, d);
            };
          }(a, b, c), a);
        };
      }(d, e, a), g = cljs.core.empty_QMARK_.call(null, e) ? function(a, b, c, d) {
        return function(a) {
          return !0;
        };
      }(d, e, f, a) : function(a, b, c, d) {
        return function(e) {
          return cljs.core.not.call(null, cljs.core.some.call(null, function(a, b, c, d) {
            return function(a) {
              return cljs.core.re_find.call(null, a, e);
            };
          }(a, b, c, d), b));
        };
      }(d, e, f, a);
      return function(a, b, c, d, e) {
        return function(a) {
          return cljs.core.truth_(function() {
            var b = c.call(null, a);
            return cljs.core.truth_(b) ? d.call(null, a) : b;
          }()) ? a : null;
        };
      }(d, e, f, g, a);
    };
  }(function(a) {
    if (cljs.core.truth_(taoensso.encore.re_pattern_QMARK_.call(null, a))) {
      return a;
    }
    if ("string" === typeof a) {
      return a = clojure.string.replace.call(null, clojure.string.replace.call(null, [cljs.core.str("^"), cljs.core.str(a), cljs.core.str("$")].join(""), ".", "\\."), "*", "(.*)"), cljs.core.re_pattern.call(null, a);
    }
    throw cljs.core.ex_info.call(null, "No matching clause", cljs.core.PersistentArrayMap.EMPTY);
  }));
}();
taoensso.timbre.ns_filter = taoensso.encore.memoize_.call(null, function(a, b, c) {
  return taoensso.timbre.compile_ns_filters.call(null, a, b).call(null, c);
});
taoensso.timbre.str_join = function(a) {
  return taoensso.encore.str_join.call(null, " ", cljs.core.map.call(null, function(a) {
    a = taoensso.encore.nil__GT_str.call(null, a);
    return cljs.core.record_QMARK_.call(null, a) ? cljs.core.pr_str.call(null, a) : a;
  }), a);
};
taoensso.timbre.__GT_delay = function(a) {
  return cljs.core.delay_QMARK_.call(null, a) ? a : new cljs.core.Delay(function() {
    return a;
  }, null);
};
taoensso.timbre.vsplit_err1 = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null);
  return cljs.core.not.call(null, taoensso.encore.error_QMARK_.call(null, b)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, a], null) : taoensso.encore.vsplit_first.call(null, a);
};
taoensso.timbre.default_data_hash_fn = function(a) {
  var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "?ns-str", "?ns-str", 2012733966)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "?line", "?line", -631853385)), e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "vargs_", "vargs_", 552132148)), f = cljs.core.force.call(null, e);
  return "" + cljs.core.str(function() {
    var g = cljs.core.some.call(null, function(a, b, c, d, e, f) {
      return function(a) {
        var b = cljs.core.map_QMARK_.call(null, a);
        return b ? (new cljs.core.Keyword("timbre", "hash", "timbre/hash", -221081827)).cljs$core$IFn$_invoke$arity$1(a) : b;
      };
    }(a, b, c, d, e, f), f);
    return cljs.core.truth_(g) ? g : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, f], null);
  }());
};
"undefined" === typeof taoensso.timbre.get_rate_limiter && (taoensso.timbre.get_rate_limiter = taoensso.encore.memoize_.call(null, function(a, b) {
  return taoensso.encore.rate_limiter_STAR_.call(null, b);
}));
taoensso.timbre.log_QMARK_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.timbre.log_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.timbre.log_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null), d = cljs.core.truth_(d) ? d : taoensso.timbre._STAR_config_STAR_, e;
  e = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$1(d);
  e = cljs.core.truth_(e) ? e : new cljs.core.Keyword(null, "report", "report", 1394055010);
  e = taoensso.timbre.level_GT__EQ_.call(null, a, e);
  return cljs.core.truth_(e) ? (c = taoensso.timbre.ns_filter.call(null, (new cljs.core.Keyword(null, "ns-whitelist", "ns-whitelist", -1717299774)).cljs$core$IFn$_invoke$arity$1(d), (new cljs.core.Keyword(null, "ns-blacklist", "ns-blacklist", 1957763142)).cljs$core$IFn$_invoke$arity$1(d), cljs.core.truth_(c) ? c : ""), cljs.core.truth_(c) ? !0 : c) : e;
};
taoensso.timbre.log_QMARK_.cljs$lang$maxFixedArity = 1;
taoensso.timbre.log_QMARK_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.timbre.log_QMARK_.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.timbre._STAR_context_STAR_ = null;
taoensso.timbre.get_hostname;
taoensso.timbre.inherit_over = function(a, b, c, d) {
  b = cljs.core.get.call(null, b, a);
  b = cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, b, new cljs.core.Keyword(null, "inherit", "inherit", -1840815422))) ? null : b;
  if (cljs.core.truth_(b)) {
    return b;
  }
  a = cljs.core.get.call(null, c, a);
  return cljs.core.truth_(a) ? a : d;
};
taoensso.timbre.inherit_into = function(a, b, c, d) {
  return cljs.core.merge.call(null, d, cljs.core.get.call(null, c, a), function() {
    var c = cljs.core.get.call(null, b, a);
    return cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "inherit", "inherit", -1840815422))) ? null : c;
  }());
};
taoensso.timbre.log1_fn = function(a, b, c, d, e, f, g, h) {
  if (cljs.core.truth_(taoensso.timbre.log_QMARK_.call(null, b, c, a))) {
    var k = taoensso.encore.now_dt.call(null), m = new cljs.core.Delay(function(a) {
      return function() {
        return taoensso.timbre.vsplit_err1.call(null, cljs.core.force.call(null, g));
      };
    }(k), null), l = new cljs.core.Delay(function(a, b) {
      return function() {
        return cljs.core.get.call(null, cljs.core.deref.call(null, b), 0);
      };
    }(k, m), null), n = new cljs.core.Delay(function(a, b, c) {
      return function() {
        return cljs.core.get.call(null, cljs.core.deref.call(null, b), 1);
      };
    }(k, m, l), null), p = taoensso.timbre._STAR_context_STAR_;
    c = cljs.core.merge.call(null, h, cljs.core.map_QMARK_.call(null, p) ? p : null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "instant", "instant", 655498374), new cljs.core.Keyword(null, "config", "config", 994861415), new cljs.core.Keyword(null, "?file", "?file", 1533429675), new cljs.core.Keyword(null, "error-level?", "error-level?", 778415885), new cljs.core.Keyword(null, "?ns-str", "?ns-str", 2012733966), new cljs.core.Keyword(null, "level", "level", 1290497552), new cljs.core.Keyword(null, 
    "vargs_", "vargs_", 552132148), new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "?line", "?line", -631853385), new cljs.core.Keyword(null, "?err_", "?err_", 789480858)], [k, a, d, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fatal", "fatal", 1874419888), null, new cljs.core.Keyword(null, "error", "error", -978969032), null], null), null)).call(null, b), c, b, n, p, e, l]));
    d = function(a, b, c, d, e, g) {
      return function(a) {
        if (null == f) {
          return null;
        }
        var b;
        var c;
        try {
          c = cljs.core.force.call(null, a);
        } catch (d) {
          if (d instanceof Error) {
            c = taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.timbre", null, "([:or nil? vector?] (force vargs_))", taoensso.truss.impl._invar_undefined_val, d, null);
          } else {
            throw d;
          }
        }
        try {
          b = cljs.core.truth_(taoensso.truss.impl._invar_pred.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), cljs.core.nil_QMARK_, cljs.core.vector_QMARK_], null)).call(null, c)) ? c : taoensso.truss.impl._invar_violation_BANG_.call(null);
        } catch (d) {
          if (d instanceof Error) {
            b = taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.timbre", null, "([:or nil? vector?] (force vargs_))", c, d, null);
          } else {
            throw d;
          }
        }
        if (cljs.core.truth_(b)) {
          switch(f instanceof cljs.core.Keyword ? f.fqn : null) {
            case "p":
              return taoensso.timbre.str_join.call(null, b);
            case "f":
              return b = taoensso.encore.vsplit_first.call(null, b), a = cljs.core.nth.call(null, b, 0, null), b = cljs.core.nth.call(null, b, 1, null), taoensso.encore.format_STAR_.call(null, a, b);
            default:
              throw Error([cljs.core.str("No matching clause: "), cljs.core.str(f)].join(""));;
          }
        } else {
          return null;
        }
      };
    }(k, m, l, n, p, c);
    e = cljs.core.reduce.call(null, function(a, b, c, d, e, f, g) {
      return function(a, b) {
        var c = b.call(null, a);
        return null == c ? cljs.core.reduced.call(null, null) : c;
      };
    }(k, m, l, n, p, c, d), c, (new cljs.core.Keyword(null, "middleware", "middleware", 1462115504)).cljs$core$IFn$_invoke$arity$1(a));
    cljs.core.truth_(e) && cljs.core.reduce_kv.call(null, function(c, d, e, f, g, h, k, l, m, n) {
      return function(p, C, A) {
        if (cljs.core.truth_(function() {
          var a = (new cljs.core.Keyword(null, "enabled?", "enabled?", -1376075057)).cljs$core$IFn$_invoke$arity$1(A);
          return cljs.core.truth_(a) ? taoensso.timbre.level_GT__EQ_.call(null, b, function() {
            var a = (new cljs.core.Keyword(null, "min-level", "min-level", 1634684919)).cljs$core$IFn$_invoke$arity$1(A);
            return cljs.core.truth_(a) ? a : new cljs.core.Keyword(null, "trace", "trace", -1082747415);
          }()) : a;
        }())) {
          var F = (new cljs.core.Keyword(null, "rate-limit", "rate-limit", 1748082022)).cljs$core$IFn$_invoke$arity$1(A), K = taoensso.timbre.inherit_over.call(null, new cljs.core.Keyword(null, "data-hash-fn", "data-hash-fn", 1552406760), A, a, taoensso.timbre.default_data_hash_fn), D = function() {
            var a = cljs.core.empty_QMARK_.call(null, F);
            if (a) {
              return a;
            }
            var a = taoensso.timbre.get_rate_limiter.call(null, C, F), b = K.call(null, c);
            return cljs.core.not.call(null, a.call(null, b));
          }();
          if (D) {
            var E = null != A && (A.cljs$lang$protocol_mask$partition0$ & 64 || A.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, A) : A;
            p = cljs.core.get.call(null, E, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
            var H = cljs.core.get.call(null, E, new cljs.core.Keyword(null, "async?", "async?", 1523057758)), D = new cljs.core.Delay(function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) {
              return function() {
                return t.call(null, (new cljs.core.Keyword(null, "vargs_", "vargs_", 552132148)).cljs$core$IFn$_invoke$arity$1(h));
              };
            }(A, E, p, H, F, K, D, c, d, e, f, g, h, k, l, m, n), null), E = taoensso.timbre.inherit_over.call(null, new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539), A, a, taoensso.timbre.default_output_fn), D = cljs.core.merge.call(null, c, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "appender-id", "appender-id", -1917983538), C, new cljs.core.Keyword(null, "appender", "appender", 1267426510), A, new cljs.core.Keyword(null, "msg_", "msg_", -1925147E3), 
            D, new cljs.core.Keyword(null, "msg-fn", "msg-fn", -1873033940), m, new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539), E, new cljs.core.Keyword(null, "data-hash-fn", "data-hash-fn", 1552406760), K], null));
            cljs.core.not.call(null, H);
            return p.call(null, D);
          }
        }
        return null;
      };
    }(e, e, k, m, l, n, p, c, d, e), null, taoensso.encore.clj1098.call(null, (new cljs.core.Keyword(null, "appenders", "appenders", 1245583998)).cljs$core$IFn$_invoke$arity$1(a)));
  }
  return null;
};
taoensso.timbre.stacktrace = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.timbre.stacktrace.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.timbre.stacktrace.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), c = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
  cljs.core.get.call(null, c, new cljs.core.Keyword(null, "stacktrace-fonts", "stacktrace-fonts", 830799382));
  return "" + cljs.core.str(a);
};
taoensso.timbre.stacktrace.cljs$lang$maxFixedArity = 1;
taoensso.timbre.stacktrace.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.timbre.stacktrace.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.timbre.str_println = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return taoensso.timbre.str_println.cljs$core$IFn$_invoke$arity$variadic(b);
};
taoensso.timbre.str_println.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return taoensso.timbre.str_join.call(null, a);
};
taoensso.timbre.str_println.cljs$lang$maxFixedArity = 0;
taoensso.timbre.str_println.cljs$lang$applyTo = function(a) {
  return taoensso.timbre.str_println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
taoensso.timbre.logging_enabled_QMARK_ = function(a, b) {
  return taoensso.timbre.log_QMARK_.call(null, a, "" + cljs.core.str(b));
};
cljs.core.vector_QMARK_.call(null, taoensso.encore.encore_version) ? taoensso.encore.assert_min_encore_version.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 11, 0], null)) : taoensso.encore.assert_min_encore_version.call(null, 2.11);
taoensso.sente.validate_event = function(a) {
  if (cljs.core.vector_QMARK_.call(null, a)) {
    if (cljs.core.not.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [1, null, 2, null], null), null)).call(null, cljs.core.count.call(null, a)))) {
      return new cljs.core.Keyword(null, "wrong-length", "wrong-length", 1367572281);
    }
    var b = cljs.core.nth.call(null, a, 0, null);
    cljs.core.nth.call(null, a, 1, null);
    return b instanceof cljs.core.Keyword ? cljs.core.not.call(null, cljs.core.namespace.call(null, b)) ? new cljs.core.Keyword(null, "unnamespaced-id", "unnamespaced-id", 1976189772) : null : new cljs.core.Keyword(null, "wrong-id-type", "wrong-id-type", -1213601689);
  }
  return new cljs.core.Keyword(null, "wrong-type", "wrong-type", 929556915);
};
taoensso.sente.event_QMARK_ = function(a) {
  return null == taoensso.sente.validate_event.call(null, a);
};
taoensso.sente.as_event = function(a) {
  return cljs.core.truth_(taoensso.sente.event_QMARK_.call(null, a)) ? a : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "bad-event", "chsk/bad-event", -565206930), a], null);
};
taoensso.sente.assert_event = function(a) {
  var b = taoensso.sente.validate_event.call(null, a);
  if (cljs.core.truth_(b)) {
    var c = [cljs.core.str(function() {
      switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
        case "wrong-type":
          return "Malformed event (wrong type).";
        case "wrong-length":
          return "Malformed event (wrong length).";
        case "wrong-id-type":
          return "Malformed event (`ev-id` should be a namespaced keyword).";
        case "unnamespaced-id":
          return "Malformed event (`ev-id` should be a namespaced keyword).";
        case "else":
          return "Malformed event (unknown error).";
        default:
          throw Error([cljs.core.str("No matching clause: "), cljs.core.str(b)].join(""));;
      }
    }()), cljs.core.str(" Event should be of `[ev-id ?ev-data]` form: %s")].join("");
    throw cljs.core.ex_info.call(null, taoensso.encore.format.call(null, c, "" + cljs.core.str(a)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "malformed-event", "malformed-event", -2090896605), a], null));
  }
  return null;
};
taoensso.sente.client_event_msg_QMARK_ = function(a) {
  var b = cljs.core.map_QMARK_.call(null, a);
  if (b && (b = taoensso.encore.keys_EQ_.call(null, a, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "event", "event", 301435442), null, new cljs.core.Keyword(null, "id", "id", -1388402092), null, new cljs.core.Keyword(null, "?data", "?data", -9471433), null, new cljs.core.Keyword(null, "send-fn", "send-fn", 
  351002041), null], null), null)), cljs.core.truth_(b))) {
    var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041));
    a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "state", "state", -1988618099));
    b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "event", "event", 301435442));
    c = taoensso.encore.chan_QMARK_.call(null, c);
    return cljs.core.truth_(c) ? (d = cljs.core.ifn_QMARK_.call(null, d)) ? (a = taoensso.encore.atom_QMARK_.call(null, a), cljs.core.truth_(a) ? taoensso.sente.event_QMARK_.call(null, b) : a) : d : c;
  }
  return b;
};
taoensso.sente.server_event_msg_QMARK_ = function(a) {
  var b = cljs.core.map_QMARK_.call(null, a);
  if (b && (b = taoensso.encore.keys_EQ_.call(null, a, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "?reply-fn", "?reply-fn", -1479510592), null, new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), null, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), null, new cljs.core.Keyword(null, "connected-uids", "connected-uids", 1454332231), null, new cljs.core.Keyword(null, "uid", "uid", -1447769400), null, new cljs.core.Keyword(null, 
  "event", "event", 301435442), null, new cljs.core.Keyword(null, "id", "id", -1388402092), null, new cljs.core.Keyword(null, "ring-req", "ring-req", -747861961), null, new cljs.core.Keyword(null, "?data", "?data", -9471433), null, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041), null], null), null)), cljs.core.truth_(b))) {
    var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041)), e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "connected-uids", "connected-uids", 1454332231)), f = cljs.core.get.call(null, b, new cljs.core.Keyword(null, 
    "ring-req", "ring-req", -747861961)), g = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "client-id", "client-id", -464622140));
    a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "event", "event", 301435442));
    b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "?reply-fn", "?reply-fn", -1479510592));
    c = taoensso.encore.chan_QMARK_.call(null, c);
    return cljs.core.truth_(c) ? (d = cljs.core.ifn_QMARK_.call(null, d)) ? (e = taoensso.encore.atom_QMARK_.call(null, e), cljs.core.truth_(e) ? (f = cljs.core.map_QMARK_.call(null, f)) ? (g = taoensso.encore.nblank_str_QMARK_.call(null, g), cljs.core.truth_(g) ? (a = taoensso.sente.event_QMARK_.call(null, a), cljs.core.truth_(a) ? null == b || cljs.core.ifn_QMARK_.call(null, b) : a) : g) : f : e) : d : c;
  }
  return b;
};
taoensso.sente.put_server_event_msg_GT_ch_recv_BANG_ = function(a, b) {
  var c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "event", "event", 301435442)), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "?reply-fn", "?reply-fn", -1479510592)), f = taoensso.sente.as_event.call(null, d), g = cljs.core.nth.call(null, f, 0, null), h = cljs.core.nth.call(null, f, 1, null), k = cljs.core.merge.call(null, c, new cljs.core.PersistentArrayMap(null, 
  4, [new cljs.core.Keyword(null, "event", "event", 301435442), f, new cljs.core.Keyword(null, "?reply-fn", "?reply-fn", -1479510592), e, new cljs.core.Keyword(null, "id", "id", -1388402092), g, new cljs.core.Keyword(null, "?data", "?data", -9471433), h], null));
  return cljs.core.not.call(null, taoensso.sente.server_event_msg_QMARK_.call(null, k)) ? taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g, h, k, w) {
    return function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Bad ev-msg: %s", h], null);
    };
  }(f, g, h, f, k, b, c, c, d, e), null), null) : cljs.core.async.put_BANG_.call(null, a, k);
};
taoensso.sente.cb_error_QMARK_ = function(a) {
  return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("chsk", "closed", "chsk/closed", -922855264), null, new cljs.core.Keyword("chsk", "error", "chsk/error", -984175439), null, new cljs.core.Keyword("chsk", "timeout", "chsk/timeout", -319776489), null], null), null)).call(null, a);
};
taoensso.sente.cb_success_QMARK_ = function(a) {
  return cljs.core.not.call(null, taoensso.sente.cb_error_QMARK_.call(null, a));
};
taoensso.sente.unpack_STAR_ = function(a, b) {
  try {
    return taoensso.sente.interfaces.unpack.call(null, a, function() {
      try {
        return "string" === typeof b ? b : taoensso.truss.impl._invar_violation_BANG_.call(null);
      } catch (a) {
        if (a instanceof Error) {
          return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.sente", null, "(string? pstr)", b, a, null);
        }
        throw a;
      }
    }());
  } catch (c) {
    return taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "debug", "debug", -1608172596), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Bad package: %s (%s)", b, a], null);
      };
    }(c), null), null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "bad-package", "chsk/bad-package", 501893679), b], null);
  }
};
taoensso.sente.with__QMARK_meta = function(a, b) {
  return cljs.core.seq.call(null, b) ? cljs.core.with_meta.call(null, a, b) : a;
};
taoensso.sente.pack_STAR_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 3:
      return taoensso.sente.pack_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return taoensso.sente.pack_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
taoensso.sente.pack_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return [cljs.core.str("-"), cljs.core.str(taoensso.sente.interfaces.pack.call(null, a, taoensso.sente.with__QMARK_meta.call(null, c, b)))].join("");
};
taoensso.sente.pack_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  d = cljs.core._EQ_.call(null, d, new cljs.core.Keyword(null, "ajax-cb", "ajax-cb", -807060321)) ? 0 : d;
  c = cljs.core.truth_(d) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d], null) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null);
  return [cljs.core.str("+"), cljs.core.str(taoensso.sente.interfaces.pack.call(null, a, taoensso.sente.with__QMARK_meta.call(null, c, b)))].join("");
};
taoensso.sente.pack_STAR_.cljs$lang$maxFixedArity = 4;
taoensso.sente.pack = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return taoensso.sente.pack.cljs$core$IFn$_invoke$arity$variadic(b);
};
taoensso.sente.pack.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  var b = cljs.core.apply.call(null, taoensso.sente.pack_STAR_, a);
  taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(b) {
    return function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Packing: %s -\x3e %s", a, b], null);
    };
  }(b), null), null);
  return b;
};
taoensso.sente.pack.cljs$lang$maxFixedArity = 0;
taoensso.sente.pack.cljs$lang$applyTo = function(a) {
  return taoensso.sente.pack.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
taoensso.sente.unpack = function(a, b) {
  try {
    "string" !== typeof b && taoensso.truss.impl._invar_violation_BANG_.call(null);
  } catch (l) {
    if (l instanceof Error) {
      taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.sente", null, "(string? prefixed-pstr)", b, l, null);
    } else {
      throw l;
    }
  }
  var c = taoensso.encore.substr.call(null, b, 0, 1), d = taoensso.encore.substr.call(null, b, 1), e = taoensso.sente.unpack_STAR_.call(null, a, d), f;
  a: {
    switch(c) {
      case "-":
        f = !1;
        break a;
      case "+":
        f = !0;
        break a;
      default:
        throw Error([cljs.core.str("No matching clause: "), cljs.core.str(c)].join(""));;
    }
  }
  var g = cljs.core.truth_(f) ? e : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, null], null), h = cljs.core.nth.call(null, g, 0, null), k = cljs.core.nth.call(null, g, 1, null), m = cljs.core._EQ_.call(null, 0, k) ? new cljs.core.Keyword(null, "ajax-cb", "ajax-cb", -807060321) : k;
  taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, c, d, e, f, g, h, k) {
    return function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unpacking: %s -\x3e %s", b, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [g, k], null)], null);
    };
  }(c, d, e, f, g, h, k, m), null), null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, m], null);
};
taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_;
taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_;
taoensso.sente.make_channel_socket_server_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c, e = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "recv-buf-or-n", "recv-buf-or-n", 1363950355), cljs.core.async.sliding_buffer.call(null, 1E3)), f = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "send-buf-ms-ajax", "send-buf-ms-ajax", 1546129037), 100), g = cljs.core.get.call(null, d, new cljs.core.Keyword(null, 
  "send-buf-ms-ws", "send-buf-ms-ws", -1149586238), 30), h = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "user-id-fn", "user-id-fn", -1532150029), function(a, b, c, d, e, f) {
    return function(a) {
      return cljs.core.get_in.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "session", "session", 1008279103), new cljs.core.Keyword(null, "uid", "uid", -1447769400)], null));
    };
  }(b, c, d, e, f, g)), k = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "csrf-token-fn", "csrf-token-fn", -1846298394), function(a, b, c, d, e, f, g) {
    return function(a) {
      var b = cljs.core.get_in.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "session", "session", 1008279103), new cljs.core.Keyword(null, "csrf-token", "csrf-token", -1872302856)], null));
      if (cljs.core.truth_(b)) {
        return b;
      }
      b = cljs.core.get_in.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "session", "session", 1008279103), new cljs.core.Keyword("ring.middleware.anti-forgery", "anti-forgery-token", "ring.middleware.anti-forgery/anti-forgery-token", 571563484)], null));
      return cljs.core.truth_(b) ? b : cljs.core.get_in.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "session", "session", 1008279103), "__anti-forgery-token"], null));
    };
  }(b, c, d, e, f, g, h)), m = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "handshake-data-fn", "handshake-data-fn", 2011983089), function(a, b, c, d, e, f, g, h) {
    return function(a) {
      return null;
    };
  }(b, c, d, e, f, g, h, k)), l = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "edn", "edn", 1317840885));
  if (!cljs.core.truth_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    try {
      return cljs.core.truth_(taoensso.encore.pos_int_QMARK_.call(null, f)) ? !0 : taoensso.truss.impl._invar_violation_BANG_.call(null);
    } catch (a) {
      if (a instanceof Error) {
        return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.sente", null, "(enc/pos-int? send-buf-ms-ajax)", f, a, null);
      }
      throw a;
    }
  }(), function() {
    try {
      return cljs.core.truth_(taoensso.encore.pos_int_QMARK_.call(null, g)) ? !0 : taoensso.truss.impl._invar_violation_BANG_.call(null);
    } catch (a) {
      if (a instanceof Error) {
        return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.sente", null, "(enc/pos-int? send-buf-ms-ws)", g, a, null);
      }
      throw a;
    }
  }()], null))) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol("enc", "pos-int?", "enc/pos-int?", -1205796829, null), new cljs.core.Symbol(null, "send-buf-ms-ajax", "send-buf-ms-ajax", -1108306732, null), new cljs.core.Symbol(null, "send-buf-ms-ws", "send-buf-ms-ws", 490945289, null))))].join(""));
  }
  if (!cljs.core.truth_(function() {
    try {
      return function(a, b, c, d, e, f, g, h, k, l, m) {
        return function(a) {
          return null != a ? a.taoensso$sente$interfaces$IServerChanAdapter$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_.call(null, taoensso.sente.interfaces.IServerChanAdapter, a) : cljs.core.native_satisfies_QMARK_.call(null, taoensso.sente.interfaces.IServerChanAdapter, a);
        };
      }(a, b, c, d, e, f, g, h, k, m, l).call(null, a) ? !0 : taoensso.truss.impl._invar_violation_BANG_.call(null);
    } catch (n) {
      if (n instanceof Error) {
        return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.sente", null, "((fn* [p1__26354#] (satisfies? interfaces/IServerChanAdapter p1__26354#)) web-server-adapter)", a, n, null);
      }
      throw n;
    }
  }())) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__26354#", "p1__26354#", 1249871216, null)], null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), 
    new cljs.core.Symbol("interfaces", "IServerChanAdapter", "interfaces/IServerChanAdapter", -455981296, null), new cljs.core.Symbol(null, "p1__26354#", "p1__26354#", 1249871216, null))), new cljs.core.Symbol(null, "web-server-adapter", "web-server-adapter", -1122606046, null))))].join(""));
  }
  var n = taoensso.sente.interfaces.coerce_packer.call(null, l), p = cljs.core.async.chan.call(null, e), q = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ws", "ws", 86841443), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), cljs.core.PersistentArrayMap.EMPTY], null)), r = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), cljs.core.PersistentHashSet.EMPTY, 
  new cljs.core.Keyword(null, "ajax", "ajax", 814345549), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "any", "any", 1705907423), cljs.core.PersistentHashSet.EMPTY], null)), t = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ws", "ws", 86841443), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), cljs.core.PersistentArrayMap.EMPTY], null)), u = function(a, b, c, d, e, f, g, h, k, l, m, n, 
  p, q, r) {
    return function(a, b) {
      var c = n.call(null, cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), b));
      return cljs.core.truth_(c) ? c : new cljs.core.Keyword("taoensso.sente", "nil-uid", "taoensso.sente/nil-uid", -2111603486);
    };
  }(n, p, q, r, t, b, c, d, e, f, g, h, k, m, l), v = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
    return function(u, v) {
      if (!cljs.core.truth_(function() {
        try {
          return cljs.core.truth_(taoensso.encore.nnil_QMARK_.call(null, v)) ? !0 : taoensso.truss.impl._invar_violation_BANG_.call(null);
        } catch (a) {
          if (a instanceof Error) {
            return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.sente", null, "(taoensso.encore/nnil? uid)", v, a, null);
          }
          throw a;
        }
      }())) {
        throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "uid", "uid", 192762127, null))))].join(""));
      }
      return taoensso.encore.swap_in_BANG_.call(null, d, cljs.core.PersistentVector.EMPTY, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
        return function(a) {
          var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a;
          a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ws", "ws", 86841443));
          var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ajax", "ajax", 814345549)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "any", "any", 1705907423)), e;
          a: {
            switch(u instanceof cljs.core.Keyword ? u.fqn : null) {
              case "ws":
                e = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), cljs.core.conj.call(null, a, v), new cljs.core.Keyword(null, "ajax", "ajax", 814345549), c, new cljs.core.Keyword(null, "any", "any", 1705907423), cljs.core.conj.call(null, d, v)], null);
                break a;
              case "ajax":
                e = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), a, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), cljs.core.conj.call(null, c, v), new cljs.core.Keyword(null, "any", "any", 1705907423), cljs.core.conj.call(null, d, v)], null);
                break a;
              default:
                throw Error([cljs.core.str("No matching clause: "), cljs.core.str(u)].join(""));;
            }
          }
          return taoensso.encore.swapped.call(null, e, function() {
            var a = (new cljs.core.Keyword(null, "any", "any", 1705907423)).cljs$core$IFn$_invoke$arity$1(b), c = (new cljs.core.Keyword(null, "any", "any", 1705907423)).cljs$core$IFn$_invoke$arity$1(e);
            return !cljs.core.contains_QMARK_.call(null, a, v) && cljs.core.contains_QMARK_.call(null, c, v) ? new cljs.core.Keyword(null, "newly-connected", "newly-connected", -2029862681) : null;
          }());
        };
      }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t));
    };
  }(n, p, q, r, t, u, b, c, d, e, f, g, h, k, m, l), w = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) {
    return function(v) {
      if (!cljs.core.truth_(function() {
        try {
          return cljs.core.truth_(taoensso.encore.nnil_QMARK_.call(null, v)) ? !0 : taoensso.truss.impl._invar_violation_BANG_.call(null);
        } catch (a) {
          if (a instanceof Error) {
            return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.sente", null, "(taoensso.encore/nnil? uid)", v, a, null);
          }
          throw a;
        }
      }())) {
        throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "uid", "uid", 192762127, null))))].join(""));
      }
      return taoensso.encore.swap_in_BANG_.call(null, d, cljs.core.PersistentVector.EMPTY, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) {
        return function(a) {
          var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a;
          a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ws", "ws", 86841443));
          var d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ajax", "ajax", 814345549)), e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "any", "any", 1705907423)), f = cljs.core.deref.call(null, c), g = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ws", "ws", 86841443)).cljs$core$IFn$_invoke$arity$1(f), v), f = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ajax", "ajax", 814345549)).cljs$core$IFn$_invoke$arity$1(f), v), h = g || 
          f, k = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), g ? cljs.core.conj.call(null, a, v) : cljs.core.disj.call(null, a, v), new cljs.core.Keyword(null, "ajax", "ajax", 814345549), f ? cljs.core.conj.call(null, d, v) : cljs.core.disj.call(null, d, v), new cljs.core.Keyword(null, "any", "any", 1705907423), h ? cljs.core.conj.call(null, e, v) : cljs.core.disj.call(null, e, v)], null);
          return taoensso.encore.swapped.call(null, k, function() {
            var a = (new cljs.core.Keyword(null, "any", "any", 1705907423)).cljs$core$IFn$_invoke$arity$1(b), c = (new cljs.core.Keyword(null, "any", "any", 1705907423)).cljs$core$IFn$_invoke$arity$1(k);
            return cljs.core.contains_QMARK_.call(null, a, v) && !cljs.core.contains_QMARK_.call(null, c, v) ? new cljs.core.Keyword(null, "newly-disconnected", "newly-disconnected", -1586164962) : null;
          }());
        };
      }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u));
    };
  }(n, p, q, r, t, u, v, b, c, d, e, f, g, h, k, m, l), x = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) {
    return function() {
      var w = function(w, x, y) {
        var N = cljs.core.nth.call(null, y, 0, null), O = null != N && (N.cljs$lang$protocol_mask$partition0$ & 64 || N.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, N) : N, V = cljs.core.get.call(null, O, new cljs.core.Keyword(null, "flush?", "flush?", -108887231));
        w = cljs.core._EQ_.call(null, w, new cljs.core.Keyword("sente", "all-users-without-uid", "sente/all-users-without-uid", -42979578)) ? new cljs.core.Keyword("taoensso.sente", "nil-uid", "taoensso.sente/nil-uid", -2111603486) : w;
        var P = taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, E, C, y) {
          return function() {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send: (-\x3euid %s) %s", a, x], null);
          };
        }(w, y, N, O, O, V, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v), null), null);
        if (!cljs.core.truth_(w)) {
          throw Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Support for sending to `nil` user-ids has been REMOVED. "), cljs.core.str("Please send to `:sente/all-users-without-uid` instead.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "uid", "uid", 192762127, null)))].join(""));
        }
        var W = null, ea = taoensso.sente.assert_event.call(null, x), fa = taoensso.encore.uuid_str.call(null), X = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, C, y, D, z, H) {
          return function(B) {
            var J = taoensso.encore.swap_in_BANG_.call(null, r, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [B], null), function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, C, y, D, z, H) {
              return function(b) {
                var c = cljs.core.get.call(null, b, a);
                cljs.core.nth.call(null, c, 0, null);
                c = cljs.core.nth.call(null, c, 1, null);
                return cljs.core.contains_QMARK_.call(null, c, e) ? taoensso.encore.swapped.call(null, cljs.core.dissoc.call(null, b, a), cljs.core.get.call(null, b, a)) : taoensso.encore.swapped.call(null, b, null);
              };
            }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, C, y, D, z, H));
            if (cljs.core.truth_(J)) {
              var G = cljs.core.nth.call(null, J, 0, null), K = cljs.core.nth.call(null, J, 1, null);
              try {
                cljs.core.vector_QMARK_.call(null, G) || taoensso.truss.impl._invar_violation_BANG_.call(null);
              } catch (F) {
                if (F instanceof Error) {
                  taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.sente", null, "(vector? buffered-evs)", G, F, null);
                } else {
                  throw F;
                }
              }
              try {
                cljs.core.set_QMARK_.call(null, K) || taoensso.truss.impl._invar_violation_BANG_.call(null);
              } catch (F) {
                if (F instanceof Error) {
                  taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.sente", null, "(set? ev-uuids)", K, F, null);
                } else {
                  throw F;
                }
              }
              var M = cljs.core.mapv.call(null, cljs.core.meta, G), L = cljs.core.reduce.call(null, cljs.core.merge, cljs.core.PersistentArrayMap.EMPTY, M), N = taoensso.sente.pack.call(null, m, L, G);
              taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, C, y, D, z, H, J, B, G, F, K, M, L, N) {
                return function() {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["buffered-evs-ppstr: %s (with meta %s)", c, b], null);
                };
              }(M, L, N, J, G, K, J, J, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, C, y, D, z, H), null), null);
              switch(B instanceof cljs.core.Keyword ? B.fqn : null) {
                case "ws":
                  return taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.call(null, p, a, N);
                case "ajax":
                  return taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.call(null, p, a, N);
                default:
                  throw Error([cljs.core.str("No matching clause: "), cljs.core.str(B)].join(""));;
              }
            } else {
              return null;
            }
          };
        }(w, P, W, ea, fa, y, N, O, O, V, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v);
        if (cljs.core._EQ_.call(null, x, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "close", "chsk/close", 1840295819)], null))) {
          taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "debug", "debug", -1608172596), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, C, y, D, z, H, J) {
            return function() {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk closing (client may reconnect): %s", a], null);
            };
          }(w, P, W, ea, fa, X, y, N, O, O, V, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v), null), null);
          if (cljs.core.truth_(V)) {
            for (y = cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws", "ws", 86841443), new cljs.core.Keyword(null, "ajax", "ajax", 814345549)], null)), N = null, V = O = 0;;) {
              if (V < O) {
                P = cljs.core._nth.call(null, N, V), X.call(null, P), V += 1;
              } else {
                if (y = cljs.core.seq.call(null, y)) {
                  N = y, cljs.core.chunked_seq_QMARK_.call(null, N) ? (y = cljs.core.chunk_first.call(null, N), V = cljs.core.chunk_rest.call(null, N), N = y, O = cljs.core.count.call(null, y), y = V) : (y = cljs.core.first.call(null, N), X.call(null, y), y = cljs.core.next.call(null, N), N = null, O = 0), V = 0;
                } else {
                  break;
                }
              }
            }
          }
          X = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, c), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws", "ws", 86841443), w], null))));
          y = null;
          for (O = N = 0;;) {
            if (O < N) {
              V = cljs.core._nth.call(null, y, O), taoensso.sente.interfaces.sch_close_BANG_.call(null, V), O += 1;
            } else {
              if (X = cljs.core.seq.call(null, X)) {
                y = X, cljs.core.chunked_seq_QMARK_.call(null, y) ? (X = cljs.core.chunk_first.call(null, y), O = cljs.core.chunk_rest.call(null, y), y = X, N = cljs.core.count.call(null, X), X = O) : (X = cljs.core.first.call(null, y), taoensso.sente.interfaces.sch_close_BANG_.call(null, X), X = cljs.core.next.call(null, y), y = null, N = 0), O = 0;
              } else {
                break;
              }
            }
          }
          w = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, c), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ajax", "ajax", 814345549), w], null))));
          X = null;
          for (N = y = 0;;) {
            if (N < y) {
              O = cljs.core._nth.call(null, X, N), V = cljs.core.nth.call(null, O, 0, null), cljs.core.nth.call(null, O, 1, null), O = V, cljs.core.truth_(O) && taoensso.sente.interfaces.sch_close_BANG_.call(null, O), N += 1;
            } else {
              if (w = cljs.core.seq.call(null, w)) {
                cljs.core.chunked_seq_QMARK_.call(null, w) ? (y = cljs.core.chunk_first.call(null, w), w = cljs.core.chunk_rest.call(null, w), X = y, y = cljs.core.count.call(null, y)) : (X = cljs.core.first.call(null, w), y = cljs.core.nth.call(null, X, 0, null), cljs.core.nth.call(null, X, 1, null), X = y, cljs.core.truth_(X) && taoensso.sente.interfaces.sch_close_BANG_.call(null, X), w = cljs.core.next.call(null, w), X = null, y = 0), N = 0;
              } else {
                break;
              }
            }
          }
        } else {
          for (var ca = cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws", "ws", 86841443), new cljs.core.Keyword(null, "ajax", "ajax", 814345549)], null)), ka = null, la = 0, ga = 0;;) {
            if (ga < la) {
              var aa = cljs.core._nth.call(null, ka, ga);
              taoensso.encore.swap_in_BANG_.call(null, e, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [aa, w], null), function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, E, C, y, D, z, H, J, B, G, F, K, M, L) {
                return function(a) {
                  if (cljs.core.not.call(null, a)) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null), cljs.core.PersistentHashSet.fromArray([l], !0)], null);
                  }
                  var b = cljs.core.nth.call(null, a, 0, null);
                  a = cljs.core.nth.call(null, a, 1, null);
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.call(null, b, x), cljs.core.conj.call(null, a, l)], null);
                };
              }(ca, ka, la, ga, aa, w, P, W, ea, fa, X, y, N, O, O, V, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v));
              ga += 1;
            } else {
              var da = cljs.core.seq.call(null, ca);
              if (da) {
                aa = da;
                if (cljs.core.chunked_seq_QMARK_.call(null, aa)) {
                  ca = cljs.core.chunk_first.call(null, aa), ga = cljs.core.chunk_rest.call(null, aa), ka = ca, la = cljs.core.count.call(null, ca), ca = ga;
                } else {
                  var ha = cljs.core.first.call(null, aa);
                  taoensso.encore.swap_in_BANG_.call(null, e, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ha, w], null), function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, E, C, y, D, z, H, J, B, G, F, K, M, L, N, O) {
                    return function(a) {
                      if (cljs.core.not.call(null, a)) {
                        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null), cljs.core.PersistentHashSet.fromArray([n], !0)], null);
                      }
                      var b = cljs.core.nth.call(null, a, 0, null);
                      a = cljs.core.nth.call(null, a, 1, null);
                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.call(null, b, x), cljs.core.conj.call(null, a, n)], null);
                    };
                  }(ca, ka, la, ga, ha, aa, da, w, P, W, ea, fa, X, y, N, O, O, V, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v));
                  ca = cljs.core.next.call(null, aa);
                  ka = null;
                  la = 0;
                }
                ga = 0;
              } else {
                break;
              }
            }
          }
          ca = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, C, y, D, z, H, J, B) {
            return function() {
              var G = function() {
                return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, C, y, D, z, H, J, B, G) {
                  return function() {
                    var b = null, c = function() {
                      var a = [null, null, null, null, null, null, null, null];
                      a[0] = b;
                      a[1] = 1;
                      return a;
                    }, d = function(b) {
                      for (;;) {
                        var c;
                        a: {
                          try {
                            for (;;) {
                              var d = a.call(null, b);
                              if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                c = d;
                                break a;
                              }
                            }
                          } catch (e) {
                            if (e instanceof Object) {
                              b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e;
                            }
                          }
                        }
                        if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          return c;
                        }
                      }
                    }, b = function(a) {
                      switch(arguments.length) {
                        case 0:
                          return c.call(this);
                        case 1:
                          return d.call(this, a);
                      }
                      throw Error("Invalid arity: " + arguments.length);
                    };
                    b.cljs$core$IFn$_invoke$arity$0 = c;
                    b.cljs$core$IFn$_invoke$arity$1 = d;
                    return b;
                  }();
                }(function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, C, y, D, z, H, J, B) {
                  return function(a) {
                    var b = a[1];
                    if (1 === b) {
                      return cljs.core.truth_(n) ? a[1] = 2 : a[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    }
                    if (2 === b) {
                      return a[2] = null, a[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    }
                    if (3 === b) {
                      return b = cljs.core.async.timeout.call(null, D), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 5, b);
                    }
                    if (4 === b) {
                      var b = a[2], c = g.call(null, new cljs.core.Keyword(null, "ws", "ws", 86841443));
                      a[7] = b;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, c);
                    }
                    return 5 === b ? (b = a[2], a[2] = b, a[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
                  };
                }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, C, y, D, z, H, J, B), a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, C, y, D, z, H, J, B);
              }(), F = function() {
                var b = G.call(null);
                b[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = a;
                return b;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, F);
            };
          }(ca, w, P, W, ea, fa, X, y, N, O, O, V, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v));
          ca = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, C, y, D, z, H, J, B) {
            return function() {
              var G = function() {
                return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, C, y, D, z, H, J, B, G) {
                  return function() {
                    var b = null, c = function() {
                      var a = [null, null, null, null, null, null, null, null];
                      a[0] = b;
                      a[1] = 1;
                      return a;
                    }, d = function(b) {
                      for (;;) {
                        var c;
                        a: {
                          try {
                            for (;;) {
                              var d = a.call(null, b);
                              if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                c = d;
                                break a;
                              }
                            }
                          } catch (e) {
                            if (e instanceof Object) {
                              b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e;
                            }
                          }
                        }
                        if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          return c;
                        }
                      }
                    }, b = function(a) {
                      switch(arguments.length) {
                        case 0:
                          return c.call(this);
                        case 1:
                          return d.call(this, a);
                      }
                      throw Error("Invalid arity: " + arguments.length);
                    };
                    b.cljs$core$IFn$_invoke$arity$0 = c;
                    b.cljs$core$IFn$_invoke$arity$1 = d;
                    return b;
                  }();
                }(function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, C, y, D, z, H, J, B) {
                  return function(a) {
                    var b = a[1];
                    if (1 === b) {
                      return cljs.core.truth_(n) ? a[1] = 2 : a[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    }
                    if (2 === b) {
                      return a[2] = null, a[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    }
                    if (3 === b) {
                      return b = cljs.core.async.timeout.call(null, y), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 5, b);
                    }
                    if (4 === b) {
                      var b = a[2], c = g.call(null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549));
                      a[7] = b;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, c);
                    }
                    return 5 === b ? (b = a[2], a[2] = b, a[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
                  };
                }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, C, y, D, z, H, J, B), a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, C, y, D, z, H, J, B);
              }(), F = function() {
                var b = G.call(null);
                b[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = a;
                return b;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, F);
            };
          }(ca, w, P, W, ea, fa, X, y, N, O, O, V, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v));
        }
        return null;
      }, x = function(a, b, c) {
        var d = null;
        if (2 < arguments.length) {
          for (var d = 0, e = Array(arguments.length - 2);d < e.length;) {
            e[d] = arguments[d + 2], ++d;
          }
          d = new cljs.core.IndexedSeq(e, 0);
        }
        return w.call(this, a, b, d);
      };
      x.cljs$lang$maxFixedArity = 2;
      x.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.rest(a);
        return w(b, c, a);
      };
      x.cljs$core$IFn$_invoke$arity$variadic = w;
      return x;
    }();
  }(n, p, q, r, t, u, v, w, b, c, d, e, f, g, h, k, m, l), y = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), p, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041), x, new cljs.core.Keyword(null, "connected-uids", "connected-uids", 1454332231), r], null);
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), p, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041), x, new cljs.core.Keyword(null, "connected-uids", "connected-uids", 1454332231), r, new cljs.core.Keyword(null, "ajax-post-fn", "ajax-post-fn", 1830071264), function(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y) {
    return function(Q) {
      return taoensso.sente.interfaces.ring_req__GT_server_ch_resp.call(null, a, Q, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "on-open", "on-open", -1391088163), function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I) {
        return function(A) {
          var x = cljs.core.get.call(null, Q, new cljs.core.Keyword(null, "params", "params", 710516235)), E = cljs.core.get.call(null, x, new cljs.core.Keyword(null, "ppstr", "ppstr", 1557495252)), y = cljs.core.get.call(null, x, new cljs.core.Keyword(null, "client-id", "client-id", -464622140)), C = taoensso.sente.unpack.call(null, a, E), D = cljs.core.nth.call(null, C, 0, null), z = cljs.core.nth.call(null, C, 1, null);
          taoensso.sente.put_server_event_msg_GT_ch_recv_BANG_.call(null, b, cljs.core.merge.call(null, l, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), y, new cljs.core.Keyword(null, "ring-req", "ring-req", -747861961), Q, new cljs.core.Keyword(null, "event", "event", 301435442), D, new cljs.core.Keyword(null, "uid", "uid", -1447769400), f.call(null, Q, y), new cljs.core.Keyword(null, "?reply-fn", "?reply-fn", -1479510592), cljs.core.truth_(z) ? 
          function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, x, E, y, C, D, z) {
            return function(H) {
              taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, y, C, D) {
                return function() {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send (ajax reply): %s", H], null);
                };
              }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, x, E, y, C, D, z), null), null);
              return taoensso.sente.interfaces.sch_send_BANG_.call(null, A, taoensso.sente.pack.call(null, g, cljs.core.meta.call(null, H), H), new cljs.core.Keyword(null, "close-after-send", "close-after-send", 1264946103));
            };
          }(x, E, y, C, D, z, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I) : null], null)));
          if (cljs.core.truth_(z)) {
            return null;
          }
          taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, E, y, C, D) {
            return function() {
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send (ajax reply): dummy-cb-200"], null);
            };
          }(x, E, y, C, D, z, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I), null), null);
          return taoensso.sente.interfaces.sch_send_BANG_.call(null, A, taoensso.sente.pack.call(null, a, null, new cljs.core.Keyword("chsk", "dummy-cb-200", "chsk/dummy-cb-200", -1663130337)), new cljs.core.Keyword(null, "close-after-send", "close-after-send", 1264946103));
        };
      }(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y)], null));
    };
  }(n, p, q, r, t, u, v, w, x, y, b, c, d, e, f, g, h, k, m, l), new cljs.core.Keyword(null, "ajax-get-or-ws-handshake-fn", "ajax-get-or-ws-handshake-fn", -1210409233), function(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y) {
    return function(Q) {
      var Y = w.call(null, Q), Z = cljs.core.get.call(null, Q, new cljs.core.Keyword(null, "params", "params", 710516235)), N = cljs.core.get.call(null, Z, new cljs.core.Keyword(null, "client-id", "client-id", -464622140)), O = g.call(null, Q, N), V = (new cljs.core.Keyword(null, "websocket?", "websocket?", 1552493139)).cljs$core$IFn$_invoke$arity$1(Q), ia = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C) {
        return function() {
          var a = function(a, b) {
            var e = cljs.core.nth.call(null, b, 0, null);
            return taoensso.sente.put_server_event_msg_GT_ch_recv_BANG_.call(null, g, cljs.core.merge.call(null, r, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), c, new cljs.core.Keyword(null, "ring-req", "ring-req", -747861961), Q, new cljs.core.Keyword(null, "event", "event", 301435442), a, new cljs.core.Keyword(null, "?reply-fn", "?reply-fn", -1479510592), e, new cljs.core.Keyword(null, "uid", "uid", -1447769400), d], null)));
          }, b = function(b, c) {
            var d = null;
            if (1 < arguments.length) {
              for (var d = 0, e = Array(arguments.length - 1);d < e.length;) {
                e[d] = arguments[d + 1], ++d;
              }
              d = new cljs.core.IndexedSeq(e, 0);
            }
            return a.call(this, b, d);
          };
          b.cljs$lang$maxFixedArity = 1;
          b.cljs$lang$applyTo = function(b) {
            var c = cljs.core.first(b);
            b = cljs.core.rest(b);
            return a(c, b);
          };
          b.cljs$core$IFn$_invoke$arity$variadic = a;
          return b;
        }();
      }(Y, Z, N, O, V, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y), ba = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D) {
        return function(z) {
          taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D) {
            return function() {
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Handshake!"], null);
            };
          }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D), null), null);
          var H = C.call(null, Q), H = null != H ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "handshake", "chsk/handshake", 64910686), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, a, H], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "handshake", "chsk/handshake", 64910686), new cljs.core.PersistentVector(null, 
          2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, a], null)], null);
          return taoensso.sente.interfaces.sch_send_BANG_.call(null, z, taoensso.sente.pack.call(null, g, null, H), cljs.core.not.call(null, e));
        };
      }(Y, Z, N, O, V, ia, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y);
      if (clojure.string.blank_QMARK_.call(null, N)) {
        throw taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z, H) {
          return function() {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(a), cljs.core.str(": %s")].join(""), Q], null);
          };
        }("Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` \x26 `wrap-keyword-params`)?", Y, Z, N, O, V, ia, ba, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y), null), null), cljs.core.ex_info.call(null, "Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` \x26 `wrap-keyword-params`)?", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
        "ring-req", "ring-req", -747861961), Q], null));
      }
      return taoensso.sente.interfaces.ring_req__GT_server_ch_resp.call(null, a, Q, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "on-open", "on-open", -1391088163), function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z) {
        return function(H) {
          if (cljs.core.truth_(e)) {
            return taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z) {
              return function() {
                return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["New WebSocket channel: %s (%s)", d, "" + cljs.core.str(H)], null);
              };
            }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z), null), null), taoensso.encore.reset_in_BANG_.call(null, l, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws", "ws", 86841443), d, c], null), H), cljs.core.truth_(q.call(null, new cljs.core.Keyword(null, "ws", "ws", 86841443), d)) && f.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", 
            "uidport-open", "chsk/uidport-open", 1685786954)], null)), g.call(null, H);
          }
          var J = taoensso.encore.swap_in_BANG_.call(null, l, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ajax", "ajax", 814345549), d, c], null), function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z) {
            return function(a) {
              return taoensso.encore.swapped.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [H, taoensso.encore.now_udt.call(null)], null), null == a);
            };
          }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z)), J = cljs.core.truth_(J) ? J : (new cljs.core.Keyword(null, "handshake?", "handshake?", -423743093)).cljs$core$IFn$_invoke$arity$1(b);
          cljs.core.truth_(q.call(null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), d)) && f.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "uidport-open", "chsk/uidport-open", 1685786954)], null));
          return cljs.core.truth_(J) ? g.call(null, H) : null;
        };
      }(Y, Z, N, O, V, ia, ba, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y), new cljs.core.Keyword(null, "on-msg", "on-msg", -2021925279), function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z) {
        return function(H, J) {
          var B = taoensso.sente.unpack.call(null, h, J), G = cljs.core.nth.call(null, B, 0, null), F = cljs.core.nth.call(null, B, 1, null);
          return f.call(null, G, cljs.core.truth_(F) ? function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z, J, B, G) {
            return function(F) {
              taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z, H, J, B) {
                return function() {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send (ws reply): %s", F], null);
                };
              }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z, J, B, G), null), null);
              return taoensso.sente.interfaces.sch_send_BANG_.call(null, H, taoensso.sente.pack.call(null, m, cljs.core.meta.call(null, F), F, c));
            };
          }(B, G, F, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z) : null);
        };
      }(Y, Z, N, O, V, ia, ba, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y), new cljs.core.Keyword(null, "on-close", "on-close", -761178394), function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z) {
        return function(H, J) {
          if (cljs.core.truth_(e)) {
            taoensso.encore.swap_in_BANG_.call(null, l, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws", "ws", 86841443), d], null), function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z) {
              return function(a) {
                a = cljs.core.dissoc.call(null, a, c);
                return cljs.core.empty_QMARK_.call(null, a) ? new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782) : a;
              };
            }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z));
            var B = cljs.core.async.chan.call(null, 1);
            cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z, H) {
              return function() {
                var J = function() {
                  return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z, H, J) {
                    return function() {
                      var b = null, c = function() {
                        var a = [null, null, null, null, null, null, null, null];
                        a[0] = b;
                        a[1] = 1;
                        return a;
                      }, d = function(b) {
                        for (;;) {
                          var c;
                          a: {
                            try {
                              for (;;) {
                                var d = a.call(null, b);
                                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                  c = d;
                                  break a;
                                }
                              }
                            } catch (e) {
                              if (e instanceof Object) {
                                b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                throw e;
                              }
                            }
                          }
                          if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            return c;
                          }
                        }
                      }, b = function(a) {
                        switch(arguments.length) {
                          case 0:
                            return c.call(this);
                          case 1:
                            return d.call(this, a);
                        }
                        throw Error("Invalid arity: " + arguments.length);
                      };
                      b.cljs$core$IFn$_invoke$arity$0 = c;
                      b.cljs$core$IFn$_invoke$arity$1 = d;
                      return b;
                    }();
                  }(function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z, H) {
                    return function(a) {
                      var b = a[1];
                      if (1 === b) {
                        return b = cljs.core.async.timeout.call(null, 5E3), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 2, b);
                      }
                      if (2 === b) {
                        var c = a[2], b = t.call(null, e);
                        a[7] = c;
                        cljs.core.truth_(b) ? a[1] = 3 : a[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      }
                      return 3 === b ? (b = cljs.core.PersistentVector.EMPTY_NODE, c = [new cljs.core.Keyword("chsk", "uidport-close", "chsk/uidport-close", 901058678)], b = new cljs.core.PersistentVector(null, 1, 5, b, c, null), b = g.call(null, b), a[2] = b, a[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 4 === b ? (a[2] = null, a[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === b ? (b = a[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, 
                      a, b)) : null;
                    };
                  }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z, H), a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z, H);
                }(), B = function() {
                  var b = J.call(null);
                  b[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = a;
                  return b;
                }();
                return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, B);
              };
            }(B, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z));
          } else {
            taoensso.encore.swap_in_BANG_.call(null, l, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), c], null), function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z) {
              return function(a) {
                cljs.core.nth.call(null, a, 0, null);
                a = cljs.core.nth.call(null, a, 1, null);
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, a], null);
              };
            }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z));
            var G = taoensso.encore.now_udt.call(null), B = cljs.core.async.chan.call(null, 1);
            cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z, H, J) {
              return function() {
                var B = function() {
                  return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z, H, J, B) {
                    return function() {
                      var b = null, c = function() {
                        var a = [null, null, null, null, null, null, null, null];
                        a[0] = b;
                        a[1] = 1;
                        return a;
                      }, d = function(b) {
                        for (;;) {
                          var c;
                          a: {
                            try {
                              for (;;) {
                                var d = a.call(null, b);
                                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                  c = d;
                                  break a;
                                }
                              }
                            } catch (e) {
                              if (e instanceof Object) {
                                b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                throw e;
                              }
                            }
                          }
                          if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            return c;
                          }
                        }
                      }, b = function(a) {
                        switch(arguments.length) {
                          case 0:
                            return c.call(this);
                          case 1:
                            return d.call(this, a);
                        }
                        throw Error("Invalid arity: " + arguments.length);
                      };
                      b.cljs$core$IFn$_invoke$arity$0 = c;
                      b.cljs$core$IFn$_invoke$arity$1 = d;
                      return b;
                    }();
                  }(function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z, H, J) {
                    return function(B) {
                      var G = B[1];
                      if (1 === G) {
                        var F = cljs.core.async.timeout.call(null, 5E3);
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, B, 2, F);
                      }
                      if (2 === G) {
                        var K = B[2], M = cljs.core.PersistentVector.EMPTY_NODE, L = [new cljs.core.Keyword(null, "ajax", "ajax", 814345549), f], N = new cljs.core.PersistentVector(null, 2, 5, M, L, null), F = function() {
                          return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z, B, H, J, G, F, K, M) {
                            return function(a) {
                              var b = cljs.core.get.call(null, a, l);
                              cljs.core.nth.call(null, b, 0, null);
                              b = cljs.core.nth.call(null, b, 1, null);
                              b = cljs.core.truth_(b) ? g >= b : b;
                              if (cljs.core.not.call(null, b)) {
                                return taoensso.encore.swapped.call(null, a, cljs.core.not.call(null, new cljs.core.Keyword(null, "disconnected", "disconnected", -1908014586)));
                              }
                              a = cljs.core.dissoc.call(null, a, l);
                              return taoensso.encore.swapped.call(null, cljs.core.empty_QMARK_.call(null, a) ? new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782) : a, new cljs.core.Keyword(null, "disconnected", "disconnected", -1908014586));
                            };
                          }(K, M, L, N, G, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z, H, J);
                        }(), F = taoensso.encore.swap_in_BANG_.call(null, n, N, F);
                        B[7] = K;
                        cljs.core.truth_(F) ? B[1] = 3 : B[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      }
                      if (3 === G) {
                        return F = u.call(null, f), cljs.core.truth_(F) ? B[1] = 6 : B[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      }
                      if (4 === G) {
                        return B[2] = null, B[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      }
                      if (5 === G) {
                        return F = B[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, B, F);
                      }
                      if (6 === G) {
                        var F = cljs.core.PersistentVector.EMPTY_NODE, O = [new cljs.core.Keyword("chsk", "uidport-close", "chsk/uidport-close", 901058678)], F = new cljs.core.PersistentVector(null, 1, 5, F, O, null), F = h.call(null, F);
                        B[2] = F;
                        B[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      }
                      return 7 === G ? (B[2] = null, B[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === G ? (F = B[2], B[2] = F, B[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
                    };
                  }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z, H, J), a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z, H, J);
                }(), G = function() {
                  var b = B.call(null);
                  b[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = a;
                  return b;
                }();
                return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, G);
              };
            }(B, G, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, A, x, y, E, C, D, z));
          }
          return B;
        };
      }(Y, Z, N, O, V, ia, ba, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y)], null));
    };
  }(n, p, q, r, t, u, v, w, x, y, b, c, d, e, f, g, h, k, m, l)], null);
};
taoensso.sente.make_channel_socket_server_BANG_.cljs$lang$maxFixedArity = 1;
taoensso.sente.make_channel_socket_server_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_ = function(a, b, c) {
  taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["send-buffered-server-evs\x3ews-clients!: %s", c], null);
  }, null), null);
  a = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, a), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws", "ws", 86841443), b], null))));
  b = null;
  for (var d = 0, e = 0;;) {
    if (e < d) {
      var f = cljs.core._nth.call(null, b, e);
      taoensso.sente.interfaces.sch_send_BANG_.call(null, f, c);
      e += 1;
    } else {
      if (a = cljs.core.seq.call(null, a)) {
        b = a, cljs.core.chunked_seq_QMARK_.call(null, b) ? (a = cljs.core.chunk_first.call(null, b), d = cljs.core.chunk_rest.call(null, b), b = a, f = cljs.core.count.call(null, a), a = d, d = f) : (f = cljs.core.first.call(null, b), taoensso.sente.interfaces.sch_send_BANG_.call(null, f, c), a = cljs.core.next.call(null, b), b = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 3 < b.length ? new cljs.core.IndexedSeq(b.slice(3), 0) : null;
  return taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
};
taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  var e = cljs.core.nth.call(null, d, 0, null), f = null != e && (e.cljs$lang$protocol_mask$partition0$ & 64 || e.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, e) : e, g = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "nmax-attempts", "nmax-attempts", 1471144610), 7), h = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "ms-base", "ms-base", -1962784511), 90), k = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "ms-rand", "ms-rand", 1169398874), 90);
  taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, d, e, f, g) {
    return function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["send-buffered-server-evs\x3eajax-clients!: %s", c], null);
    };
  }(d, e, f, g, h, k), null), null);
  var m = cljs.core.keys.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, a), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ajax", "ajax", 814345549), b], null)));
  if (cljs.core.empty_QMARK_.call(null, m)) {
    return null;
  }
  var l = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(d, e, f, g, h, k, l, m) {
    return function() {
      var x = function() {
        return function(a, b, c, d, e, f, g, h, k) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (e) {
                    if (e instanceof Object) {
                      b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return c;
                }
              }
            }, b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(d, e, f, g, h, k, l, m) {
          return function(n) {
            var p = n[1];
            if (7 === p) {
              return n[2] = !0, n[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === p) {
              var q = 0, r = cljs.core.PersistentHashSet.EMPTY;
              n[7] = q;
              n[8] = r;
              n[2] = null;
              n[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === p) {
              var t = n[9];
              n[10] = n[2];
              cljs.core.truth_(t) ? n[1] = 10 : n[1] = 11;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === p) {
              var u = n[2];
              cljs.core.truth_(u) ? n[1] = 16 : n[1] = 17;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === p) {
              return u = n[11], u = cljs.core.complement.call(null, u), u = cljs.core.some.call(null, u, e), n[2] = u, n[1] = 15, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === p) {
              t = n[9];
              cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, n, 5, Error, null, 4);
              var u = cljs.core.PersistentVector.EMPTY_NODE, v = [new cljs.core.Keyword(null, "or", "or", 235744169), cljs.core.nil_QMARK_, cljs.core.map_QMARK_], u = new cljs.core.PersistentVector(null, 3, 5, u, v, null), u = taoensso.truss.impl._invar_pred.call(null, u).call(null, t);
              cljs.core.truth_(u) ? n[1] = 7 : n[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (17 === p) {
              return n[2] = null, n[1] = 18, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === p) {
              return u = n[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, n, u);
            }
            if (12 === p) {
              return q = n[7], r = n[8], u = n[12], u = cljs.core.into.call(null, r, n[2]), v = q < k, n[11] = u, n[12] = v, cljs.core.truth_(v) ? n[1] = 13 : n[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (2 === p) {
              var q = n[7], r = n[8], w = cljs.core.PersistentVector.EMPTY_NODE, x = [new cljs.core.Keyword(null, "ajax", "ajax", 814345549), b], y = new cljs.core.PersistentVector(null, 2, 5, w, x, null), u = function() {
                return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
                  return function(u) {
                    var v = cljs.core.remove.call(null, b, cljs.core.keys.call(null, u));
                    return cljs.core.empty_QMARK_.call(null, v) ? taoensso.encore.swapped.call(null, u, null) : taoensso.encore.swapped.call(null, cljs.core.reduce.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) {
                      return function(a, b) {
                        var c = cljs.core.get.call(null, a, b);
                        cljs.core.nth.call(null, c, 0, null);
                        c = cljs.core.nth.call(null, c, 1, null);
                        return cljs.core.assoc.call(null, a, b, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, c], null));
                      };
                    }(v, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t), u, v), cljs.core.select_keys.call(null, u, v));
                  };
                }(q, r, q, r, w, x, y, p, d, e, f, g, h, k, l, m);
              }(), t = taoensso.encore.swap_in_BANG_.call(null, a, y, u);
              n[9] = t;
              n[2] = null;
              n[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 19 === p ? (q = n[7], u = n[11], v = n[2], r = u, n[7] = q + 1, n[8] = r, n[13] = v, n[2] = null, n[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === p ? (n[2] = null, n[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === p ? (u = n[2], n[2] = u, cljs.core.async.impl.ioc_helpers.process_exception.call(null, n), new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === p ? (t = n[9], u = taoensso.truss.impl._invar_violation_BANG_.call(null, 
            !0, "taoensso.sente", null, "([:or nil? map?] ?pulled)", t, n[2], null), n[2] = u, cljs.core.async.impl.ioc_helpers.process_exception.call(null, n), new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 14 === p ? (u = n[12], n[2] = u, n[1] = 15, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 16 === p ? (u = cljs.core.rand_int.call(null, m), u = cljs.core.async.timeout.call(null, l + u), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, n, 19, u)) : 10 === p ? 
            (t = n[9], q = n[7], r = n[8], u = function() {
              return function(a, b, d, e, f, g, h, k, l, m, n, p, q, r, t) {
                return function(a, b, d) {
                  var e = cljs.core.nth.call(null, d, 0, null);
                  cljs.core.nth.call(null, d, 1, null);
                  return null == e || cljs.core.not.call(null, taoensso.sente.interfaces.sch_send_BANG_.call(null, e, c, new cljs.core.Keyword(null, "close-after-send", "close-after-send", 1264946103))) ? a : cljs.core.conj.call(null, a, b);
                };
              }(q, r, t, t, q, r, p, d, e, f, g, h, k, l, m);
            }(), u = cljs.core.reduce_kv.call(null, u, cljs.core.PersistentHashSet.EMPTY, t), n[2] = u, n[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 18 === p ? (u = n[2], n[2] = u, n[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === p ? (u = taoensso.truss.impl._invar_violation_BANG_.call(null), n[2] = u, n[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(d, e, f, g, h, k, l, m), d, e, f, g, h, k, l, m);
      }(), y = function() {
        var a = x.call(null);
        a[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = d;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, y);
    };
  }(l, m, d, e, f, g, h, k));
  return l;
};
taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$lang$maxFixedArity = 3;
taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  var d = cljs.core.next.call(null, c), c = cljs.core.first.call(null, d), d = cljs.core.next.call(null, d);
  return taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
taoensso.sente.ajax_lite = taoensso.encore.ajax_lite;
taoensso.sente.IChSocket = function() {
};
taoensso.sente._chsk_connect_BANG_ = function(a) {
  if (null != a && null != a.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1) {
    return a.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(a);
  }
  var b = taoensso.sente._chsk_connect_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = taoensso.sente._chsk_connect_BANG_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IChSocket.-chsk-connect!", a);
};
taoensso.sente._chsk_send_BANG_ = function(a, b, c) {
  if (null != a && null != a.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3) {
    return a.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3(a, b, c);
  }
  var d = taoensso.sente._chsk_send_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = taoensso.sente._chsk_send_BANG_._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "IChSocket.-chsk-send!", a);
};
taoensso.sente.chsk_destroy_BANG_ = function(a) {
  if (null != a && null != a.taoensso$sente$IChSocket$chsk_destroy_BANG_$arity$1) {
    return a.taoensso$sente$IChSocket$chsk_destroy_BANG_$arity$1(a);
  }
  var b = taoensso.sente.chsk_destroy_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = taoensso.sente.chsk_destroy_BANG_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IChSocket.chsk-destroy!", a);
};
taoensso.sente.chsk_disconnect_BANG_ = function(a) {
  if (null != a && null != a.taoensso$sente$IChSocket$chsk_disconnect_BANG_$arity$1) {
    return a.taoensso$sente$IChSocket$chsk_disconnect_BANG_$arity$1(a);
  }
  var b = taoensso.sente.chsk_disconnect_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = taoensso.sente.chsk_disconnect_BANG_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IChSocket.chsk-disconnect!", a);
};
taoensso.sente.chsk_reconnect_BANG_ = function(a) {
  if (null != a && null != a.taoensso$sente$IChSocket$chsk_reconnect_BANG_$arity$1) {
    return a.taoensso$sente$IChSocket$chsk_reconnect_BANG_$arity$1(a);
  }
  var b = taoensso.sente.chsk_reconnect_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = taoensso.sente.chsk_reconnect_BANG_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IChSocket.chsk-reconnect!", a);
};
taoensso.sente.chsk_send_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  switch(b.length) {
    case 2:
      return taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 4:
      return taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 3:
      return taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error([cljs.core.str("Invalid arity: "), cljs.core.str(b.length)].join(""));;
  }
};
taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return taoensso.sente.chsk_send_BANG_.call(null, a, b, cljs.core.PersistentArrayMap.EMPTY);
};
taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return taoensso.sente.chsk_send_BANG_.call(null, a, b, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), c, new cljs.core.Keyword(null, "cb", "cb", 589947841), d], null));
};
taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send: (%s) %s", cljs.core.assoc.call(null, c, new cljs.core.Keyword(null, "cb", "cb", 589947841), cljs.core.boolean$.call(null, (new cljs.core.Keyword(null, "cb", "cb", 589947841)).cljs$core$IFn$_invoke$arity$1(c))), b], null);
  }, null), null);
  return taoensso.sente._chsk_send_BANG_.call(null, a, b, c);
};
taoensso.sente.chsk_send_BANG_.cljs$lang$maxFixedArity = 4;
taoensso.sente.assert_send_args = function(a, b, c) {
  taoensso.sente.assert_event.call(null, a);
  if (!cljs.core.truth_(function() {
    var a = null == b && null == c;
    return a ? a : taoensso.encore.nneg_int_QMARK_.call(null, b);
  }())) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(taoensso.encore.format.call(null, "cb requires a timeout; timeout-ms should be a +ive integer: %s", b)), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "?timeout-ms", "?timeout-ms", 
    -651193632, null)), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "?cb", "?cb", -1346810436, null))), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol("enc", "nneg-int?", "enc/nneg-int?", 803640858, null), new cljs.core.Symbol(null, "?timeout-ms", "?timeout-ms", -651193632, null))))))].join(""));
  }
  if (cljs.core.truth_(function() {
    var a = null == c;
    return a ? a : (a = cljs.core.ifn_QMARK_.call(null, c)) ? a : taoensso.encore.chan_QMARK_.call(null, c);
  }())) {
    return null;
  }
  throw Error([cljs.core.str("Assert failed: "), cljs.core.str(taoensso.encore.format.call(null, "cb should be nil, an ifn, or a channel: %s", cljs.core.type.call(null, c))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "?cb", "?cb", -1346810436, null)), cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", 
  -2106461064, null), new cljs.core.Symbol(null, "?cb", "?cb", -1346810436, null)), cljs.core.list(new cljs.core.Symbol("enc", "chan?", "enc/chan?", 1377166, null), new cljs.core.Symbol(null, "?cb", "?cb", -1346810436, null)))))].join(""));
};
taoensso.sente.pull_unused_cb_fn_BANG_ = function(a, b) {
  return cljs.core.truth_(b) ? taoensso.encore.swap_in_BANG_.call(null, a, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null), function(a, b) {
    return function(a) {
      return taoensso.encore.swapped.call(null, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782), a);
    };
  }(b, b)) : null;
};
taoensso.sente.merge_GT_chsk_state_BANG_ = function(a, b) {
  var c = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "chs", "chs", 376886120)), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "state_", "state_", 957667102)), e = taoensso.encore.swap_in_BANG_.call(null, e, cljs.core.PersistentVector.EMPTY, function(a, c, d, e, m) {
    return function(a) {
      var c = cljs.core.merge.call(null, a, b), d = cljs.core.not.call(null, function() {
        var b = (new cljs.core.Keyword(null, "requested-reconnect-pending?", "requested-reconnect-pending?", -299841116)).cljs$core$IFn$_invoke$arity$1(a);
        return cljs.core.truth_(b) ? (b = (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(c), cljs.core.truth_(b) ? cljs.core.not.call(null, (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(a)) : b) : b;
      }()) ? c : cljs.core.assoc.call(null, cljs.core.dissoc.call(null, c, new cljs.core.Keyword(null, "requested-reconnect-pending?", "requested-reconnect-pending?", -299841116)), new cljs.core.Keyword(null, "requested-reconnect?", "requested-reconnect?", -1504983666), !0);
      return taoensso.encore.swapped.call(null, d, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, d], null));
    };
  }(a, c, c, d, e)), c = cljs.core.nth.call(null, e, 0, null), e = cljs.core.nth.call(null, e, 1, null);
  return cljs.core.not_EQ_.call(null, c, e) ? (cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(d), e), e) : null;
};
taoensso.sente.cb_chan_as_fn = function(a, b) {
  if (null == a || cljs.core.ifn_QMARK_.call(null, a)) {
    return a;
  }
  try {
    cljs.core.truth_(taoensso.encore.chan_QMARK_.call(null, a)) || taoensso.truss.impl._invar_violation_BANG_.call(null);
  } catch (e) {
    if (e instanceof Error) {
      taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.sente", null, "(enc/chan? ?cb)", a, e, null);
    } else {
      throw e;
    }
  }
  taoensso.sente.assert_event.call(null, b);
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null);
  return function(a, b, c, d) {
    return function(a) {
      return cljs.core.async.put_BANG_.call(null, d, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, [cljs.core.str(taoensso.encore.fq_name.call(null, b)), cljs.core.str(".cb")].join("")), a], null));
    };
  }(b, c, d, a);
};
taoensso.sente.receive_buffered_evs_BANG_ = function(a, b) {
  taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["receive-buffered-evs!: %s", b], null);
  }, null), null);
  var c;
  try {
    c = cljs.core.vector_QMARK_.call(null, b) ? b : taoensso.truss.impl._invar_violation_BANG_.call(null);
  } catch (h) {
    if (h instanceof Error) {
      c = taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.sente", null, "(vector? clj)", b, h, null);
    } else {
      throw h;
    }
  }
  c = cljs.core.seq.call(null, c);
  for (var d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = cljs.core._nth.call(null, d, f);
      taoensso.sente.assert_event.call(null, g);
      cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "\x3cserver", "\x3cserver", -2135373537)).cljs$core$IFn$_invoke$arity$1(a), g);
      f += 1;
    } else {
      if (c = cljs.core.seq.call(null, c)) {
        d = c, cljs.core.chunked_seq_QMARK_.call(null, d) ? (c = cljs.core.chunk_first.call(null, d), e = cljs.core.chunk_rest.call(null, d), d = c, g = cljs.core.count.call(null, c), c = e, e = g) : (g = cljs.core.first.call(null, d), taoensso.sente.assert_event.call(null, g), cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "\x3cserver", "\x3cserver", -2135373537)).cljs$core$IFn$_invoke$arity$1(a), g), c = cljs.core.next.call(null, d), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
};
taoensso.sente.handle_when_handshake_BANG_ = function(a, b, c) {
  var d = cljs.core.vector_QMARK_.call(null, c) && cljs.core._EQ_.call(null, cljs.core.first.call(null, c), new cljs.core.Keyword("chsk", "handshake", "chsk/handshake", 64910686));
  taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a) {
    return function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["handle-when-handshake (%s): %s", a ? new cljs.core.Keyword(null, "handshake", "handshake", 68079331) : new cljs.core.Keyword(null, "non-handshake", "non-handshake", 576986062), c], null);
    };
  }(d), null), null);
  if (d) {
    var e = cljs.core.nth.call(null, c, 0, null), f = cljs.core.nth.call(null, c, 1, null), g = cljs.core.nth.call(null, f, 0, null), h = cljs.core.nth.call(null, f, 1, null), k = cljs.core.nth.call(null, f, 2, null);
    clojure.string.blank_QMARK_.call(null, h) && taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g, h) {
      return function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["SECURITY WARNING: no CSRF token available for use by Sente"], null);
      };
    }(c, e, f, g, h, k, c, d), null), null);
    taoensso.sente.merge_GT_chsk_state_BANG_.call(null, a, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), !0, new cljs.core.Keyword(null, "uid", "uid", -1447769400), g, new cljs.core.Keyword(null, "csrf-token", "csrf-token", -1872302856), h], null));
    taoensso.sente.assert_event.call(null, c);
    cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "internal", "internal", -854870097)).cljs$core$IFn$_invoke$arity$1(b), c);
    return new cljs.core.Keyword(null, "handled", "handled", 1889700151);
  }
  return null;
};
taoensso.sente.ChWebSocket = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u) {
  this.client_id = a;
  this.chs = b;
  this.params = c;
  this.packer = d;
  this.url = e;
  this.state_ = f;
  this.cbs_waiting_ = g;
  this.socket_ = h;
  this.kalive_ms = k;
  this.kalive_timer_ = m;
  this.kalive_due_QMARK__ = l;
  this.backoff_ms_fn = n;
  this.active_retry_id_ = p;
  this.retry_count_ = q;
  this.__meta = r;
  this.__extmap = t;
  this.__hash = u;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.call(null, this, b, null);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "client-id":
      return this.client_id;
    case "kalive-ms":
      return this.kalive_ms;
    case "packer":
      return this.packer;
    case "chs":
      return this.chs;
    case "params":
      return this.params;
    case "retry-count_":
      return this.retry_count_;
    case "backoff-ms-fn":
      return this.backoff_ms_fn;
    case "socket_":
      return this.socket_;
    case "url":
      return this.url;
    case "active-retry-id_":
      return this.active_retry_id_;
    case "kalive-due?_":
      return this.kalive_due_QMARK__;
    case "cbs-waiting_":
      return this.cbs_waiting_;
    case "kalive-timer_":
      return this.kalive_timer_;
    case "state_":
      return this.state_;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#taoensso.sente.ChWebSocket{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), this.client_id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "chs", 
  "chs", 376886120), this.chs], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), this.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "packer", "packer", 66077544), this.packer], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "url", "url", 276297046), 
  this.url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state_", "state_", 957667102), this.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), this.cbs_waiting_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "socket_", "socket_", 
  -361048908), this.socket_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021), this.kalive_ms], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), this.kalive_timer_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "kalive-due?_", "kalive-due?_", 39438072), this.kalive_due_QMARK__], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), this.backoff_ms_fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), this.active_retry_id_], null), new cljs.core.PersistentVector(null, 2, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "retry-count_", "retry-count_", 20238093), this.retry_count_], null)], null), this.__extmap));
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IIterable$ = !0;
taoensso.sente.ChWebSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 14, new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "url", "url", 276297046), new cljs.core.Keyword(null, "state_", "state_", 957667102), new cljs.core.Keyword(null, 
  "cbs-waiting_", "cbs-waiting_", -1519029061), new cljs.core.Keyword(null, "socket_", "socket_", -361048908), new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021), new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), new cljs.core.Keyword(null, 
  "retry-count_", "retry-count_", 20238093)], null), cljs.core._iterator.call(null, this.__extmap));
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new taoensso.sente.ChWebSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.cbs_waiting_, this.socket_, this.kalive_ms, this.kalive_timer_, this.kalive_due_QMARK__, this.backoff_ms_fn, this.active_retry_id_, this.retry_count_, this.__meta, this.__extmap, this.__hash);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 14 + cljs.core.count.call(null, this.__extmap);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_imap.call(null, this);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  var c = this;
  return cljs.core.truth_(function() {
    if (cljs.core.truth_(b)) {
      var a = c.constructor === b.constructor;
      return a ? cljs.core.equiv_map.call(null, c, b) : a;
    }
    return b;
  }()) ? !0 : !1;
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), null, new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021), null, new cljs.core.Keyword(null, "packer", "packer", 66077544), null, new cljs.core.Keyword(null, "chs", "chs", 376886120), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "retry-count_", 
  "retry-count_", 20238093), null, new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), null, new cljs.core.Keyword(null, "socket_", "socket_", -361048908), null, new cljs.core.Keyword(null, "url", "url", 276297046), null, new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), null, new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), null, new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), null, new cljs.core.Keyword(null, 
  "kalive-timer_", "kalive-timer_", 1558413149), null, new cljs.core.Keyword(null, "state_", "state_", 957667102), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new taoensso.sente.ChWebSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.cbs_waiting_, this.socket_, this.kalive_ms, this.kalive_timer_, this.kalive_due_QMARK__, this.backoff_ms_fn, 
  this.active_retry_id_, this.retry_count_, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), b)) ? new taoensso.sente.ChWebSocket(c, this.chs, this.params, this.packer, this.url, this.state_, this.cbs_waiting_, this.socket_, this.kalive_ms, this.kalive_timer_, this.kalive_due_QMARK__, this.backoff_ms_fn, this.active_retry_id_, this.retry_count_, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "chs", "chs", 376886120), b)) ? new taoensso.sente.ChWebSocket(this.client_id, 
  c, this.params, this.packer, this.url, this.state_, this.cbs_waiting_, this.socket_, this.kalive_ms, this.kalive_timer_, this.kalive_due_QMARK__, this.backoff_ms_fn, this.active_retry_id_, this.retry_count_, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), b)) ? new taoensso.sente.ChWebSocket(this.client_id, this.chs, c, this.packer, this.url, this.state_, this.cbs_waiting_, this.socket_, this.kalive_ms, this.kalive_timer_, 
  this.kalive_due_QMARK__, this.backoff_ms_fn, this.active_retry_id_, this.retry_count_, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "packer", "packer", 66077544), b)) ? new taoensso.sente.ChWebSocket(this.client_id, this.chs, this.params, c, this.url, this.state_, this.cbs_waiting_, this.socket_, this.kalive_ms, this.kalive_timer_, this.kalive_due_QMARK__, this.backoff_ms_fn, this.active_retry_id_, this.retry_count_, this.__meta, this.__extmap, null) : 
  cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "url", "url", 276297046), b)) ? new taoensso.sente.ChWebSocket(this.client_id, this.chs, this.params, this.packer, c, this.state_, this.cbs_waiting_, this.socket_, this.kalive_ms, this.kalive_timer_, this.kalive_due_QMARK__, this.backoff_ms_fn, this.active_retry_id_, this.retry_count_, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "state_", "state_", 957667102), b)) ? new taoensso.sente.ChWebSocket(this.client_id, 
  this.chs, this.params, this.packer, this.url, c, this.cbs_waiting_, this.socket_, this.kalive_ms, this.kalive_timer_, this.kalive_due_QMARK__, this.backoff_ms_fn, this.active_retry_id_, this.retry_count_, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), b)) ? new taoensso.sente.ChWebSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, c, this.socket_, this.kalive_ms, this.kalive_timer_, 
  this.kalive_due_QMARK__, this.backoff_ms_fn, this.active_retry_id_, this.retry_count_, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "socket_", "socket_", -361048908), b)) ? new taoensso.sente.ChWebSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.cbs_waiting_, c, this.kalive_ms, this.kalive_timer_, this.kalive_due_QMARK__, this.backoff_ms_fn, this.active_retry_id_, this.retry_count_, this.__meta, this.__extmap, 
  null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021), b)) ? new taoensso.sente.ChWebSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.cbs_waiting_, this.socket_, c, this.kalive_timer_, this.kalive_due_QMARK__, this.backoff_ms_fn, this.active_retry_id_, this.retry_count_, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), 
  b)) ? new taoensso.sente.ChWebSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.cbs_waiting_, this.socket_, this.kalive_ms, c, this.kalive_due_QMARK__, this.backoff_ms_fn, this.active_retry_id_, this.retry_count_, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), b)) ? new taoensso.sente.ChWebSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, 
  this.cbs_waiting_, this.socket_, this.kalive_ms, this.kalive_timer_, c, this.backoff_ms_fn, this.active_retry_id_, this.retry_count_, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), b)) ? new taoensso.sente.ChWebSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.cbs_waiting_, this.socket_, this.kalive_ms, this.kalive_timer_, this.kalive_due_QMARK__, c, this.active_retry_id_, 
  this.retry_count_, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), b)) ? new taoensso.sente.ChWebSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.cbs_waiting_, this.socket_, this.kalive_ms, this.kalive_timer_, this.kalive_due_QMARK__, this.backoff_ms_fn, c, this.retry_count_, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "retry-count_", "retry-count_", 20238093), b)) ? new taoensso.sente.ChWebSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.cbs_waiting_, this.socket_, this.kalive_ms, this.kalive_timer_, this.kalive_due_QMARK__, this.backoff_ms_fn, this.active_retry_id_, c, this.__meta, this.__extmap, null) : new taoensso.sente.ChWebSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.cbs_waiting_, this.socket_, this.kalive_ms, this.kalive_timer_, 
  this.kalive_due_QMARK__, this.backoff_ms_fn, this.active_retry_id_, this.retry_count_, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), this.client_id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "chs", "chs", 376886120), this.chs], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), this.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "packer", "packer", 66077544), this.packer], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "url", "url", 276297046), this.url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "state_", "state_", 957667102), this.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), this.cbs_waiting_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "socket_", "socket_", -361048908), this.socket_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021), this.kalive_ms], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), this.kalive_timer_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), this.kalive_due_QMARK__], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), this.backoff_ms_fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), this.active_retry_id_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "retry-count_", "retry-count_", 20238093), this.retry_count_], 
  null)], null), this.__extmap));
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new taoensso.sente.ChWebSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.cbs_waiting_, this.socket_, this.kalive_ms, this.kalive_timer_, this.kalive_due_QMARK__, this.backoff_ms_fn, this.active_retry_id_, this.retry_count_, b, this.__extmap, this.__hash);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? cljs.core._assoc.call(null, this, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$ = !0;
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = function(a, b, c) {
  var d = this;
  a = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
  var e = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406)), f = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "cb", "cb", 589947841)), g = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "flush?", "flush?", -108887231));
  taoensso.sente.assert_send_args.call(null, b, e, f);
  var h = taoensso.sente.cb_chan_as_fn.call(null, f, b);
  if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, d.state_)))) {
    return taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g, h) {
      return function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send against closed chsk."], null);
      };
    }(h, this, c, a, a, e, f, g), null), null), cljs.core.truth_(h) ? h.call(null, new cljs.core.Keyword("chsk", "closed", "chsk/closed", -922855264)) : null;
  }
  var k = cljs.core.truth_(h) ? taoensso.encore.uuid_str.call(null, 6) : null;
  b = taoensso.sente.pack.call(null, d.packer, cljs.core.meta.call(null, b), b, k);
  if (cljs.core.truth_(k) && (taoensso.encore.reset_in_BANG_.call(null, d.cbs_waiting_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [k], null), function() {
    try {
      return cljs.core.truth_(taoensso.encore.nnil_QMARK_.call(null, h)) ? h : taoensso.truss.impl._invar_violation_BANG_.call(null);
    } catch (a) {
      if (a instanceof Error) {
        return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.sente", null, "(taoensso.encore/nnil? ?cb-fn)", h, a, null);
      }
      throw a;
    }
  }()), cljs.core.truth_(e))) {
    var m = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, e, f, g, h, k, m, x, y, z, B, I, C) {
      return function() {
        var A = function() {
          return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
            return function() {
              var b = null, c = function() {
                var a = [null, null, null, null, null, null, null, null, null];
                a[0] = b;
                a[1] = 1;
                return a;
              }, d = function(b) {
                for (;;) {
                  var c;
                  a: {
                    try {
                      for (;;) {
                        var d = a.call(null, b);
                        if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          c = d;
                          break a;
                        }
                      }
                    } catch (e) {
                      if (e instanceof Object) {
                        b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e;
                      }
                    }
                  }
                  if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    return c;
                  }
                }
              }, b = function(a) {
                switch(arguments.length) {
                  case 0:
                    return c.call(this);
                  case 1:
                    return d.call(this, a);
                }
                throw Error("Invalid arity: " + arguments.length);
              };
              b.cljs$core$IFn$_invoke$arity$0 = c;
              b.cljs$core$IFn$_invoke$arity$1 = d;
              return b;
            }();
          }(function(a, b, c, e, f, g, h, k, l, m, n, p, q, r, t) {
            return function(a) {
              var c = a[1];
              if (1 === c) {
                return c = cljs.core.async.timeout.call(null, b), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 2, c);
              }
              if (2 === c) {
                var c = a[7], e = a[2], c = taoensso.sente.pull_unused_cb_fn_BANG_.call(null, d.cbs_waiting_, g);
                a[8] = e;
                a[7] = c;
                cljs.core.truth_(c) ? a[1] = 3 : a[1] = 4;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              }
              return 3 === c ? (c = a[7], c = c.call(null, new cljs.core.Keyword("chsk", "timeout", "chsk/timeout", -319776489)), a[2] = c, a[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 4 === c ? (a[2] = null, a[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === c ? (c = a[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, c)) : null;
            };
          }(a, b, c, e, f, g, h, k, m, x, y, z, B, I, C), a, b, c, e, f, g, h, k, m, x, y, z, B, I, C);
        }(), F = function() {
          var b = A.call(null);
          b[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = a;
          return b;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, F);
      };
    }(m, e, e, k, k, k, b, h, this, c, a, a, e, f, g));
  }
  try {
    return cljs.core.deref.call(null, d.socket_).send(b), cljs.core.reset_BANG_.call(null, d.kalive_due_QMARK__, !1), new cljs.core.Keyword(null, "apparent-success", "apparent-success", 242592222);
  } catch (l) {
    if (l instanceof Error) {
      return taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g, h, k, l, m) {
        return function() {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, "Chsk send error"], null);
        };
      }(l, k, b, h, this, c, a, a, e, f, g), null), null), cljs.core.truth_(k) && function() {
        var a = taoensso.sente.pull_unused_cb_fn_BANG_.call(null, d.cbs_waiting_, k);
        if (cljs.core.truth_(a)) {
          return a;
        }
        try {
          return cljs.core.truth_(taoensso.encore.nnil_QMARK_.call(null, h)) ? h : taoensso.truss.impl._invar_violation_BANG_.call(null);
        } catch (b) {
          if (b instanceof Error) {
            return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.sente", null, "(taoensso.encore/nnil? ?cb-fn)", h, b, null);
          }
          throw b;
        }
      }().call(null, new cljs.core.Keyword("chsk", "error", "chsk/error", -984175439)), !1;
    }
    throw l;
  }
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$chsk_destroy_BANG_$arity$1 = function(a) {
  return taoensso.sente.chsk_disconnect_BANG_.call(null, this);
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$chsk_disconnect_BANG_$arity$1 = function(a) {
  cljs.core.reset_BANG_.call(null, this.active_retry_id_, "disconnected");
  taoensso.sente.merge_GT_chsk_state_BANG_.call(null, this, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), !1], null));
  a = cljs.core.deref.call(null, this.socket_);
  return cljs.core.truth_(a) ? a.close(1E3, "CLOSE_NORMAL") : null;
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$chsk_reconnect_BANG_$arity$1 = function(a) {
  cljs.core.reset_BANG_.call(null, this.active_retry_id_, "reconnecting");
  taoensso.sente.merge_GT_chsk_state_BANG_.call(null, this, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), !1, new cljs.core.Keyword(null, "requested-reconnect-pending?", "requested-reconnect-pending?", -299841116), !0], null));
  a = cljs.core.deref.call(null, this.socket_);
  cljs.core.truth_(a) && a.close(3E3, "SENTE_RECONNECT");
  return taoensso.sente._chsk_connect_BANG_.call(null, this);
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = function(a) {
  var b = this, c = function() {
    var a = taoensso.encore.oget.call(null, window, "WebSocket");
    return cljs.core.truth_(a) ? a : taoensso.encore.oget.call(null, window, "MozWebSocket");
  }();
  return cljs.core.truth_(c) ? (a = taoensso.encore.uuid_str.call(null), c = function(a, c, f, g) {
    return function k() {
      var m = function(a, c, d, e) {
        return function() {
          if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, b.active_retry_id_), a)) {
            var f = cljs.core.swap_BANG_.call(null, b.retry_count_, cljs.core.inc), g = b.backoff_ms_fn.call(null, f);
            window.clearInterval(cljs.core.deref.call(null, b.kalive_timer_));
            taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f) {
              return function() {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk is closed: will try reconnect (%s)", a], null);
              };
            }(f, g, a, c, d, e), null), null);
            return window.setTimeout(k, g);
          }
          return null;
        };
      }(a, c, f, g), l = function() {
        try {
          return new c(taoensso.encore.merge_url_with_query_string.call(null, b.url, cljs.core.merge.call(null, b.params, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), b.client_id], null))));
        } catch (k) {
          if (k instanceof Error) {
            return taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f) {
              return function() {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, "WebSocket js/Error"], null);
              };
            }(k, m, a, c, f, g), null), null), null;
          }
          throw k;
        }
      }();
      return cljs.core.not.call(null, l) ? m.call(null) : cljs.core.reset_BANG_.call(null, b.socket_, function() {
        l.onerror = function(a, b, c, d, e, f, g) {
          return function(k) {
            return taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g) {
              return function() {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["WebSocket error: %s", k], null);
              };
            }(a, b, c, d, e, f, g), null), null);
          };
        }(l, m, l, a, c, f, g);
        l.onmessage = function(a, c, d, e, f, g, k) {
          return function(l) {
            l = taoensso.encore.oget.call(null, l, "data");
            var m = taoensso.sente.unpack.call(null, b.packer, l), y = cljs.core.nth.call(null, m, 0, null), z = cljs.core.nth.call(null, m, 1, null), B = function() {
              var a = taoensso.sente.handle_when_handshake_BANG_.call(null, k, b.chs, y);
              return cljs.core.truth_(a) ? cljs.core.reset_BANG_.call(null, b.retry_count_, 0) : a;
            }();
            if (cljs.core.truth_(B)) {
              return B;
            }
            if (cljs.core.truth_(z)) {
              var I = taoensso.sente.pull_unused_cb_fn_BANG_.call(null, b.cbs_waiting_, z);
              return cljs.core.truth_(I) ? I.call(null, y) : taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g, k, l, m, n, p, q, r, t) {
                return function() {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Cb reply w/o local cb-fn: %s", g], null);
                };
              }(I, z, z, B, l, m, y, z, a, c, d, e, f, g, k), null), null);
            }
            return taoensso.sente.receive_buffered_evs_BANG_.call(null, b.chs, y);
          };
        }(l, m, l, a, c, f, g);
        l.onopen = function(a, c, d, e, f, g, k) {
          return function(l) {
            return cljs.core.reset_BANG_.call(null, b.kalive_timer_, window.setInterval(function(a, c, d, e, f, g, k) {
              return function() {
                cljs.core.truth_(cljs.core.deref.call(null, b.kalive_due_QMARK__)) && taoensso.sente.chsk_send_BANG_.call(null, k, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "ws-ping", "chsk/ws-ping", 191675304)], null));
                return cljs.core.reset_BANG_.call(null, b.kalive_due_QMARK__, !0);
              };
            }(a, c, d, e, f, g, k), b.kalive_ms));
          };
        }(l, m, l, a, c, f, g);
        l.onclose = function(a, b, c, d, e, f, g) {
          return function(a) {
            taoensso.sente.merge_GT_chsk_state_BANG_.call(null, g, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), !1], null));
            return b.call(null);
          };
        }(l, m, l, a, c, f, g);
        return l;
      }());
    };
  }(a, c, c, this), cljs.core.reset_BANG_.call(null, b.active_retry_id_, a), cljs.core.reset_BANG_.call(null, b.retry_count_, 0), c.call(null), this) : null;
};
taoensso.sente.ChWebSocket.getBasis = function() {
  return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "client-id", "client-id", 1175909387, null), new cljs.core.Symbol(null, "chs", "chs", 2017417647, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "packer", "packer", 1706609071, null), new cljs.core.Symbol(null, "url", "url", 1916828573, null), new cljs.core.Symbol(null, "state_", "state_", -1696768667, null), new cljs.core.Symbol(null, 
  "cbs-waiting_", "cbs-waiting_", 121502466, null), new cljs.core.Symbol(null, "socket_", "socket_", 1279482619, null), new cljs.core.Symbol(null, "kalive-ms", "kalive-ms", 1851265548, null), new cljs.core.Symbol(null, "kalive-timer_", "kalive-timer_", -1096022620, null), new cljs.core.Symbol(null, "kalive-due?_", "kalive-due?_", 1679969599, null), new cljs.core.Symbol(null, "backoff-ms-fn", "backoff-ms-fn", -1881539814, null), new cljs.core.Symbol(null, "active-retry-id_", "active-retry-id_", 1468292413, 
  null), new cljs.core.Symbol(null, "retry-count_", "retry-count_", 1660769620, null)], null);
};
taoensso.sente.ChWebSocket.cljs$lang$type = !0;
taoensso.sente.ChWebSocket.cljs$lang$ctorPrSeq = function(a) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "taoensso.sente/ChWebSocket");
};
taoensso.sente.ChWebSocket.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "taoensso.sente/ChWebSocket");
};
taoensso.sente.__GT_ChWebSocket = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q) {
  return new taoensso.sente.ChWebSocket(a, b, c, d, e, f, g, h, k, m, l, n, p, q, null, null, null);
};
taoensso.sente.map__GT_ChWebSocket = function(a) {
  return new taoensso.sente.ChWebSocket((new cljs.core.Keyword(null, "client-id", "client-id", -464622140)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "chs", "chs", 376886120)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "packer", "packer", 66077544)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "socket_", "socket_", -361048908)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "retry-count_", "retry-count_", 20238093)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, 
  "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "url", "url", 276297046), new cljs.core.Keyword(null, "state_", "state_", 957667102), new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), new cljs.core.Keyword(null, "socket_", "socket_", -361048908), new cljs.core.Keyword(null, "kalive-ms", 
  "kalive-ms", 210734021), new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), new cljs.core.Keyword(null, "retry-count_", "retry-count_", 20238093)), null);
};
taoensso.sente.ChAjaxSocket = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q) {
  this.client_id = a;
  this.chs = b;
  this.params = c;
  this.packer = d;
  this.url = e;
  this.state_ = f;
  this.timeout_ms = g;
  this.ajax_opts = h;
  this.curr_xhr_ = k;
  this.active_retry_id_ = m;
  this.backoff_ms_fn = l;
  this.__meta = n;
  this.__extmap = p;
  this.__hash = q;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return cljs.core._lookup.call(null, this, b, null);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "curr-xhr_":
      return this.curr_xhr_;
    case "client-id":
      return this.client_id;
    case "packer":
      return this.packer;
    case "chs":
      return this.chs;
    case "params":
      return this.params;
    case "backoff-ms-fn":
      return this.backoff_ms_fn;
    case "url":
      return this.url;
    case "active-retry-id_":
      return this.active_retry_id_;
    case "ajax-opts":
      return this.ajax_opts;
    case "timeout-ms":
      return this.timeout_ms;
    case "state_":
      return this.state_;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#taoensso.sente.ChAjaxSocket{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), this.client_id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "chs", "chs", 376886120), this.chs], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), this.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "packer", "packer", 66077544), this.packer], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "url", "url", 276297046), 
  this.url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state_", "state_", 957667102), this.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), this.timeout_ms], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), 
  this.ajax_opts], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), this.curr_xhr_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), this.active_retry_id_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "backoff-ms-fn", "backoff-ms-fn", 772895955), this.backoff_ms_fn], null)], null), this.__extmap));
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IIterable$ = !0;
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 11, new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "url", "url", 276297046), new cljs.core.Keyword(null, "state_", "state_", 957667102), new cljs.core.Keyword(null, 
  "timeout-ms", "timeout-ms", 754221406), new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955)], null), cljs.core._iterator.call(null, this.__extmap));
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new taoensso.sente.ChAjaxSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.timeout_ms, this.ajax_opts, this.curr_xhr_, this.active_retry_id_, this.backoff_ms_fn, this.__meta, this.__extmap, this.__hash);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 11 + cljs.core.count.call(null, this.__extmap);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_imap.call(null, this);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  var c = this;
  return cljs.core.truth_(function() {
    if (cljs.core.truth_(b)) {
      var a = c.constructor === b.constructor;
      return a ? cljs.core.equiv_map.call(null, c, b) : a;
    }
    return b;
  }()) ? !0 : !1;
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), null, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), null, new cljs.core.Keyword(null, "packer", "packer", 66077544), null, new cljs.core.Keyword(null, "chs", "chs", 376886120), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "backoff-ms-fn", 
  "backoff-ms-fn", 772895955), null, new cljs.core.Keyword(null, "url", "url", 276297046), null, new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), null, new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), null, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), null, new cljs.core.Keyword(null, "state_", "state_", 957667102), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, 
  cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new taoensso.sente.ChAjaxSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.timeout_ms, this.ajax_opts, this.curr_xhr_, this.active_retry_id_, this.backoff_ms_fn, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), b)) ? new taoensso.sente.ChAjaxSocket(c, this.chs, this.params, this.packer, this.url, this.state_, this.timeout_ms, this.ajax_opts, this.curr_xhr_, this.active_retry_id_, this.backoff_ms_fn, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "chs", "chs", 376886120), b)) ? new taoensso.sente.ChAjaxSocket(this.client_id, c, this.params, this.packer, 
  this.url, this.state_, this.timeout_ms, this.ajax_opts, this.curr_xhr_, this.active_retry_id_, this.backoff_ms_fn, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), b)) ? new taoensso.sente.ChAjaxSocket(this.client_id, this.chs, c, this.packer, this.url, this.state_, this.timeout_ms, this.ajax_opts, this.curr_xhr_, this.active_retry_id_, this.backoff_ms_fn, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "packer", "packer", 66077544), b)) ? new taoensso.sente.ChAjaxSocket(this.client_id, this.chs, this.params, c, this.url, this.state_, this.timeout_ms, this.ajax_opts, this.curr_xhr_, this.active_retry_id_, this.backoff_ms_fn, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "url", "url", 276297046), b)) ? new taoensso.sente.ChAjaxSocket(this.client_id, this.chs, this.params, this.packer, c, this.state_, this.timeout_ms, this.ajax_opts, 
  this.curr_xhr_, this.active_retry_id_, this.backoff_ms_fn, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "state_", "state_", 957667102), b)) ? new taoensso.sente.ChAjaxSocket(this.client_id, this.chs, this.params, this.packer, this.url, c, this.timeout_ms, this.ajax_opts, this.curr_xhr_, this.active_retry_id_, this.backoff_ms_fn, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 
  754221406), b)) ? new taoensso.sente.ChAjaxSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, c, this.ajax_opts, this.curr_xhr_, this.active_retry_id_, this.backoff_ms_fn, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), b)) ? new taoensso.sente.ChAjaxSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.timeout_ms, c, this.curr_xhr_, this.active_retry_id_, 
  this.backoff_ms_fn, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), b)) ? new taoensso.sente.ChAjaxSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.timeout_ms, this.ajax_opts, c, this.active_retry_id_, this.backoff_ms_fn, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), b)) ? 
  new taoensso.sente.ChAjaxSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.timeout_ms, this.ajax_opts, this.curr_xhr_, c, this.backoff_ms_fn, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), b)) ? new taoensso.sente.ChAjaxSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.timeout_ms, this.ajax_opts, this.curr_xhr_, this.active_retry_id_, 
  c, this.__meta, this.__extmap, null) : new taoensso.sente.ChAjaxSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.timeout_ms, this.ajax_opts, this.curr_xhr_, this.active_retry_id_, this.backoff_ms_fn, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), this.client_id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "chs", "chs", 376886120), this.chs], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), this.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "packer", "packer", 66077544), this.packer], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "url", "url", 276297046), this.url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "state_", "state_", 957667102), this.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), this.timeout_ms], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), this.ajax_opts], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), this.curr_xhr_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), this.active_retry_id_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), this.backoff_ms_fn], null)], null), this.__extmap));
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new taoensso.sente.ChAjaxSocket(this.client_id, this.chs, this.params, this.packer, this.url, this.state_, this.timeout_ms, this.ajax_opts, this.curr_xhr_, this.active_retry_id_, this.backoff_ms_fn, b, this.__extmap, this.__hash);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? cljs.core._assoc.call(null, this, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$ = !0;
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = function(a, b, c) {
  var d = this;
  a = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
  var e = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406)), f = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "cb", "cb", 589947841)), g = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "flush?", "flush?", -108887231));
  taoensso.sente.assert_send_args.call(null, b, e, f);
  var h = taoensso.sente.cb_chan_as_fn.call(null, f, b);
  if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, d.state_)))) {
    return taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g, h) {
      return function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send against closed chsk."], null);
      };
    }(h, this, c, a, a, e, f, g), null), null), cljs.core.truth_(h) ? h.call(null, new cljs.core.Keyword("chsk", "closed", "chsk/closed", -922855264)) : null;
  }
  taoensso.sente.ajax_lite.call(null, d.url, cljs.core.merge.call(null, d.ajax_opts, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "post", "post", 269697687), new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), e, new cljs.core.Keyword(null, "resp-type", "resp-type", 1050675962), new cljs.core.Keyword(null, "text", "text", -1790561697), new cljs.core.Keyword(null, "params", "params", 710516235), function() {
    var a = taoensso.sente.pack.call(null, d.packer, cljs.core.meta.call(null, b), b, cljs.core.truth_(h) ? new cljs.core.Keyword(null, "ajax-cb", "ajax-cb", -807060321) : null);
    return cljs.core.merge.call(null, d.params, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "_", "_", 1453416199), taoensso.encore.now_udt.call(null), new cljs.core.Keyword(null, "csrf-token", "csrf-token", -1872302856), (new cljs.core.Keyword(null, "csrf-token", "csrf-token", -1872302856)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, d.state_)), new cljs.core.Keyword(null, "client-id", "client-id", -464622140), d.client_id, new cljs.core.Keyword(null, "ppstr", 
    "ppstr", 1557495252), a], null));
  }()], null)), function(a, b, c, e, f, g, h, t) {
    return function(u) {
      var v = null != u && (u.cljs$lang$protocol_mask$partition0$ & 64 || u.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, u) : u, w = cljs.core.get.call(null, v, new cljs.core.Keyword(null, "?error", "?error", 1070752222)), x = cljs.core.get.call(null, v, new cljs.core.Keyword(null, "?content", "?content", 1697782054));
      if (cljs.core.truth_(w)) {
        if (cljs.core._EQ_.call(null, w, new cljs.core.Keyword(null, "timeout", "timeout", -318625318))) {
          return cljs.core.truth_(a) ? a.call(null, new cljs.core.Keyword("chsk", "timeout", "chsk/timeout", -319776489)) : null;
        }
        taoensso.sente.merge_GT_chsk_state_BANG_.call(null, b, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), !1], null));
        return cljs.core.truth_(a) ? a.call(null, new cljs.core.Keyword("chsk", "error", "chsk/error", -984175439)) : null;
      }
      var y = taoensso.sente.unpack.call(null, d.packer, x), z = cljs.core.nth.call(null, y, 0, null), B = cljs.core.nth.call(null, y, 1, null);
      cljs.core.truth_(a) ? a.call(null, z) : cljs.core.not_EQ_.call(null, z, new cljs.core.Keyword("chsk", "dummy-cb-200", "chsk/dummy-cb-200", -1663130337)) && taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, 
      f, g, h, k, l, m, n, p, q, r, t, u) {
        return function() {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Cb reply w/o local cb-fn: %s", d], null);
        };
      }(x, x, y, z, B, u, v, w, x, a, b, c, e, f, g, h, t), null), null);
      return taoensso.sente.merge_GT_chsk_state_BANG_.call(null, b, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), !0], null));
    };
  }(h, this, c, a, a, e, f, g));
  return new cljs.core.Keyword(null, "apparent-success", "apparent-success", 242592222);
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$chsk_destroy_BANG_$arity$1 = function(a) {
  return taoensso.sente.chsk_disconnect_BANG_.call(null, this);
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$chsk_disconnect_BANG_$arity$1 = function(a) {
  cljs.core.reset_BANG_.call(null, this.active_retry_id_, "disconnected");
  taoensso.sente.merge_GT_chsk_state_BANG_.call(null, this, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), !1], null));
  a = cljs.core.deref.call(null, this.curr_xhr_);
  return cljs.core.truth_(a) ? a.abort() : null;
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$chsk_reconnect_BANG_$arity$1 = function(a) {
  cljs.core.reset_BANG_.call(null, this.active_retry_id_, "reconnecting");
  taoensso.sente.merge_GT_chsk_state_BANG_.call(null, this, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), !1, new cljs.core.Keyword(null, "requested-reconnect-pending?", "requested-reconnect-pending?", -299841116), !0], null));
  a = cljs.core.deref.call(null, this.curr_xhr_);
  cljs.core.truth_(a) && a.abort();
  return taoensso.sente._chsk_connect_BANG_.call(null, this);
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = function(a) {
  var b = this;
  a = taoensso.encore.uuid_str.call(null);
  var c = function(a, c) {
    return function g(h) {
      taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b) {
        return function() {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["async-poll-for-update!"], null);
        };
      }(a, c), null), null);
      var k = function(a, c) {
        return function() {
          if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, b.active_retry_id_), a)) {
            var d = h + 1, e = b.backoff_ms_fn.call(null, d);
            taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d) {
              return function() {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk is closed: will try reconnect (%s)", a], null);
              };
            }(d, e, a, c), null), null);
            return window.setTimeout(function(a, b, c, d) {
              return function() {
                return g.call(null, a);
              };
            }(d, e, a, c), e);
          }
          return null;
        };
      }(a, c);
      return cljs.core.reset_BANG_.call(null, b.curr_xhr_, taoensso.sente.ajax_lite.call(null, b.url, cljs.core.merge.call(null, b.ajax_opts, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "get", "get", 1683182755), new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), b.timeout_ms, new cljs.core.Keyword(null, "resp-type", "resp-type", 1050675962), new cljs.core.Keyword(null, "text", "text", -1790561697), 
      new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.merge.call(null, b.params, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "_", "_", 1453416199), taoensso.encore.now_udt.call(null), new cljs.core.Keyword(null, "client-id", "client-id", -464622140), b.client_id], null), cljs.core.truth_((new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, b.state_))) ? null : new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "handshake?", "handshake?", -423743093), !0], null))], null)), function(a, c, d) {
        return function(c) {
          var e = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
          c = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "?error", "?error", 1070752222));
          e = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "?content", "?content", 1697782054));
          if (cljs.core.truth_(c)) {
            if (cljs.core._EQ_.call(null, c, new cljs.core.Keyword(null, "timeout", "timeout", -318625318))) {
              return g.call(null, 0);
            }
            taoensso.sente.merge_GT_chsk_state_BANG_.call(null, d, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), !1], null));
            return a.call(null);
          }
          e = taoensso.sente.unpack.call(null, b.packer, e);
          c = cljs.core.nth.call(null, e, 0, null);
          cljs.core.nth.call(null, e, 1, null);
          e = taoensso.sente.handle_when_handshake_BANG_.call(null, d, b.chs, c);
          cljs.core.truth_(e) || (taoensso.sente.receive_buffered_evs_BANG_.call(null, b.chs, c), taoensso.sente.merge_GT_chsk_state_BANG_.call(null, d, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), !0], null)));
          return g.call(null, 0);
        };
      }(k, a, c)));
    };
  }(a, this);
  cljs.core.reset_BANG_.call(null, b.active_retry_id_, a);
  c.call(null, 0);
  return this;
};
taoensso.sente.ChAjaxSocket.getBasis = function() {
  return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "client-id", "client-id", 1175909387, null), new cljs.core.Symbol(null, "chs", "chs", 2017417647, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "packer", "packer", 1706609071, null), new cljs.core.Symbol(null, "url", "url", 1916828573, null), new cljs.core.Symbol(null, "state_", "state_", -1696768667, null), new cljs.core.Symbol(null, 
  "timeout-ms", "timeout-ms", -1900214363, null), new cljs.core.Symbol(null, "ajax-opts", "ajax-opts", 1122292418, null), new cljs.core.Symbol(null, "curr-xhr_", "curr-xhr_", 321757831, null), new cljs.core.Symbol(null, "active-retry-id_", "active-retry-id_", 1468292413, null), new cljs.core.Symbol(null, "backoff-ms-fn", "backoff-ms-fn", -1881539814, null)], null);
};
taoensso.sente.ChAjaxSocket.cljs$lang$type = !0;
taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrSeq = function(a) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "taoensso.sente/ChAjaxSocket");
};
taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "taoensso.sente/ChAjaxSocket");
};
taoensso.sente.__GT_ChAjaxSocket = function(a, b, c, d, e, f, g, h, k, m, l) {
  return new taoensso.sente.ChAjaxSocket(a, b, c, d, e, f, g, h, k, m, l, null, null, null);
};
taoensso.sente.map__GT_ChAjaxSocket = function(a) {
  return new taoensso.sente.ChAjaxSocket((new cljs.core.Keyword(null, "client-id", "client-id", -464622140)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "chs", "chs", 376886120)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "packer", "packer", 66077544)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "url", "url", 276297046), new cljs.core.Keyword(null, "state_", "state_", 957667102), 
  new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955)), null);
};
taoensso.sente.get_chsk_url = function(a, b, c, d) {
  a: {
    switch(d instanceof cljs.core.Keyword ? d.fqn : null) {
      case "ajax":
        break a;
      case "ws":
        a = cljs.core._EQ_.call(null, a, "https:") ? "wss:" : "ws:";
        break a;
      default:
        throw Error([cljs.core.str("No matching clause: "), cljs.core.str(d)].join(""));;
    }
  }
  return [cljs.core.str(a), cljs.core.str("//"), cljs.core.str(taoensso.encore.path.call(null, b, c))].join("");
};
taoensso.sente.make_channel_socket_client_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0) : null;
  return taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c, e = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109)), f = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "ws-kalive-ms", "ws-kalive-ms", 1442179968), 25E3), g = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "lp-timeout-ms", "lp-timeout-ms", -1451963133), 
  25E3), h = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), function() {
    var a = (new cljs.core.Keyword(null, "client-uuid", "client-uuid", -1717531965)).cljs$core$IFn$_invoke$arity$1(d);
    return cljs.core.truth_(a) ? a : taoensso.encore.uuid_str.call(null);
  }()), k = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "edn", "edn", 1317840885)), m = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "params", "params", 710516235)), l = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "auto", "auto", -566279492)), n = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "host", "host", -1558485167)), p = cljs.core.get.call(null, 
  d, new cljs.core.Keyword(null, "recv-buf-or-n", "recv-buf-or-n", 1363950355), cljs.core.async.sliding_buffer.call(null, 2048)), q = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), taoensso.encore.exp_backoff), r = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "wrap-recv-evs?", "wrap-recv-evs?", -1996694153), !0), t = cljs.core.nth.call(null, b, 1, null);
  if (!cljs.core.truth_(function() {
    try {
      return cljs.core.truth_(taoensso.truss.impl._invar_pred.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "in", "in", -1531184865), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), null, new cljs.core.Keyword(null, "auto", "auto", -566279492), null], null), null)], null)).call(null, 
      l)) ? !0 : taoensso.truss.impl._invar_violation_BANG_.call(null);
    } catch (a) {
      if (a instanceof Error) {
        return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.sente", null, "([:in #{:ws :ajax :auto}] type)", l, a, null);
      }
      throw a;
    }
  }())) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "in", "in", -1531184865), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), 
    null, new cljs.core.Keyword(null, "auto", "auto", -566279492), null], null), null)], null), new cljs.core.Symbol(null, "type", "type", -1480165421, null))))].join(""));
  }
  if (!cljs.core.truth_(function() {
    try {
      return cljs.core.truth_(taoensso.encore.nblank_str_QMARK_.call(null, h)) ? !0 : taoensso.truss.impl._invar_violation_BANG_.call(null);
    } catch (a) {
      if (a instanceof Error) {
        return taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.sente", null, "(enc/nblank-str? client-id)", h, a, null);
      }
      throw a;
    }
  }())) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol("enc", "nblank-str?", "enc/nblank-str?", 19952870, null), new cljs.core.Symbol(null, "client-id", "client-id", 1175909387, null))))].join(""));
  }
  null != t && taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
    return function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["`make-channel-socket-client!` fn signature CHANGED with Sente v0.10.0."], null);
    };
  }(b, c, d, d, e, f, g, h, k, m, l, n, p, q, r, t), null), null);
  cljs.core.contains_QMARK_.call(null, d, new cljs.core.Keyword(null, "lp-timeout", "lp-timeout", 1149461302)) && taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Delay(function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
    return function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [":lp-timeout opt has CHANGED; please use :lp-timout-ms."], null);
    };
  }(b, c, d, d, e, f, g, h, k, m, l, n, p, q, r, t), null), null);
  var u = taoensso.sente.interfaces.coerce_packer.call(null, k), v = taoensso.encore.get_window_location.call(null), w = (new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(v), x = cljs.core.truth_(n) ? n : (new cljs.core.Keyword(null, "host", "host", -1558485167)).cljs$core$IFn$_invoke$arity$1(v), y = cljs.core.truth_(a) ? a : (new cljs.core.Keyword(null, "pathname", "pathname", -1420497528)).cljs$core$IFn$_invoke$arity$1(v), z = new cljs.core.PersistentArrayMap(null, 
  3, [new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 10)), new cljs.core.Keyword(null, "internal", "internal", -854870097), cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 10)), new cljs.core.Keyword(null, "\x3cserver", "\x3cserver", -2135373537), cljs.core.async.chan.call(null, p)], null), B = cljs.core.atom.call(null, !1), I = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, 
  u, v, w, I, x, A, y) {
    return function(a) {
      if (cljs.core.truth_(function() {
        var b = cljs.core.not.call(null, (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(a));
        return b ? b : cljs.core.deref.call(null, g);
      }())) {
        return a;
      }
      cljs.core.reset_BANG_.call(null, g, !0);
      return cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "first-open?", "first-open?", 396686530), !0);
    };
  }(u, v, w, x, y, z, B, b, c, d, d, e, f, g, h, k, m, l, n, p, q, r, t), C = cljs.core.async.merge.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "internal", "internal", -854870097)).cljs$core$IFn$_invoke$arity$1(z), cljs.core.async.map_LT_.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, x, A, y, C) {
    return function(a) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "state", "chsk/state", -1991397620), h.call(null, a)], null);
    };
  }(u, v, w, x, y, z, B, I, b, c, d, d, e, f, g, h, k, m, l, n, p, q, r, t), (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(z)), function() {
    var a = (new cljs.core.Keyword(null, "\x3cserver", "\x3cserver", -2135373537)).cljs$core$IFn$_invoke$arity$1(z);
    return cljs.core.truth_(r) ? cljs.core.async.map_LT_.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, x, A, y, C, z) {
      return function(a) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "recv", "chsk/recv", 561097091), a], null);
      };
    }(a, u, v, w, x, y, z, B, I, b, c, d, d, e, f, g, h, k, m, l, n, p, q, r, t), a) : cljs.core.async.map_LT_.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, x, A, y, C, z) {
      return function(B) {
        var D = cljs.core.nth.call(null, B, 0, null), F = cljs.core.nth.call(null, B, 1, null), K;
        try {
          K = cljs.core.namespace.call(null, D);
        } catch (ha) {
          if (ha instanceof Error) {
            K = taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.sente", null, '((fn* [p1__26959#] (not\x3d p1__26959# "chsk")) (namespace id))', taoensso.truss.impl._invar_undefined_val, ha, null);
          } else {
            throw ha;
          }
        }
        try {
          (function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, x, A, y, C, z, B, D, E, F) {
            return function(a) {
              return cljs.core.not_EQ_.call(null, a, "chsk");
            };
          })(K, B, D, F, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, x, A, y, C, z).call(null, K) || taoensso.truss.impl._invar_violation_BANG_.call(null);
        } catch (ha) {
          if (ha instanceof Error) {
            taoensso.truss.impl._invar_violation_BANG_.call(null, !0, "taoensso.sente", null, '((fn* [p1__26959#] (not\x3d p1__26959# "chsk")) (namespace id))', K, ha, null);
          } else {
            throw ha;
          }
        }
        return B;
      };
    }(a, u, v, w, x, y, z, B, I, b, c, d, d, e, f, g, h, k, m, l, n, p, q, r, t), a);
  }()], null)), A = function() {
    var a = function() {
      var a = cljs.core.not_EQ_.call(null, l, new cljs.core.Keyword(null, "ajax", "ajax", 814345549));
      return a ? taoensso.sente._chsk_connect_BANG_.call(null, taoensso.sente.map__GT_ChWebSocket.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021), new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "retry-count_", "retry-count_", 
      20238093), new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), new cljs.core.Keyword(null, "socket_", "socket_", -361048908), new cljs.core.Keyword(null, "url", "url", 276297046), new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), 
      new cljs.core.Keyword(null, "state_", "state_", 957667102)], [h, f, u, z, m, cljs.core.atom.call(null, 0), q, cljs.core.atom.call(null, null), function() {
        var a = (new cljs.core.Keyword(null, "chsk-url-fn", "chsk-url-fn", 1968894294)).cljs$core$IFn$_invoke$arity$1(d);
        return cljs.core.truth_(a) ? a.call(null, y, v, new cljs.core.Keyword(null, "ws", "ws", 86841443)) : taoensso.sente.get_chsk_url.call(null, w, x, y, new cljs.core.Keyword(null, "ws", "ws", 86841443));
      }(), cljs.core.atom.call(null, "pending"), cljs.core.atom.call(null, !0), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), cljs.core.atom.call(null, null), cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "ws", "ws", 86841443), new cljs.core.Keyword(null, "open?", "open?", 1238443125), !1], null))]))) : a;
    }();
    return cljs.core.truth_(a) ? a : (a = cljs.core.not_EQ_.call(null, l, new cljs.core.Keyword(null, "ws", "ws", 86841443))) ? taoensso.sente._chsk_connect_BANG_.call(null, taoensso.sente.map__GT_ChAjaxSocket.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "chs", "chs", 376886120), 
    new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), new cljs.core.Keyword(null, "url", "url", 276297046), new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), new cljs.core.Keyword(null, "state_", "state_", 957667102)], [cljs.core.atom.call(null, null), 
    h, u, z, m, q, function() {
      var a = (new cljs.core.Keyword(null, "chsk-url-fn", "chsk-url-fn", 1968894294)).cljs$core$IFn$_invoke$arity$1(d);
      return cljs.core.truth_(a) ? a.call(null, y, v, new cljs.core.Keyword(null, "ajax", "ajax", 814345549)) : taoensso.sente.get_chsk_url.call(null, w, x, y, new cljs.core.Keyword(null, "ajax", "ajax", 814345549));
    }(), cljs.core.atom.call(null, "pending"), e, g, cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "ajax", "ajax", 814345549), new cljs.core.Keyword(null, "open?", "open?", 1238443125), !1], null))]))) : a;
  }();
  if (!cljs.core.truth_(A)) {
    throw Error([cljs.core.str("Assert failed: "), cljs.core.str("Failed to create channel socket"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "chsk", "chsk", 776828446, null)))].join(""));
  }
  var F = null, K = cljs.core.partial.call(null, taoensso.sente.chsk_send_BANG_, A), C = cljs.core.async.map_LT_.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, I, x, A, y, C, z, B, F, K) {
    return function(a) {
      a = taoensso.sente.as_event.call(null, a);
      var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null);
      return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), k, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041), n, new cljs.core.Keyword(null, "state", "state", -1988618099), (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(l), new cljs.core.Keyword(null, "event", "event", 301435442), a, new cljs.core.Keyword(null, "id", "id", -1388402092), b, new cljs.core.Keyword(null, "?data", "?data", 
      -9471433), c], null);
    };
  }(u, v, w, x, y, z, B, I, C, A, F, K, b, c, d, d, e, f, g, h, k, m, l, n, p, q, r, t), C);
  return cljs.core.truth_(A) ? new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "chsk", "chsk", -863703081), A, new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), C, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041), K, new cljs.core.Keyword(null, "state", "state", -1988618099), (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(A)], null) : null;
};
taoensso.sente.make_channel_socket_client_BANG_.cljs$lang$maxFixedArity = 1;
taoensso.sente.make_channel_socket_client_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
taoensso.sente._start_chsk_router_BANG_ = function(a, b, c, d) {
  var e = null != d && (d.cljs$lang$protocol_mask$partition0$ & 64 || d.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, d) : d, f = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "trace-evs?", "trace-evs?", 1502453512)), g = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "error-handler", "error-handler", -484945776)), h = cljs.core.async.chan.call(null), k = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(d, e, f, g, h, k) {
    return function() {
      var t = function() {
        return function(a, b, c, d, e, f, g) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                var c;
                a: {
                  try {
                    for (;;) {
                      var d = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        c = d;
                        break a;
                      }
                    }
                  } catch (e) {
                    if (e instanceof Object) {
                      b[5] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), c = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return c;
                }
              }
            }, b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + arguments.length);
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(d, e, f, g, h, k) {
          return function(l) {
            var m = l[1];
            if (7 === m) {
              var n = l;
              n[2] = l[2];
              n[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === m) {
              var p = l[7], q = l[8], r = l[9], t = l[10], u = l[11], G = l[12], n = function() {
                return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) {
                  return function() {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pre-handler event: %s", g], null);
                  };
                }(p, r, u, q, G, G, t, p, q, r, t, u, G, m, d, e, f, g, h, k);
              }(), n = new cljs.core.Delay(n, null), n = taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), n, null);
              l[2] = n;
              l[1] = 22;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (27 === m) {
              return G = l[12], n = taoensso.truss.impl._invar_violation_BANG_.call(null, null, "taoensso.sente", null, "(server-event-msg? event-msg)", G, l[2], null), l[2] = n, cljs.core.async.impl.ioc_helpers.process_exception.call(null, l), new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === m) {
              return l[2] = null, l[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (24 === m) {
              return l[2] = null, l[1] = 34, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (39 === m) {
              return l[2] = null, l[1] = 40, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (46 === m) {
              return n = l[13], n = new cljs.core.PersistentVector(null, 2, 5, n, [l[2], null], null), l[2] = n, cljs.core.async.impl.ioc_helpers.process_exception.call(null, l), new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === m) {
              var p = l[7], q = l[8], u = l[11], L = l[2], r = cljs.core.nth.call(null, L, 0, null), M = cljs.core.nth.call(null, L, 1, null), n = taoensso.encore.kw_identical_QMARK_.call(null, M, k);
              l[7] = L;
              l[8] = n;
              l[9] = r;
              l[11] = M;
              cljs.core.truth_(n) ? l[1] = 5 : l[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === m) {
              return r = l[9], l[2] = r, l[1] = 16, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (48 === m) {
              return l[2] = null, l[1] = 49, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (21 === m) {
              return l[2] = null, l[1] = 22, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (31 === m) {
              return n = l[2], l[2] = n, cljs.core.async.impl.ioc_helpers.process_exception.call(null, l), new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (32 === m) {
              return n = l[2], l[2] = n, l[1] = 25, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (40 === m) {
              return l[14] = l[2], l[2] = null, l[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (33 === m) {
              return G = l[12], n = taoensso.truss.impl._invar_violation_BANG_.call(null, null, "taoensso.sente", null, "(client-event-msg? event-msg)", G, l[2], null), l[2] = n, cljs.core.async.impl.ioc_helpers.process_exception.call(null, l), new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === m) {
              return n = l[2], l[2] = n, l[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (22 === m) {
              return l[15] = l[2], cljs.core.truth_(a) ? l[1] = 23 : l[1] = 24, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (36 === m) {
              return n = taoensso.truss.impl._invar_violation_BANG_.call(null), l[2] = n, l[1] = 37, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (41 === m) {
              var J = l[16], T = l[17], L = l[2], U = cljs.core.nth.call(null, L, 0, null), n = cljs.core.nth.call(null, L, 1, null);
              l[16] = n;
              l[18] = U;
              l[17] = L;
              cljs.core.truth_(n) ? l[1] = 47 : l[1] = 48;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (43 === m) {
              return cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, l, 42, Error, null, 41), n = cljs.core.PersistentVector.EMPTY_NODE, l[13] = n, cljs.core.truth_(h) ? l[1] = 44 : l[1] = 45, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (29 === m) {
              return G = l[12], l[2] = G, l[1] = 31, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (44 === m) {
              var R = l[19], G = l[12], n = h.call(null, R, G);
              l[2] = n;
              l[1] = 46;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === m) {
              return r = l[9], n = cljs.core.not.call(null, null == r), l[1] = n ? 8 : 9, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (28 === m) {
              return G = l[12], cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, l, 27, Error, null, 26), n = taoensso.sente.server_event_msg_QMARK_.call(null, G), cljs.core.truth_(n) ? l[1] = 29 : l[1] = 30, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (25 === m) {
              return n = l[20], L = [c.call(null, l[2]), null], n = new cljs.core.PersistentVector(null, 2, 5, n, L, null), l[2] = n, cljs.core.async.impl.ioc_helpers.process_exception.call(null, l), new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (34 === m) {
              return G = l[12], cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, l, 33, Error, null, 32), n = taoensso.sente.client_event_msg_QMARK_.call(null, G), cljs.core.truth_(n) ? l[1] = 35 : l[1] = 36, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (17 === m) {
              var S = l[21], R = l[19], L = l[2], P = cljs.core.nth.call(null, L, 0, null), n = cljs.core.nth.call(null, L, 1, null);
              l[22] = P;
              l[21] = L;
              l[19] = n;
              cljs.core.truth_(n) ? l[1] = 38 : l[1] = 39;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 3 === m ? (n = l[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, l, n)) : 12 === m ? (l[2] = !1, l[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === m ? (n = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, k], null), cljs.core.async.ioc_alts_BANG_.call(null, l, 4, n)) : 23 === m ? (l[2] = null, l[1] = 28, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 47 === m ? (p = l[7], J = l[16], q = l[8], 
            S = l[21], r = l[9], R = l[19], t = l[10], U = l[18], u = l[11], G = l[12], T = l[17], n = function() {
              return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K) {
                return function() {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [g, "Chsk router `error-handler` error: %s", q], null);
                };
              }(u, R, T, r, G, U, J, J, G, p, R, J, S, t, q, p, J, q, S, r, R, t, U, u, G, T, m, d, e, f, g, h, k);
            }(), n = new cljs.core.Delay(n, null), n = taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), n, null), l[2] = n, l[1] = 49, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 35 === m ? (G = l[12], l[2] = G, l[1] = 37, new cljs.core.Keyword(null, 
            "recur", "recur", -437573268)) : 19 === m ? (cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, l, 18, Error, null, 17), n = cljs.core.PersistentVector.EMPTY_NODE, l[20] = n, cljs.core.truth_(g) ? l[1] = 20 : l[1] = 21, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === m ? (l[2] = !0, l[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === m ? (l[2] = !1, l[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === 
            m ? (l[2] = null, l[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 14 === m ? (r = l[9], n = cljs.core.apply.call(null, cljs.core.hash_map, r), l[2] = n, l[1] = 16, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 45 === m ? (p = l[7], q = l[8], P = l[22], S = l[21], r = l[9], R = l[19], t = l[10], u = l[11], G = l[12], n = function() {
              return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, B, C, D, E, F, G) {
                return function() {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, "Chsk router `event-msg-handler` error: %s", n], null);
                };
              }(u, R, r, h, G, P, G, p, R, R, S, t, q, p, q, P, S, r, R, t, u, G, m, d, e, f, g, h, k);
            }(), n = new cljs.core.Delay(n, null), n = taoensso.timbre.log1_fn.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "/private/var/folders/13/czsnc__d5qbd25p97svzgmwm0000gn/T/form-init5443364573644040371.clj", null, new cljs.core.Keyword(null, "f", "f", -1597136552), n, null), l[2] = n, l[1] = 46, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 26 === m ? (n = l[2], l[2] = n, l[1] = 25, new cljs.core.Keyword(null, 
            "recur", "recur", -437573268)) : 16 === m ? (G = l[12], n = l[2], t = cljs.core.get.call(null, n, new cljs.core.Keyword(null, "event", "event", 301435442)), l[10] = t, l[12] = n, l[2] = null, l[1] = 19, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 38 === m ? (l[2] = null, l[1] = 43, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 30 === m ? (n = taoensso.truss.impl._invar_violation_BANG_.call(null), l[2] = n, l[1] = 31, new cljs.core.Keyword(null, "recur", 
            "recur", -437573268)) : 10 === m ? (n = l[2], cljs.core.truth_(n) ? l[1] = 14 : l[1] = 15, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 18 === m || 42 === m ? (n = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, l[2]], null), l[2] = n, cljs.core.async.impl.ioc_helpers.process_exception.call(null, l), new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 37 === m ? (n = l[2], l[2] = n, cljs.core.async.impl.ioc_helpers.process_exception.call(null, 
            l), new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === m ? (r = l[9], n = r.cljs$core$ISeq$, n = r.cljs$lang$protocol_mask$partition0$ & 64 || n, cljs.core.truth_(n) ? l[1] = 11 : l[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 49 === m ? (n = l[2], l[2] = n, l[1] = 40, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(d, e, f, g, h, k), d, e, f, g, h, k);
      }(), u = function() {
        var a = t.call(null);
        a[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = d;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, u);
    };
  }(k, d, e, f, g, h));
  return function(a, b, c, d, e) {
    return function() {
      return cljs.core.async.close_BANG_.call(null, e);
    };
  }(d, e, f, g, h);
};
taoensso.sente.start_server_chsk_router_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  c = cljs.core.nth.call(null, c, 0, null);
  c = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
  cljs.core.get.call(null, c, new cljs.core.Keyword(null, "trace-evs?", "trace-evs?", 1502453512));
  cljs.core.get.call(null, c, new cljs.core.Keyword(null, "error-handler", "error-handler", -484945776));
  return taoensso.sente._start_chsk_router_BANG_.call(null, new cljs.core.Keyword(null, "server", "server", 1499190120), a, b, c);
};
taoensso.sente.start_server_chsk_router_BANG_.cljs$lang$maxFixedArity = 2;
taoensso.sente.start_server_chsk_router_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
taoensso.sente.start_client_chsk_router_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0) : null;
  return taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  c = cljs.core.nth.call(null, c, 0, null);
  c = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
  cljs.core.get.call(null, c, new cljs.core.Keyword(null, "trace-evs?", "trace-evs?", 1502453512));
  cljs.core.get.call(null, c, new cljs.core.Keyword(null, "error-handler", "error-handler", -484945776));
  return taoensso.sente._start_chsk_router_BANG_.call(null, cljs.core.not.call(null, new cljs.core.Keyword(null, "server", "server", 1499190120)), a, b, c);
};
taoensso.sente.start_client_chsk_router_BANG_.cljs$lang$maxFixedArity = 2;
taoensso.sente.start_client_chsk_router_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
taoensso.sente.make_channel_socket_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return taoensso.sente.make_channel_socket_BANG_.cljs$core$IFn$_invoke$arity$variadic(b);
};
taoensso.sente.make_channel_socket_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, taoensso.sente.make_channel_socket_client_BANG_, a);
};
taoensso.sente.make_channel_socket_BANG_.cljs$lang$maxFixedArity = 0;
taoensso.sente.make_channel_socket_BANG_.cljs$lang$applyTo = function(a) {
  return taoensso.sente.make_channel_socket_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
taoensso.sente.start_chsk_router_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0) : null;
  return taoensso.sente.start_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic(b);
};
taoensso.sente.start_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, taoensso.sente.start_client_chsk_router_BANG_, a);
};
taoensso.sente.start_chsk_router_BANG_.cljs$lang$maxFixedArity = 0;
taoensso.sente.start_chsk_router_BANG_.cljs$lang$applyTo = function(a) {
  return taoensso.sente.start_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
taoensso.sente.start_chsk_router_loop_BANG_ = function(a, b) {
  return taoensso.sente.start_client_chsk_router_BANG_.call(null, b, function(b) {
    return a.call(null, (new cljs.core.Keyword(null, "event", "event", 301435442)).cljs$core$IFn$_invoke$arity$1(b), (new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861)).cljs$core$IFn$_invoke$arity$1(b));
  });
};
taoensso.sente.set_logging_level_BANG_ = function(a) {
  return taoensso.timbre.set_level_BANG_.call(null, a);
};
taoensso.sente.ajax_call = taoensso.encore.ajax_lite;
taoensso.sente.default_chsk_url_fn = function(a, b, c) {
  var d = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  b = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "adjusted-protocol", "adjusted-protocol", 37431492));
  c = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "host", "host", -1558485167));
  d = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "pathname", "pathname", -1420497528));
  return [cljs.core.str(b), cljs.core.str("//"), cljs.core.str(c), cljs.core.str(cljs.core.truth_(a) ? a : d)].join("");
};
var face = {control:{}};
face.control.connect_to_repl = function() {
  return cljs.core.truth_(weasel.repl.alive_QMARK_.call(null)) ? null : weasel.repl.connect.call(null, "ws://localhost:9001");
};
face.control.connect_to_repl.call(null);
face.control.emotions = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "happy", "happy", 2026698856), new cljs.core.Keyword(null, "sad", "sad", 427137188), new cljs.core.Keyword(null, "exuberant", "exuberant", 457064105), new cljs.core.Keyword(null, "determined", "determined", -1343565284), new cljs.core.Keyword(null, "normal", "normal", -1519123858), new cljs.core.Keyword(null, "confused", "confused", -425593592)], null);
face.control.emotion_names_to_transition_names = function(a) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.flatten.call(null, cljs.core.map.call(null, function(a) {
    return cljs.core.not_EQ_.call(null, new cljs.core.Keyword(null, "normal", "normal", -1519123858), a) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, [cljs.core.str(cljs.core.name.call(null, a)), cljs.core.str("-to-normal")].join("")), cljs.core.keyword.call(null, [cljs.core.str("normal-to-"), cljs.core.str(cljs.core.name.call(null, a))].join(""))], null) : null;
  }, a)));
};
face.control.emotion_names_to_transition_names.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "happy", "happy", 2026698856), new cljs.core.Keyword(null, "sad", "sad", 427137188), new cljs.core.Keyword(null, "normal", "normal", -1519123858)], null));
face.control.gifs;
face.control.show_gif = function(a) {
  return jayq.core.show.call(null, jayq.core.$.call(null, face.control.gifs.call(null, a).get_canvas()));
};
face.control.hide_gif = function(a) {
  return jayq.core.hide.call(null, jayq.core.$.call(null, face.control.gifs.call(null, a).get_canvas()));
};
face.control.play_gif = function(a) {
  return face.control.gifs.call(null, a).play();
};
face.control.transition_queue = cljs.core.atom.call(null, cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, cljs.core.PersistentVector.EMPTY));
face.control.cur_face = cljs.core.atom.call(null, new cljs.core.Keyword(null, "happy", "happy", 2026698856));
face.control.make_transition = function() {
  if (0 < cljs.core.count.call(null, cljs.core.deref.call(null, face.control.transition_queue))) {
    var a = cljs.core.deref.call(null, face.control.cur_face), b = cljs.core.peek.call(null, cljs.core.deref.call(null, face.control.transition_queue));
    cljs.core.println.call(null, b);
    cljs.core.swap_BANG_.call(null, face.control.transition_queue, cljs.core.pop);
    cljs.core.println.call(null, cljs.core.swap_BANG_.call(null, face.control.cur_face, function(a, b) {
      return function(a, b) {
        return b;
      };
    }(a, b), b));
    face.control.hide_gif.call(null, a);
    face.control.show_gif.call(null, b);
    return face.control.play_gif.call(null, b);
  }
  return null;
};
face.control.make_transition_queue = function(a, b) {
  cljs.core.not_EQ_.call(null, a, new cljs.core.Keyword(null, "normal", "normal", -1519123858)) && cljs.core.swap_BANG_.call(null, face.control.transition_queue, cljs.core.conj, cljs.core.keyword.call(null, [cljs.core.str(cljs.core.name.call(null, a)), cljs.core.str("-to-normal")].join("")));
  cljs.core.swap_BANG_.call(null, face.control.transition_queue, cljs.core.conj, cljs.core.keyword.call(null, [cljs.core.str("normal-to-"), cljs.core.str(cljs.core.name.call(null, b))].join("")));
  return cljs.core.swap_BANG_.call(null, face.control.transition_queue, cljs.core.conj, b);
};
face.control.make_super_gif_factory = function(a, b) {
  return function(c) {
    return cljs.core.PersistentArrayMap.fromArray([c, SuperGif({gif:document.getElementById(cljs.core.name.call(null, c)), loop_mode:a, auto_play:b, on_end:cljs.core._EQ_.call(null, !1, a) ? face.control.make_transition : null})], !0, !1);
  };
};
face.control.make_transition_gifs = function() {
  var a = face.control.emotion_names_to_transition_names.call(null, face.control.emotions);
  return cljs.core.apply.call(null, cljs.core.merge, cljs.core.map.call(null, face.control.make_super_gif_factory.call(null, !1, !1), a));
};
face.control.make_emotion_gifs = function() {
  return cljs.core.apply.call(null, cljs.core.merge, cljs.core.map.call(null, face.control.make_super_gif_factory.call(null, !0, !0), face.control.emotions));
};
face.control.load_gifs = function(a) {
  a = cljs.core.seq.call(null, cljs.core.vals.call(null, a));
  for (var b = null, c = 0, d = 0;;) {
    if (d < c) {
      var e = cljs.core._nth.call(null, b, d);
      console.log(e);
      e.load(function(a, b, c, d, e) {
        return function() {
          return cljs.core.println.call(null, "loaded gif");
        };
      }(a, b, c, d, e));
      jayq.core.hide.call(null, jayq.core.$.call(null, e.get_canvas()));
      d += 1;
    } else {
      var f = cljs.core.seq.call(null, a);
      if (f) {
        var g = f;
        cljs.core.chunked_seq_QMARK_.call(null, g) ? (a = cljs.core.chunk_first.call(null, g), c = cljs.core.chunk_rest.call(null, g), b = a, g = cljs.core.count.call(null, a), a = c, c = g) : (e = cljs.core.first.call(null, g), console.log(e), e.load(function(a, b, c, d, e, f, g) {
          return function() {
            return cljs.core.println.call(null, "loaded gif");
          };
        }(a, b, c, d, e, g, f)), jayq.core.hide.call(null, jayq.core.$.call(null, e.get_canvas())), a = cljs.core.next.call(null, g), b = null, c = 0);
        d = 0;
      } else {
        return null;
      }
    }
  }
};
face.control.get_and_load_gifs = function() {
  var a = cljs.core.merge.call(null, face.control.make_emotion_gifs.call(null), face.control.make_transition_gifs.call(null));
  face.control.load_gifs.call(null, a);
  return a;
};
face.control.reset_gif_test = function() {
  face.control.cur_face = cljs.core.atom.call(null, new cljs.core.Keyword(null, "normal", "normal", -1519123858));
  face.control.transition_queue = cljs.core.atom.call(null, cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, cljs.core.PersistentVector.EMPTY));
  face.control.show_gif.call(null, new cljs.core.Keyword(null, "normal", "normal", -1519123858));
  face.control.hide_gif.call(null, new cljs.core.Keyword(null, "normal-to-exuberant", "normal-to-exuberant", 1271218166));
  return face.control.make_transition_queue.call(null, new cljs.core.Keyword(null, "normal", "normal", -1519123858), new cljs.core.Keyword(null, "exuberant", "exuberant", 457064105));
};
face.control.change_emotion = function(a) {
  if (!cljs.core.contains_QMARK_.call(null, face.control.gifs, a)) {
    throw Error([cljs.core.str(clojure.string.capitalize.call(null, cljs.core.name.call(null, a))), cljs.core.str(" is not an emotion")].join(""));
  }
  if (cljs.core._EQ_.call(null, a, cljs.core.deref.call(null, face.control.cur_face))) {
    return null;
  }
  face.control.make_transition_queue.call(null, cljs.core.deref.call(null, face.control.cur_face), a);
  return face.control.make_transition.call(null);
};
face.control.init_face = function() {
  face.control.gifs = face.control.get_and_load_gifs.call(null);
  return face.control.show_gif.call(null, new cljs.core.Keyword(null, "exuberant", "exuberant", 457064105));
};
window.onload = function() {
  return face.control.init_face.call(null);
};
face.control.init_socket = function() {
  var a = taoensso.sente.make_channel_socket_BANG_.call(null, "/chsk", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "auto", "auto", -566279492)], null)), b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "chsk", "chsk", -863703081)), c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, 
  "ch-recv", "ch-recv", -990916861)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041)), b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "state", "state", -1988618099));
  face.control.chsk = a;
  face.control.ch_chsk = c;
  face.control.chsk_send_BANG_ = d;
  face.control.chsk_state = b;
};
