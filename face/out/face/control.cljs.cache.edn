;; Analyzed by ClojureScript 1.7.170
{:use-macros {testing cljs.test, warnf taoensso.timbre, go cljs.core.async.macros, is cljs.test, go-loop cljs.core.async.macros, deftest cljs.test, debugf taoensso.timbre, tracef taoensso.timbre, infof taoensso.timbre, errorf taoensso.timbre, run-tests cljs.test}, :excludes #{}, :name face.control, :imports nil, :requires {sente taoensso.sente, timbre taoensso.timbre, weasel.repl weasel.repl, async cljs.core.async, cljs.test cljs.test, cljs.core.async cljs.core.async, jayq.core jayq.core, taoensso.sente taoensso.sente, encore taoensso.encore, taoensso.timbre taoensso.timbre, clojure.string clojure.string, taoensso.encore taoensso.encore, repl weasel.repl}, :uses {<! cljs.core.async, chan cljs.core.async, >! cljs.core.async, cb-success? taoensso.sente, put! cljs.core.async}, :defs {make-super-gif-factory {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 86, :column 7, :end-line 86, :end-column 29, :arglists (quote ([loop autoplay]))}, :name face.control/make-super-gif-factory, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 29, :method-params ([loop autoplay]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loop autoplay]))}, emotions {:name face.control/emotions, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 26, :column 1, :end-line 26, :end-column 14, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 26, :column 6, :end-line 26, :end-column 14}}, start-ws! {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 233, :column 7, :end-line 233, :end-column 16, :arglists (quote ([]))}, :name face.control/start-ws!, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 233, :end-line 233, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, -event-msg-handler {:name face.control/-event-msg-handler, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 186, :column 1, :end-line 186, :end-column 29, :doc "Multimethod to handle Sente `event-msg`s", :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 186, :column 11, :end-line 186, :end-column 29, :doc "Multimethod to handle Sente `event-msg`s"}}, chsk-send! {:name face.control/chsk-send!, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 179, :column 3, :end-line 179, :end-column 18, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 179, :column 8, :end-line 179, :end-column 18}}, transition-queue {:name face.control/transition-queue, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 127, :column 3, :end-line 127, :end-column 24, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 127, :column 8, :end-line 127, :end-column 24}}, emotion-names-to-transition-names {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 29, :column 7, :end-line 29, :end-column 40, :arglists (quote ([emotion-list]))}, :name face.control/emotion-names-to-transition-names, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 40, :method-params ([emotion-list]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([emotion-list]))}, init-face {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 236, :column 7, :end-line 236, :end-column 16, :arglists (quote ([]))}, :name face.control/init-face, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 236, :end-line 236, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, hide-gif {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 50, :column 7, :end-line 50, :end-column 15, :arglists (quote ([gif-keyword]))}, :name face.control/hide-gif, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 15, :method-params ([gif-keyword]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gif-keyword]))}, router_ {:name face.control/router_, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 223, :column 1, :end-line 223, :end-column 17, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 223, :column 10, :end-line 223, :end-column 17}}, gifs {:name face.control/gifs, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 237, :column 3, :end-line 237, :end-column 12, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 237, :column 8, :end-line 237, :end-column 12}}, load-gifs {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 109, :column 7, :end-line 109, :end-column 16, :arglists (quote ([gifs]))}, :name face.control/load-gifs, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 16, :method-params ([gifs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gifs]))}, event-msg-handler {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 191, :column 7, :end-line 191, :end-column 24, :arglists (quote ([{:as ev-msg, :keys [id ?data event]}])), :doc "Wraps `-event-msg-handler` with logging, error catching, etc."}, :name face.control/event-msg-handler, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 24, :method-params ([p__29475]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 191, :end-line 191, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:as ev-msg, :keys [id ?data event]}])), :doc "Wraps `-event-msg-handler` with logging, error catching, etc."}, ->output! {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 15, :column 7, :end-line 15, :end-column 16, :arglists (quote ([fmt & args])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}}, :name face.control/->output!, :variadic true, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}, :method-params [(fmt args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & args])}, ch-chsk {:name face.control/ch-chsk, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 178, :column 3, :end-line 178, :end-column 15, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 178, :column 8, :end-line 178, :end-column 15}}, init-ws {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 162, :column 7, :end-line 162, :end-column 14, :arglists (quote ([]))}, :name face.control/init-ws, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 162, :end-line 162, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, reset-gif-test {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 125, :column 7, :end-line 125, :end-column 21, :arglists (quote ([]))}, :name face.control/reset-gif-test, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, change-emotion {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 149, :column 7, :end-line 149, :end-column 21, :arglists (quote ([emotion]))}, :name face.control/change-emotion, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 21, :method-params ([emotion]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 1, :fn-var true, :arglists (quote ([emotion]))}, make-transition-queue {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 75, :column 7, :end-line 75, :end-column 28, :arglists (quote ([from-face to-face]))}, :name face.control/make-transition-queue, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 28, :method-params ([from-face to-face]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 2, :fn-var true, :arglists (quote ([from-face to-face]))}, get-and-load-gifs {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 115, :column 7, :end-line 115, :end-column 24, :arglists (quote ([]))}, :name face.control/get-and-load-gifs, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, play-gif {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 54, :column 7, :end-line 54, :end-column 15, :arglists (quote ([gif-keyword]))}, :name face.control/play-gif, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 15, :method-params ([gif-keyword]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gif-keyword]))}, chsk-state {:name face.control/chsk-state, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 180, :column 3, :end-line 180, :end-column 18, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 180, :column 8, :end-line 180, :end-column 18}}, cur-face {:name face.control/cur-face, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 126, :column 3, :end-line 126, :end-column 16, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 126, :column 8, :end-line 126, :end-column 16}}, start-router! {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 225, :column 7, :end-line 225, :end-column 20, :arglists (quote ([]))}, :name face.control/start-router!, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 225, :end-line 225, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, stop-router! {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 224, :column 8, :end-line 224, :end-column 20, :arglists (quote ([]))}, :name face.control/stop-router!, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 224, :end-line 224, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, connect-to-repl {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 20, :column 7, :end-line 20, :end-column 22, :arglists (quote ([]))}, :name face.control/connect-to-repl, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, make-transition-gifs {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 99, :column 7, :end-line 99, :end-column 27, :arglists (quote ([]))}, :name face.control/make-transition-gifs, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, show-gif {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 46, :column 7, :end-line 46, :end-column 15, :arglists (quote ([gif-keyword]))}, :name face.control/show-gif, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 15, :method-params ([gif-keyword]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gif-keyword]))}, chsk {:name face.control/chsk, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 177, :column 3, :end-line 177, :end-column 12, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 177, :column 8, :end-line 177, :end-column 12}}, make-emotion-gifs {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 105, :column 7, :end-line 105, :end-column 24, :arglists (quote ([]))}, :name face.control/make-emotion-gifs, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, make-transition {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 62, :column 7, :end-line 62, :end-column 22, :arglists (quote ([]))}, :name face.control/make-transition, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {asyncm cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros, cljs.test cljs.test, timbre taoensso.timbre, taoensso.timbre taoensso.timbre, encore taoensso.encore, taoensso.encore taoensso.encore}, :cljs.analyzer/constants {:seen #{:first-open? :chsk/recv :ch-recv :sad :happy :default :confused :packer :exuberant :emotion :type :chsk/state :state :ajax :normal :event :id :edn :normal-to-exuberant :?data :chsk :send-fn :hierarchy :determined :auto :chsk/handshake}, :order [:happy :sad :exuberant :determined :normal :confused :normal-to-exuberant :ajax :auto :edn :type :packer :chsk :ch-recv :send-fn :state :hierarchy :id :default :?data :event :chsk/state :first-open? :chsk/recv :emotion :chsk/handshake]}, :doc nil}