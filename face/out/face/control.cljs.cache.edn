;; Analyzed by ClojureScript 1.7.170
{:use-macros {testing cljs.test, warnf taoensso.timbre, go cljs.core.async.macros, is cljs.test, go-loop cljs.core.async.macros, deftest cljs.test, debugf taoensso.timbre, tracef taoensso.timbre, infof taoensso.timbre, errorf taoensso.timbre, run-tests cljs.test}, :excludes #{}, :name face.control, :imports nil, :requires {sente taoensso.sente, timbre taoensso.timbre, weasel.repl weasel.repl, async cljs.core.async, cljs.test cljs.test, cljs.core.async cljs.core.async, jayq.core jayq.core, taoensso.sente taoensso.sente, taoensso.timbre taoensso.timbre, clojure.string clojure.string, repl weasel.repl}, :uses {<! cljs.core.async, chan cljs.core.async, >! cljs.core.async, cb-success? taoensso.sente, put! cljs.core.async}, :defs {make-super-gif-factory {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 78, :column 7, :end-line 78, :end-column 29, :arglists (quote ([loop autoplay]))}, :name face.control/make-super-gif-factory, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 29, :method-params ([loop autoplay]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loop autoplay]))}, emotions {:name face.control/emotions, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 18, :column 1, :end-line 18, :end-column 14, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 18, :column 6, :end-line 18, :end-column 14}}, transition-queue {:name face.control/transition-queue, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 119, :column 3, :end-line 119, :end-column 24, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 119, :column 8, :end-line 119, :end-column 24}}, emotion-names-to-transition-names {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 21, :column 7, :end-line 21, :end-column 40, :arglists (quote ([emotion-list]))}, :name face.control/emotion-names-to-transition-names, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 40, :method-params ([emotion-list]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([emotion-list]))}, init-face {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 154, :column 7, :end-line 154, :end-column 16, :arglists (quote ([]))}, :name face.control/init-face, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, hide-gif {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 42, :column 7, :end-line 42, :end-column 15, :arglists (quote ([gif-keyword]))}, :name face.control/hide-gif, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 15, :method-params ([gif-keyword]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gif-keyword]))}, gifs {:name face.control/gifs, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 155, :column 3, :end-line 155, :end-column 12, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 155, :column 8, :end-line 155, :end-column 12}}, load-gifs {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 101, :column 7, :end-line 101, :end-column 16, :arglists (quote ([gifs]))}, :name face.control/load-gifs, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 16, :method-params ([gifs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gifs]))}, reset-gif-test {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 117, :column 7, :end-line 117, :end-column 21, :arglists (quote ([]))}, :name face.control/reset-gif-test, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, change-emotion {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 141, :column 7, :end-line 141, :end-column 21, :arglists (quote ([emotion]))}, :name face.control/change-emotion, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 21, :method-params ([emotion]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 1, :fn-var true, :arglists (quote ([emotion]))}, make-transition-queue {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 67, :column 7, :end-line 67, :end-column 28, :arglists (quote ([from-face to-face]))}, :name face.control/make-transition-queue, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 28, :method-params ([from-face to-face]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 2, :fn-var true, :arglists (quote ([from-face to-face]))}, get-and-load-gifs {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 107, :column 7, :end-line 107, :end-column 24, :arglists (quote ([]))}, :name face.control/get-and-load-gifs, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, play-gif {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 46, :column 7, :end-line 46, :end-column 15, :arglists (quote ([gif-keyword]))}, :name face.control/play-gif, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 15, :method-params ([gif-keyword]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gif-keyword]))}, cur-face {:name face.control/cur-face, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 118, :column 3, :end-line 118, :end-column 16, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 118, :column 8, :end-line 118, :end-column 16}}, make-transition-gifs {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 91, :column 7, :end-line 91, :end-column 27, :arglists (quote ([]))}, :name face.control/make-transition-gifs, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, show-gif {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 38, :column 7, :end-line 38, :end-column 15, :arglists (quote ([gif-keyword]))}, :name face.control/show-gif, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 15, :method-params ([gif-keyword]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gif-keyword]))}, make-emotion-gifs {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 97, :column 7, :end-line 97, :end-column 24, :arglists (quote ([]))}, :name face.control/make-emotion-gifs, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, make-transition {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :line 54, :column 7, :end-line 54, :end-column 22, :arglists (quote ([]))}, :name face.control/make-transition, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/face/control.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {asyncm cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros, cljs.test cljs.test, timbre taoensso.timbre, taoensso.timbre taoensso.timbre}, :cljs.analyzer/constants {:seen #{:sad :happy :confused :exuberant :normal :normal-to-exuberant :determined}, :order [:happy :sad :exuberant :determined :normal :confused :normal-to-exuberant]}, :doc nil}