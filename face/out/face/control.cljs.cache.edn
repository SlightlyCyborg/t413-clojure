;; Analyzed by ClojureScript 0.0-3308
{:use-macros {testing cljs.test, is cljs.test, deftest cljs.test, run-tests cljs.test}, :excludes #{}, :name face.control, :imports nil, :requires {repl weasel.repl, weasel.repl weasel.repl, cljs.test cljs.test, jayq.core jayq.core}, :uses nil, :defs {make-super-gif-factory {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 33, :column 7, :end-line 33, :end-column 29, :arglists (quote ([loop autoplay]))}, :name face.control/make-super-gif-factory, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :end-column 29, :method-params ([loop autoplay]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loop autoplay]))}, emotions {:name face.control/emotions, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 11, :column 1, :end-line 11, :end-column 14, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 11, :column 6, :end-line 11, :end-column 14}}, transition-queue {:name face.control/transition-queue, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 88, :column 3, :end-line 88, :end-column 24, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 88, :column 8, :end-line 88, :end-column 24}}, emotion-names-to-transition-names {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 14, :column 7, :end-line 14, :end-column 40, :arglists (quote ([emotion-list]))}, :name face.control/emotion-names-to-transition-names, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :end-column 40, :method-params ([emotion-list]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([emotion-list]))}, hide-gif {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 75, :column 7, :end-line 75, :end-column 15, :arglists (quote ([gif-keyword]))}, :name face.control/hide-gif, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :end-column 15, :method-params ([gif-keyword]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gif-keyword]))}, gifs {:name face.control/gifs, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 69, :column 1, :end-line 69, :end-column 10, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 69, :column 6, :end-line 69, :end-column 10}}, load-gifs {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 56, :column 7, :end-line 56, :end-column 16, :arglists (quote ([gifs]))}, :name face.control/load-gifs, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :end-column 16, :method-params ([gifs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gifs]))}, get-supergif-factory {:protocol-inline nil, :meta {:source "get-supergif-factory", :file "NO_SOURCE_FILE", :line 1, :column 7, :end-line 1, :end-column 27, :arglists (quote ([loop]))}, :name face.control/get-supergif-factory, :variadic false, :file "<cljs repl>", :end-column 27, :method-params ([loop]), :protocol-impl nil, :source "get-supergif-factory", :arglists-meta (nil nil), :column 1, :line 1, :end-line 1, :max-fixed-arity 1, :fn-var true, :arglists (quote ([loop]))}, process-transition-queue {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 73, :column 7, :end-line 73, :end-column 31, :arglists (quote ([transition-queue]))}, :name face.control/process-transition-queue, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :end-column 31, :method-params ([transition-queue]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([transition-queue]))}, switch-face {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 78, :column 7, :end-line 78, :end-column 18, :arglists (quote ([face]))}, :name face.control/switch-face, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :end-column 18, :method-params ([face]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([face]))}, transition-ended {:name face.control/transition-ended, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 31, :column 1, :end-line 31, :end-column 26, :declared true, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 31, :column 10, :end-line 31, :end-column 26, :declared true}}, construct-super-gif {:protocol-inline nil, :meta {:source "construct-super-gif", :file "NO_SOURCE_FILE", :line 1, :column 7, :end-line 1, :end-column 26, :arglists (quote ([gif-keyword loop]))}, :name face.control/construct-super-gif, :variadic false, :file "<cljs repl>", :end-column 26, :method-params ([gif-keyword loop]), :protocol-impl nil, :source "construct-super-gif", :arglists-meta (nil nil), :column 1, :line 1, :end-line 1, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gif-keyword loop]))}, reset-gif-test {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 86, :column 7, :end-line 86, :end-column 21, :arglists (quote ([]))}, :name face.control/reset-gif-test, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, make-transition-queue {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 96, :column 7, :end-line 96, :end-column 28, :arglists (quote ([from-face to-face]))}, :name face.control/make-transition-queue, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :end-column 28, :method-params ([from-face to-face]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([from-face to-face]))}, get-and-load-gifs {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 62, :column 7, :end-line 62, :end-column 24, :arglists (quote ([]))}, :name face.control/get-and-load-gifs, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, play-gif {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 79, :column 7, :end-line 79, :end-column 15, :arglists (quote ([gif-keyword]))}, :name face.control/play-gif, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :end-column 15, :method-params ([gif-keyword]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gif-keyword]))}, cur-face {:name face.control/cur-face, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 87, :column 3, :end-line 87, :end-column 16, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 87, :column 8, :end-line 87, :end-column 16}}, make-transition-gifs {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 46, :column 7, :end-line 46, :end-column 27, :arglists (quote ([]))}, :name face.control/make-transition-gifs, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, show-gif {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 71, :column 7, :end-line 71, :end-column 15, :arglists (quote ([gif-keyword]))}, :name face.control/show-gif, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :end-column 15, :method-params ([gif-keyword]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gif-keyword]))}, make-emotion-gifs {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 52, :column 7, :end-line 52, :end-column 24, :arglists (quote ([]))}, :name face.control/make-emotion-gifs, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, make-transition {:protocol-inline nil, :meta {:file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :line 106, :column 7, :end-line 106, :end-column 22, :arglists (quote ([]))}, :name face.control/make-transition, :variadic false, :file "/Users/collinbell/Projects/t-413/face/src/cljs/cemerick/austin/bcrepl_sample.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{:normal-to-determined :.active :sad :happy :exuberant :happy-to-normal :normal :normal-to-exuberant :determined :exuberante}, :order [:happy :sad :exuberant :determined :normal :normal-to-determined :.active :exuberante :happy-to-normal :normal-to-exuberant]}, :doc nil}